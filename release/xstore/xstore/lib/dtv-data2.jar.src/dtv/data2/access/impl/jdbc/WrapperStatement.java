/*     */ package dtv.data2.access.impl.jdbc;
/*     */ 
/*     */ import java.sql.Connection;
/*     */ import java.sql.ResultSet;
/*     */ import java.sql.SQLException;
/*     */ import java.sql.SQLWarning;
/*     */ import java.sql.Statement;
/*     */ import org.apache.commons.lang3.builder.ToStringBuilder;
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ class WrapperStatement<E extends Statement>
/*     */   extends DtvPreparedStatement<E>
/*     */   implements Statement
/*     */ {
/*     */   WrapperStatement(E argStatement, String argSql, String argDatasourceName) {
/*  22 */     super(argStatement, argSql, argDatasourceName);
/*     */   }
/*     */ 
/*     */ 
/*     */ 
/*     */   
/*     */   public void addBatch(String argSql) throws SQLException {
/*  29 */     this._statement.addBatch(argSql);
/*     */   }
/*     */ 
/*     */ 
/*     */ 
/*     */   
/*     */   public void cancel() throws SQLException {
/*  36 */     this._statement.cancel();
/*     */   }
/*     */ 
/*     */ 
/*     */ 
/*     */   
/*     */   public void clearBatch() throws SQLException {
/*  43 */     this._statement.clearBatch();
/*     */   }
/*     */ 
/*     */ 
/*     */ 
/*     */   
/*     */   public void clearWarnings() throws SQLException {
/*  50 */     this._statement.clearWarnings();
/*     */   }
/*     */ 
/*     */ 
/*     */ 
/*     */   
/*     */   public void close() throws SQLException {
/*  57 */     this._statement.close();
/*     */   }
/*     */ 
/*     */ 
/*     */ 
/*     */   
/*     */   public void closeOnCompletion() throws SQLException {
/*  64 */     this._statement.closeOnCompletion();
/*     */   }
/*     */ 
/*     */ 
/*     */ 
/*     */   
/*     */   public boolean execute(String argSql) throws SQLException {
/*  71 */     startExecute(new String[] { argSql });
/*     */     try {
/*  73 */       return this._statement.execute(argSql);
/*     */     } finally {
/*     */       
/*  76 */       log("execute");
/*     */     } 
/*     */   }
/*     */ 
/*     */ 
/*     */ 
/*     */   
/*     */   public boolean execute(String argSql, int argAutoGeneratedKeys) throws SQLException {
/*  84 */     startExecute(new String[] { argSql });
/*     */     try {
/*  86 */       return this._statement.execute(argSql, argAutoGeneratedKeys);
/*     */     } finally {
/*     */       
/*  89 */       log("execute");
/*     */     } 
/*     */   }
/*     */ 
/*     */ 
/*     */ 
/*     */   
/*     */   public boolean execute(String argSql, int[] argColumnIndexes) throws SQLException {
/*  97 */     startExecute(new String[] { argSql });
/*     */     try {
/*  99 */       return this._statement.execute(argSql, argColumnIndexes);
/*     */     } finally {
/*     */       
/* 102 */       log("execute");
/*     */     } 
/*     */   }
/*     */ 
/*     */ 
/*     */ 
/*     */   
/*     */   public boolean execute(String argSql, String[] argColumnNames) throws SQLException {
/*     */     try {
/* 111 */       startExecute(new String[] { argSql });
/* 112 */       return this._statement.execute(argSql, argColumnNames);
/*     */     } finally {
/*     */       
/* 115 */       log("execute");
/*     */     } 
/*     */   }
/*     */ 
/*     */ 
/*     */ 
/*     */   
/*     */   public int[] executeBatch() throws SQLException {
/* 123 */     startExecute(new String[0]);
/*     */     try {
/* 125 */       return this._statement.executeBatch();
/*     */     } finally {
/*     */       
/* 128 */       log("executeBatch");
/*     */     } 
/*     */   }
/*     */ 
/*     */ 
/*     */ 
/*     */   
/*     */   public long[] executeLargeBatch() throws SQLException {
/* 136 */     return this._statement.executeLargeBatch();
/*     */   }
/*     */ 
/*     */ 
/*     */ 
/*     */   
/*     */   public long executeLargeUpdate(String sql) throws SQLException {
/* 143 */     return this._statement.executeLargeUpdate(sql);
/*     */   }
/*     */ 
/*     */ 
/*     */ 
/*     */   
/*     */   public long executeLargeUpdate(String sql, int autoGeneratedKeys) throws SQLException {
/* 150 */     return this._statement.executeLargeUpdate(sql, autoGeneratedKeys);
/*     */   }
/*     */ 
/*     */ 
/*     */ 
/*     */   
/*     */   public long executeLargeUpdate(String sql, int[] columnIndexes) throws SQLException {
/* 157 */     return this._statement.executeLargeUpdate(sql, columnIndexes);
/*     */   }
/*     */ 
/*     */ 
/*     */ 
/*     */   
/*     */   public long executeLargeUpdate(String sql, String[] columnNames) throws SQLException {
/* 164 */     return this._statement.executeLargeUpdate(sql, columnNames);
/*     */   }
/*     */ 
/*     */ 
/*     */ 
/*     */   
/*     */   public ResultSet executeQuery(String argSql) throws SQLException {
/* 171 */     startExecute(new String[] { argSql });
/*     */     try {
/* 173 */       return this._statement.executeQuery(argSql);
/*     */     } finally {
/*     */       
/* 176 */       log("executeQuery");
/*     */     } 
/*     */   }
/*     */ 
/*     */ 
/*     */ 
/*     */   
/*     */   public int executeUpdate(String argSql) throws SQLException {
/* 184 */     startExecute(new String[] { argSql });
/*     */     try {
/* 186 */       return this._statement.executeUpdate(argSql);
/*     */     } finally {
/*     */       
/* 189 */       log("executeUpdate");
/*     */     } 
/*     */   }
/*     */ 
/*     */ 
/*     */ 
/*     */   
/*     */   public int executeUpdate(String argSql, int argAutoGeneratedKeys) throws SQLException {
/* 197 */     startExecute(new String[] { argSql });
/*     */     try {
/* 199 */       return this._statement.executeUpdate(argSql, argAutoGeneratedKeys);
/*     */     } finally {
/*     */       
/* 202 */       log("executeUpdate");
/*     */     } 
/*     */   }
/*     */ 
/*     */ 
/*     */ 
/*     */   
/*     */   public int executeUpdate(String argSql, int[] argColumnIndexes) throws SQLException {
/* 210 */     startExecute(new String[] { argSql });
/*     */     try {
/* 212 */       return this._statement.executeUpdate(argSql, argColumnIndexes);
/*     */     } finally {
/*     */       
/* 215 */       log("executeUpdate");
/*     */     } 
/*     */   }
/*     */ 
/*     */ 
/*     */ 
/*     */   
/*     */   public int executeUpdate(String argSql, String[] argColumnNames) throws SQLException {
/* 223 */     startExecute(new String[] { argSql });
/*     */     try {
/* 225 */       return this._statement.executeUpdate(argSql, argColumnNames);
/*     */     } finally {
/*     */       
/* 228 */       log("executeUpdate");
/*     */     } 
/*     */   }
/*     */ 
/*     */ 
/*     */ 
/*     */   
/*     */   public Connection getConnection() throws SQLException {
/* 236 */     return this._statement.getConnection();
/*     */   }
/*     */ 
/*     */ 
/*     */ 
/*     */   
/*     */   public int getFetchDirection() throws SQLException {
/* 243 */     return this._statement.getFetchDirection();
/*     */   }
/*     */ 
/*     */ 
/*     */ 
/*     */   
/*     */   public int getFetchSize() throws SQLException {
/* 250 */     return this._statement.getFetchSize();
/*     */   }
/*     */ 
/*     */ 
/*     */ 
/*     */   
/*     */   public ResultSet getGeneratedKeys() throws SQLException {
/* 257 */     return this._statement.getGeneratedKeys();
/*     */   }
/*     */ 
/*     */ 
/*     */ 
/*     */   
/*     */   public long getLargeMaxRows() throws SQLException {
/* 264 */     return this._statement.getLargeMaxRows();
/*     */   }
/*     */ 
/*     */ 
/*     */ 
/*     */   
/*     */   public long getLargeUpdateCount() throws SQLException {
/* 271 */     return this._statement.getLargeUpdateCount();
/*     */   }
/*     */ 
/*     */ 
/*     */ 
/*     */   
/*     */   public int getMaxFieldSize() throws SQLException {
/* 278 */     return this._statement.getMaxFieldSize();
/*     */   }
/*     */ 
/*     */ 
/*     */ 
/*     */   
/*     */   public int getMaxRows() throws SQLException {
/* 285 */     return this._statement.getMaxRows();
/*     */   }
/*     */ 
/*     */ 
/*     */ 
/*     */   
/*     */   public boolean getMoreResults() throws SQLException {
/* 292 */     return this._statement.getMoreResults();
/*     */   }
/*     */ 
/*     */ 
/*     */ 
/*     */   
/*     */   public boolean getMoreResults(int argCurrent) throws SQLException {
/* 299 */     return this._statement.getMoreResults(argCurrent);
/*     */   }
/*     */ 
/*     */ 
/*     */ 
/*     */   
/*     */   public int getQueryTimeout() throws SQLException {
/* 306 */     return this._statement.getQueryTimeout();
/*     */   }
/*     */ 
/*     */ 
/*     */ 
/*     */   
/*     */   public ResultSet getResultSet() throws SQLException {
/* 313 */     return this._statement.getResultSet();
/*     */   }
/*     */ 
/*     */ 
/*     */ 
/*     */   
/*     */   public int getResultSetConcurrency() throws SQLException {
/* 320 */     return this._statement.getResultSetConcurrency();
/*     */   }
/*     */ 
/*     */ 
/*     */ 
/*     */   
/*     */   public int getResultSetHoldability() throws SQLException {
/* 327 */     return this._statement.getResultSetHoldability();
/*     */   }
/*     */ 
/*     */ 
/*     */ 
/*     */   
/*     */   public int getResultSetType() throws SQLException {
/* 334 */     return this._statement.getResultSetType();
/*     */   }
/*     */ 
/*     */ 
/*     */ 
/*     */   
/*     */   public int getUpdateCount() throws SQLException {
/* 341 */     return this._statement.getUpdateCount();
/*     */   }
/*     */ 
/*     */ 
/*     */ 
/*     */   
/*     */   public SQLWarning getWarnings() throws SQLException {
/* 348 */     return this._statement.getWarnings();
/*     */   }
/*     */ 
/*     */ 
/*     */ 
/*     */   
/*     */   public boolean isClosed() throws SQLException {
/* 355 */     return this._statement.isClosed();
/*     */   }
/*     */ 
/*     */ 
/*     */ 
/*     */   
/*     */   public boolean isCloseOnCompletion() throws SQLException {
/* 362 */     return this._statement.isCloseOnCompletion();
/*     */   }
/*     */ 
/*     */ 
/*     */ 
/*     */   
/*     */   public boolean isPoolable() throws SQLException {
/* 369 */     return this._statement.isPoolable();
/*     */   }
/*     */ 
/*     */ 
/*     */ 
/*     */   
/*     */   public boolean isWrapperFor(Class<?> argIface) throws SQLException {
/* 376 */     return this._statement.isWrapperFor(argIface);
/*     */   }
/*     */ 
/*     */ 
/*     */ 
/*     */   
/*     */   public void setCursorName(String argName) throws SQLException {
/* 383 */     this._statement.setCursorName(argName);
/*     */   }
/*     */ 
/*     */ 
/*     */ 
/*     */   
/*     */   public void setEscapeProcessing(boolean argEnable) throws SQLException {
/* 390 */     this._statement.setEscapeProcessing(argEnable);
/*     */   }
/*     */ 
/*     */ 
/*     */ 
/*     */   
/*     */   public void setFetchDirection(int argDirection) throws SQLException {
/* 397 */     this._statement.setFetchDirection(argDirection);
/*     */   }
/*     */ 
/*     */ 
/*     */ 
/*     */   
/*     */   public void setFetchSize(int argRows) throws SQLException {
/* 404 */     this._statement.setFetchSize(argRows);
/*     */   }
/*     */ 
/*     */ 
/*     */ 
/*     */   
/*     */   public void setLargeMaxRows(long max) throws SQLException {
/* 411 */     this._statement.setLargeMaxRows(max);
/*     */   }
/*     */ 
/*     */ 
/*     */ 
/*     */   
/*     */   public void setMaxFieldSize(int argMax) throws SQLException {
/* 418 */     this._statement.setMaxFieldSize(argMax);
/*     */   }
/*     */ 
/*     */ 
/*     */ 
/*     */   
/*     */   public void setMaxRows(int argMax) throws SQLException {
/* 425 */     this._statement.setMaxRows(argMax);
/*     */   }
/*     */ 
/*     */ 
/*     */ 
/*     */   
/*     */   public void setPoolable(boolean argPoolable) throws SQLException {
/* 432 */     this._statement.setPoolable(argPoolable);
/*     */   }
/*     */ 
/*     */ 
/*     */ 
/*     */   
/*     */   public void setQueryTimeout(int argSeconds) throws SQLException {
/* 439 */     this._statement.setQueryTimeout(argSeconds);
/*     */   }
/*     */ 
/*     */   
/*     */   public String toString() {
/* 444 */     ToStringBuilder tsb = new ToStringBuilder(this);
/* 445 */     tsb.append("sql", "\"" + getPrettySql() + "\"");
/* 446 */     return tsb.build();
/*     */   }
/*     */ 
/*     */ 
/*     */ 
/*     */   
/*     */   public <T> T unwrap(Class<T> argIface) throws SQLException {
/* 453 */     return this._statement.unwrap(argIface);
/*     */   }
/*     */ }


/* Location:              C:\WIP-Xstore_Delta-main\release\xstore\xstore\lib\dtv-data2.jar!\dtv\data2\access\impl\jdbc\WrapperStatement.class
 * Java compiler version: 8 (52.0)
 * JD-Core Version:       1.1.3
 */
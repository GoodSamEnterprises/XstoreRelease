<?xml version="1.0" encoding="UTF-8"?>
<QuerySet xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="QueryConfig.xsd">

  <Query name="HOUSE_ACCOUNT_LOOKUP" pmType="HOUSE_ACCOUNT">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.query.results.HouseAccountSearchResult</ResultClass>
    <ResultField name="OrganizationId" type="Long" />
    <ResultField name="CustAcctId" type="String" />
    <ResultField name="CustAcctCode" type="String" />
    <ResultField name="CreditLimit" type="BigDecimal" />
    <ResultField name="AcctBalance" type="BigDecimal" />
    <ResultField name="AccountPartyId" type="Long" />
    <ResultField name="OrganizationName" type="String" />
    <ResultField name="CustId" type="String" />
    <ResultField name="CustAcctStatus" type="String" />
    <ResultField name="AccountSetupDate" type="Date" />
    <SQL>
      <Statement dtype="String"><![CDATA[
        SELECT 
          ar.organization_id,
          ar.cust_acct_id, 
          ar.cust_acct_code, 
          ar.credit_limit,
          cat.acct_balance, 
          cat.party_id, 
          p.organization_name, 
          p.cust_id,
          cat.cust_acct_statcode, 
          cat.acct_setup_date
        FROM cat_cust_consumer_charge_acct ar
          INNER JOIN cat_cust_acct cat
            ON ar.organization_id = cat.organization_id
            AND ar.cust_acct_code = cat.cust_acct_code
            AND ar.cust_acct_id = cat.cust_acct_id
          INNER JOIN crm_party p
            ON cat.organization_id = p.organization_id
            AND cat.party_id = p.party_id
        WHERE ar.organization_id = ?
        AND ar.cust_acct_code = 'HOUSE_ACCOUNT'
            ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Expression parameters="argAccountName%" trigger="argAccountName"><![CDATA[/*UPPER*/ organization_name like ?]]></Expression>
      <Expression parameters="argPhoneNumber%, argPhoneNumber%" trigger="argPhoneNumber"><![CDATA[EXISTS (
            SELECT 1
            FROM crm_party_telephone phone
            WHERE phone.organization_id = cat.organization_id
              AND phone.party_id = cat.party_id
              AND /*UPPER*/ phone.telephone_number LIKE ?
          )
          OR EXISTS (
            SELECT 1
            FROM cat_charge_acct_users users
            INNER JOIN crm_party_telephone phone
              ON users.organization_id = phone.organization_id
              AND users.party_id = phone.party_id
              AND /*UPPER*/ phone.telephone_number LIKE ?
            WHERE users.organization_id = cat.organization_id
              AND users.cust_acct_code = cat.cust_acct_code
              AND users.cust_acct_id = cat.cust_acct_id
          )]]></Expression>
    </SQL>
    <Property>
      <Key dtype="String">MaxRows</Key>
      <Value dtype="String"><![CDATA[50]]></Value>
    </Property>
  </Query>

  <Query name="HOUSE_ACCOUNT_LOOKUP_BY_CUSTOMER" pmType="HOUSE_ACCOUNT">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.query.results.HouseAccountSearchResult</ResultClass>
    <ResultField name="OrganizationId" type="Long" />
    <ResultField name="CustAcctId" type="String" />
    <ResultField name="CustAcctCode" type="String" />
    <ResultField name="CreditLimit" type="BigDecimal" />
    <ResultField name="AcctBalance" type="BigDecimal" />
    <ResultField name="AccountPartyId" type="String" />
    <ResultField name="OrganizationName" type="String" />
    <ResultField name="CustId" type="String" />
    <ResultField name="CustAcctStatus" type="String" />
    <ResultField name="AccountSetupDate" type="Date" />
    <SQL>
      <Statement dtype="String"><![CDATA[
        select distinct a.organization_id, a.cust_acct_id, a.cust_acct_code, credit_limit, acct_balance,
          c.party_id,
          organization_name, cust_id, cust_acct_statcode, c.acct_setup_date
        from cat_cust_consumer_charge_acct a, crm_party b, cat_cust_acct c
        where a.organization_id = b.organization_id and
          c.party_id = b.party_id and
          a.organization_id = ? and
          a.organization_id = c.organization_id and
          a.cust_acct_code = c.cust_acct_code and
          a.cust_acct_id = c.cust_acct_id and
          a.cust_acct_code = 'HOUSE_ACCOUNT' and
          c.party_id = ?
            ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argPartyId" />
      <Expression trigger="argOnHoldFlag"><![CDATA[a.on_hold_flag = ?]]></Expression>
    </SQL>
    <Property>
      <Key dtype="String">MaxRows</Key>
      <Value dtype="String"><![CDATA[50]]></Value>
    </Property>
  </Query>

  <Query name="HOUSE_ACCOUNT_LOOKUP_BY_CUSTOMER_SIMPLE" pmType="HOUSE_ACCOUNT">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.query.results.HouseAccountSearchResult</ResultClass>
    <ResultField name="OrganizationId" type="Long" />
    <ResultField name="CustAcctId" />
    <SQL>
      <Statement dtype="String"><![CDATA[
        select a.organization_id, a.cust_acct_id
        from cat_cust_consumer_charge_acct a, cat_cust_acct c
        where
          a.organization_id = ? and
          a.organization_id = c.organization_id and
          a.cust_acct_code = c.cust_acct_code and
          a.cust_acct_id = c.cust_acct_id and
          a.cust_acct_code = 'HOUSE_ACCOUNT' and
          c.party_id = ?
            ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argPartyId" />
      <Expression trigger="argOnHoldFlag"><![CDATA[a.on_hold_flag = ?]]></Expression>
    </SQL>
  </Query>

  <Query name="ACTIVE_TIMECARDS">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.thr.TimecardEntryId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[        
          WHERE organization_id = ?
            AND rtl_loc_id = ?
            AND (delete_flag IS NULL OR delete_flag = 0)        
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocId" />
      <Expression trigger="argPartyId"><![CDATA[party_id = ?]]></Expression>
      <Expression parameters="argBusinessStartDate, argBusinessEndDate" trigger="argBusinessStartDate"><![CDATA[business_date >= ? AND business_date <= ?]]></Expression>
      <Expression parameters="argClockStartDate, argClockStartDate" trigger="argClockStartDate"><![CDATA[((clock_in_timestamp >= ?) OR
           (clock_out_timestamp >= ?))]]></Expression>
    </SQL>
  </Query>

  <Query name="ADDRESS_COUNTRIES" pmType="REGISTER_CORE">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.com.AddressCountryId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[        
          WHERE t.organization_id = ?        
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Expression trigger="argAddressMode"><![CDATA[address_mode = ?]]></Expression>
    </SQL>
  </Query>

  <Query name="ADDRESS_MODES" pmType="REGISTER_CORE">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.address.AddressModeResult</ResultClass>
    <ResultField name="Mode" />
    <ResultField name="CodeName" />
    <SQL>
      <Statement dtype="String"><![CDATA[        
          SELECT address_mode, codeName
          FROM (SELECT DISTINCT organization_Id, address_mode, 'PostalCode' AS codeName FROM com_address_postalcode 
                UNION
                SELECT DISTINCT organization_Id, address_mode, 'State' AS codeName FROM com_address_state 
                UNION
                SELECT DISTINCT organization_Id, address_mode, 'Country' AS codeName FROM com_address_country
                ) tbl
          WHERE organization_Id = ?         
      ]]></Statement>
      <Parameter name="argOrganizationId" />
    </SQL>
  </Query>

  <Query name="ADDRESS_STATES" pmType="REGISTER_CORE">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.com.AddressStateId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[        
          WHERE t.organization_id = ?        
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Expression trigger="argAddressMode"><![CDATA[address_mode = ?]]></Expression>
    </SQL>
  </Query>

  <Query name="ALL_EMPLOYEES">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.hrs.EmployeeId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[
        WHERE t.organization_id = ?        
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
    </SQL>
  </Query>

  <Query name="ALL_DEVICES">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.ctl.DeviceRegistrationId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[
        WHERE t.organization_id = ? AND t.rtl_loc_id = ?
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
      <Expression trigger="argDate"><![CDATA[date_timestamp >= ?]]></Expression>
    </SQL>
  </Query>

  <Query name="RETAIL_LOCATIONS">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.loc.RetailLocationId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[
        WHERE t.organization_id = ?        
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Expression trigger="argRetailLocationId"><![CDATA[t.rtl_loc_id = ?]]></Expression>
      <Expression trigger="argStoreNum"><![CDATA[/*UPPER*/ t.store_nbr = ?]]></Expression>
      <Expression trigger="argMinLatitude"><![CDATA[t.latitude >= ?]]></Expression>
      <Expression trigger="argMaxLatitude"><![CDATA[t.latitude <= ?]]></Expression>
      <Expression trigger="argMinLongitude"><![CDATA[t.longitude >= ?]]></Expression>
      <Expression trigger="argMaxLongitude"><![CDATA[t.longitude <= ?]]></Expression>
      <Expression trigger="argCountry"><![CDATA[/*UPPER*/ t.country = ?]]></Expression>
    </SQL>
  </Query>

  <Query name="ALL_SERVICE_LOCATIONS">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.cwo.ServiceLocationId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[        
          WHERE t.organization_id = ?    
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
    </SQL>
  </Query>

  <Query name="ALL_STORE_EMPLOYEES" pmType="EMPLOYEE">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.hrs.EmployeeId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[        
          WHERE t.organization_id = ? AND
                EXISTS (
                  Select empstore.* From hrs_employee_store empstore
                    Where empstore.organization_id = t.organization_id And
                          empstore.employee_id = t.employee_id And
                          empstore.rtl_loc_id = ? And
                          (empstore.begin_date Is Null Or empstore.begin_date <= ?) And
                          (empstore.end_date Is Null Or empstore.end_date >= ?)
                )        
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
      <Parameter name="argBusinessDate" />
      <Parameter name="argBusinessDate" />
    </SQL>
  </Query>

  <Query name="EMPLOYEE_BY_EMPLOYEE_ID">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.hrs.EmployeeId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[
        WHERE t.organization_id = ? AND t.employee_id = ?
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Parameter name="argEmployeeId" />
    </SQL>
  </Query>

  <Query name="LOCKED_STORE_EMPLOYEES" pmType="EMPLOYEE">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.hrs.EmployeeId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[
INNER JOIN hrs_employee_store es
  ON t.organization_id = es.organization_id
 AND t.employee_id = es.employee_id
 WHERE (es.rtl_loc_id = ? OR es.rtl_loc_id = 0)
   AND (es.begin_date is null or es.begin_date <= ?)
   AND (es.end_date   is null or es.end_date   >= ?)
   AND t.locked_out_flag = 1 
   AND t.organization_id = ?
]]></WhereClause>
      <Parameter name="argRetailLocationId" />
      <Parameter name="argBusinessDate" />
      <Parameter name="argBusinessDate" />
      <Parameter name="argOrganizationId" />
    </SQL>
  </Query>

  <Query name="XENV_PASSWDS" pmType="EMPLOYEE">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.query.results.XenvPasswdResult</ResultClass>
    <ResultField name="OrganizationId" type="Long" />
    <ResultField name="EmployeeId" type="String" />
    <ResultField name="LoginId" type="String" />
    <ResultField name="Password" type="String" />
    <ResultField name="EffectiveDate" type="Date" />
    <ResultField name="LockedOut" type="Boolean" />
    <SQL>
      <Statement dtype="String"><![CDATA[
SELECT e.organization_id, e.employee_id, 
       e.login_id, ep.password, ep.effective_date, e.locked_out_flag 
  FROM hrs_employee e
    INNER JOIN hrs_employee_password ep
      ON e.organization_id = ep.organization_id
     AND e.employee_id = ep.employee_id
    INNER JOIN hrs_employee_store es
      ON e.organization_id = es.organization_id
     AND ep.employee_id = es.employee_id
 WHERE es.organization_id = ?
   AND (es.rtl_loc_id = ? OR es.rtl_loc_id = 0)
   AND (es.begin_date is null or es.begin_date <= ?)
   AND (es.end_date   is null or es.end_date   >= ?)
   AND (/*UPPER*/ e.employee_statcode = 'A' OR (/*UPPER*/ e.employee_statcode = 'T' AND e.terminated_date > ?) )
   AND e.party_id != 0
   AND ep.current_password_flag = 1
   AND (ep.temp_password_flag IS NULL or ep.temp_password_flag = 0)

      ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
      <Parameter name="argBusinessDate" />
      <Parameter name="argBusinessDate" />
      <Parameter name="argBusinessDate" />
    </SQL>
  </Query>

  <Query name="ALL_WORKSTATIONS">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.loc.WorkstationId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[
        WHERE t.organization_id = ? AND t.rtl_loc_id = ?        
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
    </SQL>
  </Query>

  <!-- This set of queries are only to be used by the retail location synchronizing class <START> -->
  <!-- see dtv.pos.framework.RetailLocationSynchronizer -->
  <Query name="SYNC_TENDER_REPOSITORIES">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.tsn.TenderRepositoryId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[
        WHERE t.organization_id = ? AND t.rtl_loc_id = ?        
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
    </SQL>
  </Query>

  <Query name="SYNC_TENDER_REPOSITORY_FLOATS">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.tsn.TenderRepositoryFloatId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[
        WHERE t.organization_id = ? AND t.rtl_loc_id = ?        
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
    </SQL>
  </Query>

  <Query name="SYNC_INVENTORY_BUCKETS">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.inv.InventoryBucketId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[
        WHERE t.organization_id = ? AND t.rtl_loc_id = ?        
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
    </SQL>
  </Query>

  <Query name="SYNC_INVENTORY_LOCATION_BUCKETS">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.inv.InventoryLocationBucketId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[
        WHERE t.organization_id = ? AND t.rtl_loc_id = ?        
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
    </SQL>
  </Query>

  <Query name="SYNC_CODE_VALUE_LOOKUP">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.com.CodeValueId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[
         WHERE organization_id = ? 
                    AND category = ? 
                    AND COALESCE(hidden_flag, 0) = 0
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Parameter name="argCategory" />
    </SQL>
  </Query>

  <Query name="SYNC_TAX_MAPPING_BY_LOCATION">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.tax.RetailLocationTaxMappingId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[
        WHERE t.organization_id = ? AND t.rtl_loc_id = ?        
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
    </SQL>
  </Query>

  <Query name="SYNC_ORG_HIERARCHY_BY_LOCATION">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.loc.OrgHierarchyId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[
        WHERE t.organization_id = ? 
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Expression trigger="@argNodeList"><![CDATA[(t.org_code || ':' || t.org_value) IN ?]]></Expression>
    </SQL>
  </Query>

  <!-- This set of queries are only to be used by the retail location synchronizing class <END> -->
  <Query name="ANY_UNPOSTED_PAYROLL" pmType="PAYROLL">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.query.results.PayrollPostedResult</ResultClass>
    <ResultField name="PostedCount" type="Integer" />
    <SQL>
      <Statement dtype="String"><![CDATA[
          SELECT count(*) AS count
          FROM thr_payroll
          WHERE organization_id = ?
            AND rtl_loc_id = ?
            AND business_date BETWEEN ? AND ?
            AND posted_date IS null
        ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
      <Parameter name="argStartDate" />
      <Parameter name="argEndDate" />
      <Expression trigger="argPartyId"><![CDATA[party_id = ?]]></Expression>
    </SQL>
  </Query>

  <Query name="ATTACHED_ITEMS">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.itm.AttachedItemsId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[
            INNER JOIN itm_item i 
                ON t.organization_id = i.organization_id 
               AND t.attached_item_id = i.item_id 
          WHERE t.sold_item_id = ? 
            AND t.organization_id = ? 
            AND t.level_code = ?
            AND t.level_value = ?
            AND (t.begin_datetime is null OR t.begin_datetime <= ?) 
            AND (t.end_datetime is null OR t.end_datetime >= ?)
      ]]></WhereClause>
      <Parameter name="argItemId" />
      <Parameter name="argOrganizationId" />
      <Parameter name="argLevelCode" />
      <Parameter name="argLevelValue" />
      <Parameter name="argDate" />
      <Parameter name="argDate" />
    </SQL>
    <Suffix dtype="String"><![CDATA[ORDER BY t.end_datetime DESC, t.begin_datetime DESC]]></Suffix>
  </Query>

  <Query name="ATTACHED_TILLS_BY_WKSTN">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.tsn.SessionId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[
        , tsn_session_wkstn w
          WHERE t.organization_id = w.organization_id
          AND t.rtl_loc_id = w.rtl_loc_id 
          AND t.session_id = w.session_id
          AND w.organization_id = ?
          AND w.rtl_loc_id = ?
          AND w.wkstn_id = ?
          AND w.attached_flag = 1
          ORDER BY w.begin_datetime DESC        
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Parameter name="argLocId" />
      <Parameter name="argWorkStationId" />
    </SQL>
  </Query>

  <Query name="AUTH_MTHD_CODES" pmType="REGISTER_CORE">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.data2.access.DefaultQueryResult</ResultClass>
    <ResultField name="auth_mthd_code" type="String" />
    <SQL>
      <Statement dtype="String"><![CDATA[
        select distinct auth_mthd_code
                   from tnd_tndr_options
                  where organization_id = ? 
                    and auth_mthd_code is not null
                    and auth_req_flag = 1
      ]]></Statement>
      <Parameter name="argOrganizationId" />
    </SQL>
  </Query>

  <Query name="AVAILABLE_DOCUMENT_DEFINITION">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.doc.DocumentDefinitionId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[        
          WHERE organization_id = ?
          AND (start_issue_date = null OR start_issue_date <= ?)
          AND (end_issue_date = null OR end_issue_date >= ?)        
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Parameter name="argBusinessDate" />
      <Parameter name="argBusinessDate" />
    </SQL>
  </Query>

  <Query name="AVAILABLE_REDEMPTION_DOCUMENT_DEFINITION">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.doc.DocumentDefinitionId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[        
          WHERE organization_id = ?
          AND document_type = ?
          AND (start_redeem_date = null OR start_redeem_date <= ?)
          AND (end_redeem_date = null OR end_redeem_date >= ?)        
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Parameter name="argDocumentType" />
      <Parameter name="argBusinessDate" />
      <Parameter name="argBusinessDate" />
    </SQL>
  </Query>

  <Query name="AVAILABLE_CASHDRAWER_SESSIONS">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.tsn.SessionId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[        
          WHERE organization_id = ?
          AND rtl_loc_id = ?
          AND /*UPPER*/ statcode <> 'RECONCILED'
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
      <Expression trigger="argPartyId"><![CDATA[t.employee_party_id = ?]]></Expression>
      <Expression trigger="argBusinessDate"><![CDATA[t.business_date = ?]]></Expression>
      <Expression trigger="argCountStatus"><![CDATA[/*UPPER*/ t.statcode = ?]]></Expression>
      <Expression trigger="argCashDrawerId"><![CDATA[/*UPPER*/ t.cash_drawer_id = ?]]></Expression>
    </SQL>
    <Suffix dtype="String"><![CDATA[ORDER BY t.begin_datetime DESC]]></Suffix>
  </Query>

  <Query name="AVAILABLE_CASHDRAWER_SESSIONS_TO_RECONCILE" pmType="SESSIONS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.query.results.CashDrawerReconcileQueryResult</ResultClass>
    <ResultField name="OrganizationId" />
    <ResultField name="CashDrawerId" />
    <ResultField name="CashDrawerDescription" />
    <ResultField name="SessionId" />
    <ResultField name="BeginDatetimestamp" />
    <ResultField name="EndDatetimestamp" />
    <SQL>
      <Statement dtype="String"><![CDATA[
        SELECT t.organization_id,
          t.cash_drawer_id,
          cd.description,
          t.session_id,
          t.begin_datetime,
          t.end_datetime
        FROM tsn_session t        
          INNER JOIN tsn_tndr_repository tr 
            ON t.organization_id = tr.organization_id
            AND t.rtl_loc_id=tr.rtl_loc_id 
            AND /*UPPER*/ t.tndr_repository_id = tr.tndr_repository_id
          INNER JOIN ctl_ip_cashdrawer_device cd
            ON t.organization_id = cd.organization_id
           AND t.rtl_loc_id = cd.rtl_loc_id
           AND /*UPPER*/ t.cash_drawer_id = cd.cash_drawer_id
        WHERE t.organization_id = ?
          AND t.rtl_loc_id = ?
          AND /*UPPER*/ t.statcode <> 'RECONCILED'        
      ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
      <Expression trigger="argCountStatus"><![CDATA[/*UPPER*/ t.statcode = ?]]></Expression>
      <Expression trigger="@argIgnoredTypeCodes"><![CDATA[/*UPPER*/ tr.typcode NOT IN ?]]></Expression>
    </SQL>
  </Query>

  <Query name="AVAILABLE_SESSIONS">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.tsn.SessionId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[        
          , tsn_tndr_repository tr 
          WHERE t.organization_id = tr.organization_id
          AND t.rtl_loc_id=tr.rtl_loc_id 
          AND /*UPPER*/ t.tndr_repository_id = tr.tndr_repository_id
          AND t.organization_id = ?
          AND t.rtl_loc_id = ?
          AND /*UPPER*/ t.statcode <> 'RECONCILED'        
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
      <Expression trigger="argPartyId"><![CDATA[t.employee_party_id = ?]]></Expression>
      <Expression trigger="argBusinessDate"><![CDATA[t.business_date = ?]]></Expression>
      <Expression trigger="argCountStatus"><![CDATA[/*UPPER*/ t.statcode = ?]]></Expression>
      <Expression trigger="@argIgnoredTypeCodes"><![CDATA[/*UPPER*/ tr.typcode NOT IN ?]]></Expression>
    </SQL>
  </Query>

  <Query name="UNRETURNED_TILL_SESSIONS">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.tsn.SessionId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[        
           JOIN tsn_tndr_repository tr ON t.organization_id = tr.organization_id 
            AND t.rtl_loc_id = tr.rtl_loc_id 
            AND /*UPPER*/ t.tndr_repository_id = tr.tndr_repository_id 
           LEFT OUTER JOIN tsn_tndr_repository_status trs ON t.organization_id = trs.organization_id
            AND t.rtl_loc_id = trs.rtl_loc_id
            AND /*UPPER*/ t.tndr_repository_id = trs.tndr_repository_id
            AND t.session_id = trs.active_session_id
          WHERE /*UPPER*/ tr.typcode = 'TILL'
            AND /*UPPER*/ t.statcode <> 'RECONCILED'
            AND COALESCE(trs.issued_flag, 0) = 1
            AND t.organization_id = ?
            AND t.rtl_loc_id = ?  
            AND t.business_date < ?      
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
      <Parameter name="argBusinessDate" />
    </SQL>
  </Query>

  <Query name="CASH_PICKUP_TOTAL" pmType="SESSIONS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.query.results.CashPickupTotalResult</ResultClass>
    <ResultField name="TotalPickupAmount" />
    <SQL>
      <Statement dtype="String"><![CDATA[
        SELECT Sum(amt) 
        FROM tsn_tndr_control_trans
        WHERE organization_id = ? 
          AND rtl_loc_id = ? 
          AND business_date = ?  
          AND /*UPPER*/ typcode = 'CASH_PICKUP'
      ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
      <Parameter name="argBusinessDate" />
      <Expression trigger="argSessionId"><![CDATA[outbound_session_id = ?]]></Expression>
    </SQL>
  </Query>

  <Query name="CHECK_HEALTH" pmType="RESERVED_LOCAL">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <SQL>
      <Statement dtype="String"><![CDATA[ 
        SELECT Count(*) FROM Test_Connection
      ]]></Statement>
    </SQL>
  </Query>

  <Query name="CLOCKED_IN_ENTRY_FOR_PERSON">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.hrs.WorkCodesId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[
        WHERE t.organization_id = ? AND /*UPPER*/ t.description = ?        
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Parameter name="argDescription" />
    </SQL>
  </Query>

  <Query name="CODE_LOOKUP">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <SQL>
      <WhereClause dtype="String"><![CDATA[        
            WHERE organization_id = ? 
              AND COALESCE(hidden_flag, 0) = 0           
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
    </SQL>
    <Suffix dtype="String"><![CDATA[ORDER BY sort_order asc]]></Suffix>
  </Query>

  <Query name="CODE_VALUE_LOOKUP">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.com.CodeValueId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[
         WHERE organization_id = ? 
                    AND category = ? 
                    AND COALESCE(hidden_flag, 0) = 0
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Parameter name="argCategory" />
    </SQL>
    <Suffix dtype="String"><![CDATA[ORDER BY sort_order asc]]></Suffix>
  </Query>

  <Query name="COMM_ASSOC_LOOKUP_SQL" pmType="EMPLOYEE">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.query.results.CommAssocSearchResult</ResultClass>
    <ResultField name="OrganizationId" type="Long" />
    <ResultField name="EmployeeId" type="String" />
    <ResultField name="LastName" type="String" />
    <ResultField name="FirstName" type="String" />
    <ResultField name="ClockInFlag" type="Boolean" />
    <SQL>
      <Statement dtype="String"><![CDATA[
        select emp.organization_id, emp.employee_id AS empId, party.last_name AS lastName, party.first_name as firstName, entry.open_record_flag as isClockedIn
        from crm_party party, hrs_employee_store empstore, hrs_employee emp 
        left outer join thr_timecard_entry entry on 
        emp.organization_id = entry.organization_id and
        emp.party_id = entry.party_id and
        entry.open_record_flag = ? and
        (entry.delete_flag = ? OR entry.delete_flag IS NULL) and 
        entry.organization_id = ? and entry.rtl_loc_id = ?
        where 
        party.organization_id = emp.organization_id and
        party.party_id = emp.party_id and 
        emp.employee_id = empstore.employee_id AND
        emp.organization_id = empstore.organization_id AND      
        /*UPPER*/ emp.employee_statcode != 'T' and /*UPPER*/ emp.employee_statcode != 'I' and 
        emp.party_id != 0 and
        emp.organization_id = ? and
        empstore.rtl_loc_id = ? and
        (empstore.begin_date is null or empstore.begin_date <= ?) and
        (empstore.end_date is null or empstore.end_date >= ?)      
        ORDER BY isClockedIn DESC, lastName
        ]]></Statement>
      <Parameter name="argOpenRecordFlag" />
      <Parameter name="argDeleteFlag" />
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
      <Parameter name="argBusinessDate" />
      <Parameter name="argBusinessDate" />
    </SQL>
  </Query>

  <Query name="COMPLETED_ORDER_LOOKUP" pmType="RESERVED_CENTRAL">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
  </Query>

  <Query name="COUNT_ITEMS_IN_INVENTORY_LOCATION" pmType="STOCK_LEDGER">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.query.results.GenericAggregateResult</ResultClass>
    <ResultField name="AggregateValue" />
    <SQL>
      <Statement dtype="String"><![CDATA[
        SELECT sum(unitcount) 
          FROM inv_stock_ledger_acct
         WHERE organization_id = ?
           AND rtl_loc_id = ?
           AND inv_location_id = ?
           AND unitcount >= 0
      ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
      <Parameter name="argInvLocationId" />
    </SQL>
  </Query>

  <Query name="CREDIT_PLANS">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.cat.CustomerAccountPlanId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[        
          WHERE t.organization_id = ? 
            AND t.cust_acct_code = ?]]>
      </WhereClause>
      <Parameter name="argOrganizationId" />
      <Parameter name="argCustAccountCode" />
    </SQL>
  </Query>

  <Query name="CUSTOMER_ACCOUNT_DETAIL_LOOKUP" pmType="CUSTOMER_ACCOUNT">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.query.results.CustAccountSearchResult</ResultClass>
    <ResultField name="OrganizationId" type="Long" />
    <ResultField name="AccountId" type="String" />
    <ResultField name="AccountCode" type="String" />
    <ResultField name="FirstName" type="String" />
    <ResultField name="LastName" type="String" />
    <ResultField name="AccountBalanceDue" type="BigDecimal" />
    <ResultField name="ActiveAccountTotal" type="BigDecimal" />
    <ResultField name="AccountSetupDate" type="Date" />
    <ResultField name="AccountStateCode" type="String" />
    <SQL>
      <Statement dtype="String"><![CDATA[
          SELECT DISTINCT 
                 cca.organization_id, cca.cust_acct_id,  cca.cust_acct_code, p.first_name, p.last_name,
                 cca.acct_balance, ccia.active_acct_total, cca.acct_setup_date, cca.cust_acct_statcode
            FROM cat_cust_acct cca
              JOIN cat_cust_item_acct ccia 
                  ON (cca.organization_id = ccia.organization_id
                  AND cca.cust_acct_id = ccia.cust_acct_id
                  AND cca.cust_acct_code = ccia.cust_acct_code)
              JOIN cat_cust_item_acct_detail d 
                  ON (ccia.organization_id = d.organization_id
                  AND ccia.cust_acct_id = d.cust_acct_id
                  AND ccia.cust_acct_code = d.cust_acct_code)
              JOIN crm_party p 
                  ON (cca.party_id = p.party_id
                  AND cca.organization_id = p.organization_id)
            WHERE cca.cust_acct_code= ? 
              AND cca.organization_id = ? 
              AND cca.rtl_loc_id = ?
        ]]></Statement>
      <Parameter name="argCustAccountCode" />
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
      <Expression trigger="argCustAccountId"><![CDATA[cca.cust_acct_id = ?]]></Expression>
      <Expression trigger="argPoNumber"><![CDATA[/*UPPER*/ cca.acct_po_nbr = ?]]></Expression>
      <Expression trigger="argCustomerId"><![CDATA[/*UPPER*/ p.cust_id = ?]]></Expression>
      <Expression trigger="argPartyId"><![CDATA[cca.party_id = ?]]></Expression>
      <Expression trigger="argDetailStatus"><![CDATA[/*UPPER*/ d.item_acct_lineitm_statcode = ?]]></Expression>
    </SQL>
    <Suffix dtype="String"><![CDATA[ORDER BY cca.acct_setup_date]]></Suffix>
  </Query>

  <Query name="CUSTOMER_ACCOUNT_HISTORY" pmType="CUSTOMER_ACCOUNT">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.query.results.CustomerAccountHistoryResult</ResultClass>
    <ResultField name="CustAccountCode" type="String" />
    <ResultField name="CustAccountId" type="String" />
    <ResultField name="ActivityDate" type="Date" />
    <ResultField name="ActivityCode" type="String" />
    <ResultField name="LineTypeCode" type="String" />
    <ResultField name="ActivityQuantity" type="BigDecimal" />
    <ResultField name="ActivityAmount" type="BigDecimal" />
    <SQL>
      <Statement dtype="String"><![CDATA[
        SELECT activity.cust_acct_code, activity.cust_acct_id AS acct_id, min(activity_datetime) AS activitydate, item_acct_activity_code, line_typcode, sum(quantity), coalesce(sum(ModifiedAmount),sum(extended_amt))
          FROM cat_cust_item_acct_activity activity join cat_cust_acct account 
            ON activity.organization_id = account.organization_id 
           AND activity.cust_acct_code = account.cust_acct_code 
           AND activity.cust_acct_id = account.cust_acct_id
          left outer join
           (SELECT activity.organization_id, cust_acct_code, cust_acct_id, min(activity_datetime) AS activitydate, sum(extended_amt) ModifiedAmount
            FROM cat_cust_item_acct_activity activity
            WHERE (/*UPPER*/ item_acct_activity_code ='MODIFY_PRICE') 
              AND (/*UPPER*/ line_typcode = 'ITEM') 
            GROUP BY activity.organization_id, cust_acct_code, cust_acct_id, activity.rtl_loc_id, wkstn_id, trans_seq) ItemQry
              ON activity.organization_id = ItemQry.organization_id
               AND activity.cust_acct_code = ItemQry.cust_acct_code 
               AND activity.cust_acct_id = ItemQry.cust_acct_id
         WHERE (item_acct_activity_code NOT LIKE 'MODIFY%') 
           AND (/*UPPER*/ line_typcode = 'ITEM') 
           AND activity.organization_id = ?
           AND account.party_id = ?
      GROUP BY account.party_id, activity.cust_acct_code, activity.cust_acct_id, item_acct_activity_code, line_typcode, activity.rtl_loc_id, wkstn_id, trans_seq

      UNION

        SELECT activity.cust_acct_code, activity.cust_acct_id AS acct_id, activity_datetime AS activitydate, item_acct_activity_code, line_typcode, quantity, extended_amt
          FROM cat_cust_item_acct_activity activity join cat_cust_acct account 
            ON activity.organization_id = account.organization_id 
           AND activity.cust_acct_code = account.cust_acct_code 
           AND activity.cust_acct_id = account.cust_acct_id
         WHERE (item_acct_activity_code NOT LIKE 'MODIFY%') 
           AND (/*UPPER*/ line_typcode IN ('DEPOSIT', 'PAYMENT', 'PICKUP_PAYMENT', 'PAYMENT_REFUND', 'RESTOCKING_FEE', 'SETUP_FEE', 'SHIPPING_FEE')) 
           AND (/*UPPER*/ item_acct_activity_code IN ('SETUP', 'PAYMENT', 'REFUND'))
           AND activity.organization_id = ?
           AND account.party_id = ?           
        ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argPartyId" />
      <Parameter name="argOrganizationId" />
      <Parameter name="argPartyId" />
    </SQL>
    <Suffix dtype="String"><![CDATA[ORDER BY acct_id, activitydate]]></Suffix>
  </Query>

  <Query name="CUSTOMER_ACCOUNT_INVENTORY_LINES">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.inv.InventoryDocumentLineItemId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[
        , inv_item_acct_mod acct
          WHERE t.organization_id = acct.organization_id 
            AND t.rtl_loc_id = acct.rtl_loc_id 
            AND t.invctl_document_id = acct.invctl_document_id 
            AND t.document_typcode = acct.document_typcode 
            AND t.invctl_document_line_nbr = acct.invctl_document_line_nbr 
            AND t.organization_id = ? 
            AND /*UPPER*/ acct.cust_acct_code = ? 
            AND /*UPPER*/ acct.cust_acct_id = ?
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Parameter name="argCustAcctCode" />
      <Parameter name="argCustAcctId" />
      <Expression trigger="argStatus"><![CDATA[/*UPPER*/ t.status_code = ?]]></Expression>
    </SQL>
  </Query>

  <Query name="CUSTOMER_ACCOUNT_LOOKUP" pmType="CUSTOMER_ACCOUNT">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.query.results.CustAccountSearchResult</ResultClass>
    <ResultField name="OrganizationId" type="Long" />
    <ResultField name="AccountId" type="String" />
    <ResultField name="AccountCode" type="String" />
    <ResultField name="FirstName" type="String" />
    <ResultField name="LastName" type="String" />
    <ResultField name="AccountBalanceDue" type="BigDecimal" />
    <ResultField name="ActiveAccountTotal" type="BigDecimal" />
    <ResultField name="AccountSetupDate" type="Date" />
    <ResultField name="AccountStateCode" type="String" />
    <ResultField name="PsBeginDate" type="Date" />
    <ResultField name="PsIntervalType" type="String" />
    <ResultField name="PsIntervalCount" type="Integer" />
    <ResultField name="PsPaymentCount" type="Integer" />
    <ResultField name="AccountTotalDeposits" type="BigDecimal" />
    <SQL>
      <Statement dtype="String"><![CDATA[
          SELECT
              cca.organization_id, cca.cust_acct_id, cca.cust_acct_code, p.first_name, p.last_name, cca.acct_balance,
              ccia.active_acct_total, cca.acct_setup_date, cca.cust_acct_statcode,
              cps.begin_date, cps.interval_type_enum, cps.interval_count, cps.payment_count,
              (Select Sum(extended_amt) From cat_cust_item_acct_detail ccad 
                  Where cca.organization_id = ccad.organization_id And 
                        cca.cust_acct_id = ccad.cust_acct_id And 
                        cca.cust_acct_code = ccad.cust_acct_code And
                        /*UPPER*/ ccad.line_typcode = 'DEPOSIT') AS total_deposits
          FROM cat_cust_acct cca 
            JOIN cat_cust_item_acct ccia ON
                cca.organization_id = ccia.organization_id AND
                cca.cust_acct_id = ccia.cust_acct_id AND
                cca.cust_acct_code = ccia.cust_acct_code
            LEFT JOIN cat_payment_schedule cps ON
                cca.organization_id = cps.organization_id AND
                cca.cust_acct_id = cps.cust_acct_id AND
                cca.cust_acct_code = cps.cust_acct_code
            LEFT OUTER JOIN crm_party p ON
                cca.party_id = p.party_id AND
                cca.organization_id = p.organization_id
          WHERE cca.organization_id = ? AND
                cca.cust_acct_code= ? AND
                cca.rtl_loc_id = ?
        ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argCustAccountCode" />
      <Parameter name="argRetailLocationId" />
      <Expression trigger="argCustAccountId"><![CDATA[cca.cust_acct_id = ?]]></Expression>
      <Expression trigger="argCustomerId"><![CDATA[/*UPPER*/ p.cust_id = ?]]></Expression>
      <Expression trigger="argPartyId"><![CDATA[cca.party_id = ?]]></Expression>
      <Expression parameters="argFirstName%" trigger="argFirstName"><![CDATA[/*UPPER*/ p.first_name like ?]]></Expression>
      <Expression parameters="argLastName%" trigger="argLastName"><![CDATA[/*UPPER*/ p.last_name like ?]]></Expression>
      <Expression trigger="argTelephone"><![CDATA[EXISTS
          (Select * From crm_party_telephone ph
              Where ph.organization_id = p.organization_id
                And ph.party_id = p.party_id
                And /*UPPER*/ ph.telephone_number = ?)]]></Expression>
      <Expression trigger="argStatus"><![CDATA[/*UPPER*/ cca.cust_acct_statcode = ?]]></Expression>
      <Expression trigger="argExcludeStatus"><![CDATA[/*UPPER*/ cca.cust_acct_statcode != ?]]></Expression>
      <Expression trigger="argPoNumber"><![CDATA[/*UPPER*/ cca.acct_po_nbr = ?]]></Expression>
      <Expression trigger="argFromSetupDate"><![CDATA[cca.acct_setup_date >= ?]]></Expression>
      <Expression trigger="argToSetupDate"><![CDATA[cca.acct_setup_date <= ?]]></Expression>
      <Expression trigger="argFromLastActDate"><![CDATA[cca.last_activity_date >= ?]]></Expression>
      <Expression trigger="argToLastActDate"><![CDATA[cca.last_activity_date <= ?]]></Expression>
    </SQL>
    <Sort field="argSortBy" required="false" />
    <Sort field="cca.cust_acct_id" order="DESC" />
  </Query>

  <Query name="CUSTOMER_ACCOUNT_TOTAL_BY_ITEM_TYPE" pmType="CUSTOMER_ACCOUNT">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <SQL>
      <Statement dtype="String"><![CDATA[        
          SELECT Sum(extended_amt) AS total
            FROM trl_sale_lineitm sale 
                 INNER JOIN trl_cust_item_acct_mod mod ON
                     sale.organization_id = mod.organization_id AND
                     sale.business_date = mod.business_date AND
                     sale.rtl_loc_id = mod.rtl_loc_id AND
                     sale.wkstn_id = mod.wkstn_id AND
                     sale.trans_seq = mod.trans_seq AND
                     sale.rtrans_lineitm_seq = mod.rtrans_lineitm_seq
                 INNER JOIN itm_non_phys_item npi ON
                     sale.organization_id = npi.organization_id AND
                     /*UPPER*/ sale.item_id = npi.item_id
            WHERE /*UPPER*/ mod.cust_acct_code = ? AND
                  /*UPPER*/ mod.cust_acct_id = ? AND
                  /*UPPER*/ npi.non_phys_item_typcode = ?
        ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argCustAcctCode" />
      <Parameter name="argCustAcctId" />
      <Parameter name="argItemType" />
    </SQL>
  </Query>

  <Query name="CUSTOMER_CHARGE_ACCT_INVOICES">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.cat.ChargeAccountInvoiceId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[        
          WHERE t.organization_id = ?
            AND t.cust_acct_id = ?
            AND t.cust_acct_code = ?
            AND t.invoice_balance > 0
            order by t.invoice_date asc
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Parameter name="argAcctId" />
      <Parameter name="argAcctCode" />
    </SQL>
  </Query>

  <Query name="CUSTOMER_CONSUMER_CHARGE_USERS">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.cat.ChargeAccountUserId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[        
          WHERE t.organization_id = ?
            AND t.cust_acct_id = ?
            AND t.cust_acct_code = ?
            AND (t.expiration_date IS NULL 
            OR  t.expiration_date > ?)
            AND t.effective_date <= ?
            
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Parameter name="argAcctId" />
      <Parameter name="argAcctCode" />
      <Parameter name="argEffectiveDate" />
      <Parameter name="argExpirationDate" />
    </SQL>
  </Query>

  <Query name="CUSTOMER_HISTORY_FOR_WORK_ORDER_ITEM" pmType="TRANSACTION">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.query.results.CustomerTransHistoryResult</ResultClass>
    <ResultField name="TransactionDate" type="Date" />
    <ResultField name="ItemDescription" type="String" />
    <ResultField name="ItemId" type="String" />
    <ResultField name="Price" type="BigDecimal" />
    <ResultField name="Qty" type="BigDecimal" />
    <ResultField name="SaleItemType" type="String" />
    <ResultField name="TransSeq" type="Long" />
    <SQL>
      <Statement dtype="String"><![CDATA[
select distinct trntran.trans_date,
                itm.description as description,
                sale.item_id,
                sale.extended_amt,
                sale.quantity,
                sale.sale_lineitm_typcode,
                sale.trans_seq
  FROM rpt_trl_sale_lineitm_view sale
    INNER JOIN trn_trans trntran 
       ON trntran.organization_id = sale.organization_id
      AND trntran.rtl_loc_id = sale.rtl_loc_id
      AND trntran.wkstn_id = sale.wkstn_id
      AND trntran.business_date = sale.business_date
      AND trntran.trans_seq = sale.trans_seq
    INNER JOIN itm_item itm
       ON sale.organization_id = itm.organization_id 
      AND sale.item_id = itm.item_id 
    INNER JOIN itm_item_options opt 
       ON itm.organization_id = opt.organization_id
      AND itm.item_id = opt.item_id
 WHERE /*UPPER*/ sale.sale_lineitm_typcode not in ('LAYAWAY', 'SPECIAL_ORDER', 'WORK_ORDER')
   and sale.void_flag = ? 
   and sale.return_flag = ? 
   and (opt.disallow_work_order_flag IS NULL Or 
        opt.disallow_work_order_flag = ?) 
   and sale.organization_id = ? 
   and sale.cust_party_id = ? 
   and sale.item_id not in (select item_id from itm_non_phys_item where organization_id = sale.organization_id)
        ]]></Statement>
      <Parameter name="argVoidFlag" />
      <Parameter name="argReturnFlag" />
      <Parameter name="argDisallowWorkOrderFlag" />
      <Parameter name="argOrganizationId" />
      <Parameter name="argCustomerId" />
    </SQL>
  </Query>

  <Query name="CUSTOMER_TRANS_HISTORY" pmType="HISTORICAL_TRANSACTION_LOOKUP">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.query.results.CustomerTransHistoryResult</ResultClass>
    <ResultField name="LineItemSeq" type="Long" />
    <ResultField name="RetailLocationId" type="String" />
    <ResultField name="WorkstationId" type="String" />
    <ResultField name="TransactionDate" type="Date" />
    <ResultField name="TransSeq" type="Long" />
    <ResultField name="SaleItemType" type="String" />
    <ResultField name="ReturnFlag" type="Boolean" />
    <ResultField name="ItemId" type="String" />
    <ResultField name="Qty" type="BigDecimal" />
    <ResultField name="Price" type="BigDecimal" />
    <ResultField name="ItemDescription" type="String" />
    <ResultField name="ExcludeFromNetSalesFlag" type="Boolean" />
    <ResultField name="CustAcctId" type="String" />
    <ResultField name="CustAcctStatCode" type="String" />
    <ResultField name="OrderType" type="String" />
    <ResultField name="BeginDateTimestamp" type="Date" />
    <SQL>
      <Statement dtype="String"><![CDATA[
        SELECT DISTINCT sale.rtrans_lineitm_seq,
          sale.rtl_loc_id,
          sale.wkstn_id,
          sale.trans_date,
          sale.trans_seq,
          sale.sale_lineitm_typcode,
          sale.return_flag,
          sale.item_id,
          sale.quantity,
          sale.net_amt,
          sale.item_desc AS description,
          COALESCE(sale.exclude_from_net_sales_flag, 0) AS excludeFromNetSales,
          acctmod.cust_acct_id AS custAcctId,
          (SELECT acct.cust_acct_statcode
            FROM cat_cust_acct acct
          WHERE acct.organization_id = acctmod.organization_id
            AND acct.cust_acct_id = /*UPPER*/ acctmod.cust_acct_id
            AND acct.rtl_loc_id = acctmod.rtl_loc_id
            AND acct.cust_acct_code = /*UPPER*/ acctmod.cust_acct_code
          ) AS custAcctStatCode,
          ordermod.order_type AS orderType,
          sale.trans_timestamp
        FROM rpt_sale_line sale
        LEFT JOIN trl_cust_item_acct_mod acctmod
          ON sale.organization_id = acctmod.organization_id
          AND sale.business_date = acctmod.business_date
          AND sale.rtl_loc_id = acctmod.rtl_loc_id
          AND sale.wkstn_id = acctmod.wkstn_id
          AND sale.trans_seq = acctmod.trans_seq
          AND sale.rtrans_lineitm_seq = acctmod.rtrans_lineitm_seq
        LEFT JOIN xom_order_mod ordermod
          ON sale.organization_id = ordermod.organization_id
          AND sale.rtl_loc_id = ordermod.rtl_loc_id
          AND sale.business_date = ordermod.business_date
          AND sale.wkstn_id = ordermod.wkstn_id
          AND sale.rtrans_lineitm_seq = ordermod.rtrans_lineitm_seq
          AND sale.trans_seq = ordermod.trans_seq
        WHERE /*UPPER*/ sale.trans_statcode = 'COMPLETE'
          AND /*UPPER*/ sale.sale_lineitm_typcode IN ('SALE', 'SEND_SALE', 'LAYAWAY', 'ORDER')
          AND    sale.organization_id = ?
          AND    sale.cust_party_id = ?
          AND    trans_date BETWEEN ? AND ?
        ORDER BY sale.trans_timestamp DESC, sale.trans_seq DESC
        ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argPartyId" />
      <Parameter name="argStartDate" />
      <Parameter name="argEndDate" />
    </SQL>
  </Query>

  <Query name="CUSTOMER_TRANS_HISTORY_SUMMARY" pmType="TRANSACTION_LOOKUP">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.query.results.CustomerTransHistorySummaryResult</ResultClass>
    <ResultField name="TotalTransactionCount" type="Integer" />
    <ResultField name="TotalItemsSoldCount" type="Integer" />
    <ResultField name="TotalItemsReturnedCount" type="Integer" />
    <ResultField name="TotalSalesAmt" type="BigDecimal" />
    <ResultField name="TotalReturnsAmt" type="BigDecimal" />
    <SQL>
      <Statement dtype="String"><![CDATA[
        SELECT  COALESCE(COUNT(rtran.trans_seq),0) trans_count,
                COALESCE(SUM(case when sale.return_flag = 0 then sale.quantity else 0 end),0) items_sold,
                COALESCE(SUM(case when sale.return_flag = 1 then sale.quantity else 0 end),0) items_rtn,
                COALESCE(SUM(case when sale.return_flag = 0 then sale.extended_amt else 0 end),0) sold_amt,
                COALESCE(SUM(case when sale.return_flag = 1 then sale.extended_amt else 0 end),0) rtn_amt    
        FROM    trn_trans trntran
        INNER JOIN trl_rtrans rtran
          ON    rtran.organization_id = trntran.organization_id 
          AND   rtran.business_date = trntran.business_date 
          AND   rtran.rtl_loc_id = trntran.rtl_loc_id 
          AND   rtran.wkstn_id = trntran.wkstn_id 
          AND   rtran.trans_seq = trntran.trans_seq
        INNER JOIN trl_rtrans_lineitm rline
          ON    rline.organization_id = rtran.organization_id 
          AND   rline.business_date = rtran.business_date 
          AND   rline.rtl_loc_id = rtran.rtl_loc_id 
          AND   rline.wkstn_id = rtran.wkstn_id 
          AND   rline.trans_seq = rtran.trans_seq
        INNER JOIN trl_sale_lineitm sale
          ON    sale.organization_id = rline.organization_id 
          AND   sale.business_date = rline.business_date 
          AND   sale.rtl_loc_id = rline.rtl_loc_id 
          AND   sale.wkstn_id = rline.wkstn_id 
          AND   sale.trans_seq = rline.trans_seq 
          AND   sale.rtrans_lineitm_seq = rline.rtrans_lineitm_seq 
        INNER JOIN itm_item itm
          ON    itm.organization_id = sale.organization_id 
          AND   itm.item_id = /*UPPER*/ sale.item_id
        LEFT JOIN itm_non_phys_item nonphys
          ON    itm.organization_id = nonphys.organization_id
          AND   itm.item_id = nonphys.item_id
        WHERE   /*UPPER*/ trntran.trans_statcode = 'COMPLETE' 
          AND   /*UPPER*/ sale.sale_lineitm_typcode  IN ('SALE','RETURN', 'SHIP_SALE', 'SEND_SALE') 
          AND   trntran.post_void_flag = ? 
          AND   rline.void_flag = ?
          AND   rtran.organization_id = ? 
          AND   rtran.cust_party_id = ? 
          AND   rtran.business_date BETWEEN ? AND ?
          AND   (nonphys.non_phys_item_typcode IS NULL OR /*UPPER*/ nonphys.non_phys_item_typcode NOT IN ?)
        ]]></Statement>
      <Parameter name="argTranVoidFlag" />
      <Parameter name="argVoidFlag" />
      <Parameter name="argOrganizationId" />
      <Parameter name="argPartyId" />
      <Parameter name="argStartDate" />
      <Parameter name="argEndDate" />
      <Parameter name="@argMonetaryNPITypes" />
    </SQL>
  </Query>

  <Query name="CYCLE_QUESTIONS">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.loc.CycleQuestionId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[
        WHERE t.organization_id = ?
        AND t.effective_datetime <= ?
        AND (t.expiration_datetime IS NULL OR t.expiration_datetime >= ?)
        AND /*UPPER*/ t.question_typcode = ?
        AND t.rtl_loc_id IN(0, ?)        
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Parameter name="argDate" />
      <Parameter name="argDate" />
      <Parameter name="argCode" />
      <Parameter name="argRetailLocationId" />
    </SQL>
    <Suffix dtype="String"><![CDATA[ORDER BY sort_order ASC]]></Suffix>
  </Query>

  <Query name="DAILY_TIMECARD_WORKCODES_SUMMARY" pmType="TIMECLOCK">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.query.results.DailyTimecardSummaryResult</ResultClass>
    <ResultField name="WorkCode" />
    <ResultField name="Duration" />
    <SQL>
      <Statement dtype="String"><![CDATA[
            select work_code, sum(duration) from thr_timecard_entry
            where party_id = ? and organization_id = ? and business_date = ?
              and delete_flag = ? and open_record_flag = ? 
            group by work_code
        ]]></Statement>
      <Parameter name="argPartyId" />
      <Parameter name="argOrganizationId" />
      <Parameter name="argBusinessDate" />
      <Parameter name="argDeleteFlag" />
      <Parameter name="argOpenRecordFlag" />
    </SQL>
  </Query>

  <Query name="DEAL_TIMES_BY_DAY">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.prc.DealWeekId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[
          WHERE organization_id = ? 
            AND deal_id = ? 
            AND day_code = ?
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Parameter name="argDealId" />
      <Parameter name="argDayCode" />
      <Expression parameters="argTime, argTime" trigger="argTime"><![CDATA[start_time <= ? AND (end_time IS NULL OR end_time >= ?)]]></Expression>
    </SQL>
    <Suffix dtype="String"><![CDATA[ORDER BY start_time DESC]]></Suffix>
  </Query>

  <Query name="DELINQUENT_LAYAWAY_ACCOUNT_CHECK" pmType="CUSTOMER_ACCOUNT">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.query.results.CustAccountSearchResult</ResultClass>
    <ResultField name="OrganizationId" type="Long" />
    <ResultField name="AccountId" type="String" />
    <ResultField name="AccountCode" type="String" />
    <ResultField name="FirstName" type="String" />
    <ResultField name="LastName" type="String" />
    <ResultField name="AccountBalanceDue" type="BigDecimal" />
    <ResultField name="ActiveAccountTotal" type="BigDecimal" />
    <ResultField name="AccountSetupDate" type="Date" />
    <ResultField name="AccountStateCode" type="String" />
    <ResultField name="PsBeginDate" type="Date" />
    <ResultField name="PsIntervalType" type="String" />
    <ResultField name="PsIntervalCount" type="Integer" />
    <ResultField name="PsPaymentCount" type="Integer" />
    <ResultField name="AccountTotalDeposits" type="BigDecimal" />
    <SQL>
      <Statement dtype="String"><![CDATA[
          SELECT
          cca.organization_id, cca.cust_acct_id, cca.cust_acct_code, p.first_name, p.last_name, cca.acct_balance,
          ccia.active_acct_total, cca.acct_setup_date, cca.cust_acct_statcode,
          cps.begin_date, cps.interval_type_enum, cps.interval_count, cps.payment_count,
              (SELECT SUM(extended_amt) FROM cat_cust_item_acct_detail ccad WHERE
              cca.organization_id = ccad.organization_id AND
              cca.cust_acct_id = ccad.cust_acct_id AND
              cca.cust_acct_code = ccad.cust_acct_code AND /*UPPER*/ ccad.line_typcode = 'DEPOSIT') AS total_deposits
          FROM cat_cust_acct cca
          JOIN cat_cust_item_acct ccia ON
          cca.organization_id = ccia.organization_id AND
          cca.cust_acct_id = ccia.cust_acct_id AND
          cca.cust_acct_code = ccia.cust_acct_code
          JOIN cat_payment_schedule cps ON
          cca.organization_id = cps.organization_id AND
          cca.cust_acct_id = cps.cust_acct_id AND
          cca.cust_acct_code = cps.cust_acct_code
          JOIN crm_party p ON
          cca.party_id = p.party_id AND
          cca.organization_id = p.organization_id
          JOIN crm_party_locale_information pli ON
          p.party_id = pli.party_id AND
          p.organization_id = pli.organization_id
          WHERE
          cca.cust_acct_code='LAYAWAY' AND
          (/*UPPER*/ cca.cust_acct_statcode = 'OPEN' OR /*UPPER*/ cca.cust_acct_statcode = 'OVERDUE') AND
          cca.organization_id = ? AND
          cca.rtl_loc_id = ?
        ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
    </SQL>
  </Query>

  <Query name="DISCOUNT_LIST">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.dsc.DiscountId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[
            JOIN dsc_discount_group_mapping m 
                ON t.organization_id = m.organization_id
               AND t.discount_code = m.discount_code 
        WHERE t.organization_id = ?
          AND m.cust_group_id IN ?
          AND /*UPPER*/ t.typcode <> 'COUPON'
          AND t.effective_datetime <= ?
          AND (t.expr_datetime Is Null OR t.expr_datetime >= ?)
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Parameter name="@paramGroups" />
      <Parameter name="systemDate" />
      <Parameter name="systemDate" />
      <Expression trigger="@argApplicationMethod"><![CDATA[/*UPPER*/ t.app_mthd_code IN ?]]></Expression>
      <Expression trigger="@argTypeCode"><![CDATA[/*UPPER*/ t.typcode IN ?]]></Expression>
    </SQL>
    <Suffix dtype="String"><![CDATA[ORDER BY t.sort_order ASC]]></Suffix>
  </Query>

  <Query name="DISCOUNT_ITEM_INCLUSION_LIST">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.dsc.DiscountItemInclusionsId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[
        WHERE t.organization_id = ? AND /*UPPER*/ t.discount_code = ?
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Parameter name="argDiscountCode" />
    </SQL>
  </Query>

    <Query name="DISCOUNT_ITEM_EXCLUSION_LIST">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.dsc.DiscountItemExclusionsId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[
        WHERE t.organization_id = ? AND /*UPPER*/ t.discount_code = ?
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Parameter name="argDiscountCode" />
    </SQL>
  </Query>

  <Query name="DOCUMENT_LOOKUP" pmType="REGISTER_CORE">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.doc.impl.DocumentDefinitionModel</ResultClass>
    <ResultField name="OrganizationId" type="Long" />
    <ResultField name="SeriesId" type="String" />
    <ResultField name="DocumentType" type="String" />
    <ResultField name="StartIssueDate" type="Date" />
    <ResultField name="EndIssueDate" type="Date" />
    <ResultField name="StartRedeemDate" type="Date" />
    <ResultField name="EndRedeemDate" type="Date" />
    <ResultField name="VendorId" type="String" />
    <ResultField name="Description" type="String" />
    <ResultField name="ReceiptType" type="String" />
    <ResultField name="SegmentType" type="String" />
    <ResultField name="TextCodeValue" type="String" />
    <ResultField name="FileName" type="String" />
    <SQL>
      <Statement dtype="String"><![CDATA[        
          SELECT organization_id, series_id, document_type, start_issue_date, end_issue_date, start_redeem_date, end_redeem_date, 
          vendor_id, description, receipt_type, segment_type, text_code_value, file_name
          FROM doc_document_definition
          WHERE organization_id = ?
          AND (receipt_type IS NOT NULL 
          OR file_name IS NOT NULL)        
      ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Expression trigger="argSeriesId"><![CDATA[series_id = ?]]></Expression>
      <Expression trigger="argDocumentType"><![CDATA[document_type = ?]]></Expression>
      <Expression parameters="%argVendorId%" trigger="argVendorId"><![CDATA[/*UPPER*/ vendor_id like ?]]></Expression>
    </SQL>
  </Query>

  <Query name="EMPLOYEES_FOR_TASKS" pmType="EMPLOYEE">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.pos.tasks.TaskEmployeeResult</ResultClass>
    <ResultField name="EmployeeId" type="String" />
    <ResultField name="FirstName" type="String"  />
    <ResultField name="LastName" type="String"  />
    <ResultField name="EmployeeGroup" type="String"  />
    <SQL>
      <Statement dtype="String"><![CDATA[        
        SELECT DISTINCT emp.employee_id, party.first_name, party.last_name, emp.employee_group_id
        FROM crm_party party 
          INNER JOIN hrs_employee emp 
            ON party.organization_id = emp.organization_id 
            AND party.party_id = emp.party_id
          INNER JOIN hrs_employee_store empstore
            ON emp.employee_id = empstore.employee_id 
            AND emp.organization_id = empstore.organization_id 
        WHERE /*UPPER*/ emp.employee_statcode != 'T' 
           AND emp.party_id != 0 
           AND emp.organization_id = ? 
           AND empstore.rtl_loc_id = ? 
           AND (empstore.begin_date is null or empstore.begin_date <= ?)
           AND (empstore.end_date is null or empstore.end_date >= ?)      
         ORDER BY 3        
      ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
      <Parameter name="argBusinessDate" />
      <Parameter name="argBusinessDate" />
    </SQL>
  </Query>

  <Query name="EMPLOYEE_BY_LOGIN_ID">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.hrs.EmployeeId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[
        WHERE t.organization_id = ? AND /*UPPER*/ t.login_id = ?
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Parameter name="argLoginId" />
    </SQL>
  </Query>

  <Query name="EMPLOYEE_BY_PARTY_ID">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.hrs.EmployeeId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[
        WHERE t.organization_id = ? AND t.party_id = ?        
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Parameter name="argPartyId" />
    </SQL>
  </Query>

  <Query name="EMPLOYEE_DUPLICATE_LOGIN_CHECK" pmType="EMPLOYEE">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.query.results.EmployeeSearchResult</ResultClass>
    <ResultField name="OrganizationId" type="Long" />
    <ResultField name="EmployeeId" type="String" />
    <SQL>
      <Statement dtype="String"><![CDATA[
    select
      hrs_employee.organization_id,
      hrs_employee.employee_id
    from 
      hrs_employee
    where
      hrs_employee.organization_id = ? 
    ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Expression trigger="argLoginId"><![CDATA[/*UPPER*/ hrs_employee.login_id = ?]]></Expression>
    </SQL>
    <Property>
      <Key dtype="String">MaxRows</Key>
      <Value dtype="String"><![CDATA[50]]></Value>
    </Property>
  </Query>

  <Query name="EMPLOYEE_FINGERPRINT" pmType="EMPLOYEE_FINGERPRINT">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.hrs.EmployeeFingerprintId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[
        , hrs_employee_store hes WHERE t.organization_id = ? AND 
         t.organization_id = hes.organization_id AND 
         t.employee_id = hes.employee_id AND 
         hes.rtl_loc_id = ? 
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocation" />
    </SQL>
    <Suffix dtype="String"><![CDATA[ORDER BY t.employee_id ASC, hes.employee_store_seq asc]]></Suffix>
  </Query>

  <Query name="EMPLOYEE_FINGERPRINTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.hrs.EmployeeFingerprintId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[
        WHERE t.organization_id = ? AND t.employee_id = ?        
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Parameter name="argEmployeeId" />
    </SQL>
    <Suffix dtype="String"><![CDATA[ORDER BY fingerprint_seq ASC]]></Suffix>
  </Query>

  <Query name="EMPLOYEE_MESSAGES">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.hrs.EmployeeMessageId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[        
          WHERE t.organization_id = ?
            AND void_flag = 0        
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Expression trigger="argStoreCreated"><![CDATA[t.store_created_flag = ?]]></Expression>
      <Expression trigger="argWorkstationId"><![CDATA[(wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = ?))]]></Expression>
      <Expression trigger="argStartDate"><![CDATA[t.start_date <= ?]]></Expression>
      <Expression trigger="argEndDate"><![CDATA[t.end_date >= ?]]></Expression>
      <Expression trigger="argPriority"><![CDATA[/*UPPER*/ t.priority = ?]]></Expression>
    </SQL>
  </Query>

  <Query name="EMPLOYEE_SEARCH" pmType="EMPLOYEE">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.query.results.EmployeeSearchResult</ResultClass>
    <ResultField name="OrganizationId" type="Long" />
    <ResultField name="EmployeeId" type="String" />
    <ResultField name="FirstName" type="String" />
    <ResultField name="LastName" type="String" />
    <ResultField name="Address1" type="String" />
    <ResultField name="City" type="String" />
    <ResultField name="State" type="String" />
    <ResultField name="PostalCode" type="String" />
    <ResultField name="Country" type="String" />
    <ResultField name="Neighborhood" type="String" />
    <ResultField name="County" type="String" />
    <ResultField name="ClockedIn" type="Boolean" />
    <SQL>
      <Statement dtype="String"><![CDATA[
        select
          hrs_employee.organization_id as organization_id,
          hrs_employee.employee_id as employee_id,
          crm_party.first_name as first_name,
          crm_party.last_name as last_name,
          crm_party_locale_information.address1 as address1,
          crm_party_locale_information.city as city,
          crm_party_locale_information.state as state,
          crm_party_locale_information.postal_code as postalCode,
          crm_party_locale_information.country as country,
          crm_party_locale_information.neighborhood as neighborhood,
          crm_party_locale_information.county as county,
          hrs_employee.clocked_in_flag as clocked_in_flag
        from 
          hrs_employee,
          crm_party
          left outer join crm_party_locale_information on
            crm_party.organization_id = crm_party_locale_information.organization_id
            AND crm_party.party_id = crm_party_locale_information.party_id
            AND crm_party_locale_information.primary_flag = ?
        where
          hrs_employee.organization_id = ?
          AND hrs_employee.organization_id = crm_party.organization_id
          AND hrs_employee.party_id = crm_party.party_id
          AND crm_party.party_id <> 0
    ]]></Statement>
      <Parameter name="argPrimaryAddress" />
      <Parameter name="argOrganizationId" />
      <Expression trigger="argemployeeId"><![CDATA[hrs_employee.employee_id = ?]]></Expression>
      <Expression parameters="argfirstName%" trigger="argfirstName"><![CDATA[/*UPPER*/ first_name like ?]]></Expression>
      <Expression parameters="arglastName%" trigger="arglastName"><![CDATA[/*UPPER*/ last_name like ?]]></Expression>
      <Expression trigger="argretailLocationId"><![CDATA[exists (
          select * from hrs_employee_store
          where
            hrs_employee.organization_id = hrs_employee_store.organization_id
            AND hrs_employee.employee_id = hrs_employee_store.employee_id
            AND hrs_employee_store.rtl_loc_id = ?)]]></Expression>
      <Expression parameters="argotherRetailLocationId, argBusinessDate, argBusinessDate" trigger="argotherRetailLocationId"><![CDATA[NOT EXISTS (
          Select * From hrs_employee_store
          Where hrs_employee.organization_id = hrs_employee_store.organization_id
            And hrs_employee.employee_id = hrs_employee_store.employee_id
            And hrs_employee_store.rtl_loc_id = ?
            And (hrs_employee_store.begin_date Is Null OR hrs_employee_store.begin_date <= ?)
            And (hrs_employee_store.end_date Is Null OR hrs_employee_store.end_date >= ? ))]]></Expression>
      <Expression trigger="argterminated"><![CDATA[/*UPPER*/ hrs_employee.employee_statcode = ?]]></Expression>
      <Expression trigger="argnotterminated"><![CDATA[(hrs_employee.employee_statcode is not null AND /*UPPER*/ hrs_employee.employee_statcode <> ?)]]></Expression>
    </SQL>
    <Property>
      <Key dtype="String">MaxRows</Key>
      <Value dtype="String"><![CDATA[50]]></Value>
    </Property>
  </Query>

  <Query name="EMPLOYEE_SCHEDULED_SEARCH" pmType="EMPLOYEE">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.query.results.EmployeeSearchResult</ResultClass>
    <ResultField name="OrganizationId" type="Long" />
    <ResultField name="EmployeeId" type="String" />
    <ResultField name="FirstName" type="String" />
    <ResultField name="LastName" type="String" />
    <ResultField name="ClockedIn" type="Boolean" />
    <SQL>
      <Statement dtype="String"><![CDATA[
        select
          hrs_employee.organization_id as organization_id,
          hrs_employee.employee_id as employee_id,
          crm_party.first_name as first_name,
          crm_party.last_name as last_name,
          hrs_employee.clocked_in_flag as clocked_in_flag
        from 
          hrs_employee,
          crm_party
        where
          hrs_employee.organization_id = ?
          AND hrs_employee.organization_id = crm_party.organization_id
          AND hrs_employee.party_id = crm_party.party_id
          AND crm_party.party_id <> 0
    ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Expression parameters="argScheduleStartDate, argScheduleEndDate" trigger="argScheduleStartDate"><![CDATA[(exists (
          SELECT * FROM sch_schedule
          WHERE hrs_employee.organization_id = sch_schedule.organization_id
          AND hrs_employee.employee_id = sch_schedule.employee_id
          AND sch_schedule.business_date >= ?
          AND sch_schedule.business_date <= ?
          AND (sch_schedule.void_flag IS NULL OR sch_schedule.void_flag = 0))
          or hrs_employee.clocked_in_flag = 1)]]></Expression>
      <Expression trigger="argretailLocationId"><![CDATA[exists (
          select * from hrs_employee_store
          where
            hrs_employee.organization_id = hrs_employee_store.organization_id
            AND hrs_employee.employee_id = hrs_employee_store.employee_id
            AND hrs_employee_store.rtl_loc_id = ?)]]></Expression>
    </SQL>
  </Query>

  <Query name="EMPLOYEE_TASKS">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.hrs.EmployeeTaskId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[        
          WHERE t.organization_id = ?
            AND t.rtl_loc_id = ?
            AND t.void_flag = 0        
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
      <Expression trigger="argTaskType"><![CDATA[/*UPPER*/ t.typcode = ?]]></Expression>
      <Expression parameters="%argTaskTitle%" trigger="argTaskTitle"><![CDATA[/*UPPER*/ t.title LIKE ?]]></Expression>
      <Expression parameters="%argDescription%" trigger="argDescription"><![CDATA[/*UPPER*/ t.description LIKE ?]]></Expression>
      <Expression trigger="argVisibility"><![CDATA[/*UPPER*/ t.visibility = ?]]></Expression>
      <Expression trigger="argStatusCode"><![CDATA[/*UPPER*/ t.status_code = ?]]></Expression>
      <Expression trigger="argStartDate"><![CDATA[t.start_date <= ?]]></Expression>
      <Expression trigger="argEmployeeGroup"><![CDATA[(/*UPPER*/ visibility = 'STORE' OR (/*UPPER*/ visibility = 'EMPLOYEE_GROUP' AND /*UPPER*/ assignment_id = ?))]]></Expression>
      <Expression trigger="argGrouplessEmployeeId"><![CDATA[(/*UPPER*/ visibility = 'STORE' OR (/*UPPER*/ visibility = 'EMPLOYEE' AND /*UPPER*/ assignment_id = ?))]]></Expression>
      <Expression parameters="argSpecificEmployeeGroup, argEmployeeId" trigger="argEmployeeId"><![CDATA[(/*UPPER*/ visibility = 'STORE' OR (/*UPPER*/ visibility = 'EMPLOYEE_GROUP' AND /*UPPER*/ assignment_id = ?) OR (/*UPPER*/ visibility = 'EMPLOYEE' AND /*UPPER*/ assignment_id = ?))]]></Expression>
    </SQL>
  </Query>

  <Query name="EXISTING_SESSIONS_FOR_DATE" pmType="SESSIONS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.tsn.impl.SessionModel</ResultClass>
    <ResultField name="SessionId" />
    <SQL>
      <Statement dtype="String"><![CDATA[        
          SELECT session_id
            FROM tsn_session JOIN tsn_tndr_repository rep 
              ON tsn_session.organization_id = rep.organization_id 
             AND tsn_session.rtl_loc_id = rep.rtl_loc_id
             AND /*UPPER*/ tsn_session.tndr_repository_id = rep.tndr_repository_id 
           WHERE /*UPPER*/ rep.typcode = 'STOREBANK'
             AND /*UPPER*/ tsn_session.statcode = 'BEGINCOUNT'
             AND tsn_session.organization_id = ?
             AND tsn_session.rtl_loc_id = ?
           UNION
          SELECT session_id
            FROM tsn_session JOIN tsn_tndr_repository rep
              ON tsn_session.organization_id = rep.organization_id 
             AND tsn_session.rtl_loc_id = rep.rtl_loc_id
             AND /*UPPER*/ tsn_session.tndr_repository_id = rep.tndr_repository_id
           WHERE /*UPPER*/ rep.typcode = 'TILL'
             AND tsn_session.organization_id = ?
             AND tsn_session.rtl_loc_id = ?
             AND tsn_session.business_date = ?        
      ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
      <Parameter name="argBusinessDate" />
    </SQL>
  </Query>

  <Query name="EXTENT">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <SQL>
      <WhereClause dtype="String"><![CDATA[ WHERE organization_id = ? 
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Expression trigger="argCodeCategory"><![CDATA[category = ?]]></Expression>
    </SQL>
  </Query>

  <Query name="FLASH_SALES_ALL_WKSTN" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.query.results.FlashSalesResult</ResultClass>
    <ResultField name="LineEnum" />
    <ResultField name="LineCount" />
    <ResultField name="LineAmount" />
    <ResultField name="ForeignAmount" />
    <SQL>
      <Statement dtype="String"><![CDATA[
        SELECT
          line_enum AS LineEnum,
          ABS(SUM(line_count)) AS LineCount,
          SUM(line_amt) AS LineAmount,
          SUM(foreign_amt) AS ForeignAmount
        FROM rpt_flash_sales
        WHERE organization_id = ? AND rtl_loc_id = ? AND business_date = ?
        GROUP BY line_enum

        UNION
        SELECT
          'SalesLastYear' AS LineEnum,
          ABS(SUM(line_count)) AS LineCount,
          SUM(line_amt) AS LineAmount,
          SUM(foreign_amt) AS ForeignAmount
        FROM rpt_flash_sales
        WHERE organization_id = ? AND rtl_loc_id = ?
          AND business_date = ? AND line_enum = /*UPPER*/ 'NetSales'

        UNION
        SELECT
          'SalesGoal' AS LineEnum,
          0 AS LineCount,
          sales_goal AS LineAmount,
          0 AS ForeignAmount
        FROM rpt_flash_sales_goal
        WHERE organization_id = ? AND rtl_loc_id = ? AND business_date = ?

        ORDER BY LineEnum]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
      <Parameter name="argBusinessDate" />
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
      <Parameter name="argPrevYearBusinessDate" />
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
      <Parameter name="argBusinessDate" />
    </SQL>
  </Query>

  <Query name="FLASH_SALES_ALL_WKSTN_HISTORY" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.query.results.FlashSalesResult</ResultClass>
    <ResultField name="LineEnum" />
    <ResultField name="LineCount" />
    <ResultField name="LineAmount" />
    <ResultField name="ForeignAmount" />
    <SQL>
      <Statement dtype="String"><![CDATA[
        select line_enum, sum(line_count), sum(line_amt), sum(foreign_amt)
        from rpt_flash_sales
        where organization_id = ? and rtl_loc_id = ? and business_date = ?
        group by line_enum
        union select 'SalesLastYear', sum(line_count), sum(line_amt), sum(foreign_amt)
        from rpt_flash_sales
        where organization_id = ? and rtl_loc_id = ? and business_date = ?
        and line_enum = /*UPPER*/ 'NetSales'
        union select 'SalesGoal', 0, sales_goal, 0
        from rpt_flash_sales_goal
        where organization_id = ? and rtl_loc_id = ? and business_date = ?
        ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
      <Parameter name="argBusinessDate" />
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
      <Parameter name="argPrevYearBusinessDate" />
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
      <Parameter name="argBusinessDate" />
    </SQL>
  </Query>

  <Query name="FLASH_SALES_ALL_WKSTN_HOURLY" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.query.results.FlashSalesResult</ResultClass>
    <ResultField name="Hour" />
    <ResultField name="TransCount" />
    <ResultField name="Qty" />
    <ResultField name="NetSales" />
    <ResultField name="WkstnId" />
    <SQL>
      <Statement dtype="String"><![CDATA[
        SELECT
          hour AS Hour,
          trans_count AS TransCount,
          qty AS Qty,
          net_sales AS NetSales,
          wkstn_id AS WkstnId
        FROM rpt_sales_by_hour
        WHERE organization_id = ? AND rtl_loc_id = ? AND business_date = ?]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
      <Parameter name="argBusinessDate" />
    </SQL>
  </Query>

  <Query name="FLASH_SALES_ALL_WKSTN_HOURLY_HISTORY" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.query.results.FlashSalesResult</ResultClass>
    <ResultField name="Hour" />
    <ResultField name="TransCount" />
    <ResultField name="Qty" />
    <ResultField name="NetSales" />
    <ResultField name="WkstnId" />
    <SQL>
      <Statement dtype="String"><![CDATA[
        select hour, trans_count, qty, net_sales, wkstn_id
        from rpt_sales_by_hour
        where organization_id = ? and rtl_loc_id = ? and business_date = ?
        ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
      <Parameter name="argBusinessDate" />
    </SQL>
  </Query>

  <Query name="FLASH_SALES_RANGE_WKSTN" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.query.results.FlashSalesResult</ResultClass>
    <ResultField name="LineEnum" />
    <ResultField name="LineCount" />
    <ResultField name="LineAmount" />
    <ResultField name="ForeignAmount" />
    <SQL>
      <Statement dtype="String"><![CDATA[
        SELECT
          line_enum AS LineEnum,
          ABS(SUM(line_count)) AS LineCount,
          SUM(line_amt) AS LineAmount,
          SUM(foreign_amt) AS ForeignAmount
        FROM rpt_flash_sales
        WHERE organization_id = ? AND rtl_loc_id = ? AND business_date = ?
          AND wkstn_id BETWEEN ? AND ?
        GROUP BY line_enum
        UNION
        SELECT
          'SalesLastYear' AS LineEnum,
          ABS(SUM(line_count)) AS LineCount,
          SUM(line_amt) AS LineAmount,
          SUM(foreign_amt) AS ForeignAmount
        FROM rpt_flash_sales
        WHERE organization_id = ? AND rtl_loc_id = ? AND business_date = ?
          AND line_enum = /*UPPER*/ 'NetSales' AND wkstn_id BETWEEN ? AND ?
        UNION
        SELECT
          'SalesGoal' AS LineEnum,
          0 AS LineCount,
          sales_goal AS LineAmount,
          0 AS ForeignAmount
        FROM rpt_flash_sales_goal
        WHERE organization_id = ? AND rtl_loc_id = ? AND business_date = ?
        ORDER BY LineEnum]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
      <Parameter name="argBusinessDate" />
      <Parameter name="argWkstnStart" />
      <Parameter name="argWkstnEnd" />
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
      <Parameter name="argPrevYearBusinessDate" />
      <Parameter name="argWkstnStart" />
      <Parameter name="argWkstnEnd" />
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
      <Parameter name="argBusinessDate" />
    </SQL>
  </Query>

  <Query name="FLASH_SALES_RANGE_WKSTN_HISTORY" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.query.results.FlashSalesResult</ResultClass>
    <ResultField name="LineEnum" />
    <ResultField name="LineCount" />
    <ResultField name="LineAmount" />
    <ResultField name="ForeignAmount" />
    <SQL>
      <Statement dtype="String"><![CDATA[
        select line_enum, sum(line_count), sum(line_amt), sum(foreign_amt)
        from rpt_flash_sales
        where organization_id = ? and rtl_loc_id = ?
        and wkstn_id between ? and ? and business_date = ?
        group by line_enum
        union select 'SalesLastYear', sum(line_count), sum(line_amt), sum(foreign_amt)
        from rpt_flash_sales
        where organization_id = ? and rtl_loc_id = ? and business_date = ?
        and line_enum = /*UPPER*/ 'NetSales' and wkstn_id between ? and ?
        union select 'SalesGoal', 0, sales_goal, 0
        from rpt_flash_sales_goal
        where organization_id = ? and rtl_loc_id = ? and business_date = ?
        ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
      <Parameter name="argWkstnStart" />
      <Parameter name="argWkstnEnd" />
      <Parameter name="argBusinessDate" />
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
      <Parameter name="argPrevYearBusinessDate" />
      <Parameter name="argWkstnStart" />
      <Parameter name="argWkstnEnd" />
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
      <Parameter name="argBusinessDate" />
    </SQL>
  </Query>

  <Query name="FLASH_SALES_RANGE_WKSTN_HOURLY" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.query.results.FlashSalesResult</ResultClass>
    <ResultField name="Hour" />
    <ResultField name="TransCount" />
    <ResultField name="Qty" />
    <ResultField name="NetSales" />
    <ResultField name="WkstnId" />
    <SQL>
      <Statement dtype="String"><![CDATA[
        SELECT
          hour AS Hour,
          trans_count AS TransCount,
          qty AS Qty,
          net_sales AS NetSales,
          wkstn_id AS WkstnId
        FROM rpt_sales_by_hour
        WHERE organization_id = ? AND rtl_loc_id = ? AND business_date = ?
          AND wkstn_id BETWEEN ? AND ?
        ORDER BY WkstnId, Hour]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
      <Parameter name="argBusinessDate" />
      <Parameter name="argWkstnStart" />
      <Parameter name="argWkstnEnd" />
    </SQL>
  </Query>

  <Query name="FLASH_SALES_RANGE_WKSTN_HOURLY_HISTORY" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.query.results.FlashSalesResult</ResultClass>
    <ResultField name="Hour" />
    <ResultField name="TransCount" />
    <ResultField name="Qty" />
    <ResultField name="NetSales" />
    <ResultField name="WkstnId" />
    <SQL>
      <Statement dtype="String"><![CDATA[
        select hour, trans_count, qty, net_sales, wkstn_id
        from rpt_sales_by_hour
        where organization_id = ? and rtl_loc_id = ?
        and wkstn_id between ? and ? and business_date = ?
        ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
      <Parameter name="argWkstnStart" />
      <Parameter name="argWkstnEnd" />
      <Parameter name="argBusinessDate" />
    </SQL>
  </Query>

  <Query name="GET_ALL_POSTED_EMPLOYEE" pmType="PAYROLL">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.query.results.TimecardPayrollEmployeeResult</ResultClass>
    <ResultField name="OrganizationId" />
    <ResultField name="PartyId" />
    <ResultField name="EmployeeId" />
    <ResultField name="PayStatus" />
    <SQL>
      <Statement dtype="String"><![CDATA[
          SELECT emp.organization_id, p.party_id, emp.employee_id, emp.employee_pay_status
            FROM thr_payroll p, 
                 hrs_employee emp
           WHERE emp.organization_id = p.organization_id 
             AND emp.party_id = p.party_id 
             AND p.organization_id = ? 
             AND p.rtl_loc_id = ? 
             AND p.business_date Between ? And ?
        ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
      <Parameter name="argStartDate" />
      <Parameter name="argEndDate" />
      <Expression trigger="argPayStatus"><![CDATA[/*UPPER*/ emp.employee_pay_status = ?]]></Expression>
      <Expression parameters="" trigger="argPosted"><![CDATA[/*UPPER*/ p.payroll_status = 'PRE_POST' AND p.posted_date IS NOT NULL]]></Expression>
    </SQL>
  </Query>

  <Query name="GET_PAYROLL_POSTED_DATE_FOR_EMPLOYEE" pmType="PAYROLL">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.query.results.SimplePayrollQueryResult</ResultClass>
    <ResultField name="Date" type="Date" />
    <SQL>
      <Statement dtype="String"><![CDATA[
            select posted_date from thr_payroll
            where organization_id = ? and rtl_loc_id = ? and party_id = ?
                 and posted_date is not null
                 and business_date between ? and ?
        ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argLocId" />
      <Parameter name="argPartyId" />
      <Parameter name="argStartDate" />
      <Parameter name="argEndDate" />
    </SQL>
  </Query>

  <Query name="GET_PAYROLL_REVIEWED_DATE_FOR_EMPLOYEE" pmType="PAYROLL">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.query.results.SimplePayrollQueryResult</ResultClass>
    <ResultField name="Date" type="Date" />
    <SQL>
      <Statement dtype="String"><![CDATA[
            select reviewed_date from thr_payroll a
            where organization_id = ? and rtl_loc_id = ? and party_id = ?
                 and business_date between ? and ?
                 and reviewed_date is not null
            group by a.reviewed_date, a.organization_id, a.rtl_loc_id, a.party_id
            having ((select count(*) from thr_payroll b where
                   a.organization_id = b.organization_id and a.rtl_loc_id = b.rtl_loc_id
                 and a.party_id = b.party_id and b.business_date between ? and ?
                 and reviewed_date is null) < 1)
        ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argLocId" />
      <Parameter name="argPartyId" />
      <Parameter name="argStartDate" />
      <Parameter name="argEndDate" />
      <Parameter name="argStartDate" />
      <Parameter name="argEndDate" />
    </SQL>
  </Query>

  <Query name="INVENTORY_BUCKETS">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.inv.InventoryBucketId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[        
          WHERE t.organization_id = ?
            AND t.rtl_loc_id = ?        
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
      <Expression trigger="argSystemBucketFlag"><![CDATA[system_bucket_flag = ?]]></Expression>
    </SQL>
    <Suffix dtype="String"><![CDATA[ORDER BY t.bucket_id ASC]]></Suffix>
  </Query>

  <Query name="INVENTORY_COUNT_FINAL_RESULTS" pmType="INVENTORY_COUNT">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.pos.inventory.count.VarianceItem</ResultClass>
    <ResultField name="BucketId" type="String" />
    <ResultField name="ItemId" type="String" />
    <ResultField name="Description" type="String" />
    <ResultField name="CountedQuantity" type="BigDecimal" />
    <ResultField name="ControlQuantity" type="BigDecimal" />
    <SQL>
      <Statement dtype="String"><![CDATA[        
          SELECT csl.inv_bucket_id,
                 csl.item_id,
                 csl.description,
                 Sum(COALESCE(csl.quantity, 0)),
                 COALESCE(snap.quantity, 0)
            FROM inv_count_sheet_lineitm csl LEFT OUTER JOIN inv_count_snapshot snap 
              ON csl.organization_id = snap.organization_id
             AND csl.rtl_loc_id = snap.rtl_loc_id
             AND csl.inv_count_id = snap.inv_count_id
             AND /*UPPER*/ csl.inv_bucket_id = snap.inv_bucket_id
             AND /*UPPER*/ csl.item_id = snap.item_id
           WHERE csl.organization_id = ?
             AND csl.rtl_loc_id = ?
             AND csl.inv_count_id = ?
             AND csl.count_cycle = (SELECT Max(csl2.count_cycle) 
                                      FROM inv_count_sheet_lineitm csl2
                                     WHERE csl.organization_id = csl2.organization_id
                                       AND csl.rtl_loc_id = csl2.rtl_loc_id
                                       AND csl.inv_count_id = csl2.inv_count_id
                                       AND /*UPPER*/ csl2.inv_bucket_id = /*UPPER*/ csl.inv_bucket_id
                                       AND /*UPPER*/ csl2.item_id = /*UPPER*/ csl.item_id)        
      ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
      <Parameter name="argCountId" />
      <Expression trigger="argBucketId"><![CDATA[/*UPPER*/ csl.inv_bucket_id = ?]]></Expression>
      <Expression trigger="argItemId"><![CDATA[/*UPPER*/ csl.item_id = ?]]></Expression>
    </SQL>
    <Suffix dtype="String"><![CDATA[GROUP BY csl.inv_count_id, csl.count_cycle, csl.inv_bucket_id, csl.item_id, csl.alternate_id, csl.description, snap.quantity]]></Suffix>
  </Query>

  <Query name="INVENTORY_COUNT_FINAL_VARIANCES" pmType="INVENTORY_COUNT">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.pos.inventory.count.VarianceItem</ResultClass>
    <ResultField name="BucketId" type="String" />
    <ResultField name="ItemId" type="String" />
    <ResultField name="Description" type="String" />
    <ResultField name="CountedQuantity" type="BigDecimal" />
    <ResultField name="ControlQuantity" type="BigDecimal" />
    <SQL>
      <Statement dtype="String"><![CDATA[        
          SELECT csl.inv_bucket_id,
                 csl.item_id,
                 csl.description,
                 Sum(COALESCE(csl.quantity, 0)),
                 COALESCE(snap.quantity, 0)
            FROM inv_count_sheet_lineitm csl LEFT OUTER JOIN inv_count_snapshot snap 
              ON csl.organization_id = snap.organization_id
             AND csl.rtl_loc_id = snap.rtl_loc_id
             AND csl.inv_count_id = snap.inv_count_id
             AND /*UPPER*/ csl.inv_bucket_id = snap.inv_bucket_id
             AND /*UPPER*/ csl.item_id = snap.item_id
           WHERE csl.organization_id = ?
             AND csl.rtl_loc_id = ?
             AND csl.inv_count_id = ?
             AND csl.count_cycle = (SELECT Max(csl2.count_cycle) 
                                      FROM inv_count_sheet_lineitm csl2
                                     WHERE csl.organization_id = csl2.organization_id
                                       AND csl.rtl_loc_id = csl2.rtl_loc_id
                                       AND csl.inv_count_id = csl2.inv_count_id
                                       AND /*UPPER*/ csl2.inv_bucket_id = /*UPPER*/ csl.inv_bucket_id
                                       AND /*UPPER*/ csl2.item_id = /*UPPER*/ csl.item_id)        
      ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
      <Parameter name="argCountId" />
      <Expression trigger="argBucketId"><![CDATA[/*UPPER*/ csl.inv_bucket_id = ?]]></Expression>
      <Expression trigger="argItemId"><![CDATA[/*UPPER*/ csl.item_id = ?]]></Expression>
    </SQL>
    <Suffix dtype="String"><![CDATA[GROUP BY csl.inv_count_id, csl.count_cycle, csl.inv_bucket_id, csl.item_id, csl.alternate_id, csl.description, snap.quantity
          HAVING (Sum(COALESCE(csl.quantity, 0)) <> COALESCE(snap.quantity, 0))]]></Suffix>
  </Query>

  <Query name="INVENTORY_COUNT_INITIATE" pmType="INVENTORY_COUNT">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <SQL>
      <Statement dtype="String"><![CDATA[        
          INSERT INTO inv_count_snapshot (organization_id, rtl_loc_id, item_id, inv_location_id, inv_bucket_id, quantity, snapshot_date, inv_count_id)
          SELECT ?, 
                 rtl_loc_id, 
                 item_id, 
                 inv_location_id, 
                 bucket_id, 
                 unitcount, 
                 ?, 
                 ?
            FROM inv_stock_ledger_acct ledger  
           WHERE ledger.organization_id = ?
             AND ledger.rtl_loc_id = ?
             AND inv_location_id = ?
             AND bucket_id = ?       
      ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argDate" />
      <Parameter name="argCountId" />
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
      <Parameter name="argInvLocationId" />
      <Parameter name="argBucketId" />
      <Expression trigger="@argItemList"><![CDATA[ledger.item_id IN ?]]></Expression>
    </SQL>
  </Query>

  <Query name="INVENTORY_COUNT_LEDGER_ITEMS_NOT_IN_LAYOUT" pmType="ITEM">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.query.results.GenericAggregateResult</ResultClass>
    <ResultField name="AggregateValue" />
    <SQL>
      <Statement dtype="String"><![CDATA[        
          SELECT count(1)
            FROM inv_stock_ledger_acct ledger
           WHERE organization_id = ?
             AND rtl_loc_id = ?
             AND inv_location_id = ?
             AND bucket_id = ?
             AND unitcount <> 0
             AND item_id NOT IN (SELECT item_id
                                   FROM itm_item item
                                  WHERE item.organization_id = ledger.organization_id
                                    AND (/*UPPER*/ merch_level_1 IN ?
                                      OR /*UPPER*/ merch_level_2 IN ?
                                      OR /*UPPER*/ merch_level_3 IN ?
                                      OR /*UPPER*/ merch_level_4 IN ?
                                      OR item_id IN ?))        
      ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
      <Parameter name="argInvLocationId" />
      <Parameter name="argBucketId" />
      <Parameter name="@argMerchlevel1Id" />
      <Parameter name="@argMerchlevel2Id" />
      <Parameter name="@argMerchlevel3Id" />
      <Parameter name="@argMerchlevel4Id" />
      <Parameter name="@argItemId" />
    </SQL>
  </Query>

  <Query name="INVENTORY_COUNT_MERCH_LEVEL_SIZE" pmType="ITEM">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.query.results.GenericAggregateResult</ResultClass>
    <ResultField name="AggregateValue" />
    <SQL>
      <Statement dtype="String"><![CDATA[        
          SELECT count(1)
            FROM itm_item
           WHERE organization_id = ?         
      ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Expression trigger="argMerchlevel1Id"><![CDATA[/*UPPER*/ merch_level_1 = ?]]></Expression>
      <Expression trigger="argMerchlevel2Id"><![CDATA[/*UPPER*/ merch_level_2 = ?]]></Expression>
      <Expression trigger="argMerchlevel3Id"><![CDATA[/*UPPER*/ merch_level_3 = ?]]></Expression>
      <Expression trigger="argMerchlevel4Id"><![CDATA[/*UPPER*/ merch_level_4 = ?]]></Expression>
    </SQL>
  </Query>

  <Query name="INVENTORY_COUNT_MISSING_SNAPSHOT_ITEMS" pmType="INVENTORY_COUNT">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.pos.inventory.count.VarianceItem</ResultClass>
    <ResultField name="BucketId" type="String" />
    <ResultField name="ItemId" type="String" />
    <ResultField name="AlternateId" type="String" />
    <ResultField name="Description" type="String" />
    <ResultField name="CountedQuantity" type="BigDecimal" />
    <ResultField name="ControlQuantity" type="BigDecimal" />
    <SQL>
      <Statement dtype="String"><![CDATA[        
          SELECT snap.inv_bucket_id,
                 snap.item_id,
                 item.parent_item_id,
                 COALESCE(item.description, item.name),
                 0.0,
                 snap.quantity
            FROM inv_count_snapshot snap, itm_item item
           WHERE snap.organization_id = item.organization_id
             AND snap.item_id = item.item_id
             AND snap.organization_id = ?
             AND snap.rtl_loc_id = ?
             AND snap.inv_count_id = ?
             AND snap.inv_bucket_id = ?
             AND snap.item_id NOT IN (SELECT /*UPPER*/ item_id
                                        FROM inv_count_sheet_lineitm csl
                                       WHERE csl.organization_id = snap.organization_id
                                         AND csl.rtl_loc_id = snap.rtl_loc_id
                                         AND csl.inv_count_id = snap.inv_count_id
                                         AND /*UPPER*/ csl.inv_bucket_id = snap.inv_bucket_id
                                         AND /*UPPER*/ csl.item_id = snap.item_id
                                         AND csl.count_cycle = ?)        
      ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
      <Parameter name="argCountId" />
      <Parameter name="argBucketId" />
      <Parameter name="argCountCycle" />
    </SQL>
  </Query>

  <Query name="INVENTORY_COUNT_PREVIOUS_MATCHED_ITEMS" pmType="INVENTORY_COUNT">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.pos.inventory.count.ComparableCountItem</ResultClass>
    <ResultField name="InventoryCountId" type="String" />
    <ResultField name="InventoryBucketId" type="String" />
    <ResultField name="ItemId" type="String" />
    <ResultField name="Description" type="String" />
    <ResultField name="Quantity" type="BigDecimal" />
    <SQL>
      <Statement dtype="String"><![CDATA[        
          SELECT csl.inv_count_id,
                 csl.inv_bucket_id,
                 csl.item_id,
                 csl.description,
                 Sum(COALESCE(csl.quantity, 0)) as total
            FROM inv_count_sheet_lineitm csl
           WHERE csl.organization_id = ?
             AND csl.rtl_loc_id = ?
             AND csl.inv_count_id = ?
             AND csl.count_cycle = ?
             AND /*UPPER*/ csl.inv_bucket_id = ?
          GROUP BY csl.organization_id, csl.rtl_loc_id, csl.inv_count_id, csl.count_cycle, csl.inv_bucket_id, csl.item_id, csl.alternate_id, csl.description
          HAVING (Sum(COALESCE(csl.quantity, 0)) = (SELECT SUM(COALESCE(quantity, 0))
                             FROM inv_count_sheet_lineitm csl2
                            WHERE csl.organization_id = csl2.organization_id
                              AND csl.rtl_loc_id = csl2.rtl_loc_id
                              AND csl.inv_count_id = csl2.inv_count_id
                              AND /*UPPER*/ csl.inv_bucket_id = /*UPPER*/ csl2.inv_bucket_id
                              AND /*UPPER*/ csl.item_id = /*UPPER*/ csl2.item_id
                              AND csl2.count_cycle = ?))        
      ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
      <Parameter name="argCountId" />
      <Parameter name="argCountCycle" />
      <Parameter name="argBucketId" />
      <Parameter name="argCompareCycle" />
    </SQL>
  </Query>

  <Query name="INVENTORY_COUNT_SEARCH" pmType="INVENTORY_COUNT">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.pos.inventory.count.InventoryCountResult</ResultClass>
    <ResultField name="RetailLocationId" type="Long" />
    <ResultField name="InventoryCountId" type="String" />
    <ResultField name="TypeCode" type="String" />
    <ResultField name="BeginDate" type="Date" />
    <ResultField name="CountStatus" type="String" />
    <ResultField name="StoreCreated" type="Boolean" />
    <ResultField name="Description" type="String" />
    <SQL>
      <Statement dtype="String"><![CDATA[        
          SELECT rtl_loc_id,
                 inv_count_id,
                 inv_count_typcode,
                 begin_date,
                 count_status,
                 store_created_flag,
                 description
            FROM inv_count
           WHERE organization_id = ?
             AND rtl_loc_id = ?
             AND void_flag = ?
      ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
      <Parameter name="argVoidFlag" />
      <Expression trigger="argCountId"><![CDATA[inv_count_id = ?]]></Expression>
      <Expression trigger="argBeginDate"><![CDATA[begin_date = ?]]></Expression>
      <Expression trigger="argCountType"><![CDATA[/*UPPER*/ inv_count_typcode = ?]]></Expression>
      <Expression trigger="@argCountStatus"><![CDATA[/*UPPER*/ count_status IN ?]]></Expression>
      <Expression trigger="@argInvCountTypeCode"><![CDATA[/*UPPER*/ inv_count_typcode IN ?]]></Expression>
    </SQL>
  </Query>

  <Query name="INVENTORY_COUNT_SECTIONS">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.inv.InventoryCountSectionId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[        
          WHERE organization_id = ?
            AND rtl_loc_id = ?        
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
      <Expression trigger="argInventoryBucketId"><![CDATA[inv_bucket_id = ?]]></Expression>
    </SQL>
    <Suffix dtype="String"><![CDATA[ORDER BY inv_bucket_id, sort_order]]></Suffix>
  </Query>

  <Query name="INVENTORY_COUNT_SECTION_SIZE" pmType="ITEM">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.query.results.GenericAggregateResult</ResultClass>
    <ResultField name="AggregateValue" />
    <SQL>
      <Statement dtype="String"><![CDATA[        
          SELECT count(*)
            FROM itm_item
           WHERE organization_id = ? 
             AND (/*UPPER*/ merch_level_1 IN ?
               OR /*UPPER*/ merch_level_2 IN ?
               OR /*UPPER*/ merch_level_3 IN ?
               OR /*UPPER*/ merch_level_4 IN ?
               OR item_id IN ?)        
      ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="@argMerchlevel1Id" />
      <Parameter name="@argMerchlevel2Id" />
      <Parameter name="@argMerchlevel3Id" />
      <Parameter name="@argMerchlevel4Id" />
      <Parameter name="@argItemId" />
    </SQL>
  </Query>

  <Query name="INVENTORY_COUNT_SHEETS" pmType="INVENTORY_COUNT">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.inv.impl.InventoryCountSheetResult</ResultClass>
    <ResultField name="OrganizationId" type="Long" />
    <ResultField name="RetailLocationId" type="Long" />
    <ResultField name="CountId" type="String" />
    <ResultField name="CountCycle" type="Integer" />
    <ResultField name="CountSheetNumber" type="Integer" />
    <ResultField name="InventoryBucketId" type="String" />
    <ResultField name="InventoryBucketName" type="String" />
    <ResultField name="SectionId" type="String" />
    <ResultField name="SheetStatus" type="String" />
    <SQL>
      <Statement dtype="String"><![CDATA[        
          SELECT organization_id,
                 rtl_loc_id,
                 inv_count_id,
                 count_cycle,
                 count_sheet_nbr,
                 inv_bucket_id,
                 inv_bucket_name,
                 section_id,
                 sheet_status
            FROM inv_count_sheet
           WHERE organization_id = ?
             AND rtl_loc_id = ?
             AND inv_count_id = ?        
      ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
      <Parameter name="argCountId" />
      <Expression trigger="argBucketId"><![CDATA[/*UPPER*/ inv_bucket_id = ?]]></Expression>
      <Expression trigger="argSheetStatus"><![CDATA[/*UPPER*/ sheet_status = ?]]></Expression>
      <Expression trigger="argCheckedOutFlag"><![CDATA[checked_out_flag = ?]]></Expression>
    </SQL>
  </Query>

  <Query name="INVENTORY_COUNT_SHEET_ITEMS" pmType="INVENTORY_COUNT">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultFilter dtype="String">levelCodeLevelValueResultFilter</ResultFilter>
    <ResultClass dtype="String">dtv.pos.inventory.count.CountItemQueryResult</ResultClass>
    <ResultField name="ItemId" type="String" />
    <ResultField name="Description" type="String" />
    <ResultField name="ParentItemId" type="String" />
    <ResultField name="AvailabilityCode" type="String" />
    <ResultField name="ItemLevelCode" type="String" />
    <ResultField name="NotInventoried" type="Boolean" />
    <ResultField name="TypeCode" type="String" />
    <ResultField name="StockStatus" type="String" />
    <ResultField name="LevelCode" type="String" />
    <ResultField name="LevelValue" type="String" />
    <SQL>
      <Statement dtype="String"><![CDATA[        
          SELECT item.item_id, 
                 item.description, 
                 item.parent_item_id, 
                 opt.item_availability_code, 
                 item.item_lvlcode, 
                 item.not_inventoried_flag, 
                 item.item_typcode, 
                 opt.stock_status,
                 opt.level_code,
                 opt.level_value
            FROM itm_item item JOIN itm_item_options opt ON item.organization_id = opt.organization_id and item.item_id = opt.item_id
           WHERE item.organization_id = ?
             AND /*UPPER*/ item.item_lvlcode <> 'STYLE'        
      ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Expression trigger="argMerchLevel1"><![CDATA[/*UPPER*/ item.merch_level_1 = ?]]></Expression>
      <Expression trigger="argMerchLevel2"><![CDATA[/*UPPER*/ item.merch_level_2 = ?]]></Expression>
      <Expression trigger="argMerchLevel3"><![CDATA[/*UPPER*/ item.merch_level_3 = ?]]></Expression>
      <Expression trigger="argMerchLevel4"><![CDATA[/*UPPER*/ item.merch_level_4 = ?]]></Expression>
      <Expression trigger="argItemId"><![CDATA[item.item_id = ?]]></Expression>
      <Expression trigger="argNonInventoried"><![CDATA[item.not_inventoried_flag = ?]]></Expression>
    </SQL>
  </Query>

  <Query name="INVENTORY_COUNT_SNAPSHOT_VARIANCES" pmType="INVENTORY_COUNT">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.pos.inventory.count.VarianceItem</ResultClass>
    <ResultField name="BucketId" type="String" />
    <ResultField name="ItemId" type="String" />
    <ResultField name="AlternateId" type="String" />
    <ResultField name="Description" type="String" />
    <ResultField name="CountedQuantity" type="BigDecimal" />
    <ResultField name="ControlQuantity" type="BigDecimal" />
    <SQL>
      <Statement dtype="String"><![CDATA[        
          SELECT csl.inv_bucket_id,
                 csl.item_id,
                 csl.alternate_id,
                 csl.description,
                 Sum(COALESCE(csl.quantity, 0)) as total,
                 COALESCE(snap.quantity, 0)
            FROM inv_count_sheet_lineitm csl LEFT OUTER JOIN inv_count_snapshot snap
              ON csl.organization_id = snap.organization_id
             AND csl.rtl_loc_id = snap.rtl_loc_id
             AND csl.inv_count_id = snap.inv_count_id
             AND /*UPPER*/ csl.inv_bucket_id = snap.inv_bucket_id
             AND /*UPPER*/ csl.item_id = snap.item_id
           WHERE csl.organization_id = ?
             AND csl.rtl_loc_id = ?
             AND csl.inv_count_id = ?
             AND csl.count_cycle = ?
             AND /*UPPER*/ csl.inv_bucket_id = ?
          GROUP BY csl.inv_count_id, csl.count_cycle, csl.inv_bucket_id, csl.item_id, csl.alternate_id, csl.description, snap.quantity 
          HAVING (Sum(COALESCE(csl.quantity, 0)) <> COALESCE(snap.quantity, 0))        
      ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
      <Parameter name="argCountId" />
      <Parameter name="argCountCycle" />
      <Parameter name="argBucketId" />
    </SQL>
  </Query>

  <Query name="INVENTORY_COUNT_UPDATE_SHEET_STATUS" pmType="INVENTORY_COUNT">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <SQL>
      <Statement dtype="String"><![CDATA[        
          UPDATE inv_count_sheet
             SET sheet_status = ?,
                 checked_out_flag = ?
           WHERE organization_id = ?
             AND rtl_loc_id = ?
             AND inv_count_id = ?
             AND count_sheet_nbr = ?        
      ]]></Statement>
      <Parameter name="argSheetStatus" />
      <Parameter name="argCheckedOutFlag" />
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
      <Parameter name="argCountId" />
      <Parameter name="argSheetNumber" />
    </SQL>
  </Query>

  <Query name="INVENTORY_ITEM_TRANSFER" pmType="STOCK_LEDGER">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.query.results.InventoryItemTransferResult</ResultClass>
    <ResultField name="ItemId" type="String" />
    <ResultField name="ItemDescription" type="String" />
    <ResultField name="CurrentQuantity" type="BigDecimal" />
    <ResultField name="SerializedItem" type="Boolean" />
    <ResultField name="SerialNumber" type="String" />
    <SQL>
      <Statement dtype="String"><![CDATA[
        SELECT item.item_id,
               item.description,
               COALESCE(sl.unitcount, 0),
               item.serialized_item_flag,
               null
          FROM itm_item item, inv_stock_ledger_acct sl
         WHERE item.organization_id = ?
           AND item.serialized_item_flag != ?
           AND sl.organization_id = item.organization_id 
           AND sl.item_id = item.item_id 
           AND item.item_id=?
           AND sl.rtl_loc_id = ?
           AND sl.inv_location_id = ?
           AND sl.bucket_id = ?
           AND COALESCE(sl.unitcount, 0) > 0
        UNION
        SELECT item.item_id,
               item.description,
               1,
               item.serialized_item_flag,
               sl.serial_nbr
          FROM itm_item item, inv_serialized_stock_ledger sl
         WHERE item.organization_id = ?
           AND item.serialized_item_flag = ?
           AND sl.organization_id = item.organization_id 
           AND sl.item_id = item.item_id 
           AND item.item_id=?
           AND sl.rtl_loc_id = ?
           AND sl.inv_location_id = ?
           AND sl.bucket_id = ?
      ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argSerializedItemFlag" />
      <Parameter name="argItemId" />
      <Parameter name="argRetailLocationId" />
      <Parameter name="argInvLocationId" />
      <Parameter name="argBucketId" />
      <Parameter name="argOrganizationId" />
      <Parameter name="argSerializedItemFlag" />
      <Parameter name="argItemId" />
      <Parameter name="argRetailLocationId" />
      <Parameter name="argInvLocationId" />
      <Parameter name="argBucketId" />
    </SQL>
    <Suffix dtype="String"><![CDATA[ORDER BY 1 ASC]]></Suffix>
  </Query>

  <Query name="INVENTORY_JOURNAL">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.inv.InventoryJournalId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[        
          WHERE t.organization_id = ?
            AND t.rtl_loc_id = ?        
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
      <Expression trigger="argTransactionSequence"><![CDATA[t.trans_seq = ?]]></Expression>
      <Expression trigger="argWorkstationId"><![CDATA[t.wkstn_id = ?]]></Expression>
    </SQL>
  </Query>

  <Query name="INVENTORY_LOCATION_BUCKETS">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.inv.InventoryLocationBucketId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[        
          WHERE t.organization_id = ?
            AND t.rtl_loc_id = ?        
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
    </SQL>
    <Suffix dtype="String"><![CDATA[ORDER BY t.location_id ASC]]></Suffix>
  </Query>

  <Query name="INVENTORY_SHIPPER">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.inv.ShipperId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[        
          WHERE t.organization_id = ?
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Expression trigger="argShipperId"><![CDATA[t.shipper_id = ?]]></Expression>
    </SQL>
    <Suffix dtype="String"><![CDATA[ORDER BY t.display_order ASC]]></Suffix>
  </Query>

  <Query name="INVENTORY_SHIPPER_METHOD">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.inv.ShipperMethodId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[        
          WHERE t.organization_id = ?
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Expression trigger="argShipperMethodId"><![CDATA[t.shipper_method_id = ?]]></Expression>
    </SQL>
    <Suffix dtype="String"><![CDATA[ORDER BY t.display_order ASC]]></Suffix>
  </Query>

  <Query name="INVENTORY_LOCATION_SEARCH">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.inv.InventoryLocationId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[        
          WHERE t.organization_id = ?
            AND t.rtl_loc_id = ?        
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
      <Expression parameters="argLocationId%" trigger="argLocationId"><![CDATA[t.inv_location_id LIKE ?]]></Expression>
      <Expression parameters="argLocationDescription%" trigger="argLocationDescription"><![CDATA[/*UPPER*/ t.name LIKE ?]]></Expression>
      <Expression trigger="argActiveFlag"><![CDATA[t.active_flag = ?]]></Expression>
      <Expression trigger="argBucketId"><![CDATA[inv_location_id IN 
            (SELECT location_id 
               FROM inv_location_bucket 
              WHERE organization_id = t.organization_id 
                AND rtl_loc_id = t.rtl_loc_id 
                AND location_id = t.inv_location_id 
                AND bucket_id = ?)]]></Expression>
      <Expression trigger="@argInventoryBuckets"><![CDATA[inv_location_id IN 
            (SELECT location_id 
               FROM inv_location_bucket 
              WHERE organization_id = t.organization_id 
                AND rtl_loc_id = t.rtl_loc_id 
                AND location_id = t.inv_location_id 
                AND bucket_id IN ?)]]></Expression>
    </SQL>
    <Suffix dtype="String"><![CDATA[ORDER BY t.inv_location_id ASC]]></Suffix>
  </Query>

  <Query name="INVENTORY_LOCATION_SUMMARY_COUNT" pmType="STOCK_LEDGER">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.query.results.InventoryLocationSummaryCountResult</ResultClass>
    <ResultField name="LocationId" type="String" />
    <ResultField name="BucketId" type="String" />
    <ResultField name="SystemCount" type="BigDecimal" />
    <SQL>
      <Statement dtype="String"><![CDATA[
        SELECT lb.location_id, 
               lb.bucket_id, 
               (SELECT COALESCE(Sum(unitcount), 0)
                  FROM inv_stock_ledger_acct sl 
                 WHERE sl.organization_id = lb.organization_id 
                   AND sl.rtl_loc_id = lb.rtl_loc_id 
                   AND sl.inv_location_id = lb.location_id 
                   AND sl.bucket_id = lb.bucket_id)
          FROM inv_location_bucket lb, inv_location loc
         WHERE lb.organization_id = loc.organization_id
           AND lb.rtl_loc_id = loc.rtl_loc_id 
           AND lb.location_id = loc.inv_location_id
           AND lb.organization_id = ?
           AND lb.rtl_loc_id = ?
           AND loc.active_flag = ?
      ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
      <Parameter name="argActiveFlag" />
    </SQL>
    <Suffix dtype="String"><![CDATA[ORDER BY lb.location_id ASC]]></Suffix>
  </Query>

  <Query name="INVENTORY_LOCATOR_CENTRAL" pmType="INVENTORY_CENTRAL">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">oracle.retail.xstore.inv.impl.lookup.resp.AvailableLocResult</ResultClass>
    <ResultField name="LocationId" type="Long" />
    <ResultField name="ItemId" type="String" />
    <ResultField name="AvailableQuantity" type="Long" />
    <ResultField name="LocationName" type="String" />
    <ResultField name="EmailAddress" type="String" />
    <ResultField name="Address1" type="String" />
    <ResultField name="Address2" type="String" />
    <ResultField name="Address3" type="String" />
    <ResultField name="Address4" type="String" />
    <ResultField name="City" type="String" />
    <ResultField name="Neighborhood" type="String" />
    <ResultField name="County" type="String" />
    <ResultField name="State" type="String" />
    <ResultField name="PostalCode" type="String" />
    <ResultField name="Country" type="String" />
    <ResultField name="Telephone" type="String" />
    <ResultField name="LocationLatitude" type="BigDecimal" />
    <ResultField name="LocationLongitude" type="BigDecimal" />
    <ResultField name="StoreManager" type="String" />
    <SQL>
      <Statement dtype="String"><![CDATA[
        SELECT store.rtl_loc_id, item.item_id, ledger.unitcount, store.store_name, 
               store.email_addr, store.address1, store.address2, store.address3, store.address4, store.city,
               store.neighborhood, store.county, store.state, store.postal_code, store.country,
               store.telephone1, store.latitude, store.longitude, store.store_manager
        FROM loc_rtl_loc store 
             JOIN itm_item item ON store.organization_id = item.organization_id
             LEFT OUTER JOIN inv_stock_ledger_acct ledger ON store.organization_id = ledger.organization_id 
                  AND store.rtl_loc_id = ledger.rtl_loc_id
                  AND item.organization_id = ledger.organization_id
                  AND item.item_id = ledger.item_id
                  AND ledger.inv_location_id = ?
                  AND ledger.bucket_id = ?
        WHERE store.organization_id = ?
      ]]></Statement>
      <Parameter name="argInventoryLocationId" />
      <Parameter name="argBucketId" />
      <Parameter name="argOrganizationId" />
      <Expression trigger="argItemId"><![CDATA[item.item_id = ?]]></Expression>
      <Expression trigger="argStyleId"><![CDATA[/*UPPER*/ item.parent_item_id = ?]]></Expression>
      <Expression trigger="argMinQuantity"><![CDATA[ledger.unitcount >= ?]]></Expression>
      <Expression trigger="argMinLatitude"><![CDATA[store.latitude >= ?]]></Expression>
      <Expression trigger="argMaxLatitude"><![CDATA[store.latitude <= ?]]></Expression>
      <Expression trigger="argMinLongitude"><![CDATA[store.longitude >= ?]]></Expression>
      <Expression trigger="argMaxLongitude"><![CDATA[store.longitude <= ?]]></Expression>
    </SQL>
    <Property>
      <Key dtype="String">MaxRows</Key>
      <Value dtype="String"><![CDATA[200]]></Value>
    </Property>
  </Query>

  <Query name="INVENTORY_MOVEMENT_PENDING_RECONCILIATION">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.inv.InventoryMovementPendingId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[        
          WHERE t.organization_id = ?
            AND t.rtl_loc_id = ?
            AND (t.void_flag = ? OR t.void_flag IS NULL)        
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
      <Parameter name="argVoidFlag" />
      <Expression trigger="argReconciledFlag"><![CDATA[t.reconciled_flag = ?]]></Expression>
      <Expression trigger="argTransactionSequence"><![CDATA[t.trans_seq = ?]]></Expression>
    </SQL>
    <Suffix dtype="String"><![CDATA[ORDER BY t.business_date DESC, t.trans_seq DESC, t.trans_lineitm_seq ASC]]></Suffix>
  </Query>

  <Query name="INVENTORY_TRANSFER_LOCATIONS">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.inv.InventoryLocationId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[        
          WHERE t.organization_id = ?
            AND t.rtl_loc_id = ?
            AND t.active_flag = ?        
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
      <Parameter name="argActiveFlag" />
      <Expression trigger="argAvailabilityCode"><![CDATA[t.organization_id = avail.organization_id
            AND t.rtl_loc_id = avail.rtl_loc_id
            AND t.inv_location_id = avail.location_id
            AND avail.availability_code = ?]]></Expression>
    </SQL>
    <Property>
      <Key dtype="String">Tables.argAvailabilityCode</Key>
      <Value dtype="String"><![CDATA[inv_location_availability avail]]></Value>
    </Property>
    <Suffix dtype="String"><![CDATA[ORDER BY t.inv_location_id ASC]]></Suffix>
  </Query>

  <Query name="INVENTORY_VALID_DESTINATIONS">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.inv.InventoryValidDestinationsId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[        
          WHERE organization_id = ?
          AND document_typcode = ?
          AND document_subtypcode = ?        
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Parameter name="argDocType" />
      <Parameter name="argDocSubType" />
      <Expression trigger="argRetailLocationId"><![CDATA[rtl_loc_id = ?]]></Expression>
      <Expression trigger="argDestinationType"><![CDATA[destination_type_enum = ?]]></Expression>
    </SQL>
    <Suffix dtype="String"><![CDATA[ORDER BY destination_id ASC]]></Suffix>
  </Query>

  <Query name="INVOICE_LINE_LOOKUP" pmType="CUSTOMER_ACCOUNT">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.query.results.InvoiceSearchResult</ResultClass>
    <ResultField name="OrganizationId" type="Long" />
    <ResultField name="Description" type="String" />
    <ResultField name="InvoiceNumber" type="String" />
    <ResultField name="InvoiceDate" type="Date" />
    <ResultField name="TotalAmountDue" type="BigDecimal" />
    <ResultField name="InvoiceLineItemSeq" type="Integer" />
    <ResultField name="GlAccount" type="String" />
    <ResultField name="LineItemAmount" type="BigDecimal" />
    <ResultField name="CustAccountId" type="String" />
    <ResultField name="ServiceLocationId" type="String" />
    <SQL>
      <Statement dtype="String"><![CDATA[ 
        SELECT i.organization_id, s.description, i.invoice_number, i.invoice_date, i.amount_due, l.invoice_lineitm_seq, 
          l.gl_account, l.amt, l.cust_acct_id, i.service_loc_id
        FROM cwo_invoice i
        LEFT JOIN cwo_invoice_lineitm l ON
          i.organization_id = l.organization_id AND
          i.invoice_number = l.invoice_number AND
          i.service_loc_id = l.service_loc_id
        LEFT JOIN cwo_service_loc s ON
          i.organization_id = s.organization_id AND
          i.service_loc_id = s.service_loc_id
        WHERE i.organization_id = ?
          AND i.service_loc_id = ?
          AND i.invoice_number = ?
        ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argServiceLocationId" />
      <Parameter name="argInvoiceNumber" />
    </SQL>
    <Suffix dtype="String"><![CDATA[ORDER BY l.invoice_lineitm_seq]]></Suffix>
  </Query>

  <Query name="INVOICE_LOOKUP" pmType="CUSTOMER_ACCOUNT">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.query.results.InvoiceSearchResult</ResultClass>
    <ResultField name="OrganizationId" type="Long" />
    <ResultField name="Description" type="String" />
    <ResultField name="InvoiceNumber" type="String" />
    <ResultField name="InvoiceDate" type="Date" />
    <ResultField name="TotalAmountDue" type="BigDecimal" />
    <ResultField name="ServiceLocationId" type="String" />
    <SQL>
      <Statement dtype="String"><![CDATA[ 
        SELECT s.organization_id, s.description, i.invoice_number, i.invoice_date, 
          i.amount_due, i.service_loc_id
        FROM cwo_invoice i
        LEFT JOIN cwo_service_loc s ON
          i.organization_id = s.organization_id AND
          i.service_loc_id = s.service_loc_id
        WHERE i.organization_id = ?
          AND i.service_loc_id = ?
        ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argServiceLocationId" />
    </SQL>
    <Suffix dtype="String"><![CDATA[ORDER BY i.invoice_date desc]]></Suffix>
  </Query>

  <Query name="INV_CTL_DOC_LOOKUP_SQL" pmType="INVENTORY">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.query.results.InvDocSearchResult</ResultClass>
    <ResultField name="OrganizationId" type="Long" />
    <ResultField name="StatusCode" type="String" />
    <ResultField name="DocumentId" type="String" />
    <ResultField name="DocType" type="String" />
    <ResultField name="DocSubType" type="String" />
    <ResultField name="ExpectedDeliveryDate" type="Date" />
    <ResultField name="ActualDeliveryDate" type="Date" />
    <ResultField name="Description" type="String" />
    <ResultField name="DestinationName" type="String" />
    <ResultField name="RecordCreationType" type="String" />
    <ResultField name="LastActivityDate" type="Date" />
    <ResultField name="CreateDateTime" type="Date" />
    <ResultField name="RetailLocationId" type="Long" />
    <ResultField name="ExpectedShipDate" type="Date" />
    <ResultField name="ReferenceId" type="String" />
    <SQL>
      <Statement dtype="String"><![CDATA[
        SELECT DISTINCT
        doc.organization_id, doc.status_code, doc.invctl_document_id,
        doc.document_typcode, doc.document_subtypcode,
        ship.expected_delivery_date, ship.actual_delivery_date, doc.description,
        ship.destination_name, doc.record_creation_type,
        doc.last_activity_date, doc.create_date_timestamp,
        doc.rtl_loc_id, ship.expected_ship_date, props.string_value
        FROM inv_invctl_document doc 
             LEFT OUTER JOIN inv_shipment ship 
                 ON doc.organization_id = ship.organization_id 
                AND doc.rtl_loc_id = ship.rtl_loc_id 
                AND doc.document_typcode = ship.document_typcode
                AND doc.invctl_document_id = ship.invctl_document_id 
             LEFT OUTER JOIN inv_item_acct_mod itemMod 
                 ON doc.organization_id = itemMod.organization_id
                AND doc.rtl_loc_id = itemMod.rtl_loc_id
                AND doc.document_typcode = itemMod.document_typcode
                AND doc.invctl_document_id = itemMod.invctl_document_id
             LEFT OUTER JOIN inv_invctl_document_p props
                 ON doc.organization_id = props.organization_id
                AND doc.rtl_loc_id = props.rtl_loc_id
                AND doc.document_typcode = props.document_typcode
                AND doc.invctl_document_id = props.invctl_document_id
                AND props.property_code = ?
        WHERE doc.organization_id = ?
          AND ship.shipment_seq = 
                (Select Max(shipment_seq) 
                  From inv_shipment 
                  Where organization_id = doc.organization_id 
                    And rtl_loc_id = doc.rtl_loc_id
                    And invctl_document_id = doc.invctl_document_id
                    And document_typcode = doc.document_typcode)
        ]]></Statement>
      <Parameter name="argPropertyKey" />
      <Parameter name="argOrganizationId" />
      <Expression trigger="argRetailLocationId"><![CDATA[doc.rtl_loc_id = ?]]></Expression>
      <Expression trigger="argDocumentId"><![CDATA[doc.invctl_document_id = ?]]></Expression>
      <Expression trigger="argDocumentTypeCode"><![CDATA[doc.document_typcode = ?]]></Expression>
      <Expression trigger="argDocumentSubtypeCode"><![CDATA[/*UPPER*/ doc.document_subtypcode = ?]]></Expression>
      <Expression trigger="@argStatusCodes"><![CDATA[/*UPPER*/ doc.status_code IN ?]]></Expression>
      <Expression trigger="@argExcludedSubtypes"><![CDATA[/*UPPER*/ doc.document_subtypcode NOT IN ?]]></Expression>
      <Expression trigger="argCustAcctId"><![CDATA[/*UPPER*/ itemMod.cust_acct_id = ?]]></Expression>
    </SQL>
  </Query>

  <Query name="INV_CTL_OLD_DOC_LOOKUP_SQL" pmType="INVENTORY">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.query.results.InvDocSearchResult</ResultClass>
    <ResultField name="OrganizationId" type="Long" />
    <ResultField name="StatusCode" type="String" />
    <ResultField name="DocumentId" type="String" />
    <ResultField name="DocType" type="String" />
    <ResultField name="DocSubType" type="String" />
    <ResultField name="ExpectedDeliveryDate" type="Date" />
    <ResultField name="Description" type="String" />
    <ResultField name="DestinationName" type="String" />
    <ResultField name="RecordCreationType" type="String" />
    <ResultField name="LastActivityDate" type="Date" />
    <ResultField name="CreateDateTime" type="Date" />
    <ResultField name="RetailLocationId" type="Long" />
    <SQL>
      <Statement dtype="String"><![CDATA[
        SELECT DISTINCT
        doc.organization_id, doc.status_code, doc.invctl_document_id,
        doc.document_typcode, doc.document_subtypcode,
        ship.expected_delivery_date, doc.description,
        ship.destination_name, doc.record_creation_type,
        doc.last_activity_date, doc.create_date_timestamp, doc.rtl_loc_id
        FROM
        inv_invctl_document doc LEFT OUTER JOIN inv_shipment ship ON
        doc.organization_id = ship.organization_id AND
        doc.rtl_loc_id = ship.rtl_loc_id AND
        doc.invctl_document_id = ship.invctl_document_id AND
        doc.document_typcode = ship.document_typcode
        WHERE
        /*UPPER*/ doc.status_code != 'CLOSED' AND
        /*UPPER*/ doc.status_code != 'VOID' AND
        doc.organization_id = ? AND
        doc.rtl_loc_id = ?
        ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
      <Expression trigger="argDocumentTypeCode"><![CDATA[doc.document_typcode = ?]]></Expression>
      <Expression trigger="argLastActivityDate"><![CDATA[doc.last_activity_date <= ?]]></Expression>
      <Expression trigger="@argExcludedSubtypes"><![CDATA[/*UPPER*/ doc.document_subtypcode NOT IN ?]]></Expression>
    </SQL>
  </Query>

  <Query name="ISSUED_UNATTACHED_TILLS">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.tsn.SessionId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[
        JOIN tsn_tndr_repository tr ON t.organization_id = tr.organization_id AND t.rtl_loc_id = tr.rtl_loc_id AND /*UPPER*/ t.tndr_repository_id = tr.tndr_repository_id
        LEFT OUTER JOIN tsn_tndr_repository_status trs ON tr.organization_id = trs.organization_id AND tr.rtl_loc_id = trs.rtl_loc_id AND tr.tndr_repository_id = trs.tndr_repository_id 
        LEFT OUTER JOIN tsn_session_wkstn sw ON t.organization_id = sw.organization_id AND t.rtl_loc_id = sw.rtl_loc_id AND t.session_id = sw.session_id
           WHERE (sw.session_wkstn_seq IS NULL OR sw.session_wkstn_seq = (SELECT Max(session_wkstn_seq) FROM tsn_session_wkstn WHERE organization_id = t.organization_id AND rtl_loc_id = t.rtl_loc_id AND session_id = t.session_id))
             AND /*UPPER*/ tr.typcode = 'TILL'
             AND trs.issued_flag = 1
             AND trs.active_session_id = t.session_id
             AND (sw.attached_flag = 0 OR sw.attached_flag IS NULL)
             AND t.organization_id = ?
             AND t.rtl_loc_id = ?
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
      <Expression trigger="argCountStatus"><![CDATA[/*UPPER*/ t.statcode = ?]]></Expression>
      <Expression trigger="argBusinessDate"><![CDATA[t.business_date = ?]]></Expression>
    </SQL>
  </Query>

  <Query name="ITEMS_BY_DIMENSION">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.itm.ItemId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[
          WHERE t.organization_id = ?
            AND /*UPPER*/ t.parent_item_id = ?        
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Parameter name="argItemId" />
      <Expression trigger="argDim1"><![CDATA[/*UPPER*/ t.dimension1 = ?]]></Expression>
      <Expression trigger="argDim2"><![CDATA[/*UPPER*/ t.dimension2 = ?]]></Expression>
      <Expression trigger="argDim3"><![CDATA[/*UPPER*/ t.dimension3 = ?]]></Expression>
    </SQL>
    <Suffix dtype="String"><![CDATA[ORDER BY t.organization_id, t.item_id ASC]]></Suffix>
  </Query>

  <Query name="ITEM_DIMENSION_INFO" pmType="ITEM">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">oracle.retail.xstore.inv.impl.lookup.resp.ItemDimensionResult</ResultClass>
    <ResultField name="DimensionSystem" type="String" />
    <ResultField name="SortOrder" type="Integer" />
    <ResultField name="Dimension" type="String" />
    <ResultField name="DimensionValue" type="String" />
    <ResultField name="Description" type="String" />
    <SQL>
      <Statement dtype="String"><![CDATA[
        SELECT idv.dimension_system, idt.seq, idv.dimension, dim.dimension1 value, idv.description 
        FROM itm_item dim 
             JOIN itm_item_dimension_value idv ON dim.organization_id = idv.organization_id AND /*UPPER*/ dim.dimension1 = idv.value 
             JOIN itm_item_dimension_type idt ON idt.organization_id = idv.organization_id AND idt.dimension_system = idv.dimension_system AND idt.dimension = idv.dimension
        WHERE dim.organization_id = ? AND idv.dimension_system = ? AND dim.item_id = ? AND idt.seq = 1
        UNION
        SELECT idv.dimension_system, idt.seq, idv.dimension, dim.dimension2 value, idv.description 
        FROM itm_item dim 
             JOIN itm_item_dimension_value idv ON dim.organization_id = idv.organization_id AND /*UPPER*/ dim.dimension2 = idv.value 
             JOIN itm_item_dimension_type idt ON idt.organization_id = idv.organization_id AND idt.dimension_system = idv.dimension_system AND idt.dimension = idv.dimension
        WHERE dim.organization_id = ? AND idv.dimension_system = ? AND dim.item_id = ? AND idt.seq = 2
        UNION
        SELECT idv.dimension_system, idt.seq, idv.dimension, dim.dimension3 value, idv.description 
        FROM itm_item dim 
             JOIN itm_item_dimension_value idv ON dim.organization_id = idv.organization_id AND /*UPPER*/ dim.dimension3 = idv.value 
             JOIN itm_item_dimension_type idt ON idt.organization_id = idv.organization_id AND idt.dimension_system = idv.dimension_system AND idt.dimension = idv.dimension
        WHERE dim.organization_id = ? AND idv.dimension_system = ? AND dim.item_id = ? AND idt.seq = 3
      ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argDimensionSystem" />
      <Parameter name="argItemId" />
      <Parameter name="argOrganizationId" />
      <Parameter name="argDimensionSystem" />
      <Parameter name="argItemId" />
      <Parameter name="argOrganizationId" />
      <Parameter name="argDimensionSystem" />
      <Parameter name="argItemId" />
    </SQL>
  </Query>

  <Query name="ITEM_GRID" pmType="ITEM">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.pos.inventory.lookup.style.ItemGridCell</ResultClass>
    <ResultField name="ItemId" type="String" />
    <ResultField name="Dimension1" type="String" />
    <ResultField name="Dimension2" type="String" />
    <ResultField name="Dimension3" type="String" />
    <ResultField name="UnitCount" type="BigDecimal" />
    <SQL>
      <Statement dtype="String"><![CDATA[
            SELECT i.item_id,
                   i.dimension1,
                   i.dimension2,
                   i.dimension3,
                   SUM(COALESCE(sla.unitcount, 0))
              FROM itm_item i 
              LEFT OUTER JOIN inv_stock_ledger_acct sla 
                ON i.organization_id = sla.organization_id
               AND i.item_id = sla.item_id
               AND sla.bucket_id = ?
               AND rtl_loc_id = ?
              WHERE i.organization_id = ?
                AND /*UPPER*/ i.parent_item_id = ?
              GROUP BY i.item_id, i.dimension1, i.dimension2, i.dimension3
        ]]></Statement>
      <Parameter name="argOnHandBucketId" />
      <Parameter name="argRetailLocationId" />
      <Parameter name="argOrganizationId" />
      <Parameter name="argStyleId" />
    </SQL>
  </Query>

  <Query name="ITEM_LOOKUP" pmType="ITEM">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.query.results.BasicItemQueryResult</ResultClass>
    <ResultField name="ItemId" type="String" />
    <ResultField name="Description" type="String" />
    <ResultField name="Dimension1" type="String" />
    <ResultField name="Dimension2" type="String" />
    <ResultField name="Dimension3" type="String" />
    <ResultField name="ItemMatrixColor" type="String" />
    <ResultField name="ImageUrl" type="String" />
    <SQL>
      <Statement dtype="String"><![CDATA[
        SELECT i.item_id,
               i.description,
               i.dimension1,
               i.dimension2,
               i.dimension3,
               i.item_matrix_color,
               img.image_url
          FROM itm_item i
            LEFT JOIN itm_item p
              ON i.organization_id = p.organization_id
              AND /*UPPER*/ i.parent_item_id = p.item_id
            LEFT JOIN itm_item_images img 
              ON i.organization_id = img.organization_id
              AND i.item_id = img.item_id
              AND img.feature_id = 'DEFAULT'   
           WHERE i.organization_id = ?
      ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Expression trigger="argItemIdFast"><![CDATA[i.item_id = ?]]></Expression>
      <Expression parameters="argItemId%" trigger="argItemId"><![CDATA[i.item_id LIKE ?]]></Expression>
      <Expression trigger="argItemTypeCode"><![CDATA[/*UPPER*/ i.item_typcode = ?]]></Expression>
      <Expression trigger="argItemLvlCode"><![CDATA[/*UPPER*/ i.item_lvlcode = ?]]></Expression>
      <Expression parameters="argStyleId%" trigger="argStyleId"><![CDATA[/*UPPER*/ i.parent_item_id LIKE ?]]></Expression>
      <Expression trigger="argStyleIdFast"><![CDATA[/*UPPER*/ i.parent_item_id = ?]]></Expression>
      <Expression parameters="argMerchlevel1Id, argMerchlevel1Id" trigger="argMerchlevel1Id"><![CDATA[/*UPPER*/ i.merch_level_1 = ? OR (i.merch_level_1 is null AND /*UPPER*/ p.merch_level_1 = ?)]]></Expression>
      <Expression parameters="argMerchlevel2Id, argMerchlevel2Id" trigger="argMerchlevel2Id"><![CDATA[/*UPPER*/ i.merch_level_2 = ? OR (i.merch_level_2 is null AND /*UPPER*/ p.merch_level_2 = ?)]]></Expression>
      <Expression parameters="argMerchlevel3Id, argMerchlevel3Id" trigger="argMerchlevel3Id"><![CDATA[/*UPPER*/ i.merch_level_3 = ? OR (i.merch_level_3 is null AND /*UPPER*/ p.merch_level_3 = ?)]]></Expression>
      <Expression parameters="argMerchlevel4Id, argMerchlevel4Id" trigger="argMerchlevel4Id"><![CDATA[/*UPPER*/ i.merch_level_4 = ? OR (i.merch_level_4 is null AND /*UPPER*/ p.merch_level_4 = ?)]]></Expression>
      <Expression trigger="@argMerchlevel1IdIsNot"><![CDATA[i.merch_level_1 IS NULL OR /*UPPER*/ i.merch_level_1 NOT IN ?]]></Expression>
      <Expression trigger="@argMerchlevel2IdIsNot"><![CDATA[i.merch_level_2 IS NULL OR /*UPPER*/ i.merch_level_2 NOT IN ?]]></Expression>
      <Expression trigger="@argMerchlevel3IdIsNot"><![CDATA[i.merch_level_3 IS NULL OR /*UPPER*/ i.merch_level_3 NOT IN ?]]></Expression>
      <Expression trigger="@argMerchlevel4IdIsNot"><![CDATA[i.merch_level_4 IS NULL OR /*UPPER*/ i.merch_level_4 NOT IN ?]]></Expression>
      <Expression parameters="argHasNoMerchlevel1Id, argHasNoMerchlevel1Id" trigger="argHasNoMerchlevel1Id"><![CDATA[i.merch_level_1 is null AND ? = ?]]></Expression>
      <Expression parameters="argHasNoMerchlevel2Id, argHasNoMerchlevel2Id" trigger="argHasNoMerchlevel2Id"><![CDATA[i.merch_level_1 is null AND ? = ?]]></Expression>
      <Expression parameters="argHasNoMerchlevel3Id, argHasNoMerchlevel3Id" trigger="argHasNoMerchlevel3Id"><![CDATA[i.merch_level_1 is null AND ? = ?]]></Expression>
      <Expression parameters="argHasNoMerchlevel4Id, argHasNoMerchlevel4Id" trigger="argHasNoMerchlevel4Id"><![CDATA[i.merch_level_1 is null AND ? = ?]]></Expression>
      <Expression parameters="%argDescription%, %argDescription%" trigger="argDescription"><![CDATA[/*UPPER*/ i.description LIKE ? OR /*UPPER*/ i.description IN (SELECT ct.translation_key FROM com_translations ct WHERE ct.organization_id = i.organization_id AND /*UPPER*/ ct.translation LIKE ?)]]></Expression>

      <!-- Note that the following two triggers (argIncludeItemPropCode & argIncludeItemPropValue) work together 
        in tandem to create one subquery when advanced search is enabled -->
      <Expression parameters="argIncludeItemPropCode1" trigger="argIncludeItemPropCode1"><![CDATA[EXISTS (Select i.item_id from itm_item_deal_prop prop where i.item_id = prop.item_id AND i.organization_id = prop.organization_id AND (prop.itm_deal_property_code = ? ]]></Expression>
      <Expression parameters="argIncludeItemPropValue1" trigger="argIncludeItemPropValue1"><![CDATA[/*UPPER*/ prop.string_value = ?))]]></Expression>
      <Expression parameters="argIncludeItemPropCode2" trigger="argIncludeItemPropCode2"><![CDATA[EXISTS (Select i.item_id from itm_item_deal_prop prop where i.item_id = prop.item_id AND i.organization_id = prop.organization_id AND (prop.itm_deal_property_code = ? ]]></Expression>
      <Expression parameters="argIncludeItemPropValue2" trigger="argIncludeItemPropValue2"><![CDATA[/*UPPER*/ prop.string_value = ?))]]></Expression>
      <Expression parameters="argIncludeItemPropCode3" trigger="argIncludeItemPropCode3"><![CDATA[EXISTS (Select i.item_id from itm_item_deal_prop prop where i.item_id = prop.item_id AND i.organization_id = prop.organization_id AND (prop.itm_deal_property_code = ? ]]></Expression>
      <Expression parameters="argIncludeItemPropValue3" trigger="argIncludeItemPropValue3"><![CDATA[/*UPPER*/ prop.string_value = ?))]]></Expression>
      <Expression parameters="argIncludeItemPropCode4" trigger="argIncludeItemPropCode4"><![CDATA[EXISTS (Select i.item_id from itm_item_deal_prop prop where i.item_id = prop.item_id AND i.organization_id = prop.organization_id AND (prop.itm_deal_property_code = ? ]]></Expression>
      <Expression parameters="argIncludeItemPropValue4" trigger="argIncludeItemPropValue4"><![CDATA[/*UPPER*/ prop.string_value = ?))]]></Expression>
      <Expression parameters="argIncludeItemPropCode5" trigger="argIncludeItemPropCode5"><![CDATA[EXISTS (Select i.item_id from itm_item_deal_prop prop where i.item_id = prop.item_id AND i.organization_id = prop.organization_id AND (prop.itm_deal_property_code = ? ]]></Expression>
      <Expression parameters="argIncludeItemPropValue5" trigger="argIncludeItemPropValue5"><![CDATA[/*UPPER*/ prop.string_value = ?))]]></Expression>
      <Expression parameters="argIncludeItemPropCode6" trigger="argIncludeItemPropCode6"><![CDATA[EXISTS (Select i.item_id from itm_item_deal_prop prop where i.item_id = prop.item_id AND i.organization_id = prop.organization_id AND (prop.itm_deal_property_code = ? ]]></Expression>
      <Expression parameters="argIncludeItemPropValue6" trigger="argIncludeItemPropValue6"><![CDATA[/*UPPER*/ prop.string_value = ?))]]></Expression>
      <Expression parameters="argIncludeItemPropCode7" trigger="argIncludeItemPropCode7"><![CDATA[EXISTS (Select i.item_id from itm_item_deal_prop prop where i.item_id = prop.item_id AND i.organization_id = prop.organization_id AND (prop.itm_deal_property_code = ? ]]></Expression>
      <Expression parameters="argIncludeItemPropValue7" trigger="argIncludeItemPropValue7"><![CDATA[/*UPPER*/ prop.string_value = ?))]]></Expression>
      <Expression parameters="argIncludeItemPropCode8" trigger="argIncludeItemPropCode8"><![CDATA[EXISTS (Select i.item_id from itm_item_deal_prop prop where i.item_id = prop.item_id AND i.organization_id = prop.organization_id AND (prop.itm_deal_property_code = ? ]]></Expression>
      <Expression parameters="argIncludeItemPropValue8" trigger="argIncludeItemPropValue8"><![CDATA[/*UPPER*/ prop.string_value = ?))]]></Expression>
      <Expression parameters="argIncludeItemPropCode9" trigger="argIncludeItemPropCode9"><![CDATA[EXISTS (Select i.item_id from itm_item_deal_prop prop where i.item_id = prop.item_id AND i.organization_id = prop.organization_id AND (prop.itm_deal_property_code = ? ]]></Expression>
      <Expression parameters="argIncludeItemPropValue9" trigger="argIncludeItemPropValue9"><![CDATA[/*UPPER*/ prop.string_value = ?))]]></Expression>
      <Expression parameters="argIncludeItemPropCode10" trigger="argIncludeItemPropCode10"><![CDATA[EXISTS (Select i.item_id from itm_item_deal_prop prop where i.item_id = prop.item_id AND i.organization_id = prop.organization_id AND (prop.itm_deal_property_code = ? ]]></Expression>
      <Expression parameters="argIncludeItemPropValue10" trigger="argIncludeItemPropValue10"><![CDATA[/*UPPER*/ prop.string_value = ?))]]></Expression>

      <!-- Note that the following two triggers (argExcludeItemPropCode & argExcludeItemPropValue) work together 
        in tandem to create one subquery when advanced search is enabled -->
      <Expression parameters="argExcludeItemPropCode1" trigger="argExcludeItemPropCode1"><![CDATA[NOT EXISTS (Select i.item_id from itm_item_deal_prop prop where i.item_id = prop.item_id AND i.organization_id = prop.organization_id AND (prop.itm_deal_property_code = ? ]]></Expression>
      <Expression parameters="argExcludeItemPropValue1" trigger="argExcludeItemPropValue1"><![CDATA[/*UPPER*/ prop.string_value = ?))]]></Expression>
      <Expression parameters="argExcludeItemPropCode2" trigger="argExcludeItemPropCode2"><![CDATA[NOT EXISTS (Select i.item_id from itm_item_deal_prop prop where i.item_id = prop.item_id AND i.organization_id = prop.organization_id AND (prop.itm_deal_property_code = ? ]]></Expression>
      <Expression parameters="argExcludeItemPropValue2" trigger="argExcludeItemPropValue2"><![CDATA[/*UPPER*/ prop.string_value = ?))]]></Expression>
      <Expression parameters="argExcludeItemPropCode3" trigger="argExcludeItemPropCode3"><![CDATA[NOT EXISTS (Select i.item_id from itm_item_deal_prop prop where i.item_id = prop.item_id AND i.organization_id = prop.organization_id AND (prop.itm_deal_property_code = ? ]]></Expression>
      <Expression parameters="argExcludeItemPropValue3" trigger="argExcludeItemPropValue3"><![CDATA[/*UPPER*/ prop.string_value = ?))]]></Expression>
      <Expression parameters="argExcludeItemPropCode4" trigger="argExcludeItemPropCode4"><![CDATA[NOT EXISTS (Select i.item_id from itm_item_deal_prop prop where i.item_id = prop.item_id AND i.organization_id = prop.organization_id AND (prop.itm_deal_property_code = ? ]]></Expression>
      <Expression parameters="argExcludeItemPropValue4" trigger="argExcludeItemPropValue4"><![CDATA[/*UPPER*/ prop.string_value = ?))]]></Expression>
      <Expression parameters="argExcludeItemPropCode5" trigger="argExcludeItemPropCode5"><![CDATA[NOT EXISTS (Select i.item_id from itm_item_deal_prop prop where i.item_id = prop.item_id AND i.organization_id = prop.organization_id AND (prop.itm_deal_property_code = ? ]]></Expression>
      <Expression parameters="argExcludeItemPropValue5" trigger="argExcludeItemPropValue5"><![CDATA[/*UPPER*/ prop.string_value = ?))]]></Expression>
      <Expression parameters="argExcludeItemPropCode6" trigger="argExcludeItemPropCode6"><![CDATA[NOT EXISTS (Select i.item_id from itm_item_deal_prop prop where i.item_id = prop.item_id AND i.organization_id = prop.organization_id AND (prop.itm_deal_property_code = ? ]]></Expression>
      <Expression parameters="argExcludeItemPropValue6" trigger="argExcludeItemPropValue6"><![CDATA[/*UPPER*/ prop.string_value = ?))]]></Expression>
      <Expression parameters="argExcludeItemPropCode7" trigger="argExcludeItemPropCode7"><![CDATA[NOT EXISTS (Select i.item_id from itm_item_deal_prop prop where i.item_id = prop.item_id AND i.organization_id = prop.organization_id AND (prop.itm_deal_property_code = ? ]]></Expression>
      <Expression parameters="argExcludeItemPropValue7" trigger="argExcludeItemPropValue7"><![CDATA[/*UPPER*/ prop.string_value = ?))]]></Expression>
      <Expression parameters="argExcludeItemPropCode8" trigger="argExcludeItemPropCode8"><![CDATA[NOT EXISTS (Select i.item_id from itm_item_deal_prop prop where i.item_id = prop.item_id AND i.organization_id = prop.organization_id AND (prop.itm_deal_property_code = ? ]]></Expression>
      <Expression parameters="argExcludeItemPropValue8" trigger="argExcludeItemPropValue8"><![CDATA[/*UPPER*/ prop.string_value = ?))]]></Expression>
      <Expression parameters="argExcludeItemPropCode9" trigger="argExcludeItemPropCode9"><![CDATA[NOT EXISTS (Select i.item_id from itm_item_deal_prop prop where i.item_id = prop.item_id AND i.organization_id = prop.organization_id AND (prop.itm_deal_property_code = ? ]]></Expression>
      <Expression parameters="argExcludeItemPropValue9" trigger="argExcludeItemPropValue9"><![CDATA[/*UPPER*/ prop.string_value = ?))]]></Expression>
      <Expression parameters="argExcludeItemPropCode10" trigger="argExcludeItemPropCode10"><![CDATA[NOT EXISTS (Select i.item_id from itm_item_deal_prop prop where i.item_id = prop.item_id AND i.organization_id = prop.organization_id AND (prop.itm_deal_property_code = ? ]]></Expression>
      <Expression parameters="argExcludeItemPropValue10" trigger="argExcludeItemPropValue10"><![CDATA[/*UPPER*/ prop.string_value = ?))]]></Expression>
    </SQL>
    <Property>
      <Key dtype="String">MaxRows</Key>
      <Value dtype="String"><![CDATA[50]]></Value>
    </Property>
    <Suffix dtype="String"><![CDATA[ORDER BY 1 ASC]]></Suffix>
  </Query>

  <Query name="ITEM_LOOKUP_UPC" pmType="ITEM">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.query.results.BasicItemQueryResult</ResultClass>
    <ResultField name="ItemId" type="String" />
    <ResultField name="Description" type="String" />
    <SQL>
      <Statement dtype="String"><![CDATA[
        SELECT COALESCE(i.item_id, p.item_id),
               i.description
          FROM itm_item i
            INNER JOIN itm_item_cross_reference x
              ON i.organization_id = x.organization_id
             AND i.item_id = /*UPPER*/ x.item_id
            LEFT JOIN itm_item p
              ON i.organization_id = p.organization_id
             AND /*UPPER*/ i.parent_item_id = p.item_id
         WHERE i.organization_id = ?
      ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Expression trigger="argItemIdFast"><![CDATA[x.manufacturer_upc = ?]]></Expression>
      <Expression parameters="argItemId%" trigger="argItemId"><![CDATA[x.manufacturer_upc LIKE ?]]></Expression>
      <Expression parameters="argStyleId%" trigger="argStyleId"><![CDATA[/*UPPER*/ i.parent_item_id LIKE ?]]></Expression>
      <Expression trigger="argStyleIdFast"><![CDATA[/*UPPER*/ i.parent_item_id = ?]]></Expression>
      <Expression parameters="argMerchlevel1Id, argMerchlevel1Id" trigger="argMerchlevel1Id"><![CDATA[/*UPPER*/ i.merch_level_1 = ? OR (i.merch_level_1 is null AND /*UPPER*/ p.merch_level_1 = ?)]]></Expression>
      <Expression parameters="argMerchlevel2Id, argMerchlevel2Id" trigger="argMerchlevel2Id"><![CDATA[/*UPPER*/ i.merch_level_2 = ? OR (i.merch_level_2 is null AND /*UPPER*/ p.merch_level_2 = ?)]]></Expression>
      <Expression parameters="argMerchlevel3Id, argMerchlevel3Id" trigger="argMerchlevel3Id"><![CDATA[/*UPPER*/ i.merch_level_3 = ? OR (i.merch_level_3 is null AND /*UPPER*/ p.merch_level_3 = ?)]]></Expression>
      <Expression parameters="argMerchlevel4Id, argMerchlevel4Id" trigger="argMerchlevel4Id"><![CDATA[/*UPPER*/ i.merch_level_4 = ? OR (i.merch_level_4 is null AND /*UPPER*/ p.merch_level_4 = ?)]]></Expression>
      <Expression parameters="%argDescription%, %argDescription%" trigger="argDescription"><![CDATA[/*UPPER*/ i.description LIKE ? OR /*UPPER*/ i.description IN (SELECT ct.translation_key FROM com_translations ct WHERE ct.organization_id = i.organization_id AND /*UPPER*/ ct.translation LIKE ?)]]></Expression>
    </SQL>
    <Property>
      <Key dtype="String">MaxRows</Key>
      <Value dtype="String"><![CDATA[50]]></Value>
    </Property>
    <Suffix dtype="String"><![CDATA[ORDER BY 1 ASC]]></Suffix>
  </Query>

  <Query name="ITEM_MESSAGES">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.itm.ItemMessageId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[, itm_item_msg_types ty, itm_item_msg_cross_reference cr 
          WHERE
            t.organization_id = ty.organization_id AND 
            t.msg_id = ty.msg_id AND 
            t.organization_id = cr.organization_id AND 
            t.msg_id = cr.msg_id AND 
            t.organization_id = ? AND 
            ty.sale_lineitm_typcode = ? AND 
            t.effective_datetime <= ? AND 
            (t.expr_datetime is null OR t.expr_datetime >= ?) AND 
            (cr.item_id = ? OR cr.item_id = ?) 
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Parameter name="argLineType" />
      <Parameter name="argDate" />
      <Parameter name="argDate" />
      <Parameter name="argItemId" />
      <Parameter name="argStyleId" />
    </SQL>
    <Suffix dtype="String"><![CDATA[ORDER BY effective_datetime desc]]></Suffix>
  </Query>

  <Query name="ITEM_RESULTS_STOCK_LEDGER" pmType="STOCK_LEDGER">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">oracle.retail.xstore.inv.impl.lookup.resp.StockLedgerQueryResult</ResultClass>
    <ResultField name="OrganizationId" type="Long" />
    <ResultField name="RetailLocationId" type="Long" />
    <ResultField name="InvLocationId" type="String" />
    <ResultField name="BucketId" type="String" />
    <ResultField name="Unitcount" type="BigDecimal" />
    <ResultField name="ItemId" type="String" />
    <ResultField name="BucketName" type="String" />
    <ResultField name="InvLocationName" type="String" />
    <SQL>
      <Statement dtype="String"><![CDATA[
select loc.organization_id, 
       loc.rtl_loc_id,
       sl.inv_location_id,
       sl.bucket_id,
       sl.unitcount,
       sl.item_id,
       b.name,
       loc.name 
  from INV_STOCK_LEDGER_ACCT sl 
    inner join INV_LOCATION loc 
      on sl.organization_id = loc.organization_id
     and sl.rtl_loc_id=loc.rtl_loc_id
     and sl.inv_location_id = loc.inv_location_id 
    inner join INV_BUCKET b 
      on sl.organization_id = b.organization_id 
     and  sl.rtl_loc_id = b.rtl_loc_id
     and sl.bucket_id = b.bucket_id
 WHERE sl.organization_id = ? 
   AND sl.rtl_loc_id = ? 
   AND sl.item_id = ?
      ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
      <Parameter name="argItemId" />
      <Expression trigger="argBucketId"><![CDATA[sl.bucket_id = ?]]></Expression>
    </SQL>
    <Suffix dtype="String"><![CDATA[ORDER BY loc.name ASC]]></Suffix>
  </Query>

  <Query name="ITEM_SERIAL_NUMBERS" pmType="STOCK_LEDGER">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">oracle.retail.xstore.inv.impl.lookup.resp.SerialNumberQueryResult</ResultClass>
    <ResultField name="LocationName" type="String" />
    <ResultField name="BucketName" type="String" />
    <ResultField name="SerialNumber" type="String" />
    <SQL>
      <Statement dtype="String"><![CDATA[
      SELECT loc.name, b.name, ssl.serial_nbr
          FROM inv_serialized_stock_ledger ssl, inv_location loc, inv_bucket b
         WHERE ssl.organization_id = b.organization_id
           AND ssl.organization_id = loc.organization_id
           AND ssl.rtl_loc_id = b.rtl_loc_id
           AND ssl.rtl_loc_id = loc.rtl_loc_id
           AND ssl.bucket_id = b.bucket_id
           AND ssl.inv_location_id=loc.inv_location_id
           AND ssl.organization_id = ?
           AND ssl.rtl_loc_id = ?
           AND ssl.item_id = ?
         ORDER BY b.name ASC
      ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
      <Parameter name="argItemId" />
      <Expression trigger="argInvLocationId"><![CDATA[ssl.inv_location_id = ?]]></Expression>
    </SQL>
  </Query>

  <Query name="JOURNAL_ROLL_ASSOCIATES_LIST" pmType="TRANSACTION">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultField name="EmployeeId" />
    <SQL>
      <Statement dtype="String"><![CDATA[
        select cre.employee_id from trl_commission_mod tcm, crm_party cre
        where tcm.organization_id = ?
        and tcm.wkstn_id = ?
        and tcm.rtl_loc_id = ?
        and tcm.trans_seq = ?
        and tcm.organization_id=cre.organization_id
        and tcm.employee_party_id=cre.party_id
        ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argWkstnId" />
      <Parameter name="argRetailLocationId" />
      <Parameter name="argTransSeq" />
    </SQL>
    <Suffix dtype="String"><![CDATA[ORDER BY cre.employee_id]]></Suffix>
  </Query>

  <Query name="KIT_COMPONENT_DETAILS" pmType="ITEM">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.pos.kits.KitComponentDetailResult</ResultClass>
    <ResultField name="ComponentItemId" />
    <ResultField name="Quantity" />
    <ResultField name="ComponentItemDesc" />
    <SQL>
      <Statement dtype="String"><![CDATA[
        SELECT k.component_item_id, COALESCE(k.quantity_per_kit, 1) quantity_per_kit, i.description
        FROM itm_kit_component k 
        inner join itm_item i
        on k.component_item_id = i.item_id
        WHERE k.organization_id = ?
        AND k.kit_item_id = ?
        AND ? BETWEEN COALESCE(k.begin_datetime, ?) AND COALESCE(k.end_datetime, ?)
        ORDER BY k.display_order
        ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argKitItemId" />
      <Parameter name="argBusinessDate" />
      <Parameter name="argFarPastDate" />
      <Parameter name="argFarFutureDate" />
    </SQL>
  </Query>

  <Query name="KIT_COMPONENT_ITEMS">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.itm.KitComponentId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[        
           WHERE t.organization_id = ?
             AND t.kit_item_id = ?
        ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Parameter name="argKitItemId" />
      <Expression parameters="argBusinessDate,argFarPastDate,argFarFutureDate" trigger="argBusinessDate">
        <![CDATA[? between coalesce(t.begin_datetime, ?) and coalesce(t.end_datetime, ?)]]>
      </Expression>
    </SQL>
  </Query>

  <Query name="LIST_OF_BUCKETS" pmType="STOCK_LEDGER">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultField name="BinCode" />
    <SQL>
      <Statement dtype="String"><![CDATA[
          select bucket_id from inv_bucket
          where organization_id = ? and rtl_loc_id = ?
        ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocId" />
    </SQL>
  </Query>

  <Query name="LIST_OF_INV_ACTION_CODES" pmType="STOCK_LEDGER">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultField name="code" />
    <SQL>
      <Statement dtype="String"><![CDATA[
          select code from com_code_value 
          where category='INVENTORY_ACTION_CODES' 
          and organization_id=?
          AND COALESCE(hidden_flag, 0) = 0
        ]]></Statement>
      <Parameter name="argOrganizationId" />
    </SQL>
    <Suffix dtype="String"><![CDATA[order by sort_order]]></Suffix>
  </Query>

  <Query name="LIST_OF_LOCATIONS" pmType="STOCK_LEDGER">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultField name="LocationId" />
    <SQL>
      <Statement dtype="String"><![CDATA[
          select inv_location_id from inv_location
          where organization_id = ? and rtl_loc_id = ?
        ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocId" />
    </SQL>
  </Query>

  <Query name="LIST_OF_STYLES" pmType="ITEM">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultField name="StyleName" />
    <SQL>
      <Statement dtype="String"><![CDATA[
        select item_id||'-'||description from itm_item
        where organization_id = ? and /*UPPER*/ item_lvlcode = 'STYLE'
        Order by 1
        ]]></Statement>
      <Parameter name="argOrganizationId" />
    </SQL>
  </Query>

  <Query name="LIST_OF_TENDERS" pmType="TRANSACTION">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultField name="Description" />
    <ResultField name="TenderId" />
    <SQL>
      <Statement dtype="String"><![CDATA[
      SELECT distinct a.description,a.tndr_id from tnd_tndr a, tnd_tndr_availability b
      where a.organization_id = b.organization_id
      and a.tndr_id = b.tndr_id
      and a.organization_id=?
      and a.disabled_flag = 0
      and b.availability_code in ('SALE','RETURN_WITH_RECEIPT','RETURN_WITHOUT_RECEIPT','RETURN_WITH_GIFT_RECEIPT')
      Order by a.tndr_id
        ]]></Statement>
      <Parameter name="argOrganizationId" />
    </SQL>
  </Query>

  <Query name="LIST_OF_TILLS" pmType="SESSIONS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultField name="TenderRepositoryId" />
    <SQL>
      <Statement dtype="String"><![CDATA[
          SELECT tndr_repository_id from tsn_tndr_repository
          where /*UPPER*/ typcode = 'TILL' and organization_id=? and rtl_loc_id=?
          Order by tndr_repository_id
        ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
    </SQL>
  </Query>

  <Query name="LIST_OF_WORKCODES" pmType="EMPLOYEE">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultField name="TenderRepositoryId" />
    <SQL>
      <Statement dtype="String"><![CDATA[
          SELECT work_code FROM hrs_work_codes
          where organization_id = ?
          ORDER BY sort_order
        ]]></Statement>
      <Parameter name="argOrganizationId" />
    </SQL>
  </Query>

  <Query name="LOAD_DAILY_ALL_AVAILABLE_DOCUMENT_DEALS" pmType="DEALS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.query.results.DocumentDealQueryResult</ResultClass>
    <ResultField name="OrganizationId" type="Long" />
    <ResultField name="DealId" type="String" />
    <ResultField name="SeriesId" type="String" />
    <ResultField name="DocumentType" type="String" />
    <SQL>
      <Statement dtype="String"><![CDATA[
          SELECT a.organization_id, deal_id, a.series_id, a.document_type  
          FROM prc_deal_document_xref a, doc_document_definition b
          WHERE a.organization_id = b.organization_id 
               and a.series_id = b.series_id 
               and a.document_type = b.document_type
               and a.organization_id = ?
               and start_issue_date <= ? 
               and end_issue_date >= ?
        ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argSystemDate" />
      <Parameter name="argSystemDate" />
    </SQL>
  </Query>

  <Query name="LATEST_UPDATE_DATE_PROMOTION" pmType="DEALS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.query.results.TimestampQueryResult</ResultClass>
    <ResultField name="UpdateDate" />
    <ResultField name="CreateDate" />
    <SQL>
      <Statement dtype="String"><![CDATA[
		select max(update_date), max(create_date)
			from (
    			select max(update_date) as update_date, max(create_date) as create_date from prc_deal where organization_id = ?
    			union 
    			select max(update_date) as update_date, max(create_date) as create_date from prc_deal_item where organization_id = ?
    			union 
    			select max(update_date) as update_date, max(create_date) as create_date from prc_deal_field_test where organization_id = ?
			)    
        ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argOrganizationId" />
      <Parameter name="argOrganizationId" />
    </SQL>
  </Query>

  <Query name="LOAD_DAILY_AVAILABLE_DOCUMENT_DEALS">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.prc.DealDocumentXrefId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[
        , doc_document_definition b
          WHERE t.organization_id = b.organization_id 
               and t.series_id = b.series_id 
               and t.document_type = b.document_type
               and t.organization_id = ?
               and b.start_issue_date <= ? 
               and (b.end_issue_date >= ? or b.end_issue_date is null)        
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Parameter name="argStartDate" />
      <Parameter name="argEndDate" />
    </SQL>
  </Query>

  <Query name="LOAD_DEALS">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.prc.DealId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[        
          WHERE t.organization_id = ?
            AND t.act_deferred = ?    
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Parameter name="argDeferred" />
      <Expression trigger="argEffectiveDateLessThan"><![CDATA[effective_date IS NULL OR effective_date <= ?]]></Expression>
      <Expression trigger="argExpirationDateGreaterThan"><![CDATA[end_date IS NULL OR end_date >= ?]]></Expression>
    </SQL>
  </Query>

  <Query name="COUNT_FIELD_TESTS" pmType="DEALS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.data2.access.DefaultQueryResult</ResultClass>
    <ResultField name="test_count" type="Integer" />
    <SQL>
      <Statement dtype="String"><![CDATA[
        SELECT count(*) AS test_count
          FROM prc_deal_field_test
         WHERE organization_id = ? 
           AND deal_id = ?
           AND /*UPPER*/ item_field = 'SKU'
      ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argDealId" />
      <Expression trigger="argOrdinal"><![CDATA[item_ordinal = ?]]></Expression>
      <Expression trigger="argMatchRule"><![CDATA[/*UPPER*/ match_rule = ?]]></Expression>
    </SQL>
  </Query>

  <Query name="LOAD_FIELD_TESTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.prc.DealFieldTestId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[
          WHERE t.organization_id = ?
            AND t.deal_id = ?
            AND t.item_ordinal = ?
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Parameter name="argDealId" />
      <Parameter name="argOrdinal" />
    </SQL>
  </Query>

  <Query name="LOAD_FIELD_TESTS_BY_ITEM">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.prc.DealFieldTestId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[
        , (SELECT organization_id, deal_id, item_ordinal, item_condition_group
             FROM prc_deal_field_test
            WHERE organization_id = ?
              AND /*UPPER*/ item_field = 'SKU'
              AND /*UPPER*/ value1 = ?) b
          WHERE t.organization_id = b.organization_id
            AND t.deal_id = b.deal_id
            AND t.item_ordinal = b.item_ordinal
            AND t.item_condition_group = b.item_condition_group
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Parameter name="argItemId" />
    </SQL>
  </Query>

  <Query name="LOCATION_TAX_MAPPING">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.tax.RetailLocationTaxMappingId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[
        WHERE organization_id = ?
            AND rtl_loc_id = ?        
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
    </SQL>
  </Query>

  <Query name="LOC_CLOSE_DATES" pmType="LOCATION">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.query.results.CloseDateSearchResult</ResultClass>
    <ResultField name="CloseDate" />
    <ResultField name="RetailLocationId" />
    <ResultField name="OrganizationId" />
    <SQL>
      <Statement dtype="String"><![CDATA[
      SELECT lcd.close_date,
          lcd.rtl_loc_id,
          lcd.organization_id
      FROM loc_close_dates lcd
      WHERE lcd.close_date = ?
           AND lcd.rtl_loc_id = ?
           AND lcd.organization_id = ?
        ]]></Statement>
      <Parameter name="argCloseDate" />
      <Parameter name="argRetailLocId" />
      <Parameter name="argOrganizationId" />
    </SQL>
    <Property>
      <Key dtype="String">MaxRows</Key>
      <Value dtype="String"><![CDATA[50]]></Value>
    </Property>
  </Query>

  <Query name="LOOKUP_HIERARCHICAL_PRICE">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.itm.ItemPricesId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[        
          WHERE organization_id = ?
            AND item_id = ?
            AND level_code = ?
            AND level_value = ?        
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Parameter name="argItemId" />
      <Parameter name="argLevelCode" />
      <Parameter name="argLevelValue" />
      <Expression parameters="argBusinessDate, argBusinessDate" trigger="argBusinessDate"><![CDATA[effective_date <= ? 
            AND (expiration_date IS NULL OR expiration_date >= ?)]]></Expression>
      <Expression trigger="argEarliestActiveDate"><![CDATA[(expiration_date IS NULL OR expiration_date >= ?)]]></Expression>
      <Expression trigger="@argPriceTypes"><![CDATA[t.itm_price_property_code IN ?]]></Expression>
      <Expression trigger="argPricingQty"><![CDATA[t.price_qty <= ?]]></Expression>
    </SQL>
    <Suffix dtype="String"><![CDATA[ORDER BY effective_date DESC]]></Suffix>
  </Query>
  
  <Query name="LOOKUP_HIERARCHICAL_PRICE_EFFECTIVE_DATES" pmType="ITEM">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultField name="EffectiveDate" type="Date" />
    <SQL>
      <Statement dtype="String"><![CDATA[
          SELECT DISTINCT effective_date FROM itm_item_prices        
          WHERE organization_id = ?
            AND item_id = ?
            AND /*UPPER*/ level_code = ?
            AND /*UPPER*/ level_value = ?
            AND effective_date BETWEEN ? and ?
      ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argItemId" />
      <Parameter name="argLevelCode" />
      <Parameter name="argLevelValue" />
      <Parameter name="argStartDate" />
      <Parameter name="argEffectiveDate" />
      <Expression trigger="@argPriceTypes"><![CDATA[itm_price_property_code IN ?]]></Expression>
      <Expression trigger="argPricingQty"><![CDATA[price_qty <= ?]]></Expression>
    </SQL>
    <Suffix dtype="String"><![CDATA[ORDER BY effective_date DESC]]></Suffix>
  </Query>

  <Query name="LOOKUP_JOURNAL_LOCALLY" pmType="SYNC_JOURNAL_LOCALLY">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.loc.impl.StateJournalModel</ResultClass>
    <ResultField name="OrganizationId" type="Long" />
    <ResultField name="RetailLocationId" type="Long" />
    <ResultField name="WorkstationId" type="Long" />
    <ResultField name="StatusTypcode" type="String" />
    <ResultField name="StateJournalId" type="String" />
    <ResultField name="TimeStamp" type="Date" />
    <ResultField name="DateValue" type="Date" />
    <ResultField name="StringValue" type="String" />
    <ResultField name="DecimalValue" type="BigDecimal" />
    <SQL>
      <Statement dtype="String"><![CDATA[
          SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value
          FROM loc_state_journal
          WHERE organization_id = ? 
          AND rtl_loc_id = ?
          AND wkstn_id = ?
          AND status_typcode = ?
          AND state_journal_id = ?
        ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
      <Parameter name="argWorkstationId" />
      <Parameter name="argStatusTypcode" />
      <Parameter name="argStateJournalId" />
    </SQL>
  </Query>

  <Query name="MANUFACTURERS_UPC" pmType="ITEM">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultField name="ManufacturersUpc" />
    <SQL>
      <Statement dtype="String"><![CDATA[
          select manufacturer_upc from itm_item_cross_reference 
          where organization_id=? and /*UPPER*/ item_id= ? 
        ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argItemId" />
      <Expression trigger="argPrimaryFLag"><![CDATA[primary_flag = ?]]></Expression>
    </SQL>
  </Query>

  <Query name="MERCH_HIERARCHY">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.itm.MerchandiseHierarchyId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[
        WHERE t.organization_id = ? AND /*UPPER*/ t.level_code = ? AND COALESCE(t.hidden_flag, 0) = 0        
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Parameter name="argLevelCode" />
      <Expression trigger="argParentId"><![CDATA[/*UPPER*/ t.parent_id = ?]]></Expression>
    </SQL>
    <Suffix dtype="String"><![CDATA[ORDER BY sort_order ASC]]></Suffix>
  </Query>

  <Query name="MERCH_HIERARCHY_BY_LEVEL" pmType="ITEM">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.data2.access.DefaultQueryResult</ResultClass>
    <ResultField name="hierarchyId" type="String" />
    <ResultField name="hierarchyName" type="String" />
    <SQL>
      <Statement dtype="String"><![CDATA[
          select hierarchy_id, description from itm_merch_hierarchy
          where organization_id = ? and /*UPPER*/ level_code = ?
        ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argLevelCode" />
      <Expression trigger="argHierarchyId"><![CDATA[hierarchy_id = ?]]></Expression>
    </SQL>
    <Suffix dtype="String"><![CDATA[Order by 1]]></Suffix>
  </Query>

  <Query name="NEW_TAX_TAX_GROUP">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.tax.TaxTaxGroupMappingId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[
        WHERE t.organization_id = ? AND t.tax_group_id = ? AND t.rtl_loc_id = ?        
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Parameter name="argTaxGroupId" />
      <Parameter name="argRtlLocId" />
    </SQL>
    <Suffix dtype="String"><![CDATA[ORDER BY t.priority ASC]]></Suffix>
  </Query>

  <Query name="NON_PHYSICAL_ITEMS" pmType="ITEM">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.query.results.NonPhysicalItemResult</ResultClass>
    <ResultField name="ItemId" type="String" />
    <ResultField name="TypeCode" type="String" />
    <SQL>
      <Statement dtype="String"><![CDATA[
        SELECT item_id,
               non_phys_item_typcode
        FROM itm_non_phys_item
        ]]></Statement>
    </SQL>
  </Query>

  <Query name="NON_PHYSICAL_ITEMS_FROM_LIST">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.itm.ItemId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[
        , itm_non_phys_item npi
          WHERE
            t.organization_id = ? AND
            t.item_id IN ? AND
            t.organization_id = npi.organization_id AND
            t.item_id = npi.item_id        
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Parameter name="@argItemIdList" />
    </SQL>
    <Suffix dtype="String"><![CDATA[ORDER BY t.organization_id, t.item_id ASC]]></Suffix>
  </Query>

  <Query name="NP_ITEMS_FOR_TYPE">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.itm.ItemId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[, itm_non_phys_item np
          WHERE
            np.organization_id = t.organization_id AND
            np.item_id = t.item_id AND
            t.organization_id = ? 
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Expression trigger="argIncludeType"><![CDATA[/*UPPER*/ np.non_phys_item_typcode = ?]]></Expression>
      <Expression trigger="argIncludeSubType"><![CDATA[/*UPPER*/ np.non_phys_item_subtype = ?]]></Expression>
    </SQL>
    <Property>
      <Key dtype="String">Filter.argExcludeType1</Key>
      <Value dtype="String"><![CDATA[
        (/*UPPER*/ np.non_phys_item_typcode <> ? OR np.non_phys_item_typcode IS NULL)
      ]]></Value>
    </Property>
    <Property>
      <Key dtype="String">Filter.argExcludeType2</Key>
      <Value dtype="String"><![CDATA[
        (/*UPPER*/ np.non_phys_item_typcode <> ? OR non_phys_item_typcode IS NULL)
      ]]></Value>
    </Property>
    <Suffix dtype="String"><![CDATA[ORDER BY t.organization_id, t.item_id ASC]]></Suffix>
  </Query>

  <Query name="NP_ITEMS_FOR_TYPE_NO_EXCLUDE">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.itm.ItemId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[
        , itm_non_phys_item np
          WHERE t.organization_id = ?
          AND t.organization_id = np.organization_id
          AND t.item_id = np.item_id
          AND /*UPPER*/ np.non_phys_item_typcode = ?
          AND /*UPPER*/ np.non_phys_item_subtype = ?
          ORDER BY np.display_order ASC        
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Parameter name="argIncludeType" />
      <Parameter name="argIncludeSubType" />
    </SQL>
  </Query>

  <Query name="NP_ITEM_RESULTS_FOR_TYPE" pmType="ITEM">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.itm.ItemId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[
        , itm_non_phys_item np
          WHERE t.organization_id = ?
            AND np.organization_id = t.organization_id 
            AND np.item_id = t.item_id
            AND np.display_order >= 0    
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Expression trigger="argIncludeType"><![CDATA[/*UPPER*/ np.non_phys_item_typcode = ?]]></Expression>
      <Expression trigger="argExcludeType1"><![CDATA[(/*UPPER*/ np.non_phys_item_typcode <> ? OR np.non_phys_item_typcode IS NULL)]]></Expression>
      <Expression trigger="argExcludeType2"><![CDATA[(/*UPPER*/ np.non_phys_item_typcode <> ? OR np.non_phys_item_typcode IS NULL)]]></Expression>
    </SQL>
    <Suffix dtype="String"><![CDATA[ORDER BY np.display_order]]></Suffix>
  </Query>

  <Query name="OPEN_TIMECARD_RECORD" pmType="TIMECLOCK">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.query.results.TimecardPayrollEmployeeResult</ResultClass>
    <ResultField name="OrganizationId" />
    <ResultField name="PartyId" />
    <ResultField name="EmployeeId" />
    <ResultField name="LastName" />
    <ResultField name="FirstName" />
    <ResultField name="EmployeeDepartmentId" />
    <SQL>
      <Statement dtype="String"><![CDATA[
            select distinct party.organization_id, party.party_id,
            (select employee_id from hrs_employee emp where
            emp.organization_id = entry.organization_id and
            emp.party_id = entry.party_id) AS employee_id,
            last_name, first_name,
            (select department_id from hrs_employee emp where
            emp.organization_id = entry.organization_id and
            emp.party_id = entry.party_id) AS department_id
            from thr_timecard_entry entry, crm_party party
            where entry.organization_id = ? and entry.rtl_loc_id = ? and
            entry.organization_id = party.organization_id and
            entry.party_id = party.party_id and
            clock_in_timestamp is not null and clock_out_timestamp is null and
            clock_in_timestamp between ? and ?
            and entry.delete_flag = ?
        ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
      <Parameter name="argStartDate" />
      <Parameter name="argEndDate" />
      <Parameter name="argDeleteFlag" />
      <Expression trigger="argPartyId"><![CDATA[entry.party_id = ?]]></Expression>
    </SQL>
  </Query>

  <Query name="OPEN_WKSTNS">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.loc.WorkstationId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[
        INNER JOIN loc_state_journal l
        ON t.organization_id=l.organization_id
        AND t.rtl_loc_id=l.rtl_loc_id
        AND t.wkstn_id=l.wkstn_id
        AND l.status_typcode = 'WKSTN_STATE'
        WHERE t.organization_id = ?
        AND t.rtl_loc_id = ?
        AND /*UPPER*/ l.string_value = ?
        AND l.time_stamp = 
            (SELECT max(time_stamp) FROM loc_state_journal l2
             WHERE l.organization_id=l2.organization_id
             AND l.rtl_loc_id=l2.rtl_loc_id
             AND l.wkstn_id=l2.wkstn_id
             AND l.status_typcode=l2.status_typcode)        
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Parameter name="argRtlLocId" />
      <Parameter name="argWsState" />
    </SQL>
    <Suffix dtype="String"><![CDATA[ORDER BY t.wkstn_id ASC]]></Suffix>
  </Query>

  <Query name="PARTY_XREFS" pmType="CUSTOMER">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.crm.PartyId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[, crm_party_cross_reference xref 
      WHERE t.organization_id = xref.organization_id 
      AND t.party_id = xref.child_party_id 
      AND t.organization_id = ? 
      AND xref.party_relationship_typcode = ?  
      AND xref.parent_party_id = ? 
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Parameter name="argTypeCode" />
      <Parameter name="argParentPartyId" />
    </SQL>
  </Query>

  <Query name="PAYMENT_SCHEDULE">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.cat.PaymentScheduleId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[        
          WHERE organization_id = ?
          AND cust_acct_id = ?
          AND cust_acct_code = ?        
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Parameter name="argCustAcctId" />
      <Parameter name="argCustAcctCode" />
    </SQL>
  </Query>

  <Query name="PAYROLL_ACTIVE_PAYSTATUS_EMPLOYEE" pmType="EMPLOYEE">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.query.results.TimecardPayrollEmployeeResult</ResultClass>
    <ResultField name="OrganizationId" />
    <ResultField name="PartyId" />
    <ResultField name="EmployeeId" />
    <ResultField name="LastName" />
    <ResultField name="FirstName" />
    <ResultField name="EmployeeDepartmentId" />
    <SQL>
      <Statement dtype="String"><![CDATA[
            select emp.organization_id, emp.party_id, emp.employee_id,
            (select last_name from crm_party party where party.party_id = emp.party_id
            and party.organization_id = emp.organization_id) AS last_name,
            (select first_name from crm_party party where party.party_id = emp.party_id
            and party.organization_id = emp.organization_id) AS first_name,
            emp.department_id
            from hrs_employee_store store, hrs_employee emp
            where emp.organization_id = store.organization_id
            and emp.employee_id = store.employee_id
            and emp.organization_id = ? and rtl_loc_id = ? and
            (emp.terminated_date is null or emp.terminated_date >= ?)
            and /*UPPER*/ emp.employee_pay_status = ?
        ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
      <Parameter name="argStartDate" />
      <Parameter name="argPayStatus" />
    </SQL>
  </Query>

  <Query name="PAYROLL_CATEGORIES">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.thr.PayrollCategoryId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[        
          WHERE organization_id = ?
          ORDER BY sort_order ASC        
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
    </SQL>
  </Query>

  <Query name="PAYROLL_DATERANGE" pmType="PAYROLL">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.query.results.PayrollDateRangeResult</ResultClass>
    <ResultField name="BusinessDate" type="Date" />
    <SQL>
      <Statement dtype="String"><![CDATA[
      select distinct(business_date) from thr_payroll
      where /*UPPER*/ payroll_status = 'PRE_POST' and organization_id = ? and posted_date is not null
      and rtl_loc_id = ?
      order by business_date
        ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
    </SQL>
  </Query>

  <Query name="PAYROLL_FOR_PERSON_DAY_AND_CATEGORY">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.thr.PayrollId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[        
          WHERE organization_id = ?
          AND business_date = ?
          AND payroll_category = ?
          AND rtl_loc_id = ?
          AND party_id = ?        
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Parameter name="argDay" />
      <Parameter name="argCategory" />
      <Parameter name="argLocId" />
      <Parameter name="argPartyId" />
    </SQL>
  </Query>

  <Query name="PAYROLL_HAS_BEEN_POSTED" pmType="PAYROLL">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.query.results.PayrollPostedResult</ResultClass>
    <ResultField name="PostedCount" type="Integer" />
    <SQL>
      <Statement dtype="String"><![CDATA[
          select count(*) as count
          from thr_payroll
          where organization_id = ? and rtl_loc_id = ? and
          business_date between ? and ? and
          posted_date is not null
        ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
      <Parameter name="argStartDate" />
      <Parameter name="argEndDate" />
      <Expression trigger="argPartyId"><![CDATA[party_id = ?]]></Expression>
    </SQL>
  </Query>

  <Query name="PAYROLL_HAS_BEEN_POSTED_PER_EMPLOYEE" pmType="PAYROLL">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.query.results.PayrollPostedResult</ResultClass>
    <ResultField name="PostedCount" type="Integer" />
    <SQL>
      <Statement dtype="String"><![CDATA[
          select count(*) as count
          from thr_payroll
          where organization_id = ? and rtl_loc_id = ? and
          business_date between ? and ? and
          posted_date is not null and 
          party_id = ?
        ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
      <Parameter name="argStartDate" />
      <Parameter name="argEndDate" />
      <Parameter name="argPartyId" />
    </SQL>
  </Query>

  <Query name="PAYROLL_HAS_NOT_BEEN_POSTED_FOR_WEEK" pmType="PAYROLL">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.query.results.PayrollPostedResult</ResultClass>
    <ResultField name="PostedCount" type="Integer" />
    <SQL>
      <Statement dtype="String"><![CDATA[
          select count(*) as count
          from thr_payroll
          where organization_id = ? and rtl_loc_id = ? and
          business_date between ? and ? and
          posted_date is null
        ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
      <Parameter name="argBeginDate" />
      <Parameter name="argEndDate" />
      <Expression trigger="argPartyId"><![CDATA[party_id = ?]]></Expression>
    </SQL>
  </Query>

  <Query name="PAYROLL_MAX_HOUR_VALIDATION" pmType="PAYROLL">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.query.results.TimecardPayrollEmployeeResult</ResultClass>
    <ResultField name="OrganizationId" />
    <ResultField name="PartyId" />
    <ResultField name="EmployeeId" />
    <ResultField name="LastName" />
    <ResultField name="FirstName" />
    <ResultField name="EmployeeDepartmentId" />
    <SQL>
      <Statement dtype="String"><![CDATA[
            select distinct p1.organization_id, p1.party_id, emp.employee_id, last_name, first_name, department_id
            from thr_payroll p1, hrs_employee emp, crm_party party
            where emp.party_id = p1.party_id and
            emp.organization_id = p1.organization_id and
            party.party_id = p1.party_id and
            party.organization_id = p1.organization_id and
            p1.organization_id = ? and p1.rtl_loc_id = ?
            and business_date = ?
            GROUP BY p1.organization_id, p1.rtl_loc_id, p1.party_id,
               last_name, first_name, p1.party_id,
               emp.employee_id, p1.business_date, department_id
            HAVING (sum(hours_count) > ?)
        ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
      <Parameter name="argBusinessDate" />
      <Parameter name="argMaxHours" />
      <Expression trigger="argPartyId"><![CDATA[p1.party_id = ?]]></Expression>
    </SQL>
  </Query>

  <Query name="PAYROLL_MAX_HOUR_VALIDATION_FOR_EMPLOYEE" pmType="PAYROLL">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.query.results.TimecardPayrollEmployeeResult</ResultClass>
    <ResultField name="OrganizationId" />
    <ResultField name="PartyId" />
    <ResultField name="EmployeeId" />
    <ResultField name="LastName" />
    <ResultField name="FirstName" />
    <ResultField name="EmployeeDepartmentId" />
    <SQL>
      <Statement dtype="String"><![CDATA[
            select distinct p1.organization_id, p1.party_id, emp.employee_id, last_name, first_name, department_id
            from thr_payroll p1, hrs_employee emp, crm_party party
            where emp.party_id = p1.party_id and
            emp.organization_id = p1.organization_id and
            party.party_id = p1.party_id and
            party.organization_id = p1.organization_id and
            p1.organization_id = ? and p1.rtl_loc_id = ?
            and business_date = ? and p1.party_id = ?
            GROUP BY p1.organization_id, p1.rtl_loc_id, p1.party_id,
               last_name, first_name, p1.party_id,
               emp.employee_id, p1.business_date, department_id
            HAVING (sum(hours_count) > ?)
        ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
      <Parameter name="argBusinessDate" />
      <Parameter name="argPartyId" />
      <Parameter name="argMaxHours" />
    </SQL>
  </Query>

  <Query name="PAYROLL_NOTES_FOR_PERSON_AND_WEEK">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.thr.PayrollNotesId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[        
          WHERE party_id = ?
          AND organization_id = ?
          AND week_ending_date = ?        
      ]]></WhereClause>
      <Parameter name="argPartyId" />
      <Parameter name="argOrganizationId" />
      <Parameter name="argWeekEndingDate" />
    </SQL>
  </Query>

  <Query name="PAYROLL_POSTED_FOR_PERSON">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.thr.PayrollId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[        
          WHERE party_id = ?
          AND rtl_loc_id = ?
          AND organization_id = ?
          AND business_date >= ?
          AND business_date <= ?
          AND posted_date IS NOT NULL        
      ]]></WhereClause>
      <Parameter name="argPartyId" />
      <Parameter name="argLocId" />
      <Parameter name="argOrganizationId" />
      <Parameter name="argStartDate" />
      <Parameter name="argEndDate" />
    </SQL>
  </Query>

  <Query name="PAYROLL_WORKING_HOURS" pmType="TIMECLOCK">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.query.results.PayrollWorkingHoursResult</ResultClass>
    <ResultField name="Hours" />
    <SQL>
      <Statement dtype="String"><![CDATA[
          select sum(duration) AS total
          from thr_timecard_entry entry
          where delete_flag = ? and organization_id = ? and rtl_loc_id = ?
          and clock_in_timestamp between ? and ?
          and party_id = ? and exists
          (select * from hrs_work_codes wc where wc.work_code = /*UPPER*/ entry.work_code
          and wc.organization_id = entry.organization_id and /*UPPER*/ payroll_category = ?)
        ]]></Statement>
      <Parameter name="argDeleteFlag" />
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
      <Parameter name="argStartDate" />
      <Parameter name="argEndDate" />
      <Parameter name="argPartyId" />
      <Parameter name="argPayrollCategory" />
    </SQL>
  </Query>

  <Query name="PENDING_CREDIT_AUTHORIZATIONS">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.cat.CustomerAccountAuthorizationId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[WHERE organization_id = ? AND rtl_loc_id = ? AND business_date = ? AND /*UPPER*/ status_code <> 'COMPLETE']]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
      <Parameter name="argBusinessDate" />
    </SQL>
    <Suffix dtype="String"><![CDATA[ORDER BY wkstn_id ASC, trans_seq ASC]]></Suffix>
  </Query>

  <Query name="POST_VOID_TRANSACTION_SEARCH_BY_VOIDED_TRANSACTION" pmType="TRANSACTION">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.query.results.PostVoidTransactionResult</ResultClass>
    <ResultField name="OrganizationId" type="Long" />
    <ResultField name="RtlLocId" type="Long" />
    <ResultField name="BusinessDate" type="Date" />
    <ResultField name="WorkstationId" type="Long" />
    <ResultField name="TransactionSequence" type="Long" />
    <ResultField name="VoidedOrganizationId" type="Long" />
    <ResultField name="VoidedRtlLocId" type="Long" />
    <ResultField name="VoidedBusinessDate" type="Date" />
    <ResultField name="VoidedWorkstationId" type="Long" />
    <ResultField name="VoidedTransactionSequence" type="Long" />
    <ResultField name="PostVoidReasonCode" type="String" />
    <ResultField name="VoidedTransEntryCode" type="String" />
    <SQL>
      <Statement dtype="String"><![CDATA[
        SELECT pvt.organization_id,
               pvt.rtl_loc_id,
               pvt.business_date,
               pvt.wkstn_id,
               pvt.trans_seq,
               pvt.voided_org_id,
               pvt.voided_rtl_store_id,
               pvt.voided_business_date,
               pvt.voided_wkstn_id,
               pvt.voided_trans_id,
               pvt.post_void_reascode,
               pvt.voided_trans_entry_code
        FROM trn_post_void_trans pvt
        WHERE pvt.voided_org_id = ?
        AND   pvt.voided_rtl_store_id = ?
        AND   pvt.voided_business_date = ?
        AND   pvt.voided_wkstn_id = ?
        AND   pvt.voided_trans_id = ?
      ]]></Statement>
      <Parameter name="argVoidedOrgId" />
      <Parameter name="argVoidedRtlLocId" />
      <Parameter name="argVoidedBusinessDate" />
      <Parameter name="argVoidedWkstnId" />
      <Parameter name="argVoidedTransId" />
    </SQL>
  </Query>

  <Query name="PREVIOUS_PAYROLL_HAS_BEEN_POSTED" pmType="PAYROLL">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.query.results.PayrollPostedResult</ResultClass>
    <ResultField name="PostedCount" type="Integer" />
    <SQL>
      <Statement dtype="String"><![CDATA[
          select count(*) as count
          from thr_payroll
          where organization_id = ? and rtl_loc_id = ? and
          business_date <= ? and
          posted_date is null
        ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
      <Parameter name="argDate" />
    </SQL>
  </Query>

  <Query name="PRICE_CHANGE_INVENTORY_LOCATIONS">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.inv.InventoryBucketId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[        
          WHERE t.organization_id = ?
            AND t.rtl_loc_id = ?        
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Parameter name="argRtlLoc" />
    </SQL>
    <Suffix dtype="String"><![CDATA[ORDER BY rtl_loc_id ASC]]></Suffix>
  </Query>

  <Query name="QUERY_SERIALIZED_STOCK_LEDGER">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.inv.SerializedStockLedgerId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[        
          WHERE t.organization_id = ?
            AND t.rtl_loc_id = ?
            AND t.item_id = ?
            ANd t.serial_nbr = ?        
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
      <Parameter name="argItemId" />
      <Parameter name="argSerialNumber" />
      <Expression trigger="@argExcludeBuckets"><![CDATA[t.bucket_id NOT IN ?]]></Expression>
      <Expression trigger="argIncludeBuckets"><![CDATA[t.bucket_id = ?]]></Expression>
    </SQL>
  </Query>

  <Query name="REASON_CODE_LOOKUP">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.com.ReasonCodeId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[        
          WHERE organization_id = ?
          AND COALESCE(hidden_flag, 0) = 0        
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Expression trigger="argCategory"><![CDATA[reason_typcode = ? AND parent_code IS NULL]]></Expression>
      <Expression trigger="argParentCategory"><![CDATA[reason_typcode = ?]]></Expression>
      <Expression trigger="argParentCode"><![CDATA[/*UPPER*/ parent_code = ?]]></Expression>
    </SQL>
    <Suffix dtype="String"><![CDATA[ORDER BY sort_order]]></Suffix>
  </Query>

  <Query name="RECEIPT_TEXT_LOOKUP">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.com.ReceiptTextId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[        
          WHERE t.organization_id = ?
            AND t.text_code = ?
            AND t.text_subcode = ?        
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Parameter name="argCode" />
      <Parameter name="argSubcode" />
    </SQL>
  </Query>

  <Query name="REFUND_SCHEDULES">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.itm.RefundScheduleId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[        
        WHERE t.organization_id = ?
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Expression trigger="argItemId"><![CDATA[item_id = ?]]></Expression>
      <Expression parameters="argBusinessDate, argBusinessDate" trigger="argBusinessDate"><![CDATA[effective_date <= ? AND (expiration_date IS NULL OR expiration_date >= ?)]]></Expression>
    </SQL>
    <Suffix dtype="String"><![CDATA[ORDER BY effective_date desc]]></Suffix>
  </Query>

  <Query name="REPOSITORY_FOR_WKSTN">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.tsn.TenderRepositoryId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[        
          WHERE organization_id = ?
          AND dflt_wkstn_id = ?
          AND rtl_loc_id = ?        
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Parameter name="argWorkstationId" />
      <Parameter name="argLocId" />
    </SQL>
  </Query>

  <Query name="RETRIEVE_STATE_VALUES" pmType="STATE_JOURNAL">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.loc.impl.StateJournalModel</ResultClass>
    <ResultField name="OrganizationId" type="Long" />
    <ResultField name="RetailLocationId" type="Long" />
    <ResultField name="WorkstationId" type="Long" />
    <ResultField name="StatusTypcode" type="String" />
    <ResultField name="StateJournalId" type="String" />
    <ResultField name="TimeStamp" type="Date" />
    <ResultField name="DateValue" type="Date" />
    <ResultField name="StringValue" type="String" />
    <ResultField name="DecimalValue" type="BigDecimal" />
    <SQL>
      <Statement dtype="String"><![CDATA[
          SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value
          FROM loc_state_journal
          WHERE organization_id = ? 
          AND rtl_loc_id = ?
          AND status_typcode = ?
          AND time_stamp in  
            (SELECT max(time_stamp) FROM loc_state_journal 
             WHERE organization_id = ? 
             AND rtl_loc_id = ?
             AND status_typcode = ?)
       ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
      <Parameter name="argStatusTypcode" />
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
      <Parameter name="argStatusTypcode" />
    </SQL>
    <Suffix dtype="String"><![CDATA[ORDER BY time_stamp desc]]></Suffix>
  </Query>

  <Query name="RETRIEVE_STATE_VALUES_LOCAL" pmType="SYNC_JOURNAL_LOCALLY">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.loc.impl.StateJournalModel</ResultClass>
    <ResultField name="OrganizationId" type="Long" />
    <ResultField name="RetailLocationId" type="Long" />
    <ResultField name="WorkstationId" type="Long" />
    <ResultField name="StatusTypcode" type="String" />
    <ResultField name="StateJournalId" type="String" />
    <ResultField name="TimeStamp" type="Date" />
    <ResultField name="DateValue" type="Date" />
    <ResultField name="StringValue" type="String" />
    <ResultField name="DecimalValue" type="BigDecimal" />
    <SQL>
      <Statement dtype="String"><![CDATA[
          SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value
          FROM loc_state_journal
          WHERE organization_id = ? 
          AND rtl_loc_id = ?
          AND status_typcode = ?
          AND time_stamp in  
            (SELECT max(time_stamp) FROM loc_state_journal 
             WHERE organization_id = ? 
             AND rtl_loc_id = ?
             AND status_typcode = ?)
       ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
      <Parameter name="argStatusTypcode" />
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
      <Parameter name="argStatusTypcode" />
    </SQL>
    <Suffix dtype="String"><![CDATA[ORDER BY time_stamp desc]]></Suffix>
  </Query>

  <Query name="RETRIEVE_STATE_VALUES_WKSTN_SPECIFIC" pmType="STATE_JOURNAL">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.loc.impl.StateJournalModel</ResultClass>
    <ResultField name="OrganizationId" type="Long" />
    <ResultField name="RetailLocationId" type="Long" />
    <ResultField name="WorkstationId" type="Long" />
    <ResultField name="StatusTypcode" type="String" />
    <ResultField name="StateJournalId" type="String" />
    <ResultField name="TimeStamp" type="Date" />
    <ResultField name="DateValue" type="Date" />
    <ResultField name="StringValue" type="String" />
    <ResultField name="DecimalValue" type="BigDecimal" />
    <SQL>
      <Statement dtype="String"><![CDATA[
          SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value
          FROM loc_state_journal
          WHERE organization_id = ? 
          AND rtl_loc_id = ?
          AND status_typcode = ?
          AND wkstn_id = ?
          AND time_stamp in  
            (SELECT max(time_stamp) FROM loc_state_journal 
             WHERE organization_id = ? 
             AND rtl_loc_id = ?
             AND status_typcode = 'WKSTN_STATE'
             AND wkstn_id = ?)
       ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
      <Parameter name="argStatusTypcode" />
      <Parameter name="argWorkstationId" />
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
      <Parameter name="argWorkstationId" />
    </SQL>
    <Suffix dtype="String"><![CDATA[ORDER BY time_stamp desc]]></Suffix>
  </Query>

  <Query name="STARTED_BUSINESS_PERIODS" pmType="STATE_JOURNAL">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.pos.framework.systemcycle.BusinessDayQueryResult</ResultClass>
    <ResultField name="Date" type="Date" />
    <SQL>
      <Statement dtype="String"><![CDATA[
        SELECT date_value
        FROM loc_state_journal
        WHERE status_typcode = 'BUSINESS_PERIOD'
        AND organization_id = ?
        AND rtl_loc_id = ?
        AND date_value = ?
      ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
      <Parameter name="argBusinessDate" />
    </SQL>
  </Query>

  <!-- If the store has ever been opened in either 24x7 or non-24x7 mode, indicate so by returning the store number -->
  <Query name="HAS_STORE_EVER_BEEN_OPENED" pmType="STATE_JOURNAL">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.pos.framework.systemcycle.RetailLocationIdQueryResult</ResultClass>
    <ResultField name="RetailLocationId" type="Integer" />
    <SQL>
      <Statement dtype="String"><![CDATA[
        SELECT DISTINCT rtl_loc_id
        FROM loc_state_journal
        WHERE status_typcode IN('WKSTN_STATE', 'BUSINESS_DATE')
        AND organization_id = ?
        AND rtl_loc_id = ?
      ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
    </SQL>
  </Query>

  <Query name="END_OF_DAY_COMPLETED" pmType="STATE_JOURNAL">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.pos.framework.systemcycle.BusinessDayQueryResult</ResultClass>
    <ResultField name="Date" type="Date" />
    <SQL>
      <Statement dtype="String"><![CDATA[
        SELECT date_value
        FROM loc_state_journal
        WHERE status_typcode = 'BUSINESS_PERIOD'
        AND /*UPPER*/ string_value = 'CLOSED'
        AND organization_id = ?
        AND rtl_loc_id = ?
        AND date_value = ?
       ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
      <Parameter name="argBusinessDate" />
    </SQL>
  </Query>

  <!-- Get the business dates for every workstation that has been both opened and closed, excluding dates for which 
    either there is a business period record that has been opened and not closed, or for which there is no business 
    period record, or for which there are unreonciled tills. -->
  <Query name="END_OF_DAY_BUSINESS_DATES" pmType="STATE_JOURNAL">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.pos.framework.systemcycle.BusinessDayQueryResult</ResultClass>
    <ResultField name="Date" type="Date" />
    <SQL>
      <Statement dtype="String"><![CDATA[
          SELECT DISTINCT date_value
          FROM loc_state_journal lsj_a
          WHERE /*UPPER*/ lsj_a.string_value = 'OPEN' 
          AND lsj_a.status_typcode = 'WKSTN_STATE' 
          AND lsj_a.organization_id = ?
          AND lsj_a.rtl_loc_id = ?
          AND lsj_a.date_value in
            (SELECT DISTINCT date_value 
             FROM loc_state_journal lsj_aa
             WHERE /*UPPER*/ lsj_aa.string_value = 'OPEN' 
             AND lsj_aa.status_typcode = 'BUSINESS_PERIOD' 
             AND lsj_aa.organization_id = ?
             AND lsj_aa.rtl_loc_id = ?
             AND not exists 
               (SELECT * 
                FROM loc_state_journal lsj_ab 
                WHERE lsj_ab.date_value = lsj_aa.date_value 
                AND lsj_ab.status_typcode = 'BUSINESS_PERIOD' 
                AND lsj_ab.organization_id = ? 
                AND lsj_ab.rtl_loc_id = ?
                AND /*UPPER*/ lsj_ab.string_value = 'CLOSED'))
          AND lsj_a.date_value NOT IN
            (SELECT business_date 
             FROM tsn_session, tsn_tndr_repository
             WHERE /*UPPER*/ tsn_session.tndr_repository_id = tsn_tndr_repository.tndr_repository_id
             AND tsn_session.organization_id = ?
             AND tsn_session.rtl_loc_id = ?
             AND /*UPPER*/ tsn_tndr_repository.typcode = 'TILL'
             AND /*UPPER*/ tsn_session.statcode != 'RECONCILED'
             AND /*UPPER*/ tsn_session.statcode != 'UNCOUNTED')
          AND EXISTS 
            (SELECT * from loc_state_journal lsj_b
             WHERE lsj_b.date_value = lsj_a.date_value
             AND lsj_b.wkstn_id = lsj_a.wkstn_id
             AND lsj_b.status_typcode = 'WKSTN_STATE'
             AND lsj_b.organization_id = ?
             AND lsj_b.rtl_loc_id = ?
             AND /*UPPER*/ lsj_b.string_value = 'CLOSED')
       ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
    </SQL>
  </Query>

  <Query name="RETRIEVE_STATE_VALUES_WKSTN_SPECIFIC_LOCAL" pmType="SYNC_JOURNAL_LOCALLY">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.loc.impl.StateJournalModel</ResultClass>
    <ResultField name="OrganizationId" type="Long" />
    <ResultField name="RetailLocationId" type="Long" />
    <ResultField name="WorkstationId" type="Long" />
    <ResultField name="StatusTypcode" type="String" />
    <ResultField name="StateJournalId" type="String" />
    <ResultField name="TimeStamp" type="Date" />
    <ResultField name="DateValue" type="Date" />
    <ResultField name="StringValue" type="String" />
    <ResultField name="DecimalValue" type="BigDecimal" />
    <SQL>
      <Statement dtype="String"><![CDATA[
          SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value
          FROM loc_state_journal
          WHERE organization_id = ? 
          AND rtl_loc_id = ?
          AND status_typcode = ?
          AND wkstn_id = ?
          AND time_stamp in  
            (SELECT max(time_stamp) FROM loc_state_journal 
             WHERE organization_id = ? 
             AND rtl_loc_id = ?
             AND status_typcode = 'WKSTN_STATE'
             AND wkstn_id = ?)
       ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
      <Parameter name="argStatusTypcode" />
      <Parameter name="argWorkstationId" />
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
      <Parameter name="argWorkstationId" />
    </SQL>
    <Suffix dtype="String"><![CDATA[ORDER BY time_stamp desc]]></Suffix>
  </Query>

  <Query name="SALE_LINE_ITEMS_BY_SERIAL_NBR">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.trl.RetailTransactionLineItemId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[        
          JOIN trl_sale_lineitm s ON s.organization_id = t.organization_id
           AND s.rtl_loc_id = t.rtl_loc_id
           AND s.business_date = t.business_date
           AND s.wkstn_id = t.wkstn_id
           AND s.trans_seq = t.trans_seq
           AND s.rtrans_lineitm_seq = t.rtrans_lineitm_seq
         WHERE t.organization_id = ? 
           AND /*UPPER*/ s.serial_nbr = ?            
        ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Parameter name="argSerialNumber" />
    </SQL>
  </Query>

  <Query name="SALES_GOALS" pmType="TRANSACTION">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.pos.salesgoal.SalesGoalInfoResult</ResultClass>
    <ResultField name="SalesGoalId" type="String" />
    <ResultField name="Description" type="String" />
    <ResultField name="EffectiveDate" type="Date" />
    <ResultField name="EndDate" type="Date" />
    <ResultField name="SalesGoalValue" type="BigDecimal" />
    <ResultField name="SalesGoalToDate" type="BigDecimal" />
    <SQL>
      <Statement dtype="String"><![CDATA[
          SELECT sales_goal_id,
                 description,
                 effective_date,
                 end_date,
                 sales_goal_value,
                 (SELECT 
                    COALESCE(SUM(tsl.net_amt),0)
                    FROM rpt_sale_line tsl
                    WHERE ssg.effective_date <= tsl.trans_timestamp
                      AND ssg.end_date >= tsl.trans_timestamp
                      AND /*UPPER*/ tsl.trans_statcode = 'COMPLETE' 
                  ) as to_date       
            FROM sls_sales_goal ssg
            WHERE ssg.organization_id = ?
            AND sales_goal_value <> 0
            AND effective_date < end_date
          ]]></Statement>
      <Parameter name="argOrganizationId" />
    </SQL>
    <Suffix dtype="String"><![CDATA[ORDER BY end_date ASC, effective_date ASC, description ASC]]></Suffix>
  </Query>

  <Query name="SAVED_REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.com.ReportLookupId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[        
          WHERE t.organization_id = ? 
            AND t.delete_flag = ?  
            AND parent_report_id is null 
            AND ( (owner_type_enum = 'CHAIN')
                OR (owner_type_enum = 'RETAIL_LOCATION' AND owner_id = ?)
                OR (owner_type_enum = 'EMPLOYEE' AND owner_id = ?)
           )]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Parameter name="argDeleteFlag" />
      <Parameter name="argRetailLocationId" />
      <Parameter name="argEmployeeId" />
    </SQL>
    <Suffix dtype="String"><![CDATA[ORDER BY record_creation_date DESC]]></Suffix>
  </Query>

  <Query name="SCHEMA_VERSION" pmType="RESERVED_LOCAL">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.ctl.impl.VersionModel</ResultClass>
    <ResultField name="BaseSchemaVersion" type="String" />
    <ResultField name="BaseSchemaDate" type="Date" />
    <ResultField name="CustomerSchemaVersion" type="String" />
    <ResultField name="CustomerSchemaDate" type="Date" />
    <SQL>
      <Statement dtype="String"><![CDATA[        
          SELECT base_schema_version,
                 base_schema_date,
                 customer_schema_version,
                 customer_schema_date
            FROM ctl_version_history ver1
           WHERE organization_id = ?
             AND seq = (SELECT max(seq) 
                          FROM ctl_version_history ver2
                         WHERE ver1.organization_id = ver2.organization_id
                         )        
      ]]></Statement>
      <Parameter name="argOrganizationId" />
    </SQL>
  </Query>

  <Query name="SEARCH_TRANS_ID_BY_ITEM_SERIAL_NUMBER" pmType="TRANSACTION_LOOKUP">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.query.results.TransactionIdSearchResult</ResultClass>
    <ResultField name="OrganizationId" type="Long" />
    <ResultField name="RetailLocationId" type="Long" />
    <ResultField name="BusinessDate" type="Date" />
    <ResultField name="TransactionDate" type="Date" />
    <ResultField name="BeginDateTimestamp" type="Date" />
    <ResultField name="TransactionSequence" type="Long" />
    <ResultField name="WorkstationId" type="Long" />
    <ResultField name="ItemId" type="String" />
    <ResultField name="SaleItemType" type="String" />
    <ResultField name="LineItemSeq" type="Long" />
    <ResultField name="ItemDescription" type="String" />
    <ResultField name="Qty" type="BigDecimal" />
    <SQL>
      <Statement dtype="String"><![CDATA[
        SELECT sline.organization_id,
               sline.rtl_loc_id,
               sline.business_date,
               trans.begin_datetime,
               trans.trans_date,
               sline.trans_seq,
               sline.wkstn_id,
               sline.item_id,
               sline.sale_lineitm_typcode,
               sline.rtrans_lineitm_seq,
               item.description,
               sline.quantity
          FROM trn_trans trans
              INNER JOIN trl_rtrans_lineitm rline
                   ON rline.organization_id = trans.organization_id
                  AND rline.rtl_loc_id = trans.rtl_loc_id
                  AND rline.wkstn_id = trans.wkstn_id
                  AND rline.business_date = trans.business_date
                  AND rline.trans_seq = trans.trans_seq
              INNER JOIN trl_sale_lineitm sline
                   ON rline.organization_id = sline.organization_id
                  AND rline.rtl_loc_id = sline.rtl_loc_id
                  AND rline.wkstn_id = sline.wkstn_id
                  AND rline.business_date = sline.business_date
                  AND rline.trans_seq = sline.trans_seq
                  AND rline.rtrans_lineitm_seq = sline.rtrans_lineitm_seq
              LEFT OUTER JOIN trl_kit_component_mod kline
                   ON kline.organization_id = sline.organization_id
                  AND kline.rtl_loc_id = sline.rtl_loc_id
                  AND kline.wkstn_id = sline.wkstn_id
                  AND kline.business_date = sline.business_date
                  AND kline.trans_seq = sline.trans_seq
                  AND kline.rtrans_lineitm_seq = sline.rtrans_lineitm_seq
                  AND /*UPPER*/ kline.kit_item_id = /*UPPER*/ sline.item_id
              LEFT OUTER JOIN itm_item item
                   ON item.organization_id = sline.organization_id
                  AND item.item_id = /*UPPER*/ sline.item_id
                  
          WHERE rline.void_flag = ?
            AND /*UPPER*/ trans.trans_statcode = 'COMPLETE'
            AND trans.post_void_flag = 0
            AND trans.organization_id = ?
            AND (/*UPPER*/ sline.serial_nbr = ? OR /*UPPER*/ kline.serial_nbr = ?)
            AND /*UPPER*/ sline.sale_lineitm_typcode = 'SALE'
            AND sline.return_flag = ?
        ]]></Statement>
      <Parameter name="argVoidFlag" />
      <Parameter name="argOrganizationId" />
      <Parameter name="argSerialNumber" />
      <Parameter name="argSerialNumber" />
      <Parameter name="argReturnFlag" />
    </SQL>
  </Query>

  <Query name="SEARCH_TRANS_ID_BY_FISCAL_NUMBER" pmType="TRANSACTION_LOOKUP">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.query.results.TransactionIdSearchResult</ResultClass>
    <ResultField name="OrganizationId" type="Long" />
    <ResultField name="RetailLocationId" type="Long" />
    <ResultField name="BusinessDate" type="Date" />
    <ResultField name="TransactionDate" type="Date" />
    <ResultField name="BeginDateTimestamp" type="Date" />
    <ResultField name="TransactionSequence" type="Long" />
    <ResultField name="FiscalNumber" type="String" />
    <ResultField name="WorkstationId" type="Long" />
    <ResultField name="ItemId" type="String" />
    <ResultField name="SaleItemType" type="String" />
    <ResultField name="LineItemSeq" type="Long" />
    <ResultField name="ItemDescription" type="String" />
    <ResultField name="Qty" type="BigDecimal" />
    <SQL>
      <Statement dtype="String"><![CDATA[
        SELECT sline.organization_id,
               sline.rtl_loc_id,
               sline.business_date,
               trans.trans_date,
               trans.begin_datetime,
               sline.trans_seq,
               trans.fiscal_number,
               sline.wkstn_id,
               sline.item_id,
               sline.sale_lineitm_typcode,
               sline.rtrans_lineitm_seq,
               item.description,
               quantity
          FROM trn_trans trans
              INNER JOIN trl_rtrans_lineitm rline
                   ON rline.organization_id = trans.organization_id
                  AND rline.rtl_loc_id = trans.rtl_loc_id
                  AND rline.wkstn_id = trans.wkstn_id
                  AND rline.business_date = trans.business_date
                  AND rline.trans_seq = trans.trans_seq
              INNER JOIN trl_sale_lineitm sline
                   ON rline.organization_id = sline.organization_id
                  AND rline.rtl_loc_id = sline.rtl_loc_id
                  AND rline.wkstn_id = sline.wkstn_id
                  AND rline.business_date = sline.business_date
                  AND rline.trans_seq = sline.trans_seq
                  AND rline.rtrans_lineitm_seq = sline.rtrans_lineitm_seq
              LEFT OUTER JOIN itm_item item
                   ON item.organization_id = sline.organization_id
                  AND item.item_id = /*UPPER*/ sline.item_id
          WHERE rline.void_flag = ?
            AND /*UPPER*/ trans.trans_statcode = 'COMPLETE'
            AND trans.post_void_flag = 0
            AND trans.organization_id = ?
            AND /*UPPER*/ trans.fiscal_number = ?
            AND sline.return_flag = ?
        ]]></Statement>
      <Parameter name="argVoidFlag" />
      <Parameter name="argOrganizationId" />
      <Parameter name="argFiscalNumber" />
      <Parameter name="argReturnFlag" />
    </SQL>
  </Query>

  <Query name="SEARCH_TRANS_ID_BY_CREDIT_CARD_NUMBER" pmType="TRANSACTION_LOOKUP">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.query.results.TransactionIdSearchResult</ResultClass>
    <ResultField name="OrganizationId" type="Long" />
    <ResultField name="RetailLocationId" type="Long" />
    <ResultField name="BusinessDate" type="Date" />
    <ResultField name="TransactionDate" type="Date" />
    <ResultField name="BeginDateTimestamp" type="Date" />
    <ResultField name="TransactionSequence" type="Long" />
    <ResultField name="WorkstationId" type="Long" />
    <ResultField name="ItemId" type="String" />
    <ResultField name="SaleItemType" type="String" />
    <ResultField name="LineItemSeq" type="Long" />
    <ResultField name="ItemDescription" type="String" />
    <ResultField name="Qty" type="BigDecimal" />
    <SQL>
      <Statement dtype="String"><![CDATA[
        SELECT sline.organization_id,
               sline.rtl_loc_id,
               sline.business_date,
               trans.begin_datetime,
               trans.trans_date,
               sline.trans_seq,
               sline.wkstn_id,
               sline.item_id,
               sline.sale_lineitm_typcode,
               sline.rtrans_lineitm_seq,
               item.description,
               quantity
          FROM trn_trans trans
              INNER JOIN trl_rtrans_lineitm rline
                   ON rline.organization_id = trans.organization_id
                  AND rline.rtl_loc_id = trans.rtl_loc_id
                  AND rline.wkstn_id = trans.wkstn_id
                  AND rline.business_date = trans.business_date
                  AND rline.trans_seq = trans.trans_seq
              INNER JOIN trl_sale_lineitm sline
                   ON rline.organization_id = sline.organization_id
                  AND rline.rtl_loc_id = sline.rtl_loc_id
                  AND rline.wkstn_id = sline.wkstn_id
                  AND rline.business_date = sline.business_date
                  AND rline.trans_seq = sline.trans_seq
                  AND rline.rtrans_lineitm_seq = sline.rtrans_lineitm_seq
              LEFT OUTER JOIN itm_item item
                   ON item.organization_id = sline.organization_id
                  AND item.item_id = /*UPPER*/ sline.item_id
          WHERE rline.void_flag = ?
            AND /*UPPER*/ trans.trans_statcode = 'COMPLETE'
            AND trans.post_void_flag = 0
            AND trans.organization_id = ?
            AND sline.return_flag = ?
        ]]></Statement>
      <Parameter name="argVoidFlag" />
      <Parameter name="argOrganizationId" />
      <Parameter name="argReturnFlag" />
      <Expression trigger="argHashedAcct"><![CDATA[
        EXISTS
          (Select * From ttr_credit_debit_tndr_lineitm cdtl
            Where trans.organization_id = cdtl.organization_id
              And trans.business_date = cdtl.business_date
              And trans.rtl_loc_id = cdtl.rtl_loc_id
              And trans.wkstn_id = cdtl.wkstn_id
              And trans.trans_seq = cdtl.trans_seq
              And /*UPPER*/ cdtl.acct_nbr_hash = ?)
      ]]></Expression>
    </SQL>
  </Query>

  <Query name="SEARCH_TRANS_LIST_BY_FISCAL_NUMBER" pmType="TRANSACTION_LOOKUP">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.query.results.DefaultTransactionSummaryModel</ResultClass>
    <ResultField name="OrganizationId" type="Long" />
    <ResultField name="RetailLocationId" type="Long" />
    <ResultField name="BusinessDate" type="Date" />
    <ResultField name="TransactionDate" type="Date" />
    <ResultField name="TransactionSequence" type="Long" />
    <ResultField name="FiscalNumber" type="String" />
    <ResultField name="WorkstationId" type="Long" />
    <ResultField name="Total" type="BigDecimal" />
    <SQL>
      <Statement dtype="String"><![CDATA[
        SELECT organization_id,
               rtl_loc_id,
               business_date,
               trans_date,
               trans_seq,
               fiscal_number,
               wkstn_id,
               total
          FROM trn_trans
          WHERE /*UPPER*/ trans_statcode = 'COMPLETE'
                AND organization_id = ?
                AND /*UPPER*/ fiscal_number = ?
                AND /*UPPER*/ trans_typcode = 'RETAIL_SALE'
        ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argFiscalNumber" />
    </SQL>
  </Query>

  <Query name="SECURITY_ACLS">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.sec.AccessControlListId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[ WHERE organization_id = ? 
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
    </SQL>
  </Query>

  <Query name="SECURITY_GROUPS">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.sec.GroupId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[
         WHERE organization_id = ?
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
    </SQL>
    <Suffix dtype="String"><![CDATA[ORDER BY group_rank ASC, bitmap_position ASC]]></Suffix>
  </Query>

  <Query name="SECURITY_PRIVILEGES">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.sec.PrivilegeId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[ WHERE organization_id = ? 
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
    </SQL>
  </Query>

  <!-- RXPS-12109 -->
  <Query name="SYSTEM_USER_PASSWORD_LOOKUP">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.sec.UserPasswordId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[ 
          WHERE organization_id = ? 
          AND username = ?
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Parameter name="argUsername" />
    </SQL>
    <Property>
      <Key dtype="String">MaxRows</Key>
      <Value dtype="String"><![CDATA[1]]></Value>
    </Property>
    <Suffix dtype="String"><![CDATA[ORDER BY password_seq DESC]]></Suffix>
  </Query>
  <!-- RXPS-12109 -->

  <Query name="IPC.LOOKUP_PASSWORD" pmType="RESERVED_STORE">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.data2.security.ipc.IpcPasswordResult</ResultClass>
    <ResultField name="Password" type="String" />
    <SQL>
      <Statement dtype="String"><![CDATA[select password from sec_password where organization_id = ?]]></Statement>
      <Parameter name="argOrganizationId" />
    </SQL>
  </Query>
  <Query name="IPC.INSERT_PASSWORD" pmType="RESERVED_STORE">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <SQL>
      <Statement dtype="String"><![CDATA[
INSERT INTO sec_password (organization_id, password_id, password, create_date, create_user_id) VALUES (?, 0, ?, ?, ?)
        ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argPassword" />
      <Parameter name="argCreateDate" />
      <Parameter name="argCreateUserId" />
    </SQL>
  </Query>
  <Query name="IPC.UPSERT_PASSWORD_LOCAL" pmType="RESERVED_LOCAL">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <SQL>
    <!-- MERGE has been supported in Oracle DB for some time. It was added to MSSQL SERVER 2008. -->
    <!-- On Oracle DUAL is built-in. On MSSQL, we have view named DUAL -->
      <Statement dtype="String"><![CDATA[
 merge into sec_password p 
  using (select ? organization_id, 0 password_id, ? password, ? the_date, ? the_user from dual) v
  on (p.organization_id = v.organization_id and p.password_id = v.password_id)
when matched then 
  update SET password = v.password, update_date = v.the_date, update_user_id = v.the_user
when not matched then 
  insert (organization_id, password_id, password, create_date, create_user_id) 
  values (v.organization_id, v.password_id, v.password, v.the_date, v.the_user)
        ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argPassword" />
      <Parameter name="argCreateDate" />
      <Parameter name="argCreateUserId" />
    </SQL>
  </Query>
  <Query name="SERVICE_LOC_LOOKUP" pmType="CODES">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.query.results.ServiceLocationSearchResult</ResultClass>
    <ResultField name="OrganizationId" />
    <ResultField name="ServiceLocationId" />
    <ResultField name="Description" />
    <ResultField name="Address1" />
    <ResultField name="Address2" />
    <ResultField name="City" />
    <ResultField name="Territory" />
    <ResultField name="PostalCode" />
    <SQL>
      <Statement dtype="String"><![CDATA[ 
        select sl.organization_id, sl.service_loc_id, sl.description, ad.address1,  
          ad.address2, ad.city, ad.territory, ad.postal_code 
        from cwo_service_loc sl 
        left join com_address ad on /*UPPER*/ sl.address_id = ad.address_id
          and sl.organization_id = ad.organization_id
        where sl.organization_id = ?
        ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Expression trigger="argNumber"><![CDATA[sl.service_loc_id = ?]]></Expression>
      <Expression parameters="argName%" trigger="argName"><![CDATA[/*UPPER*/ sl.description like ?]]></Expression>
      <Expression trigger="argAddressNotNull"><![CDATA[1=? AND sl.address_id IS NOT NULL]]></Expression>
    </SQL>
    <Suffix dtype="String"><![CDATA[ORDER BY sl.description]]></Suffix>
  </Query>

  <Query name="SESSION_WKSTN_BY_WKSTN">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.tsn.SessionWorkstationId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[        
          WHERE organization_id = ?
          AND wkstn_id = ?
          AND rtl_loc_id = ?
          AND attached_flag = 1
          ORDER BY begin_datetime DESC        
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Parameter name="argWorkStationId" />
      <Parameter name="argLocId" />
    </SQL>
  </Query>

  <Query name="SHIPPING_COST.LOOKUP">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.com.ShippingCostId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[
         WHERE organization_id = ? 
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Expression trigger="argCategory"><![CDATA[category = ?]]></Expression>
      <Expression trigger="argValue"><![CDATA[begin_range <= ? AND end_range >= ?]]></Expression>
    </SQL>
    <Property>
      <Key dtype="String">MaxRows</Key>
      <Value dtype="String"><![CDATA[100]]></Value>
    </Property>
  </Query>

  <Query name="SHIPPING_FEES">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.com.ShippingFeeId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[
        WHERE t.organization_id = ?
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
    </SQL>
  </Query>

  <Query name="SEND_SALE_CUSTOMER_ACCOUNT_BY_DATE">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.cat.CustomerAccountId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[        
          WHERE last_activity_date = ?        
      ]]></WhereClause>
      <Parameter name="argLastActivityDate" />
    </SQL>
  </Query>

  <Query name="SIMILAR_ITEMS" pmType="ITEM">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.query.results.BasicItemQueryResult</ResultClass>
    <ResultField name="ItemId" type="String" />
    <ResultField name="Description" type="String" />
    <ResultField name="Dimension1" type="String" />
    <ResultField name="Dimension2" type="String" />
    <ResultField name="Dimension3"  type="String"/>
    <ResultField name="InventoryCount" type="BigDecimal" />
    <SQL>
      <Statement dtype="String"><![CDATA[
            SELECT t.item_id,
                   t.description,
                   t.dimension1,
                   t.dimension2, 
                   t.dimension3,
                   (SELECT sl.unitcount FROM inv_stock_ledger_acct sl WHERE t.organization_id = sl.organization_id AND sl.rtl_loc_id = ? AND sl.inv_location_id = ? AND sl.bucket_id = ? AND t.item_id = sl.item_id) AS inventoryCount
              FROM itm_item t 
              WHERE t.organization_id = ?
                AND /*UPPER*/ t.parent_item_id = ?
      ]]></Statement>
      <Parameter name="argRetailLocationId" />
      <Parameter name="argInventoryLocationId" />
      <Parameter name="argBucketId" />
      <Parameter name="argOrganizationId" />
      <Parameter name="argItemId" />
    </SQL>
    <Suffix dtype="String"><![CDATA[ORDER BY t.item_id]]></Suffix>
  </Query>

  <Query name="SP_FLASH_SALES" pmType="TRANSACTION">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <SQL>
      <Statement dtype="String"><![CDATA[{call sp_flash (?, ?, ?, ?, ?)}]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
      <Parameter name="argBusinessDate" />
      <Parameter name="argWrkstnId" />
      <Parameter name="argTransSeq" />
    </SQL>
    <Property>
      <Key dtype="String">QueryType</Key>
      <Value dtype="String"><![CDATA[Procedure]]></Value>
    </Property>
  </Query>

  <Query name="STOCK_LEDGER_FOR_ITEM">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.inv.StockLedgerId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[
        , inv_location loc 
          WHERE t.organization_id = loc.organization_id 
            AND t.rtl_loc_id = loc.rtl_loc_id 
            AND t.inv_location_id = loc.inv_location_id 
            AND t.organization_id = ?
            AND t.rtl_loc_id = ?
            AND loc.active_flag = ?        
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
      <Parameter name="argActiveFlag" />
      <Expression trigger="argItemId"><![CDATA[t.item_id = ?]]></Expression>
      <Expression trigger="@argItemIds"><![CDATA[t.item_id IN ?]]></Expression>
      <Expression trigger="argBucketId"><![CDATA[t.bucket_id = ?]]></Expression>
    </SQL>
    <Suffix dtype="String"><![CDATA[ORDER BY t.item_id, t.inv_location_id, t.bucket_id ASC]]></Suffix>
  </Query>

  <Query name="STORE_BANK_SESSION">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.tsn.SessionId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[
        , tsn_tndr_repository tndr
          WHERE tndr.tndr_repository_id = /*UPPER*/ t.tndr_repository_id
            AND tndr.organization_id = t.organization_id
            AND tndr.rtl_loc_id = t.rtl_loc_id
            AND /*UPPER*/ tndr.typcode = 'STOREBANK'
            AND t.organization_id = ?
            AND t.rtl_loc_id = ?        
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Parameter name="argLocId" />
    </SQL>
  </Query>

  <Query name="STORE_TAXES">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.tax.TaxGroupId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[
        , tax_tax_group_rule r
          WHERE t.organization_id = r.organization_id
            AND t.tax_group_id = r.tax_group_id
            AND t.organization_id = ?
            AND r.tax_loc_id = ?        
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Parameter name="argId" />
    </SQL>
  </Query>

  <Query name="SUBSTITUTE_ITEMS" pmType="ITEM">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultFilter dtype="String">levelCodeLevelValueResultFilter</ResultFilter>
    <ResultClass dtype="String">dtv.xst.query.results.SubstituteItemsQueryResult</ResultClass>
    <ResultField name="ItemId" type="String" />
    <ResultField name="Description" type="String" />
    <ResultField name="PrimaryItemId" type="String" />
    <ResultField name="LevelCode" type="String" />
    <ResultField name="LevelValue" type="String" />
    <SQL>
      <Statement dtype="String"><![CDATA[
        SELECT t.item_id, t.description, sub.primary_item_id, sub.level_code, sub.level_value 
        FROM
        itm_item t, itm_substitute_items sub
          WHERE sub.organization_id = t.organization_id
            AND sub.substitute_item_id = t.item_id
            AND sub.primary_item_id = ?
            AND t.organization_id = ?  
            AND (sub.begin_datetime IS NULL OR sub.begin_datetime <= ?)
            AND (sub.end_datetime IS NULL OR sub.end_datetime >= ?)
      ]]></Statement>
      <Parameter name="argItemId" />
      <Parameter name="argOrganizationId" />
      <Parameter name="argBusinessDate" />
      <Parameter name="argBusinessDate" />
    </SQL>
  </Query>

  <Query name="SUSPENDED_TRANSACTION_SEARCH" pmType="TRANSACTION">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.query.results.SuspendedTransSearchResult</ResultClass>
    <ResultField name="BusinessDate" type="Date" />
    <ResultField name="RetailLocationId" type="Long" />
    <ResultField name="WorkstationId" type="Long" />
    <ResultField name="TransStartTime" type="Date" />
    <ResultField name="TransactionSequence" type="Long" />
    <ResultField name="OrganizationId" type="Long" />
    <ResultField name="CashierId" type="String" />
    <ResultField name="CustomerFirstName" type="String" />
    <ResultField name="CustomerLastName" type="String" />
    <ResultField name="CustomerOtherName" type="String" />
    <SQL>
      <Statement dtype="String"><![CDATA[
      SELECT rt.business_date, rt.rtl_loc_id, rt.wkstn_id, rtran.begin_datetime,
             rt.trans_seq, rt.organization_id, emp.employee_id, cust.first_name, cust.last_name, prop.string_value
        FROM trn_trans rtran
            JOIN trl_rtrans rt
                 ON rtran.organization_id = rt.organization_id
                AND rtran.rtl_loc_id = rt.rtl_loc_id
                AND rtran.wkstn_id = rt.wkstn_id 
                AND rtran.business_date = rt.business_date
                AND rtran.trans_seq = rt.trans_seq
            LEFT OUTER JOIN trn_trans_p prop
                 ON rtran.organization_id = prop.organization_id
                AND rtran.rtl_loc_id = prop.rtl_loc_id
                AND rtran.wkstn_id = prop.wkstn_id 
                AND rtran.business_date = prop.business_date
                AND rtran.trans_seq = prop.trans_seq
                AND prop.property_code = 'CUSTOMER_NAME'
            LEFT OUTER JOIN hrs_employee emp
                 ON rtran.organization_id = emp.organization_id
                AND rtran.operator_party_id = emp.party_id
            LEFT OUTER JOIN crm_party cust
                 ON rt.organization_id = cust.organization_id
                AND rt.cust_party_id = cust.party_id
       WHERE /*UPPER*/ rtran.trans_statcode = 'SUSPEND'
         AND rtran.organization_id = rt.organization_id
         AND rtran.rtl_loc_id = rt.rtl_loc_id
         AND rtran.wkstn_id = rt.wkstn_id 
         AND rtran.business_date = rt.business_date
         AND rtran.trans_seq = rt.trans_seq 
         AND NOT EXISTS
               (Select * From trn_trans_link link 
                 Where link.organization_id = rt.organization_id 
                   And link.link_rtl_loc_id = rt.rtl_loc_id 
                   And link.link_wkstn_id = rt.wkstn_id 
                   And link.link_business_date = rt.business_date 
                   And link.link_trans_seq = rt.trans_seq 
                   And /*UPPER*/ link.link_typcode = 'RESUME_TRANSACTION')
         AND rt.organization_id = ?
      ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Expression trigger="argBusinessDate"><![CDATA[rt.business_date = ?]]></Expression>
      <Expression trigger="argRetailLocationId"><![CDATA[rt.rtl_loc_id = ?]]></Expression>
    </SQL>
  </Query>

  <Query name="SYNC_JOURNAL_LOCALLY" pmType="SYNC_JOURNAL_LOCALLY">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <SQL>
      <Statement dtype="String"><![CDATA[
          INSERT INTO loc_state_journal
          (organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, string_value, date_value)
          VALUES (?, ?, ?, ?, ?, ?, ?, ?)
        ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
      <Parameter name="argWorkstationId" />
      <Parameter name="argStatusTypcode" />
      <Parameter name="argStateJournalId" />
      <Parameter name="argTimestamp" />
      <Parameter name="argStringValue" />
      <Parameter name="argDateValue" />
    </SQL>
  </Query>

  <Query name="SYSTEM_CLOSED_FOR_DATE" pmType="REGISTER_CORE">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.query.results.SystemClosedSearchResult</ResultClass>
    <ResultField name="BusinessDate" />
    <ResultField name="RetailLocationId" />
    <ResultField name="WorkstationId" />
    <ResultField name="TransStartTime" />
    <ResultField name="TransactionSequence" />
    <ResultField name="OrganizationId" />
    <SQL>
      <Statement dtype="String"><![CDATA[
      SELECT trn_trans.business_date,
          trn_trans.rtl_loc_id,
          trn_trans.wkstn_id,
          trn_trans.begin_datetime,
          trn_trans.trans_seq,
          trn_trans.organization_id
      FROM trn_trans
      WHERE /*UPPER*/ trn_trans.trans_typcode = 'SYSTEM_CLOSE'
           AND trn_trans.business_date = ?
           AND trn_trans.rtl_loc_id = ?
           AND trn_trans.organization_id = ?
        ]]></Statement>
      <Parameter name="argBusinessDate" />
      <Parameter name="argRetailLocId" />
      <Parameter name="argOrganizationId" />
    </SQL>
    <Property>
      <Key dtype="String">MaxRows</Key>
      <Value dtype="String"><![CDATA[50]]></Value>
    </Property>
  </Query>

  <Query name="TAX_BRACKETS">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.tax.TaxBracketId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[
        WHERE organization_id = ?
            AND tax_bracket_id = ?
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Parameter name="argBracketId" />
    </SQL>
  </Query>

  <Query name="TAX_BY_POSTAL">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.tax.PostalCodeMappingId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[
        WHERE organization_id = ?
            AND postal_code = ?        
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Parameter name="argPostalCode" />
    </SQL>
  </Query>

  <Query name="TAX_EXEMPTIONS">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.tax.TaxExemptionId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[
        WHERE t.organization_id = ? AND t.party_id = ?
        ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Parameter name="argPartyId" />
      <Expression trigger="argExpDate"><![CDATA[(t.expiration_date is null or t.expiration_date >= ?)]]></Expression>
      <Expression trigger="argReasonCode"><![CDATA[/*UPPER*/ t.reascode = ?]]></Expression>
    </SQL>
  </Query>

  <Query name="TAX_GROUP_RULES_FOR_LOCATION">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.tax.TaxGroupRuleId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[
        WHERE organization_id = ?
            AND tax_loc_id = ?    
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Parameter name="argLocationId" />
      <Expression trigger="argTaxGroupId"><![CDATA[tax_group_id = ?]]></Expression>
    </SQL>
  </Query>

  <Query name="TAX_RULE_RATES">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.tax.TaxRateRuleId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[
        WHERE organization_id = ?
            AND tax_loc_id = ?
            AND tax_group_id = ?
            AND tax_rule_seq_nbr = ?
            AND (expr_datetime is NULL OR expr_datetime >= ?)
            AND (effective_datetime is NULL or effective_datetime <= ?)        
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Parameter name="argLocationId" />
      <Parameter name="argTaxGroupId" />
      <Parameter name="argRuleSeq" />
      <Parameter name="argDate" />
      <Parameter name="argDate" />
    </SQL>
  </Query>

  <Query name="TAX_RULE_RATES_OVERRIDE">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.tax.TaxRateRuleOverrideId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[
        WHERE organization_id = ?
            AND tax_loc_id = ?
            AND tax_group_id = ?
            AND tax_rule_seq_nbr = ?
            AND (expr_datetime is NULL OR expr_datetime >= ?)
            AND (effective_datetime is NULL or effective_datetime <= ?)        
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Parameter name="argLocationId" />
      <Parameter name="argTaxGroupId" />
      <Parameter name="argRuleSeq" />
      <Parameter name="argDate" />
      <Parameter name="argDate" />
    </SQL>
  </Query>

  <Query name="TENDERS">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.tnd.TenderId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[
        WHERE t.organization_id = ?         
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
    </SQL>
    <Suffix dtype="String"><![CDATA[ORDER BY display_order ASC]]></Suffix>
  </Query>

  <Query name="TENDER_CONTROL_TRANS_LOOKUP">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.trn.PosTransactionId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[        
          JOIN  tsn_tndr_control_trans tsn
            ON  tsn.organization_id = t.organization_id
            AND tsn.rtl_loc_id = t.rtl_loc_id
            AND tsn.wkstn_id = t.wkstn_id
            AND tsn.business_date = t.business_date
            AND tsn.trans_seq = t.trans_seq
          WHERE t.organization_id = ?
          AND   t.session_id = ?
          AND   /*UPPER*/ tsn.typcode = ?
          AND   t.rtl_loc_id = ?
          AND   /*UPPER*/ t.trans_statcode = 'COMPLETE'       
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Parameter name="argSessionId" />
      <Parameter name="argTypeCode" />
      <Parameter name="argRtlLoc" />
    </SQL>
    <Property>
      <Key dtype="String">Ordering</Key>
      <Value dtype="String"><![CDATA[transactionSequence descending]]></Value>
    </Property>
  </Query>

  <Query name="TENDER_EXCHANGE_RATES">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.tnd.TenderExchangeRateId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[        
        WHERE t.organization_id = ?
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Expression trigger="argBaseCurrency"><![CDATA[base_currency = ?]]></Expression>
      <Expression trigger="argTargetCurrency"><![CDATA[target_currency = ?]]></Expression>
      <Expression trigger="argLevelCode"><![CDATA[level_code = ?]]></Expression>
      <Expression trigger="argLevelValue"><![CDATA[level_value = ?]]></Expression>
    </SQL>
  </Query>

  <Query name="TENDER_LINES_FOR_SESSION">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.trl.RetailTransactionLineItemId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[        
          JOIN  ttr_tndr_lineitm ttr
            ON  ttr.organization_id = t.organization_id
            AND ttr.rtl_loc_id = t.rtl_loc_id
            AND ttr.wkstn_id = t.wkstn_id
            AND ttr.business_date = t.business_date
            AND ttr.trans_seq = t.trans_seq
            AND ttr.rtrans_lineitm_seq = t.rtrans_lineitm_seq
          JOIN  trn_trans trans
            ON  trans.organization_id = t.organization_id
            AND trans.rtl_loc_id = t.rtl_loc_id
            AND trans.wkstn_id = t.wkstn_id
            AND trans.business_date = t.business_date
            AND trans.trans_seq = t.trans_seq
          WHERE t.organization_id = ?
          AND   trans.session_id = ?
          AND   /*UPPER*/ ttr.tndr_id = ?
          AND   t.void_flag <> 1
          AND   trans.post_void_flag <> 1        
          AND   /*UPPER*/ trans.trans_statcode = 'COMPLETE' 
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Parameter name="argSessionId" />
      <Parameter name="argTenderId" />
    </SQL>
  </Query>

  <Query name="TENDER_REPOSITORIES_BY_TYPE">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.tsn.TenderRepositoryId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[        
          WHERE organization_id = ?
          AND /*UPPER*/ typcode = ?
          AND rtl_loc_id = ?        
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Parameter name="argTypeCode" />
      <Parameter name="argLocId" />
    </SQL>
    <Suffix dtype="String"><![CDATA[ORDER BY t.dflt_wkstn_id ASC]]></Suffix>
  </Query>

  <Query name="TENDER_USER_SETTINGS_FOR_TENDER">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.tnd.TenderUserSettingsId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[
        WHERE t.organization_id = ? AND t.group_id = ? AND t.tndr_id = ? AND (t.usage_code = ? OR t.usage_code = 'DEFAULT') and (t.entry_mthd_code = ? OR t.entry_mthd_code = 'DEFAULT')        
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Parameter name="argGroupId" />
      <Parameter name="argTenderId" />
      <Parameter name="argUsageCode" />
      <Parameter name="argEntryMthdCode" />
    </SQL>
  </Query>

  <Query name="TILLS_AVAILABLE_TO_ISSUE">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.tsn.TenderRepositoryId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[
        LEFT OUTER JOIN tsn_tndr_repository_status trs ON t.organization_id = trs.organization_id AND t.rtl_loc_id = trs.rtl_loc_id AND t.tndr_repository_id = trs.tndr_repository_id        
          WHERE t.organization_id = ?
          AND t.rtl_loc_id = ?
          AND t.not_issuable_flag = 0
          AND COALESCE(trs.issued_flag, 0) = 0
          AND trs.active_session_id IS NULL        
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Parameter name="argLocId" />
      <Expression trigger="@argIgnoredTypeCodes"><![CDATA[/*UPPER*/ t.typcode NOT IN ?]]></Expression>
    </SQL>
  </Query>

  <Query name="TILLS_AVAILABLE_TO_RECONCILE">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.tsn.SessionId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[        
           JOIN tsn_tndr_repository tr ON t.organization_id = tr.organization_id 
            AND t.rtl_loc_id = tr.rtl_loc_id 
            AND /*UPPER*/ t.tndr_repository_id = tr.tndr_repository_id 
           LEFT OUTER JOIN tsn_tndr_repository_status trs ON t.organization_id = trs.organization_id
            AND t.rtl_loc_id = trs.rtl_loc_id
            AND /*UPPER*/ t.tndr_repository_id = trs.tndr_repository_id
            AND t.session_id = trs.active_session_id
          WHERE /*UPPER*/ tr.typcode = 'TILL'
            AND /*UPPER*/ t.statcode = 'ENDCOUNT'
            AND COALESCE(trs.issued_flag, 0) = 0
            AND t.organization_id = ?
            AND t.rtl_loc_id = ?        
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
    </SQL>
  </Query>

  <Query name="TILL_COUNT_DISCREPANCIES" pmType="SESSIONS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.pos.till.count.TillCountDiscrepancyResult</ResultClass>
    <ResultField name="CountType" />
    <ResultField name="EmployeeFirstName" />
    <ResultField name="EmployeeLastName" />
    <ResultField name="Reason" />
    <ResultField name="Comment" />
    <SQL>
      <Statement dtype="String"><![CDATA[        
          SELECT typcode, party.first_name, party.last_name, COALESCE(rc.description, reascode), notes.note
            FROM tsn_tndr_control_trans tctrans 
            JOIN trn_trans trans ON tctrans.organization_id = trans.organization_id AND tctrans.rtl_loc_id = trans.rtl_loc_id AND tctrans.business_date = trans.business_date AND tctrans.wkstn_id = trans.wkstn_id AND tctrans.trans_seq = trans.trans_seq
            LEFT OUTER JOIN crm_party party ON trans.organization_id = party.organization_id AND trans.operator_party_id = party.party_id
            LEFT OUTER JOIN com_reason_code rc ON tctrans.organization_id = rc.organization_id AND /*UPPER*/ tctrans.reascode = rc.reason_code
            LEFT OUTER JOIN trn_trans_notes notes ON tctrans.organization_id = notes.organization_id AND tctrans.rtl_loc_id = notes.rtl_loc_id AND tctrans.business_date = notes.business_date AND tctrans.wkstn_id = notes.wkstn_id AND tctrans.trans_seq = notes.trans_seq
           WHERE /*UPPER*/ typcode IN ('BEGINCOUNT', 'ENDCOUNT')
             AND reascode IS NOT NULL
             AND tctrans.organization_id = ?
             AND tctrans.rtl_loc_id = ?
             AND session_id = ?
             AND COALESCE(hidden_flag, 0) = 0        
      ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
      <Parameter name="argSessionId" />
    </SQL>
  </Query>

  <Query name="TILL_DETAILS" pmType="SESSIONS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.pos.till.TillDetailsResult</ResultClass>
    <ResultField name="TenderRepositoryId" />
    <ResultField name="Issued" />
    <ResultField name="DateIssued" />
    <ResultField name="CountStatus" />
    <ResultField name="Attached" />
    <ResultField name="IssuedFirstName" />
    <ResultField name="IssuedLastName" />
    <ResultField name="IssuedEmployeeId" />
    <ResultField name="WorkstationId" />
    <ResultField name="CashDrawerId" />
    <SQL>
      <Statement dtype="String"><![CDATA[        
          SELECT tr.tndr_repository_id,
                 COALESCE(trs.issued_flag, 0),
                 tsn_session.business_date,
                 tsn_session.statcode,
                 sw.attached_flag,
                 crm.first_name,
                 crm.last_name,
                 employee.employee_id,
                 sw.wkstn_id,
                 sw.cash_drawer_id
            FROM tsn_tndr_repository tr
                 LEFT OUTER JOIN tsn_tndr_repository_status trs ON tr.organization_id = trs.organization_id AND tr.rtl_loc_id = trs.rtl_loc_id AND tr.tndr_repository_id = trs.tndr_repository_id 
                 LEFT OUTER JOIN tsn_session ON tr.organization_id = tsn_session.organization_id AND tr.rtl_loc_id = tsn_session.rtl_loc_id AND trs.active_session_id = tsn_session.session_id
                 LEFT OUTER JOIN tsn_session_wkstn sw ON tsn_session.organization_id = sw.organization_id AND tsn_session.rtl_loc_id = sw.rtl_loc_id AND tsn_session.session_id = sw.session_id
                 LEFT OUTER JOIN crm_party crm ON tsn_session.organization_id = crm.organization_id AND tsn_session.employee_party_id = crm.party_id
                 LEFT OUTER JOIN hrs_employee employee ON crm.organization_id = employee.organization_id AND crm.party_id = employee.party_id
           WHERE (sw.session_wkstn_seq IS NULL OR sw.session_wkstn_seq = (SELECT Max(session_wkstn_seq) FROM tsn_session_wkstn WHERE organization_id = tsn_session.organization_id AND rtl_loc_id = tsn_session.rtl_loc_id AND session_id = tsn_session.session_id))
             AND tr.organization_id = ?
             AND tr.rtl_loc_id = ?        
      ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
      <Expression trigger="argTillTypeCode"><![CDATA[/*UPPER*/ tr.typcode = ?]]></Expression>
    </SQL>
  </Query>

  <Query name="TILL_SUMMARY_CUSTOMER_ACCT_TOTALS" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.query.results.TillSummaryGrossSalesResult</ResultClass>
    <ResultField name="Quantity" />
    <ResultField name="TotalAmount" />
    <SQL>
      <Statement dtype="String"><![CDATA[
        SELECT sum(t.quantity), sum(t.extended_amt) FROM trl_sale_lineitm t
          JOIN  trl_rtrans_lineitm l
            ON  t.organization_id = l.organization_id
            AND t.rtl_loc_id = l.rtl_loc_id
            AND t.wkstn_id = l.wkstn_id
            AND t.business_date = l.business_date
            AND t.trans_seq = l.trans_seq
            AND t.rtrans_lineitm_seq = l.rtrans_lineitm_seq
          JOIN  cat_cust_item_acct_detail cat
            ON  cat.organization_id = t.organization_id
            AND cat.rtl_loc_id = t.rtl_loc_id
            AND cat.wkstn_id = t.wkstn_id
            AND cat.business_date = t.business_date
            AND cat.trans_seq = t.trans_seq
            AND cat.rtrans_lineitm_seq = t.rtrans_lineitm_seq
          JOIN  trn_trans trans
            ON  trans.organization_id = t.organization_id
            AND trans.rtl_loc_id = t.rtl_loc_id
            AND trans.wkstn_id = t.wkstn_id
            AND trans.business_date = t.business_date
            AND trans.trans_seq = t.trans_seq
            AND trans.post_void_flag=0
          WHERE t.organization_id = ?
          AND   trans.session_id = ?
          AND   /*UPPER*/ trans.trans_statcode='COMPLETE'
          AND   l.void_flag = 0
          AND   t.return_flag = 0
          AND   /*UPPER*/ cat.line_typcode IN ?
          AND   cat.cust_acct_code = ?
      ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argSessionId" />
      <Parameter name="@argLineTypcode" />
      <Parameter name="argCustAcctCode" />
    </SQL>
  </Query>

  <Query name="TILL_SUMMARY_FLASH_SALES_TOTALS" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.query.results.TillSummaryGrossSalesResult</ResultClass>
    <ResultField name="Quantity" />
    <ResultField name="TotalAmount" />
    <SQL>
      <Statement dtype="String"><![CDATA[        
           SELECT line_count,line_amt
            FROM rpt_flash_sales 
            WHERE line_enum=?
            AND organization_id=?
            AND rtl_loc_id=?
            AND business_date=?
            AND wkstn_id=?        
      ]]></Statement>
      <Parameter name="argLineEnum" />
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocId" />
      <Parameter name="argBusinessDate" />
      <Parameter name="argRegisterId" />
    </SQL>
  </Query>

  <Query name="TILL_SUMMARY_LIST_CHECKS" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.query.results.TillSummaryChecksListResult</ResultClass>
    <ResultField name="CheckNumber" />
    <ResultField name="TransId" />
    <ResultField name="Amount" />
    <SQL>
      <Statement dtype="String"><![CDATA[
        SELECT c.check_seq_nbr, trans.trans_seq, t.amt
          FROM ttr_check_tndr_lineitm c
          JOIN  trn_trans trans
            ON  trans.organization_id = c.organization_id
            AND trans.rtl_loc_id = c.rtl_loc_id
            AND trans.wkstn_id = c.wkstn_id
            AND trans.business_date = c.business_date
            AND trans.trans_seq = c.trans_seq
            AND trans.post_void_flag=0
          JOIN ttr_tndr_lineitm t
            ON c.trans_seq = t.trans_seq
            AND c.business_date = t.business_date
            AND c.rtl_loc_id = t.rtl_loc_id
            AND c.rtrans_lineitm_seq=t.rtrans_lineitm_seq
            AND c.organization_id = t.organization_id
            AND c.wkstn_id = t.wkstn_id
          WHERE trans.organization_id = ?
            AND /*UPPER*/ t.tndr_id='CHECK'
            AND trans.session_id = ?]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argSessionId" />
    </SQL>
  </Query>

  <Query name="TILL_SUMMARY_NO_SALE_TOTALS" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.query.results.TillSummaryGrossSalesResult</ResultClass>
    <ResultField name="Quantity" type="BigDecimal" />
    <ResultField name="TotalAmount" type="BigDecimal" />
    <SQL>
      <Statement dtype="String"><![CDATA[
          SELECT count(*), '0.00' FROM trn_no_sale_trans t
          JOIN  trn_trans trans
            ON  trans.organization_id = t.organization_id
            AND trans.rtl_loc_id = t.rtl_loc_id
            AND trans.wkstn_id = t.wkstn_id
            AND trans.business_date = t.business_date
            AND trans.trans_seq = t.trans_seq
          WHERE trans.organization_id = ?
          AND   /*UPPER*/ trans.trans_statcode='COMPLETE'
          AND   trans.session_id=?
          AND trans.post_void_flag=0
      ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argSessionId" />
    </SQL>
  </Query>

  <Query name="TILL_SUMMARY_TENDER_CONTROL_TOTALS" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.query.results.TillSummaryGrossSalesResult</ResultClass>
    <ResultField name="Quantity" type="BigDecimal" />
    <ResultField name="TotalAmount" type="BigDecimal" />
    <SQL>
      <Statement dtype="String"><![CDATA[
          SELECT count(*), sum(amt) FROM tsn_tndr_control_trans t
          JOIN  trn_trans trans
            ON  trans.organization_id = t.organization_id
            AND trans.rtl_loc_id = t.rtl_loc_id
            AND trans.wkstn_id = t.wkstn_id
            AND trans.trans_seq = t.trans_seq
            AND trans.post_void_flag=0
          WHERE trans.organization_id = ?
          AND   trans.session_id=?
          AND   /*UPPER*/ trans.trans_statcode='COMPLETE'
          AND   /*UPPER*/ t.typcode=?          
      ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argSessionId" />
      <Parameter name="argTypcode" />
    </SQL>
  </Query>

  <Query name="TILL_SUMMARY_TOTAL_DISCOUNTS" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.query.results.TillSummaryGrossSalesResult</ResultClass>
    <ResultField name="Quantity" type="BigDecimal" />
    <ResultField name="TotalAmount" type="BigDecimal" />
    <SQL>
      <Statement dtype="String"><![CDATA[
        SELECT count(*), sum(amt) FROM trl_rtl_price_mod t
          JOIN  trl_rtrans_lineitm l
            ON  t.organization_id = l.organization_id
            AND t.rtl_loc_id = l.rtl_loc_id
            AND t.wkstn_id = l.wkstn_id
            AND t.business_date = l.business_date
            AND t.trans_seq = l.trans_seq
            AND t.rtrans_lineitm_seq = l.rtrans_lineitm_seq
          JOIN  trn_trans trans
            ON  trans.organization_id = t.organization_id
            AND trans.rtl_loc_id = t.rtl_loc_id
            AND trans.wkstn_id = t.wkstn_id
            AND trans.business_date = t.business_date
            AND trans.trans_seq = t.trans_seq
            AND trans.post_void_flag=0            
          WHERE t.organization_id = ?
          AND   trans.session_id = ?
          AND   l.void_flag = 0
          AND   /*UPPER*/ trans.trans_statcode='COMPLETE'
          AND   /*UPPER*/ t.rtl_price_mod_reascode IN ?
      ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argSessionId" />
      <Parameter name="@argPriceModReasonCode" />
    </SQL>
  </Query>

  <Query name="TILL_SUMMARY_TOTAL_GIFT_CARD" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.query.results.TillSummaryGrossSalesResult</ResultClass>
    <ResultField name="Quantity" />
    <ResultField name="TotalAmount" />
    <SQL>
      <Statement dtype="String"><![CDATA[
        SELECT SUM(t.quantity), SUM(t.extended_amt) FROM trl_sale_lineitm t
          JOIN  trl_rtrans_lineitm l
            ON  t.organization_id = l.organization_id
            AND t.rtl_loc_id = l.rtl_loc_id
            AND t.wkstn_id = l.wkstn_id
            AND t.business_date = l.business_date
            AND t.trans_seq = l.trans_seq
            AND t.rtrans_lineitm_seq = l.rtrans_lineitm_seq
          JOIN  trl_voucher_sale_lineitm v
            ON  v.organization_id = t.organization_id
            AND v.rtl_loc_id = t.rtl_loc_id
            AND v.wkstn_id = t.wkstn_id
            AND v.business_date = t.business_date
            AND v.trans_seq = t.trans_seq
            AND v.rtrans_lineitm_seq = t.rtrans_lineitm_seq
          JOIN  trn_trans trans
            ON  trans.organization_id = t.organization_id
            AND trans.rtl_loc_id = t.rtl_loc_id
            AND trans.wkstn_id = t.wkstn_id
            AND trans.business_date = t.business_date
            AND trans.trans_seq = t.trans_seq
            AND trans.post_void_flag=0
          WHERE t.organization_id = ?
          AND   trans.session_id = ?
          AND   /*UPPER*/ trans.trans_statcode='COMPLETE'
          AND   t.return_flag = ?
          AND   l.void_flag = 0
          AND   /*UPPER*/ v.voucher_typcode like ('%GIFT_CARD%')
      ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argSessionId" />
      <Parameter name="argReturnFlag" />
    </SQL>
  </Query>

  <Query name="TILL_SUMMARY_TOTAL_LAYAWAY" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.query.results.TillSummaryGrossSalesResult</ResultClass>
    <ResultField name="Quantity" />
    <ResultField name="TotalAmount" />
    <SQL>
      <Statement dtype="String"><![CDATA[
        SELECT sum(t.quantity), sum(t.extended_amt) FROM trl_sale_lineitm t
          JOIN  trl_rtrans_lineitm l
            ON  t.organization_id = l.organization_id
            AND t.rtl_loc_id = l.rtl_loc_id
            AND t.wkstn_id = l.wkstn_id
            AND t.business_date = l.business_date
            AND t.trans_seq = l.trans_seq
            AND t.rtrans_lineitm_seq = l.rtrans_lineitm_seq
          JOIN  cat_cust_item_acct_detail cat
            ON  cat.organization_id = t.organization_id
            AND cat.rtl_loc_id = t.rtl_loc_id
            AND cat.wkstn_id = t.wkstn_id
            AND cat.business_date = t.business_date
            AND cat.trans_seq = t.trans_seq
            AND cat.rtrans_lineitm_seq = t.rtrans_lineitm_seq
          JOIN  trn_trans trans
            ON  trans.organization_id = t.organization_id
            AND trans.rtl_loc_id = t.rtl_loc_id
            AND trans.wkstn_id = t.wkstn_id
            AND trans.business_date = t.business_date
            AND trans.trans_seq = t.trans_seq
            AND trans.post_void_flag=0
          WHERE t.organization_id = ?
          AND   trans.session_id = ?
          AND   /*UPPER*/ trans.trans_statcode='COMPLETE'
          AND   t.return_flag = 0
          AND   l.void_flag = 0
          AND   /*UPPER*/ cat.line_typcode = ?
          AND   cat.cust_acct_code = 'LAYAWAY'
      ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argSessionId" />
      <Parameter name="argLineTypcode" />
    </SQL>
  </Query>

  <Query name="TILL_SUMMARY_TOTAL_NET_SALES" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.query.results.TillSummaryGrossSalesResult</ResultClass>
    <ResultField name="Quantity" />
    <ResultField name="TotalAmount" />
    <SQL>
      <Statement dtype="String"><![CDATA[
        SELECT 0.00, sum(trans.subtotal) FROM trn_trans trans
          JOIN  trl_rtrans t
            ON  trans.organization_id = t.organization_id
            AND trans.rtl_loc_id = t.rtl_loc_id
            AND trans.wkstn_id = t.wkstn_id
            AND trans.business_date = t.business_date
            AND trans.trans_seq = t.trans_seq
            AND trans.post_void_flag=0
          WHERE trans.organization_id = ?
          AND   trans.session_id = ?
          AND   /*UPPER*/ trans.trans_statcode='COMPLETE'          
      ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argSessionId" />
    </SQL>
  </Query>

  <Query name="TILL_SUMMARY_TOTAL_NON_MERCH" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.query.results.TillSummaryGrossSalesResult</ResultClass>
    <ResultField name="Quantity" />
    <ResultField name="TotalAmount" />
    <SQL>
      <Statement dtype="String"><![CDATA[
        SELECT sum(t.quantity), sum(t.extended_amt) FROM trl_sale_lineitm t
          JOIN itm_non_phys_item n 
            ON  t.organization_id = n.organization_id
            AND /*UPPER*/ t.item_id = n.item_id
          JOIN  trl_rtrans_lineitm l
            ON  t.organization_id = l.organization_id
            AND t.rtl_loc_id = l.rtl_loc_id
            AND t.wkstn_id = l.wkstn_id
            AND t.business_date = l.business_date
            AND t.trans_seq = l.trans_seq
            AND t.rtrans_lineitm_seq = l.rtrans_lineitm_seq
          JOIN  trn_trans trans
            ON  trans.organization_id = t.organization_id
            AND trans.rtl_loc_id = t.rtl_loc_id
            AND trans.wkstn_id = t.wkstn_id
            AND trans.business_date = t.business_date
            AND trans.trans_seq = t.trans_seq
            AND trans.post_void_flag=0
          WHERE t.organization_id = ?
          AND   trans.session_id = ?
          AND   t.return_flag = ?
          AND   l.void_flag = 0
          AND   /*UPPER*/ trans.trans_statcode='COMPLETE'
          AND   /*UPPER*/ n.non_phys_item_typcode NOT IN ?
      ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argSessionId" />
      <Parameter name="argReturnFlag" />
      <Parameter name="@argExcludeTypcode" />
    </SQL>
  </Query>

  <Query name="TILL_SUMMARY_TOTAL_REFUNDS" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.query.results.TillSummaryGrossSalesResult</ResultClass>
    <ResultField name="Quantity" type="BigDecimal" />
    <ResultField name="TotalAmount" type="BigDecimal" />
    <SQL>
      <Statement dtype="String"><![CDATA[
          SELECT count(*), sum(total) FROM trn_trans
          WHERE organization_id = ?
          AND   session_id=?
          AND   /*UPPER*/ trans_statcode='COMPLETE'
          AND   total < 0
          and post_void_flag=0
      ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argSessionId" />
    </SQL>
  </Query>

  <Query name="TILL_SUMMARY_TOTAL_TAX" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.query.results.TillSummaryGrossSalesResult</ResultClass>
    <ResultField name="Quantity" />
    <ResultField name="TotalAmount" />
    <SQL>
      <Statement dtype="String"><![CDATA[
        SELECT 0.00, sum(tax_amt) FROM trl_tax_lineitm t
          JOIN  trl_rtrans_lineitm l
            ON  t.organization_id = l.organization_id
            AND t.rtl_loc_id = l.rtl_loc_id
            AND t.wkstn_id = l.wkstn_id
            AND t.business_date = l.business_date
            AND t.trans_seq = l.trans_seq
            AND t.rtrans_lineitm_seq = l.rtrans_lineitm_seq
          JOIN  trn_trans trans
            ON  trans.organization_id = t.organization_id
            AND trans.rtl_loc_id = t.rtl_loc_id
            AND trans.wkstn_id = t.wkstn_id
            AND trans.business_date = t.business_date
            AND trans.trans_seq = t.trans_seq
            AND trans.post_void_flag=0
          WHERE t.organization_id = ?
          AND   trans.session_id = ?
          AND   l.void_flag = 0
          AND   /*UPPER*/ trans.trans_statcode='COMPLETE'
      ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argSessionId" />
      <Expression trigger="argTaxGroup"><![CDATA[/*UPPER*/ t.tax_group_id = ?]]></Expression>
    </SQL>
  </Query>

  <Query name="TILL_SUMMARY_TOTAL_VOIDS" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.query.results.TillSummaryGrossSalesResult</ResultClass>
    <ResultField name="Quantity" type="BigDecimal" />
    <ResultField name="TotalAmount" type="BigDecimal" />
    <SQL>
      <Statement dtype="String"><![CDATA[
          SELECT count(*), '0.00' FROM trn_trans
          WHERE organization_id = ?
          AND   session_id=?
          AND   (/*UPPER*/ trans_statcode='CANCEL' OR post_void_flag=1)
      ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argSessionId" />
    </SQL>
  </Query>

  <Query name="TIMECARD_ACTIVE_EMPLOYEE" pmType="EMPLOYEE">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.query.results.TimecardPayrollEmployeeResult</ResultClass>
    <ResultField name="OrganizationId" />
    <ResultField name="PartyId" />
    <ResultField name="EmployeeId" />
    <ResultField name="LastName" />
    <ResultField name="FirstName" />
    <ResultField name="EmployeeDepartmentId" />
    <ResultField name="PayStatus" />
    <SQL>
      <Statement dtype="String"><![CDATA[        
          SELECT
            emp.organization_id,
            emp.party_id,
            emp.employee_id,
            party.last_name,
            party.first_name,
            emp.department_id,
            emp.employee_pay_status
          FROM hrs_employee emp
          INNER JOIN crm_party party ON 
              party.organization_id = emp.organization_id AND 
              party.party_id = emp.party_id
          WHERE emp.organization_id = ?
            AND emp.employee_id != '0'
            AND (
              emp.terminated_date IS NULL OR emp.terminated_date >= ? OR EXISTS (
                SELECT party_id
                FROM thr_timecard_entry t
                WHERE t.organization_id = emp.organization_id
                  AND t.delete_flag = ?
                  AND t.party_id = emp.party_id
                  AND t.business_date BETWEEN ? AND ?
                  AND t.rtl_loc_id = ?
              )
            )
            AND EXISTS (
              SELECT store.employee_id
              FROM hrs_employee_store store
              WHERE emp.organization_id = store.organization_id
                AND emp.employee_id = store.employee_id 
                AND (store.begin_date IS NULL OR store.begin_date <= ?)
                AND (store.end_date IS NULL OR store.end_date >= ?)
                AND store.rtl_loc_id = ?
            )        
      ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argStartDate" />
      <Parameter name="argDeleteFlag" />
      <Parameter name="argStartDate" />
      <Parameter name="argEndDate" />
      <Parameter name="argRetailLocationId" />
      <Parameter name="argEndDate" />
      <Parameter name="argStartDate" />
      <Parameter name="argRetailLocationId" />
    </SQL>
  </Query>

  <Query name="TIMECARD_ACTIVE_EMPLOYEE_SEARCH" pmType="EMPLOYEE">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.query.results.TimecardPayrollEmployeeResult</ResultClass>
    <ResultField name="OrganizationId" />
    <ResultField name="PartyId" />
    <ResultField name="EmployeeId" />
    <ResultField name="LastName" />
    <ResultField name="FirstName" />
    <ResultField name="EmployeeDepartmentId" />
    <SQL>
      <Statement dtype="String"><![CDATA[
            select emp.organization_id, emp.party_id, emp.employee_id, p.last_name, p.first_name, emp.department_id
            from hrs_employee emp, crm_party p 
            where p.organization_id = emp.organization_id and
                  p.party_id = emp.party_id and 
                  emp.organization_id = ? and
                  (emp.terminated_date is null or emp.terminated_date >= ? or
                  emp.party_id in (select party_id from thr_timecard_entry t where 
                              t.organization_id = emp.organization_id and 
                              t.delete_flag = ? and
                              t.business_date between ? and ?)) and
                  exists
                    (select * from hrs_employee_store store 
                     where store.organization_id = emp.organization_id and
                           store.employee_id = emp.employee_id and
                           store.rtl_loc_id = ? and
                           (store.begin_date is null or store.begin_date <= ?) and
                           (store.end_date is null or store.end_date >= ?))
        ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argStartDate" />
      <Parameter name="argDeleteFlag" />
      <Parameter name="argStartDate" />
      <Parameter name="argEndDate" />
      <Parameter name="argRetailLocationId" />
      <Parameter name="argEndDate" />
      <Parameter name="argStartDate" />
      <Expression trigger="argEmployeeId"><![CDATA[emp.employee_id = ?]]></Expression>
      <Expression parameters="argFirstName%" trigger="argFirstName"><![CDATA[/*UPPER*/ first_name like ?]]></Expression>
      <Expression parameters="argLastName%" trigger="argLastName"><![CDATA[/*UPPER*/ last_name like ?]]></Expression>
    </SQL>
  </Query>

  <Query name="TIMECARD_ALL_ENTRIES_FOR_PERSON_AND_DATE_RANGE">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.thr.TimecardEntryId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[        
          WHERE organization_id = ? 
            AND party_id = ?
            AND rtl_loc_id = ?
            AND (
              (clock_in_timestamp <= ?
               AND
               clock_out_timestamp >= ?)
              OR
              (clock_in_timestamp <= ?
               AND
               clock_out_timestamp >= ?)
            )
            AND (delete_flag = ? OR delete_flag IS NULL)        
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Parameter name="argPartyId" />
      <Parameter name="argRetailLocId" />
      <Parameter name="argEndDate" />
      <Parameter name="argBeginDate" />
      <Parameter name="argEndDate2" />
      <Parameter name="argBeginDate2" />
      <Parameter name="argDeleteFlag" />
    </SQL>
  </Query>

  <Query name="TIMECARD_COMMENTS_FOR_PERSON_FOR_WEEK">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.thr.TimecardEntryCommentId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[        
          WHERE party_id = ?
          AND organization_id = ?
          AND week_ending_date = ?
          AND rtl_loc_id = ?        
      ]]></WhereClause>
      <Parameter name="argPartyId" />
      <Parameter name="argOrganizationId" />
      <Parameter name="argWeekEndingDate" />
      <Parameter name="argRetailLocId" />
    </SQL>
    <Property>
      <Key dtype="String">Ordering</Key>
      <Value dtype="String"><![CDATA[createDate descending]]></Value>
    </Property>
  </Query>

  <Query name="TIMECARD_ENTRIES_FOR_PERSON_AND_DATE_RANGE">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.thr.TimecardEntryId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[        
          WHERE organization_id = ? 
            AND party_id = ?
            AND rtl_loc_id = ?
            AND (
              (clock_in_timestamp <= ?
               AND
               clock_out_timestamp >= ?)
               OR
               (clock_in_timestamp <= ?
                AND
                clock_out_timestamp >= ?)
            )
            AND (delete_flag = ? OR delete_flag IS NULL)        
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Parameter name="argPartyId" />
      <Parameter name="argRetailLocId" />
      <Parameter name="argEndDate" />
      <Parameter name="argBeginDate" />
      <Parameter name="argEndDate2" />
      <Parameter name="argBeginDate2" />
      <Parameter name="argDeleteFlag" />
    </SQL>
  </Query>

  <Query name="TIMECARD_ENTRIES_OPEN">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.thr.TimecardEntryId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[        
          WHERE open_record_flag IS NOT NULL
            AND open_record_flag <> ? 
            AND organization_id = ? 
            AND clock_out_timestamp IS NULL 
            AND (delete_flag = ? OR delete_flag IS NULL)
            AND rtl_loc_id = ?        
      ]]></WhereClause>
      <Parameter name="argOpenRecordFlag" />
      <Parameter name="argOrganizationId" />
      <Parameter name="argDeleteFlag" />
      <Parameter name="argRetailLocId" />
    </SQL>
  </Query>

  <Query name="TIMECARD_ENTRIES_OPEN_FOR_PARTYID">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.thr.TimecardEntryId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[        
          WHERE party_id = ?
            AND open_record_flag IS NOT NULL AND open_record_flag   <> ? 
            AND organization_id = ? 
            AND clock_out_timestamp IS NULL 
            AND (delete_flag = ? OR delete_flag IS NULL)
            AND rtl_loc_id = ?        
      ]]></WhereClause>
      <Parameter name="argPartyId" />
      <Parameter name="argOpenRecordFlag" />
      <Parameter name="argOrganizationId" />
      <Parameter name="argDeleteFlag" />
      <Parameter name="argRetailLocId" />
    </SQL>
  </Query>

  <Query name="TIMECARD_ENTRIES_OVERLAPPING">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.thr.TimecardEntryId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[        
          WHERE organization_id = ? 
          AND party_id = ?
          AND rtl_loc_id = ?
          AND (
            (
              (clock_in_timestamp < ?)
               AND
              (clock_out_timestamp > ?)
            )
            OR
            (
              (clock_in_timestamp < ?)
               AND
              (clock_in_timestamp >= ?)
            )
           )
          AND (delete_flag = ? OR delete_flag IS NULL)
          AND NOT (timecard_entry_id = ? and wkstn_id = ?)        
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Parameter name="argPartyId" />
      <Parameter name="argRetailLocId" />
      <Parameter name="argEndDate" />
      <Parameter name="argBeginDate" />
      <Parameter name="argEndDate2" />
      <Parameter name="argBeginDate2" />
      <Parameter name="argDeleteFlag" />
      <Parameter name="argEntryId" />
      <Parameter name="argWorkstationId" />
    </SQL>
  </Query>

  <Query name="TIMECARD_EXCEPTIONS" pmType="TIMECLOCK">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.query.results.TimecardExceptionsResult</ResultClass>
    <ResultField name="OrganizationId" />
    <ResultField name="Id" />
    <ResultField name="DepartmentId" />
    <ResultField name="FirstName" />
    <ResultField name="LastName" />
    <SQL>
      <Statement dtype="String"><![CDATA[
      SELECT DISTINCT t1.organization_id, emp.employee_id, department_id, first_name, last_name
      FROM thr_timecard_entry t1, hrs_employee emp, crm_party party
      WHERE emp.party_id = t1.party_id
        AND emp.organization_id = t1.organization_id
        AND party.party_id = t1.party_id
        AND party.organization_id = t1.organization_id
        AND duration IS NOT null
        AND delete_flag = ?
        AND ((t1.clock_in_timestamp < ? AND t1.clock_out_timestamp > ?)
             OR (t1.clock_in_timestamp < ? AND t1.clock_in_timestamp > ?))
        AND t1.organization_id = ?
        AND t1.rtl_loc_id = ?
      GROUP BY t1.organization_id, t1.rtl_loc_id, last_name, first_name, t1.party_id,
                 emp.employee_id, t1.business_date, department_id
      HAVING (SUM(duration) IS NOT null AND ((SUM(duration) > ?) OR
                 (SUM(duration) < ? AND SUM(duration) > 0)))
      ORDER BY last_name, first_name
        ]]></Statement>
      <Parameter name="argDeleteFlag" />
      <Parameter name="argEndDate" />
      <Parameter name="argBeginDate" />
      <Parameter name="argEndDate" />
      <Parameter name="argBeginDate" />
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
      <Parameter name="argHourMax" />
      <Parameter name="argHourMin" />
    </SQL>
  </Query>

  <Query name="TIMECARD_JOURNALS_FOR_ENTRY">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.thr.TimecardJournalId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[        
          WHERE party_id = ?
          AND organization_id = ?
          AND business_date = ?
          AND rtl_loc_id = ?
          AND timecard_entry_id = ?
          ORDER BY timecard_entry_seq DESC        
      ]]></WhereClause>
      <Parameter name="argPartyId" />
      <Parameter name="argOrganizationId" />
      <Parameter name="argBusinessDate" />
      <Parameter name="argRetailLocId" />
      <Parameter name="argEntryId" />
    </SQL>
  </Query>

  <Query name="TIMECARD_JOURNAL_OPEN_FOR_ENTRY">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.thr.TimecardJournalId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[        
          WHERE party_id = ?
          AND organization_id = ?
          AND business_date = ?
          AND rtl_loc_id = ?
          AND timecard_entry_id = ?
          AND wkstn_id = ?        
      ]]></WhereClause>
      <Parameter name="argPartyId" />
      <Parameter name="argOrganizationId" />
      <Parameter name="argBusinessDate" />
      <Parameter name="argRetailLocId" />
      <Parameter name="argTimecardEntryId" />
      <Parameter name="argWorkstationId" />
    </SQL>
  </Query>

  <Query name="TIMECLOCK_TRAN_FOR_JOURNAL">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.trn.PosTransactionId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[        
          JOIN  thr_timeclk_trans clk
            ON  clk.organization_id = t.organization_id
            AND clk.rtl_loc_id = t.rtl_loc_id
            AND clk.wkstn_id = t.wkstn_id
            AND clk.business_date = t.business_date
            AND clk.trans_seq = t.trans_seq
          WHERE clk.party_id = ?
          AND   t.organization_id = ?
          AND   clk.timecard_entry_business_date = ?
          AND   t.rtl_loc_id = ?
          AND   clk.timecard_entry_id = ?
          AND   clk.timecard_entry_seq = ?
          AND   clk.timecard_entry_wkstn_id = ?        
      ]]></WhereClause>
      <Parameter name="argPartyId" />
      <Parameter name="argOrganizationId" />
      <Parameter name="argBusinessDate" />
      <Parameter name="argRetailLocId" />
      <Parameter name="argEntryId" />
      <Parameter name="argEntrySeq" />
      <Parameter name="argWorkstationId" />
    </SQL>
  </Query>

  <Query name="TOTAL_REGISTER_REMAINING_CASH" pmType="SESSIONS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.query.results.RegisterRemainingCashResult</ResultClass>
    <ResultField name="CurrencyId" />
    <ResultField name="Amount" />
    <SQL>
      <Statement dtype="String"><![CDATA[
        SELECT f.currency_id, SUM(f.last_closing_amount) 
          FROM tsn_tndr_repository r
          LEFT OUTER JOIN tsn_tndr_repository_status s
          ON  r.organization_id = s.organization_id
          AND r.rtl_loc_id = s.rtl_loc_id
          AND r.tndr_repository_id = s.tndr_repository_id
          JOIN tsn_tndr_repository_float f
          ON  r.organization_id = f.organization_id
          AND r.rtl_loc_id = f.rtl_loc_id
          AND r.tndr_repository_id = f.tndr_repository_id
          WHERE /*UPPER*/ r.typcode = 'TILL'
            AND COALESCE(s.issued_flag, 0) = 0 
            AND r.organization_id = ? 
            AND r.rtl_loc_id = ?
          GROUP BY f.currency_id
            
      ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocId" />
    </SQL>
  </Query>

  <Query name="TRANSACTION_PROPERTY_PROMPT_NO_STATE">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.com.TransactionPropertyPromptId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[        
          WHERE organization_id = ? 
          AND (effective_date <= ? and expiration_date >= ?)
          AND transaction_state IS NULL        
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Parameter name="argEffectiveDate" />
      <Parameter name="argExpirationDate" />
    </SQL>
    <Suffix dtype="String"><![CDATA[ORDER BY sort_order ASC]]></Suffix>
  </Query>

  <Query name="TRANSACTION_PROPERTY_PROMPT_WITH_STATE">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.com.TransactionPropertyPromptId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[        
          WHERE organization_id = ? 
          AND (effective_date <= ? and expiration_date >= ?)
          AND /*UPPER*/ transaction_state = ?        
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Parameter name="argEffectiveDate" />
      <Parameter name="argExpirationDate" />
      <Parameter name="argTransactionState" />
    </SQL>
    <Suffix dtype="String"><![CDATA[ORDER BY sort_order ASC]]></Suffix>
  </Query>

  <Query name="TRANSACTION_RCPTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.trn.ReceiptLookupId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[        
          WHERE t.organization_id = ? 
            AND rtl_loc_id = ? 
            AND wkstn_id = ? 
            AND trans_seq = ? 
            AND business_date = ?        
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
      <Parameter name="argWorkstationId" />
      <Parameter name="argTransactionSequence" />
      <Parameter name="argBusinessDate" />
    </SQL>
  </Query>

  <Query name="TRANSACTION_SEARCH" pmType="TRANSACTION">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.query.results.DefaultTransactionSummaryModel</ResultClass>
    <ResultField name="OrganizationId" type="Long" />
    <ResultField name="BusinessDate" type="Date" />
    <ResultField name="RetailLocationId" type="Long" />
    <ResultField name="WorkstationId" type="Long" />
    <ResultField name="TransactionSequence" type="Long" />
    <ResultField name="TransactionTypeCode" type="String" />
    <ResultField name="TenderControlTypeCode" type="String" />
    <ResultField name="SessionControlTypeCode" type="String" />
    <ResultField name="TransactionDate" type="Date" />
    <ResultField name="BeginDateTimestamp" type="Date" />
    <ResultField name="EndDatetimestamp" type="Date" />
    <ResultField name="OperatorId" type="String" />
    <ResultField name="TransactionStatusCode" type="String" />
    <ResultField name="Total" type="BigDecimal" />
    <ResultField name="FirstName" type="String" />
    <ResultField name="LastName" type="String" />
    <ResultField name="PostVoid" type="Boolean" />
    <ResultField name="OrganizationId" type="Long" />
    <SQL>
      <Statement dtype="String"><![CDATA[
        SELECT t.organization_id AS organizationId, 
               t.business_date AS businessDate,
               t.rtl_loc_id AS retailLocationId,
               t.wkstn_id AS workstationId,
               t.trans_seq AS transactionSequence,
               t.trans_typcode AS transactionTypeCode,
               tct.typcode AS tenderControlTranTypeCode,
               sct.typcode AS sessionControlTranTypeCode,
               t.trans_date,
               t.begin_datetime AS beginDatetimestamp,
               t.end_datetime AS endDatetimestamp,
               ep.employee_id AS operatorId,
               t.trans_statcode AS transactionStatusCode,
               t.total AS total,
               cp.first_name AS fName,
               cp.last_name AS lName,
               t.post_void_flag AS postVoid,
               t.organization_id AS organizationId
        FROM trn_trans t
          LEFT JOIN trl_rtrans rt
            ON t.organization_id = rt.organization_id
            AND t.business_date = rt.business_date
            AND t.rtl_loc_id = rt.rtl_loc_id
            AND t.wkstn_id = rt.wkstn_id
            AND t.trans_seq = rt.trans_seq
          LEFT JOIN tsn_tndr_control_trans tct
            ON t.organization_id = tct.organization_id
            AND t.business_date = tct.business_date
            AND t.rtl_loc_id = tct.rtl_loc_id
            AND t.wkstn_id = tct.wkstn_id
            AND t.trans_seq = tct.trans_seq
          LEFT JOIN tsn_session_control_trans sct
            ON t.organization_id = sct.organization_id
            AND t.business_date = sct.business_date
            AND t.rtl_loc_id = sct.rtl_loc_id
            AND t.wkstn_id = sct.wkstn_id
            AND t.trans_seq = sct.trans_seq
          LEFT JOIN crm_party cp
            ON rt.organization_id = cp.organization_id
            AND rt.cust_party_id = cp.party_id
          LEFT JOIN crm_party ep
            ON t.organization_id = ep.organization_id
            AND t.operator_party_id = ep.party_id
        WHERE t.organization_id = ?
        ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Expression parameters="argStartRetailLocationId, argEndRetailLocationId" trigger="argStartRetailLocationId"><![CDATA[? <= t.rtl_loc_id and t.rtl_loc_id <= ?]]></Expression>
      <Expression trigger="@argRetailLocationIdList"><![CDATA[t.rtl_loc_id IN ?]]></Expression>
      <Expression parameters="argStartDate, argEndDate" trigger="argStartDate"><![CDATA[t.trans_date between ? and ?]]></Expression>
      <Expression parameters="argStartTime, argEndTime" trigger="argStartTime"><![CDATA[t.begin_time_int between ? and ?]]></Expression>
      <Expression parameters="argStartWorkstationId, argEndWorkstationId" trigger="argStartWorkstationId"><![CDATA[? <= t.wkstn_id and t.wkstn_id <= ?]]></Expression>
      <Expression parameters="argStartTranSeq, argEndTranSeq" trigger="argStartTranSeq"><![CDATA[? <= t.trans_seq and t.trans_seq <= ?]]></Expression>
      <Expression parameters="argStartEmployeeId, argEndEmployeeId" trigger="argEmployeeRange"><![CDATA[/*UPPER*/ ep.employee_id between ? and ?]]></Expression>
      <Expression trigger="argStartEmployeeId"><![CDATA[/*UPPER*/ ep.employee_id >= ?]]></Expression>
      <Expression trigger="argEndEmployeeId"><![CDATA[/*UPPER*/ ep.employee_id <= ?]]></Expression>
      <Expression parameters="argCustomerId, argCustomerId" trigger="argCustomerId"><![CDATA[/*UPPER*/ cp.last_name = ? or /*UPPER*/ cp.cust_id = ?]]></Expression>
      <Expression trigger="argTenderId"><![CDATA[EXISTS
          (Select * From ttr_tndr_lineitm tl
            Where tl.organization_id = t.organization_id
              And tl.business_date = t.business_date
              And tl.rtl_loc_id = t.rtl_loc_id
              And tl.wkstn_id = t.wkstn_id
              And tl.trans_seq = t.trans_seq
              And /*UPPER*/ tl.tndr_id = ?)]]></Expression>
      <Expression trigger="argTranType"><![CDATA[/*UPPER*/ t.trans_typcode = ?]]></Expression>
      <Expression trigger="argHashedAcct"><![CDATA[EXISTS
          (Select * From ttr_credit_debit_tndr_lineitm cdtl
            Where t.organization_id = cdtl.organization_id
              And t.business_date = cdtl.business_date
              And t.rtl_loc_id = cdtl.rtl_loc_id
              And t.wkstn_id = cdtl.wkstn_id
              And t.trans_seq = cdtl.trans_seq
              And /*UPPER*/ cdtl.acct_nbr_hash = ?)]]></Expression>
      <Expression parameters="argCheckSeqNbr, argBankId, argCheckAcctNbr" trigger="argCheckSeqNbr"><![CDATA[EXISTS
          (Select * From ttr_check_tndr_lineitm cek
            Where t.organization_id = cek.organization_id 
              And t.business_date = cek.business_date 
              And t.rtl_loc_id = cek.rtl_loc_id 
              And t.wkstn_id = cek.wkstn_id
              And t.trans_seq = cek.trans_seq  
              And /*UPPER*/ cek.check_seq_nbr = ?
              And /*UPPER*/ cek.bank_id = ?
              And /*UPPER*/ cek.check_acct_nbr = ?)]]></Expression>
      <Expression trigger="argFiscalNumber"><![CDATA[/*UPPER*/ t.fiscal_number LIKE ?]]></Expression>
      <Expression parameters="argTranBusinessDateSearch,argTranBusinessDateSearch" trigger="argTranBusinessDateSearch"><![CDATA[t.business_date = ? OR t.trans_date = ?]]></Expression>
    </SQL>
    <Suffix dtype="String"><![CDATA[ORDER BY t.begin_datetime DESC]]></Suffix>
  </Query>

  <Query name="TRANS_AVAILABLE_FOR_RETURN" pmType="TRANSACTION_LOOKUP">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.pos.register.returns.customerhistory.ReturnableTransSearchResult</ResultClass>
    <ResultField name="OrganizationId" type="Long" />
    <ResultField name="BusinessDate" type="Date" />
    <ResultField name="TransactionDate" type="Date" />
    <ResultField name="BeginDateTimestamp" type="Date" />
    <ResultField name="TransactionSequence" type="long" />
    <ResultField name="QuantityAvailable" type="long" />
    <ResultField name="TransactionTotal" type="BigDecimal" />
    <ResultField name="RetailLocationId" type="long" />
    <ResultField name="WorkstationId" type="long" />
    <SQL>
      <Statement dtype="String"><![CDATA[
        SELECT trans.organization_id,
			   trans.business_date, 
               trans.trans_date,
               trans.begin_datetime,
               trans.trans_seq, 
               (SUM(line.quantity) - SUM(coalesce(rtn.returned_count,0))) qty,
               trans.total, trans.rtl_loc_id, trans.wkstn_id
          FROM trn_trans trans
              INNER JOIN trl_rtrans rtrans
                   ON trans.trans_seq = rtrans.trans_seq
                  AND trans.organization_id = rtrans.organization_id
                  AND trans.rtl_loc_id = rtrans.rtl_loc_id
                  AND trans.business_date = rtrans.business_date
                  AND trans.wkstn_id = rtrans.wkstn_id
              INNER JOIN trl_rtrans_lineitm rline
                   ON rline.trans_seq = trans.trans_seq
                  AND rline.organization_id = trans.organization_id
                  AND rline.rtl_loc_id = trans.rtl_loc_id
                  AND rline.business_date = trans.business_date
                  AND rline.wkstn_id = trans.wkstn_id 
              INNER JOIN trl_sale_lineitm line
                   ON rline.trans_seq = line.trans_seq
                  AND rline.organization_id = line.organization_id
                  AND rline.rtl_loc_id = line.rtl_loc_id
                  AND rline.business_date = line.business_date
                  AND rline.wkstn_id = line.wkstn_id  
                  AND rline.rtrans_lineitm_seq =  line.rtrans_lineitm_seq                  
              LEFT OUTER JOIN trl_returned_item_count rtn
                   ON rtn.trans_seq = trans.trans_seq
                  AND line.rtrans_lineitm_seq = rtn.rtrans_lineitm_seq
                  AND trans.organization_id = rtn.organization_id
                  AND trans.rtl_loc_id = rtn.rtl_loc_id
                  AND trans.wkstn_id = rtn.wkstn_id
                  AND trans.business_date = rtn.business_date
          WHERE trans.organization_id = ?
            AND trans.begin_datetime >= ?
            AND /*UPPER*/ trans.trans_statcode = 'COMPLETE'
            AND trans.post_void_flag = 0
            AND /*UPPER*/ line.sale_lineitm_typcode IN ('SALE', 'SEND_SALE')
            AND line.return_flag = 0
            AND rline.void_flag = 0
            AND line.quantity > 0
            AND line.not_returnable_flag = 0
        ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argReturnCutOffDate" />
      <Expression trigger="argCustomerId"><![CDATA[rtrans.cust_party_id = ?]]></Expression>
      <Expression trigger="argItemId"><![CDATA[/*UPPER*/ line.item_id = ?]]></Expression>
      <Expression trigger="argSerialNumber"><![CDATA[/*UPPER*/ line.serial_nbr = ?]]></Expression>
      <Expression trigger="argHashedAcct"><![CDATA[
        EXISTS
          (Select * From ttr_credit_debit_tndr_lineitm cdtl
            Where rtrans.organization_id = cdtl.organization_id
              And rtrans.business_date = cdtl.business_date
              And rtrans.rtl_loc_id = cdtl.rtl_loc_id
              And rtrans.wkstn_id = cdtl.wkstn_id
              And rtrans.trans_seq = cdtl.trans_seq
              And /*UPPER*/ cdtl.acct_nbr_hash = ?)]]></Expression>
      <Expression trigger="argTokenNumber"><![CDATA[
        EXISTS
          (Select * From ttr_credit_debit_tndr_lineitm cdtl
            Where rtrans.organization_id = cdtl.organization_id
              And rtrans.business_date = cdtl.business_date
              And rtrans.rtl_loc_id = cdtl.rtl_loc_id
              And rtrans.wkstn_id = cdtl.wkstn_id
              And rtrans.trans_seq = cdtl.trans_seq
              And /*UPPER*/ cdtl.AUTHORIZATION_TOKEN = ?)]]></Expression>
    </SQL>
    <Suffix dtype="String"><![CDATA[
          GROUP BY trans.organization_id, trans.business_date, trans.trans_date, trans.begin_datetime, trans.trans_seq, trans.total, trans.rtl_loc_id, trans.wkstn_id
          HAVING (SUM(line.quantity) > SUM(COALESCE(rtn.returned_count,0)))
          ORDER BY trans.business_date DESC, trans.trans_seq DESC
    ]]></Suffix>
  </Query>

  <Query name="UNRECEIVED_DOCUMENTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.inv.InventoryDocumentId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[        
          WHERE t.organization_id = ? 
            AND t.rtl_loc_id = ?
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocation" />
      <Expression parameters="@argStatusCodes" trigger="argStatusCodes"><![CDATA[/*UPPER*/ t.status_code IN ?]]></Expression>
      <Expression trigger="argDocumentType"><![CDATA[document_typcode = ?]]></Expression>
    </SQL>
  </Query>

  <Query name="UNREVIEWED_PAYROL_EMPLOYEE" pmType="PAYROLL">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.query.results.TimecardPayrollEmployeeResult</ResultClass>
    <ResultField name="OrganizationId" />
    <ResultField name="PartyId" />
    <ResultField name="EmployeeId" />
    <ResultField name="LastName" />
    <ResultField name="FirstName" />
    <ResultField name="EmployeeDepartmentId" />
    <SQL>
      <Statement dtype="String"><![CDATA[
            select distinct emp.organization_id, party.party_id,
            emp.employee_id,
            last_name, first_name,
            department_id
            from thr_payroll_header entry, crm_party party, hrs_employee emp
            where entry.organization_id = ? and entry.rtl_loc_id = ? and
            entry.week_ending_date = ? and
            entry.organization_id = party.organization_id and
            entry.party_id = party.party_id and
            reviewed_date is null and
            emp.organization_id = entry.organization_id and
            emp.party_id = entry.party_id
        ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
      <Parameter name="argEndDate" />
      <Expression trigger="argPartyId"><![CDATA[party.party_id = ?]]></Expression>
    </SQL>
  </Query>

  <Query name="UPCS">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.itm.ItemCrossReferenceId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[      
          WHERE t.organization_id = ?
          AND /*UPPER*/ t.item_id = ?        
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Parameter name="argItemId" />
    </SQL>
  </Query>

  <Query name="VENDOR" pmType="ITEM">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.query.results.VendorQueryResult</ResultClass>
    <ResultField name="VendorId" />
    <ResultField name="Description" />
    <SQL>
      <Statement dtype="String"><![CDATA[
        SELECT
          vendor_id,
          name
        FROM itm_vendor
        WHERE organization_id = ?
        ]]></Statement>
      <Parameter name="argOrganizationId" />
    </SQL>
    <Suffix dtype="String"><![CDATA[ORDER BY name ASC]]></Suffix>
  </Query>

  <Query name="VENDOR.LOOKUP">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.itm.VendorId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[        
          WHERE organization_id = ?         
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Expression parameters="argVendorId%" trigger="argVendorId"><![CDATA[vendor_id LIKE ?]]></Expression>
      <Expression parameters="argName%" trigger="argName"><![CDATA[/*UPPER*/ name LIKE ?]]></Expression>
      <Expression trigger="argTypeCode"><![CDATA[/*UPPER*/ typcode = ?]]></Expression>
      <Expression trigger="argStatus"><![CDATA[/*UPPER*/ status = ?]]></Expression>
    </SQL>
    <Suffix dtype="String"><![CDATA[ORDER BY name, vendor_id]]></Suffix>
  </Query>

  <Query name="WARRANTY">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.itm.ItemId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[
        , itm_non_phys_item np
          WHERE /*UPPER*/ np.non_phys_item_typcode = 'WARRANTY'
            AND np.organization_id = t.organization_id
            AND np.item_id = t.item_id
            AND t.organization_id = ?        
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
    </SQL>
  </Query>

  <Query name="WARRANTY_COUNT_FOR_LINEITEM" pmType="TRANSACTION_LOOKUP">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.query.results.WarrantyQuantityResult</ResultClass>
    <ResultField name="WarrantyQuantity" type="BigDecimal" />
    <ResultField name="WarrantyPlanId" type="String" />
    <SQL>
      <Statement dtype="String"><![CDATA[
          SELECT COUNT(warranty_nbr),
                 warranty_plan_id
            FROM itm_warranty w
                 JOIN trl_rtrans_lineitm line
                    ON w.organization_id = line.organization_id
                   AND w.warranty_line_business_date = line.business_date
                   AND w.warranty_line_rtl_loc_id = line.rtl_loc_id 
                   AND w.warranty_line_wkstn_id = line.wkstn_id
                   AND w.warranty_line_trans_seq = line.trans_seq
                   AND w.warranty_rtrans_lineitm_seq = line.rtrans_lineitm_seq
                   AND Coalesce(line.void_flag, 0) = 0
           WHERE w.organization_id = ?
             AND /*UPPER*/ w.covered_item_id = ?
             AND w.covered_line_rtl_loc_id = ?
             AND w.covered_line_wkstn_id = ?
             AND w.covered_line_trans_seq = ?
             AND w.covered_rtrans_lineitm_seq = ?     
        ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argItemId" />
      <Parameter name="argRetailLocationId" />
      <Parameter name="argWorkstationId" />
      <Parameter name="argTransSeq" />
      <Parameter name="argLineItemSeq" />
    </SQL>
    <Suffix dtype="String"><![CDATA[GROUP BY warranty_plan_id]]></Suffix>
  </Query>

  <Query name="WARRANTY_CUSTOMER_TRANS_HISTORY" pmType="TRANSACTION_LOOKUP">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultFilter dtype="String">levelCodeLevelValueResultFilter</ResultFilter>
    <ResultClass dtype="String">dtv.xst.query.results.CustomerTransHistoryResult</ResultClass>
    <ResultField name="TransactionDate" type="Date" />
    <ResultField name="ItemDescription" type="String" />
    <ResultField name="ItemId" type="String" />
    <ResultField name="Price" type="BigDecimal" />
    <ResultField name="Qty" type="BigDecimal" />
    <ResultField name="SaleItemType" type="String" />
    <ResultField name="TransSeq" type="Long" />
    <ResultField name="ReturnFlag" type="Boolean" />
    <ResultField name="LineItemSeq" type="Long" />
    <ResultField name="RetailLocationId" type="String" />
    <ResultField name="WorkstationId" type="String" />
    <ResultField name="LevelCode" type="String" />
    <ResultField name="LevelValue" type="String" />
    <ResultField name="Warrantied" type="Boolean" />
    <SQL>
      <Statement dtype="String"><![CDATA[
        SELECT posTrans.trans_date, 
               itm.description AS description, 
               sale.item_id, 
               extended_amt, 
               quantity, 
               sale.sale_lineitm_typcode, 
               sale.trans_seq, 
               sale.return_flag, 
               sale.rtrans_lineitm_seq, 
               sale.rtl_loc_id, 
               sale.wkstn_id,
               opt.level_code,
               opt.level_value, 
               opt.warranty_flag
          FROM trl_rtrans trans
               
               JOIN trn_trans posTrans 
               ON posTrans.business_date = trans.business_date
               AND posTrans.rtl_loc_id = trans.rtl_loc_id
               AND posTrans.trans_seq = trans.trans_seq
               AND posTrans.organization_id = trans.organization_id
               AND posTrans.wkstn_id = trans.wkstn_id  
               
               JOIN trl_sale_lineitm sale
               ON sale.rtl_loc_id = trans.rtl_loc_id
               AND sale.trans_seq = trans.trans_seq
               AND sale.business_date = trans.business_date
               AND sale.wkstn_id = trans.wkstn_id
               AND sale.organization_id = trans.organization_id 
               
               JOIN itm_item itm
               ON itm.item_id = /*UPPER*/ sale.item_id
               AND itm.organization_id = sale.organization_id
               
               JOIN itm_item_options opt
               ON opt.organization_id = sale.organization_id
               AND opt.item_id = /*UPPER*/ sale.item_id
               
               JOIN trl_rtrans_lineitm rSale            
               ON rSale.business_date = sale.business_date
               AND rSale.rtl_loc_id = sale.rtl_loc_id
               AND rSale.trans_seq = sale.trans_seq
               AND rSale.organization_id = sale.organization_id
               AND rSale.wkstn_id = sale.wkstn_id
               AND rSale.rtrans_lineitm_seq = sale.rtrans_lineitm_seq
               
               LEFT OUTER JOIN 
                   (SELECT COUNT(warranty_nbr) AS warranty_count, 
                       w.organization_id, 
                       w.covered_line_rtl_loc_id, 
                       w.covered_line_trans_seq, 
                       w.covered_rtrans_lineitm_seq, 
                       w.covered_item_id, 
                       w.covered_line_wkstn_id 
                     FROM itm_warranty w
                         JOIN trl_rtrans_lineitm line
                            ON w.organization_id = line.organization_id
                           AND w.warranty_line_business_date = line.business_date
                           AND w.warranty_line_rtl_loc_id = line.rtl_loc_id 
                           AND w.warranty_line_wkstn_id = line.wkstn_id
                           AND w.warranty_line_trans_seq = line.trans_seq
                           AND w.warranty_rtrans_lineitm_seq = line.rtrans_lineitm_seq
                     WHERE Coalesce(line.void_flag, 0) = 0
                     GROUP BY w.organization_id, 
                         w.covered_line_trans_seq, 
                         w.covered_rtrans_lineitm_seq, 
                         w.covered_line_rtl_loc_id, 
                         w.covered_item_id, 
                         w.covered_line_wkstn_id) wrnty_list 
                  ON sale.organization_id = wrnty_list.organization_id 
                 AND sale.rtl_loc_id = wrnty_list.covered_line_rtl_loc_id 
                 AND sale.trans_seq = wrnty_list.covered_line_trans_seq 
                 AND sale.rtrans_lineitm_seq = wrnty_list.covered_rtrans_lineitm_seq 
                 AND /*UPPER*/ sale.item_id = /*UPPER*/ wrnty_list.covered_item_id 
                 AND sale.wkstn_id = wrnty_list.covered_line_wkstn_id
          WHERE 
            /*UPPER*/ sale.sale_lineitm_typcode NOT IN ('LAYAWAY', 'SPECIAL_ORDER', 'WORK_ORDER', 'WARRANTY') 
            AND coalesce(sale.quantity,0) - coalesce(warranty_count, 0) > 0 
            AND return_flag = ?
            AND sale.organization_id = ?
            AND /*UPPER*/ posTrans.trans_statcode = 'COMPLETE' 
            AND coalesce(posTrans.post_void_flag, 1) = 0            
            AND coalesce(rSale.void_flag, 1) = 0
        ]]></Statement>
      <Parameter name="argReturnFlag" />
      <Parameter name="argOrganizationId" />
      <Expression trigger="argPartyId"><![CDATA[trans.cust_party_id = ?]]></Expression>
      <Expression trigger="argHashedAcct"><![CDATA[
        EXISTS
          (Select * From ttr_credit_debit_tndr_lineitm cdtl
            Where trans.organization_id = cdtl.organization_id
              And trans.business_date = cdtl.business_date
              And trans.rtl_loc_id = cdtl.rtl_loc_id
              And trans.wkstn_id = cdtl.wkstn_id
              And trans.trans_seq = cdtl.trans_seq
              And /*UPPER*/ cdtl.acct_nbr_hash = ?)]]></Expression>
    </SQL>
    <Suffix dtype="String"><![CDATA[ORDER BY posTrans.begin_datetime ]]></Suffix>
  </Query>

  <Query name="WARRANTY_JOURNALS">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.itm.WarrantyJournalId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[
         WHERE organization_id = ? AND 
         warranty_nbr = ? AND 
         warranty_typcode = ?
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Parameter name="argWarrantyNbr" />
      <Parameter name="argWarrantyTypeCode" />
    </SQL>
    <Suffix dtype="String"><![CDATA[ORDER BY journal_seq ASC]]></Suffix>
  </Query>

  <Query name="WARRANTY_JOURNALS_BY_TRANS">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.itm.WarrantyJournalId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[
         WHERE organization_id = ? AND 
         trans_business_date = ? AND 
         trans_rtl_loc_id = ? AND 
         trans_wkstn_id = ? AND 
         trans_trans_seq = ? 
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Parameter name="argBusinessDate" />
      <Parameter name="argRtlLocId" />
      <Parameter name="argWkstnId" />
      <Parameter name="argTransSeq" />
      <Expression trigger="argWarrantyTypeCode"><![CDATA[warranty_typcode = ?]]></Expression>
    </SQL>
  </Query>

  <Query name="WARRANTY_LOOKUP">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.itm.ItemId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[
        , itm_warranty war
          WHERE war.organization_id = t.organization_id
            AND /*UPPER*/ war.warranty_item_id = t.item_id
            AND t.organization_id = ?
            AND war.warranty_nbr = ?
            AND war.warranty_typcode = ?        
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Parameter name="argWarrantyId" />
      <Parameter name="argWarrantyType" />
    </SQL>
  </Query>

  <Query name="WARRANTY_NP_ITEMS">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.itm.ItemId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[
        , itm_warranty_item wi, itm_non_phys_item np
          WHERE t.organization_id = ?
            AND wi.organization_id = t.organization_id 
            AND np.organization_id = t.organization_id 
            AND wi.item_id = t.item_id
            AND np.item_id = t.item_id
            AND np.display_order >= 0        
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
    </SQL>
    <Suffix dtype="String"><![CDATA[ORDER BY np.display_order]]></Suffix>
  </Query>

  <Query name="WARRANTY_PLAN_LOOKUP">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.itm.WarrantyItemCrossReferenceId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[        
          WHERE organization_id = ?
            AND item_id = ?
            AND /*UPPER*/ warranty_typcode = ?        
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Parameter name="argItemId" />
      <Parameter name="argWarrantyTypeCode" />
    </SQL>
  </Query>

  <Query name="WARRANTY_PLAN_LOOKUP_ALL">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.itm.ItemId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[        
          WHERE organization_id = ?
            AND item_id = ?        
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Parameter name="argItemId" />
    </SQL>
  </Query>

  <Query name="WARRANTY_PLAN_PRICING_LOOKUP">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.itm.WarrantyItemPriceId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[        
          WHERE organization_id = ?
            AND item_id = ?        
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Parameter name="argItemId" />
    </SQL>
    <Suffix dtype="String"><![CDATA[ORDER BY warranty_price_seq]]></Suffix>
  </Query>

  <Query name="WEEKLY_PAYROLL_FOR_PERSON">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.thr.PayrollId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[        
          WHERE organization_id = ?
            AND business_date >= ?
            AND business_date <= ?
            AND rtl_loc_id = ?
            AND party_id = ?        
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Parameter name="argStartDate" />
      <Parameter name="argEndDate" />
      <Parameter name="argLocId" />
      <Parameter name="argPartyId" />
      <Expression trigger="argCategory"><![CDATA[payroll_category = ?]]></Expression>
    </SQL>
  </Query>

  <Query name="WEEKLY_TIMECARD_ENTRIES">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.thr.TimecardEntryId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[        
          WHERE organization_id = ?
            AND rtl_loc_id = ?
            AND business_date >= ?
            AND business_date <= ?      
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocId" />
      <Parameter name="argStartDate" />
      <Parameter name="argEndDate" />
      <Expression trigger="argPartyId"><![CDATA[party_id = ?]]></Expression>
      <Expression trigger="argDeleteFlag"><![CDATA[delete_flag = ?]]></Expression>
    </SQL>
  </Query>

  <Query name="WEEKLY_EMPLOYEE_SCHEDULE">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.sch.ScheduleId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[        
          WHERE organization_id = ?
            AND employee_id = ?
            AND start_time >= ?
            AND end_time <= ?
            AND void_flag = 0        
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Parameter name="argEmployeeId" />
      <Parameter name="argStartDate" />
      <Parameter name="argEndDate" />
    </SQL>
  </Query>

  <Query name="WORKCODE_FOR_DESCRIPTION">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.hrs.WorkCodesId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[
        WHERE t.organization_id = ? AND /*UPPER*/ t.description = ?        
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Parameter name="argDescription" />
    </SQL>
  </Query>

  <Query name="WORK_ITEMS_FOR_ACCOUNT">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.cwo.WorkItemId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[        
          WHERE t.organization_id = ?
            AND t.cust_acct_id = ?
            AND t.cust_acct_code = ?        
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Parameter name="argCustAccountId" />
      <Parameter name="argCustAccountCode" />
    </SQL>
  </Query>

  <Query name="WORK_ORDERS_ALREADY_SHIPPED" pmType="CUSTOMER_ACCOUNT">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.query.results.CustAccountSearchResult</ResultClass>
    <ResultField name="OrganizationId" type="Long" />
    <ResultField name="AccountId" type="String" />
    <ResultField name="AccountCode" type="String" />
    <ResultField name="AccountSetupDate" type="Date" />
    <ResultField name="LastName" type="String" />
    <ResultField name="FirstName" type="String" />
    <SQL>
      <Statement dtype="String"><![CDATA[
        select acct.organization_id, acct.cust_acct_id, acct.cust_acct_code, ca.acct_setup_date, p.last_name, p.first_name
        from cwo_work_order_acct acct
        left join cat_cust_acct ca
          on acct.organization_id = ca.organization_id and acct.cust_acct_id = ca.cust_acct_id and acct.cust_acct_code = ca.cust_acct_code
        left join crm_party p on
          ca.party_id = p.party_id and
          ca.organization_id = p.organization_id
        where acct.organization_id = ?
          and ca.rtl_loc_id = ?
          and exists (select * from inv_item_acct_mod mod where acct.cust_acct_id = /*UPPER*/ mod.cust_acct_id 
          and acct.cust_acct_code = /*UPPER*/ mod.cust_acct_code and acct.organization_id = mod.organization_id 
          and mod.document_typcode='SHIPPING') 
          and not exists (select * from inv_item_acct_mod mod where acct.cust_acct_id = /*UPPER*/ mod.cust_acct_id 
          and acct.cust_acct_code = /*UPPER*/ mod.cust_acct_code and acct.organization_id = mod.organization_id 
          and mod.document_typcode='RECEIVING') 
          and /*UPPER*/ acct.service_loc_id = ?
        ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
      <Parameter name="argServiceLocationId" />
    </SQL>
  </Query>

  <Query name="WORK_ORDERS_NOT_INVOICED" pmType="CUSTOMER_ACCOUNT">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.query.results.WorkOrderAccountSearchResult</ResultClass>
    <ResultField name="AccountId" type="String" />
    <ResultField name="AccountCode" type="String" />
    <ResultField name="AccountSetupDate" type="Date" />
    <ResultField name="WarrantyNumber" type="String" />
    <ResultField name="LastName" type="String" />
    <ResultField name="FirstName" type="String" />
    <SQL>
      <Statement dtype="String"><![CDATA[ 
        select acct.cust_acct_id, acct.cust_acct_code, ca.acct_setup_date, wi.warranty_number, p.last_name, p.first_name
        from cwo_work_order_acct acct
        left join cat_cust_acct ca
          on acct.organization_id = ca.organization_id and acct.cust_acct_id = ca.cust_acct_id and acct.cust_acct_code = ca.cust_acct_code
        left join crm_party p
          on ca.organization_id = p.organization_id and ca.party_id = p.party_id
        left join cwo_work_item wi
          on acct.organization_id = wi.organization_id and acct.cust_acct_id = wi.cust_acct_id and acct.cust_acct_code = wi.cust_acct_code
        where acct.organization_id = ?
          and ca.rtl_loc_id = ?
          and acct.invoice_number is null
          and /*UPPER*/ acct.service_loc_id = ?
        ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
      <Parameter name="argServiceLocationId" />
    </SQL>
  </Query>

  <Query name="WORK_ORDERS_NOT_SHIPPED" pmType="CUSTOMER_ACCOUNT">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.query.results.CustAccountSearchResult</ResultClass>
    <ResultField name="OrganizationId" type="Long" />
    <ResultField name="AccountId" type="String" />
    <ResultField name="AccountCode" type="String" />
    <ResultField name="AccountSetupDate" type="Date" />
    <ResultField name="LastName" type="String" />
    <ResultField name="FirstName" type="String" />
    <SQL>
      <Statement dtype="String"><![CDATA[ 
        select acct.organization_id, acct.cust_acct_id, acct.cust_acct_code, ca.acct_setup_date, p.last_name, p.first_name
        from cwo_work_order_acct acct
        left join cat_cust_acct ca
          on acct.organization_id = ca.organization_id and acct.cust_acct_id = ca.cust_acct_id and acct.cust_acct_code = ca.cust_acct_code
        left join crm_party p on
          ca.party_id = p.party_id and
          ca.organization_id = p.organization_id
        where acct.organization_id = ?
          and ca.rtl_loc_id = ?
          and /*UPPER*/ ca.cust_acct_statcode <> 'CLOSED'
          and not exists (select * from inv_item_acct_mod mod where acct.cust_acct_id = /*UPPER*/ mod.cust_acct_id
          and acct.cust_acct_code = /*UPPER*/ mod.cust_acct_code and acct.organization_id = mod.organization_id
          and mod.document_typcode='SHIPPING')
          and /*UPPER*/ acct.service_loc_id = ?
        ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
      <Parameter name="argServiceLocationId" />
    </SQL>
    <Suffix dtype="String"><![CDATA[ORDER BY acct.cust_acct_id ASC]]></Suffix>
  </Query>

  <Query name="WORK_ORDER_CATEGORIES">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.cwo.WorkOrderCategoryId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[        
          WHERE t.organization_id = ?        
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
    </SQL>
    <Suffix dtype="String"><![CDATA[ORDER BY sort_order ASC]]></Suffix>
  </Query>

  <Query name="WORK_ORDER_PRICE_CODES">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.cwo.WorkOrderPriceCodeId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[        
          WHERE t.organization_id = ?        
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
    </SQL>
    <Suffix dtype="String"><![CDATA[ORDER BY sort_order ASC]]></Suffix>
  </Query>

  <Query name="WORK_ORDER_SERVICE_LOCATIONS">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.cwo.CategoryServiceLocationId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[
          WHERE t.organization_id = ?
            AND t.category_id = ?
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Parameter name="argCategory" />
    </SQL>
  </Query>

  <Query name="WORK_ORDER_TASK_LOOKUP" pmType="ITEM">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.query.results.WorkOrderTaskSearchResult</ResultClass>
    <ResultField name="OrganizationId" type="Long" />
    <ResultField name="ItemId" type="String" />
    <ResultField name="Description" type="String" />
    <ResultField name="CategoryId" type="String" />
    <ResultField name="PriceType" type="String" />
    <ResultField name="Price" type="BigDecimal" />
    <ResultField name="PriceCode" type="String" />
    <SQL>
      <Statement dtype="String"><![CDATA[
        SELECT t.organization_id, t.item_id, i.description, t.category_id, t.price_type_enum, p.price, p.price_code
          FROM cwo_task t
            LEFT JOIN itm_item i 
               ON i.organization_id = t.organization_id
              AND i.item_id = t.item_id
            LEFT JOIN cwo_work_order_pricing p
               ON p.organization_id = t.organization_id
              AND p.item_id = t.item_id
              AND p.price_code = ?
          WHERE t.organization_id = ?
            AND /*UPPER*/ t.category_id = ?
        ]]></Statement>
      <Parameter name="argPriceCode" />
      <Parameter name="argOrganizationId" />
      <Parameter name="argCategoryId" />
      <Expression trigger="argPriceType"><![CDATA[/*UPPER*/ t.price_type_enum = ?]]></Expression>
      <Expression trigger="argItemId"><![CDATA[t.item_id = ?]]></Expression>
    </SQL>
    <Suffix dtype="String"><![CDATA[ORDER BY i.item_id]]></Suffix>
  </Query>

  <Query name="|REPL|DELETE_ALL_PAYROLL_FOR_GIVEN_WEEK" pmType="PAYROLL">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <SQL>
      <Statement dtype="String"><![CDATA[
        DELETE from thr_payroll
        WHERE organization_id = ?
          AND business_date >= ? and business_date <= ?
          AND rtl_loc_id = ?
          AND (payroll_category in ('REGULAR', 'OT', 'DT') OR hours_count = 0)
        ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argStartDate" />
      <Parameter name="argEndDate" />
      <Parameter name="argRetailLocId" />
      <Expression trigger="argPartyId"><![CDATA[party_id = ?]]></Expression>
    </SQL>
  </Query>

  <Query name="|REPL|DELETE_INVENTORY_LOCATION_STEP1" pmType="STOCK_LEDGER">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <SQL>
      <Statement dtype="String"><![CDATA[
        DELETE FROM inv_location
         WHERE organization_id = ? 
           AND rtl_loc_id = ?
           AND inv_location_id = ?]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
      <Parameter name="argInvLocationId" />
    </SQL>
  </Query>

  <Query name="|REPL|DELETE_INVENTORY_LOCATION_STEP2" pmType="STOCK_LEDGER">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <SQL>
      <Statement dtype="String"><![CDATA[
        DELETE FROM inv_location_availability
         WHERE organization_id = ? 
           AND rtl_loc_id = ?
           AND location_id = ?]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
      <Parameter name="argInvLocationId" />
    </SQL>
  </Query>

  <Query name="|REPL|DELETE_INVENTORY_LOCATION_STEP3" pmType="STOCK_LEDGER">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <SQL>
      <Statement dtype="String"><![CDATA[
        DELETE FROM inv_location_bucket
         WHERE organization_id = ? 
           AND rtl_loc_id = ?
           AND location_id = ?]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
      <Parameter name="argInvLocationId" />
    </SQL>
  </Query>

  <Query name="|REPL|DELETE_INVENTORY_LOCATION_STEP4" pmType="STOCK_LEDGER">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <SQL>
      <Statement dtype="String"><![CDATA[
        DELETE FROM inv_stock_ledger_acct
         WHERE organization_id = ? 
           AND rtl_loc_id = ?
           AND inv_location_id = ?]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
      <Parameter name="argInvLocationId" />
    </SQL>
  </Query>

  <Query name="|REPL|DELETE_INVENTORY_LOCATION_STEP5" pmType="STOCK_LEDGER">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <SQL>
      <Statement dtype="String"><![CDATA[
        DELETE FROM inv_serialized_stock_ledger
         WHERE organization_id = ? 
           AND rtl_loc_id = ?
           AND inv_location_id = ?]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
      <Parameter name="argInvLocationId" />
    </SQL>
  </Query>

  <Query name="|REPL|DELETE_UNPOSTED_PAYROLL_FOR_GIVEN_WEEK" pmType="PAYROLL">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <SQL>
      <Statement dtype="String"><![CDATA[
        DELETE from thr_payroll
        WHERE organization_id = ?
          AND business_date >= ? and business_date <= ?
          AND rtl_loc_id = ?
          AND (payroll_category in ('REGULAR', 'OT', 'DT') OR hours_count = 0)
          AND posted_date is null
        ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argStartDate" />
      <Parameter name="argEndDate" />
      <Parameter name="argRetailLocId" />
    </SQL>
  </Query>

  <Query name="|REPL|LAYAWAY_ACCOUNT_STATUS_UPDATE" pmType="CUSTOMER_ACCOUNT">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <SQL>
      <Statement dtype="String"><![CDATA[
          UPDATE cat_cust_acct
          SET cust_acct_statcode = ?
          WHERE organization_id = ?
          AND cust_acct_id = ?
          AND cust_acct_code = 'LAYAWAY'
        ]]></Statement>
      <Parameter name="argStatCode" />
      <Parameter name="argOrganizationId" />
      <Parameter name="argCustAccountId" />
    </SQL>
  </Query>

  <Query name="|REPL|POST_PAYROLL" pmType="PAYROLL">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <SQL>
      <Statement dtype="String"><![CDATA[
          update thr_payroll
          set payroll_status = 'POSTED', posted_flag = 1
          where organization_id = ? and rtl_loc_id = ? and
          business_date between ? and ?
          and posted_date is not null and /*UPPER*/ payroll_status = 'PRE_POST'
        ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
      <Parameter name="argStartDate" />
      <Parameter name="argEndDate" />
    </SQL>
  </Query>

  <Query name="|REPL|POST_POS_LOG" pmType="LOG_TRICKLE">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <SQL>
      <Statement dtype="String"><![CDATA[INSERT INTO ctl_log_trickle 
          (organization_id, rtl_loc_id, wkstn_id, business_date, log_trickle_id, log_type, 
          log_data, posted_flag, log_generated_datetime)
          VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)
      ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
      <Parameter name="argWorkstationId" />
      <Parameter name="argBusinessDate" />
      <Parameter name="argLogTrickleId" />
      <Parameter name="argLogType" />
      <Parameter name="argLogData" />
      <Parameter name="argPostedFlag" />
      <Parameter name="argLogGeneratedDateTime" />
    </SQL>
  </Query>

  <Query name="|REPL|PRE_POST_PAYROLL" pmType="PAYROLL">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <SQL>
      <Statement dtype="String"><![CDATA[
          update thr_payroll
          set payroll_status = 'POST', posted_date = ?, posted_flag = 1
          where organization_id = ? and rtl_loc_id = ? and
          business_date between ? and ?
        ]]></Statement>
      <Parameter name="argPostDate" />
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
      <Parameter name="argStartDate" />
      <Parameter name="argEndDate" />
      <Expression trigger="argPartyId"><![CDATA[party_id = ?]]></Expression>
    </SQL>
  </Query>

  <Query name="|REPL|PRE_POST_PAYROLL_ONLY_POST_UNPOSTED" pmType="PAYROLL">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <SQL>
      <Statement dtype="String"><![CDATA[
          update thr_payroll
          set payroll_status = 'POST', posted_date = ?, posted_flag = 1
          where organization_id = ? and rtl_loc_id = ? and
          posted_date is null and
          business_date between ? and ?
        ]]></Statement>
      <Parameter name="argPostDate" />
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
      <Parameter name="argStartDate" />
      <Parameter name="argEndDate" />
      <Expression trigger="argPartyId"><![CDATA[party_id = ?]]></Expression>
    </SQL>
  </Query>

  <Query name="|REPL|REVIEW_PAYROLL" pmType="PAYROLL">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <SQL>
      <Statement dtype="String"><![CDATA[
          update thr_payroll
          set payroll_status = 'REVIEWED', reviewed_date = ?
          where organization_id = ? and rtl_loc_id = ? and
          business_date between ? and ? and
          party_id = ?
        ]]></Statement>
      <Parameter name="argReviewedDate" />
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
      <Parameter name="argStartDate" />
      <Parameter name="argEndDate" />
      <Parameter name="argPartyId" />
    </SQL>
  </Query>

  <Query name="|REPL|SERIALIZED_INV_REMOVE" pmType="STOCK_LEDGER">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <SQL>
      <Statement dtype="String"><![CDATA[
          DELETE FROM inv_serialized_stock_ledger
          WHERE
          organization_id = ? AND
          rtl_loc_id = ? AND
          inv_location_id = ? AND
          bucket_id = ? AND
          item_id = ? AND
          serial_nbr = ?
        ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
      <Parameter name="argLocationId" />
      <Parameter name="argBucketId" />
      <Parameter name="argItemId" />
      <Parameter name="argSerialNumber" />
    </SQL>
  </Query>

  <Query name="|REPL|WORK_ORDER_INVOICE_UPDATE" pmType="CUSTOMER_ACCOUNT">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <SQL>
      <Statement dtype="String"><![CDATA[
          UPDATE cwo_work_order_acct
          SET invoice_number = ?, cost = ?
          WHERE organization_id = ?
          AND cust_acct_id = ?
          AND cust_acct_code = 'WORK_ORDER'
        ]]></Statement>
      <Parameter name="argInvoiceNumber" />
      <Parameter name="argCost" />
      <Parameter name="argOrganizationId" />
      <Parameter name="argCustAccountId" />
    </SQL>
  </Query>

  <!-- 344027: Inventory Replenishment -->
  <Query name="INVENTORY_VENDORS">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.itm.VendorId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[        
          WHERE t.organization_id = ? AND /*UPPER*/ status = /*UPPER*/ 'Available'
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Expression trigger="argVendorId"><![CDATA[t.vendor_id = ?]]></Expression>
    </SQL>
    <Suffix dtype="String"><![CDATA[ORDER BY t.name ASC]]></Suffix>
  </Query>

  <Query name="REPLENISHMENT_SEARCH" pmType="INVENTORY">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.pos.inventory.replenishment.lookup.results.ReplenishmentOrderQueryResult</ResultClass>
    <ResultField name="DocumentId" type="String" />
    <ResultField name="DocumentTypeCode" type="String" />
    <ResultField name="RetailLocationId" type="Long" />
    <ResultField name="StatusCode" type="String" />
    <ResultField name="CreatedDate" type="Date" />
    <ResultField name="ParentDocumentId" type="String" />
    <SQL>
      <Statement dtype="String"><![CDATA[
        SELECT distinct IID.invctl_document_id,
            IID.document_typcode,
            IID.rtl_loc_id,
            IID.status_code,
            IID.create_date_timestamp,
            (select max(PRLD2.parent_document_id) from inv_invctl_document IID2
              LEFT JOIN inv_invctl_document_lineitm IIDL2
                ON IID2.organization_id = IIDL2.organization_id
                AND IID2.rtl_loc_id = IIDL2.rtl_loc_id
                AND IID2.document_typcode = IIDL2.document_typcode
                AND IID2.invctl_document_id = IIDL2.invctl_document_id
                AND /*UPPER*/ IIDL2.status_code <>'VOID'
              LEFT JOIN inv_rep_document_lineitm PRLD2
                ON IIDL2.organization_id = PRLD2.organization_id
                AND IIDL2.rtl_loc_id = PRLD2.rtl_loc_id
                AND IIDL2.document_typcode = PRLD2.document_typcode
                AND IIDL2.invctl_document_id = PRLD2.invctl_document_id
                AND IIDL2.invctl_document_line_nbr = PRLD2.invctl_document_line_nbr
              WHERE IID2.organization_id = IID.organization_id
                AND IID2.rtl_loc_id = IID.rtl_loc_id
                AND IID2.document_typcode = IID.document_typcode
                AND IID2.invctl_document_id = IID.invctl_document_id
            ) AS parent_document_id
          FROM inv_invctl_document IID
              LEFT JOIN inv_invctl_document_lineitm IIDL ON
                IID.organization_id = IIDL.organization_id AND
                IID.rtl_loc_id = IIDL.rtl_loc_id AND
                IID.document_typcode = IIDL.document_typcode AND
                IID.invctl_document_id = IIDL.invctl_document_id AND
                /*UPPER*/ IIDL.status_code <>'VOID'
              LEFT JOIN inv_rep_document_lineitm PRLD ON
                PRLD.organization_id = IIDL.organization_id AND
                PRLD.rtl_loc_id = IIDL.rtl_loc_id AND
                PRLD.document_typcode = IIDL.document_typcode AND
                PRLD.invctl_document_id = IIDL.invctl_document_id AND
                PRLD.invctl_document_line_nbr = IIDL.invctl_document_line_nbr
              LEFT JOIN inv_valid_destinations IVD ON
                IVD.organization_id =PRLD.organization_id AND
                IVD.document_typcode = PRLD.document_typcode AND
                IVD.destination_id = /*UPPER*/ PRLD.source_id

           WHERE IID.organization_id = ?
             AND IID.rtl_loc_id = ?
             AND IID.document_typcode = 'REPLENISHMENT'
      ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
      <Expression trigger="argRequestNumber"><![CDATA[IID.invctl_document_id = ?]]></Expression>
      <Expression trigger="argStartDate"><![CDATA[IID.create_date_timestamp >= ?]]></Expression>
      <Expression trigger="argEndDate"><![CDATA[IID.create_date_timestamp <= ?]]></Expression>
      <Expression trigger="@argReplenishmentStatus"><![CDATA[/*UPPER*/ IID.status_code IN ?]]></Expression>
      <Expression trigger="argSourceEntity"><![CDATA[IVD.destination_id=?]]></Expression>
      <Expression trigger="argItemId"><![CDATA[/*UPPER*/ IIDL.inventory_item_id=?]]></Expression>
      <Expression trigger="@argFilterStatus"><![CDATA[/*UPPER*/ IID.status_code NOT IN ?]]></Expression>
      <Expression trigger="@argRequestNumbers"><![CDATA[IID.invctl_document_id IN ?]]></Expression>
      <Expression trigger="@argParentRequestNumbers"><![CDATA[/*UPPER*/ PRLD.parent_document_id IN ?]]></Expression>
    </SQL>
    <Suffix dtype="String"><![CDATA[ORDER BY IID.create_date_timestamp DESC, IID.status_code ASC, IID.invctl_document_id ASC]]></Suffix>
  </Query>

  <Query name="REPLENISHMENT_DOCUMENT_SEARCH" pmType="INVENTORY">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.pos.inventory.replenishment.lookup.results.ReplenishmentOrderQueryResult</ResultClass>
    <ResultField name="DocumentId" type="String" />
    <ResultField name="DocumentTypeCode" type="String" />
    <ResultField name="RetailLocationId" type="Long" />
    <SQL>
      <Statement dtype="String"><![CDATA[
      SELECT distinct IID.invctl_document_id,
             IID.document_typcode,
             IID.rtl_loc_id
        FROM inv_invctl_document IID
            LEFT JOIN inv_invctl_document_lineitm IIDL ON
              IID.organization_id = IIDL.organization_id AND
              IID.rtl_loc_id = IIDL.rtl_loc_id AND
              IID.document_typcode = IIDL.document_typcode AND
              IID.invctl_document_id = IIDL.invctl_document_id
            LEFT JOIN inv_rep_document_lineitm PRLD ON
              PRLD.organization_id = IIDL.organization_id AND
              PRLD.rtl_loc_id = IIDL.rtl_loc_id AND
              PRLD.document_typcode = IIDL.document_typcode AND
              PRLD.invctl_document_id = IIDL.invctl_document_id AND
              PRLD.invctl_document_line_nbr = IIDL.invctl_document_line_nbr
            LEFT JOIN inv_valid_destinations IVD ON
              IVD.organization_id =PRLD.organization_id AND
              IVD.document_typcode = PRLD.document_typcode AND
              IVD.destination_id = /*UPPER*/ PRLD.source_id

        WHERE IID.organization_id = ?
          AND IID.rtl_loc_id = ?
          AND IID.document_typcode = 'REPLENISHMENT'
      ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
      <Expression trigger="argRequestNumber"><![CDATA[IID.invctl_document_id = ?]]></Expression>
      <Expression trigger="argReportSourceId"><![CDATA[IVD.destination_id = ?]]></Expression>
      <Expression parameters="argReportStartDate, argReportEndDate" trigger="argReportStartDate"><![CDATA[IID.create_date_timestamp between ? and ?]]></Expression>
      <Expression trigger="argRequestorId"><![CDATA[/*UPPER*/ IID.originator_id = ?]]></Expression>
      <Expression parameters="%argReportItemId%" trigger="argReportItemId"><![CDATA[/*UPPER*/ IIDL.inventory_item_id like ?]]></Expression>
      <Expression trigger="argReportDocStatus"><![CDATA[/*UPPER*/ IID.status_code IN (?)]]></Expression>
    </SQL>
    <Suffix dtype="String"><![CDATA[ORDER BY IID.invctl_document_id]]></Suffix>
  </Query>

  <Query name="REPLENISHMENT_SOURCES">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.inv.InventoryValidDestinationsId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[        
        WHERE t.organization_id = ? AND t.document_typcode = 'REPLENISHMENT'
        ORDER BY t.sort_order ASC
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
    </SQL>
  </Query>

  <Query name="ITEM_SALES_WEEKS_HISTORY" pmType="TRANSACTION">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.pos.inventory.replenishment.lookup.results.ItemSalesHistoryQueryResult</ResultClass>
    <ResultField name="BeginDate" type="Date" />
    <ResultField name="Quantity" type="BigDecimal" />
    <ResultField name="NetAmount" type="BigDecimal" />
    <SQL>
      <Statement dtype="String"><![CDATA[
      SELECT 
        tsl.week_begin_date,
        SUM((CASE tsl.return_flag WHEN 0 THEN 1 ELSE -1 END)*COALESCE(tsl.quantity,0)) AS quantity,
        SUM(tsl.net_amt) AS netAmount
      FROM 
        trn_trans tt
        INNER JOIN
        (SELECT (TRUNC(rpt.trans_date, 'IW') -1) AS week_begin_date,rpt.* FROM rpt_sale_line rpt) tsl
        ON 
          tt.trans_seq = tsl.trans_seq AND 
          tt.organization_id = tsl.organization_id AND 
          tt.wkstn_id = tsl.wkstn_id AND 
          tt.rtl_loc_id = tsl.rtl_loc_id AND 
          tt.business_date = tsl.business_date AND 
          tsl.QUANTITY <> 0
      WHERE 
        tt.organization_id = ? AND 
        tt.rtl_loc_id = ? AND 
        tsl.trans_date >=(SELECT (TRUNC(? - 7*?, 'IW')-1 ) FROM dual) AND 
        /*UPPER*/ tt.trans_statcode = 'COMPLETE' AND 
        tt.post_void_flag = '0'
      ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
      <Parameter name="argTransDate" />
      <Parameter name="argWeeks" />
      <Expression parameters="argItemId, argItemId" trigger="argItemId"><![CDATA[(tsl.item_id= ? OR tsl.item_id IN (SELECT item.item_id FROM itm_item item WHERE /*UPPER*/ item.parent_item_id = ?))]]></Expression>
    </SQL>
    <Suffix dtype="String"><![CDATA[GROUP BY tsl.week_begin_date ORDER BY tsl.week_begin_date DESC]]></Suffix>
  </Query>

  <Query name="ITEM_SALES_YEARS_HISTORY" pmType="TRANSACTION">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.pos.inventory.replenishment.lookup.results.ItemSalesHistoryQueryResult</ResultClass>
    <ResultField name="BeginDate" type="Date" />
    <ResultField name="Quantity" type="BigDecimal" />
    <ResultField name="NetAmount" type="BigDecimal" />
    <SQL>
      <Statement dtype="String"><![CDATA[
      SELECT 
        tsl.year_begin_date,
             SUM((CASE tsl.return_flag WHEN 0 THEN 1 ELSE -1 END)*COALESCE(tsl.quantity,0)) AS quantity,
        ((SUM(tsl.net_amt))) AS netAmount
      
      FROM 
        trn_trans tt
            INNER JOIN
        (SELECT TRUNC(rpt.trans_date, 'YEAR') AS year_begin_date, rpt.* FROM rpt_sale_line rpt) tsl
               ON tt.trans_seq = tsl.trans_seq
              AND tt.organization_id = tsl.organization_id
              AND tt.wkstn_id = tsl.wkstn_id
              AND tt.rtl_loc_id = tsl.rtl_loc_id
              AND tt.business_date = tsl.business_date
              AND tsl.QUANTITY <> 0
        WHERE tt.organization_id = ?
          AND tt.rtl_loc_id = ?
          AND tsl.trans_date >=(SELECT TRUNC(? - interval '2' year, 'YEAR') FROM dual)
          AND /*UPPER*/ tt.trans_statcode = 'COMPLETE'
          AND tt.post_void_flag = '0'
      ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
      <Parameter name="argTransDate" />
      <Expression parameters="argItemId, argItemId" trigger="argItemId"><![CDATA[(tsl.item_id= ? OR tsl.item_id IN (SELECT item.item_id FROM itm_item item WHERE /*UPPER*/ item.parent_item_id = ?))]]></Expression>
    </SQL>
    <Suffix dtype="String"><![CDATA[GROUP BY tsl.year_begin_date ORDER BY tsl.year_begin_date DESC]]></Suffix>
  </Query>

  <Query name="ITEM_SALES_TODAYS_HISTORY" pmType="ITEM">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.pos.inventory.replenishment.lookup.results.ItemSalesHistoryQueryResult</ResultClass>
    <ResultField name="Quantity" type="BigDecimal" />
    <ResultField name="NetAmount" type="BigDecimal" />
    <SQL>
      <Statement dtype="String"><![CDATA[
      SELECT SUM((CASE tsl.return_flag WHEN 0 THEN 1 ELSE -1 END)*COALESCE(tsl.quantity,0)) AS quantity,
             SUM(tsl.net_amt) AS netAmount
        FROM trn_trans tt
            INNER JOIN
             rpt_sale_line tsl
               ON tt.trans_seq = tsl.trans_seq
              AND tt.organization_id = tsl.organization_id
              AND tt.wkstn_id = tsl.wkstn_id
              AND tt.rtl_loc_id = tsl.rtl_loc_id
              AND tt.business_date = tsl.business_date
              AND tsl.QUANTITY <> 0
        WHERE tt.organization_id = ?
          AND tt.rtl_loc_id = ?
          AND tsl.trans_date = ?
          AND /*UPPER*/ tt.trans_statcode = 'COMPLETE'
          AND tt.post_void_flag = '0'
      ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
      <Parameter name="argTransDate" />
      <Expression parameters="argItemId, argItemId" trigger="argItemId"><![CDATA[(tsl.item_id= ? OR tsl.item_id IN (SELECT item.item_id FROM itm_item item WHERE /*UPPER*/ item.parent_item_id = ?))]]></Expression>
    </SQL>
  </Query>

  <Query name="REPLENISHMENT_NON_MERCHANDISE_ITEMS" pmType="INVENTORY">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.pos.inventory.replenishment.lookup.results.ReplenishmentNonMerchandiseItemsQueryResult</ResultClass>
    <ResultField name="ItemId" type="String" />
    <ResultField name="ItemDescription" type="String" />
    <SQL>
      <Statement dtype="String"><![CDATA[
      SELECT itm.item_id, itm.description
        FROM itm_non_phys_item non_phys_itm
            INNER JOIN itm_item itm
               ON non_phys_itm.organization_id = itm.organization_id
              AND non_phys_itm.item_id = itm.item_id
        WHERE non_phys_itm.organization_id = ?]]>
      </Statement>
      <Parameter name="argOrganizationId" />
      <Expression trigger="argNonMerchOption"><![CDATA[/*UPPER*/ non_phys_itm.non_phys_item_subtype = ?]]></Expression>
    </SQL>
  </Query>

  <Query name="INVENTORY_SOURCE_ENTITIES" pmType="INVENTORY">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.pos.inventory.replenishment.SourceEntityQueryResult</ResultClass>
    <ResultField name="EntityId" type="String" />
    <ResultField name="EntityType" type="String" />
    <ResultField name="EntityName" type="String" />
    <SQL>
      <Statement dtype="String"><![CDATA[
      SELECT t.rtl_loc_id AS entity_id,
             'STORE' AS entity_type,
              t.store_name AS entity_name
        FROM loc_rtl_loc t
        WHERE t.organization_id = ?
          AND ((convert(varchar, t.rtl_loc_id) || 'STORE') IN ?)

      UNION

      SELECT t.rtl_loc_id AS entity_id,
             'DC' as entity_type,
              t.store_name AS entity_name
        FROM loc_rtl_loc t
        WHERE t.organization_id = ?
          AND ((convert(varchar, t.rtl_loc_id) || 'DC') IN ?)

      UNION

      SELECT t.vendor_id AS entity_id,
             'VENDOR' AS entity_type,
              t.name AS entity_name
        FROM itm_vendor t
        WHERE t.organization_id = ?
          AND ((convert(varchar, t.vendor_id) || 'VENDOR') IN ?)]]>
      </Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="@argSourceIdTypes" />
      <Parameter name="argOrganizationId" />
      <Parameter name="@argSourceIdTypes" />
      <Parameter name="argOrganizationId" />
      <Parameter name="@argSourceIdTypes" />
    </SQL>
  </Query>

  <Query name="SIBLING_DOCUMENT_STATUS" pmType="INVENTORY">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.pos.inventory.replenishment.lookup.results.ReplenishmentOrderQueryResult</ResultClass>
    <ResultField name="DocumentId" type="String" />
    <ResultField name="StatusCode" type="String" />
    <SQL>
      <Statement dtype="String"><![CDATA[
      SELECT DISTINCT d.invctl_document_id,
             d.status_code
        FROM inv_invctl_document d
            LEFT OUTER JOIN inv_rep_document_lineitm p
               ON p.organization_id = d.organization_id
              AND p.rtl_loc_id = d.rtl_loc_id
              AND p.invctl_document_id = d.invctl_document_id
              AND p.document_typcode = d.document_typcode
        WHERE d.organization_id = ?
          AND d.rtl_loc_id = ?
          AND /*UPPER*/ p.parent_document_id = ?
      ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argRtlLocId" />
      <Parameter name="argParentDocumentId" />
      <Expression trigger="argCurrentDocumentId"><![CDATA[d.invctl_document_id <> ?]]></Expression>
    </SQL>
    <Suffix dtype="String"><![CDATA[ORDER BY d.invctl_document_id]]></Suffix>
  </Query>

  <Query name="CHILD_DOCUMENTS" pmType="INVENTORY">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.pos.inventory.replenishment.lookup.results.ReplenishmentOrderQueryResult</ResultClass>
    <ResultField name="DocumentId" type="String" />
    <ResultField name="DocumentTypeCode" type="String" />
    <SQL>
      <Statement dtype="String"><![CDATA[
      SELECT DISTINCT invctl_document_id, document_typcode
        FROM inv_rep_document_lineitm
        WHERE organization_id = ?
          AND rtl_loc_id = ?
          AND /*UPPER*/ parent_document_id = ?
        ORDER BY invctl_document_id
      ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argRtlLocId" />
      <Parameter name="argParentDocumentId" />
    </SQL>
  </Query>

  <Query name="NON_PHYSICAL_CATEGORY_LOOKUP" pmType="ITEM">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.query.results.NonPhysicalItemResult</ResultClass>
    <ResultField name="Subtype" type="String" />
    <SQL>
      <Statement dtype="String"><![CDATA[
        SELECT DISTINCT non_phys_item_subtype AS subtype
          FROM itm_non_phys_item
          WHERE organization_id = ?
            AND /*UPPER*/ non_phys_item_typcode = ?
          ORDER BY subtype
      ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argNonPhysItemTypcode" />
    </SQL>
  </Query>
  <!-- /344027: Inventory Replenishment -->

  <Query name="FISCAL_YEAR">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.inv.FiscalYearId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[
        WHERE t.organization_id = ? AND t.fiscal_year = ?        
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Parameter name="argFiscalYear" />
    </SQL>
  </Query>

  <!-- THERMAL PRINTER SUPPORT -->
  <Query name="LABEL_BATCH_ITEMS_COUNT" pmType="STORE_STANDARD">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.data2.access.DefaultQueryResult</ResultClass>
    <ResultField name="Count" type="Integer" />
    <SQL>
      <Statement dtype="String"><![CDATA[
        SELECT count(*)
        FROM itm_item_label_batch
        WHERE organization_id = ? AND batch_name = ?]]>
      </Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argBatchName" />
    </SQL>
  </Query>

  <Query name="LABEL_BATCH_ITEMS" pmType="STORE_STANDARD">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.data2.access.DefaultQueryResult</ResultClass>
    <ResultField name="BatchName" type="String" />
    <SQL>
      <Statement dtype="String"><![CDATA[
        SELECT DISTINCT batch_name
        FROM itm_item_label_batch
        WHERE organization_id = ?]]>
      </Statement>
      <Parameter name="argOrganizationId" />
      <Expression trigger="argRetailLocationId"><![CDATA[rtl_loc_id = ?]]></Expression>
      <Expression trigger="argRetailLocationIdAndGlobal"><![CDATA[(rtl_loc_id = ? OR rtl_loc_id = 0)]]></Expression>
    </SQL>
  </Query>

  <Query name="LABEL_BATCH" pmType="STORE_STANDARD">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.itm.ItemLabelBatchId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[
        WHERE t.organization_id = ? AND t.batch_name = ?     
      ]]></WhereClause>      
      <Parameter name="argOrganizationId" />
      <Parameter name="argBatchName" />
    </SQL>
  </Query>

  <Query name="LABEL_BATCH_ITEMS_DELETE" pmType="STORE_STANDARD">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <SQL>
      <Statement dtype="String"><![CDATA[
        DELETE
        FROM itm_item_label_batch
        WHERE batch_name = ?
              AND rtl_loc_id = ?]]>
      </Statement>
      <Parameter name="argBatchName" />
      <Parameter name="argRetailLocationId" />
    </SQL>
  </Query>
  <!-- END OF THERMAL PRINTER SUPPORT -->

  <Query name="INSTORE_SETTLEMENT_BATCH_TOTALS" pmType="STORE_STANDARD">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.query.results.InstoreSettlementBatchTotalsSearchResult</ResultClass>
    <ResultField name="Totalcount" type="BigDecimal" />
    <ResultField name="Totalamount" type="BigDecimal" />
    <SQL>
      <Statement dtype="String"><![CDATA[
      SELECT count(t.amt), SUM(t.amt) 
        FROM ttr_tndr_lineitm t
        where t.organization_id = ?
          and t.rtl_loc_id = ?
          and t.business_date = ?
            ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocId" />
      <Parameter name="argBusinessDate" />
      <Expression trigger="@argTenderIds"><![CDATA[/*UPPER*/ t.tndr_id IN ?]]></Expression>
    </SQL>
  </Query>

  <Query name="MATRIX_ITEM_LOOKUP" pmType="ITEM">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultFilter dtype="String">levelCodeLevelValueResultFilter</ResultFilter>
    <ResultClass dtype="String">dtv.xst.query.results.MatrixItemQueryResult</ResultClass>
    <ResultField name="ItemId" type="String" />
    <ResultField name="Description" type="String" />
    <ResultField name="ItemMatrixColor" type="String" />
    <ResultField name="DisallowMatrixDisplay" type="boolean" />
    <ResultField name="MerchLevel1Id" type="String" />
    <ResultField name="MerchLevel2Id" type="String" />
    <ResultField name="MerchLevel3Id" type="String" />
    <ResultField name="MerchLevel4Id" type="String" />
    <ResultField name="SortOrder" type="Integer" />
    <ResultField name="AvailabilityCode" type="String" />
    <ResultField name="LevelCode" type="String" />
    <ResultField name="LevelValue" type="String" />
    <SQL>
      <Statement dtype="String"><![CDATA[
      
        SELECT 
          i.item_id AS itemId,
          i.description AS description,
          i.item_matrix_color AS itemMatrixColor,
          i.disallow_matrix_display_flag,
          i.merch_level_1 AS merchLevel1Id,
          i.merch_level_2 AS merchLevel2Id,
          i.merch_level_3 AS merchLevel3Id,
          i.merch_level_4 AS merchLevel4Id,
          COALESCE(s.sort_order, -1) AS sortOrder,
          o.item_availability_code,
          o.level_code,
          o.level_value
        FROM 
          itm_item i JOIN itm_item_options o ON i.organization_id = o.organization_id AND i.item_id = o.item_id
        LEFT JOIN
        itm_matrix_sort_order s
      ON
        i.organization_id = s.organization_id AND
        i.item_id = s.matrix_sort_id
      WHERE i.organization_id = ?
        AND /*UPPER*/ i.item_lvlcode = 'ITEM'
        AND COALESCE(/*UPPER*/ s.matrix_sort_type, 'ITEM') = 'ITEM'
        AND COALESCE(i.disallow_matrix_display_flag, 0) = 0
    
    ]]></Statement>
      <Parameter name="argOrganizationId" />
    </SQL>
    <Property>
      <Key dtype="String">MaxRows</Key>
      <Value dtype="String"><![CDATA[1000]]></Value>
    </Property>
    <Suffix dtype="String"><![CDATA[ORDER BY description, itemId ASC]]></Suffix>
  </Query>

  <Query name="MATRIX_MERCH_HIERARCHY_LOOKUP" pmType="ITEM">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.query.results.MatrixMerchHierarchyQueryResult</ResultClass>
    <ResultField name="HierarchyId" type="String" />
    <ResultField name="Description" type="String" />
    <ResultField name="LevelCode" type="String" />
    <ResultField name="ParentId" type="String" />
    <ResultField name="ItemMatrixColor" type="String" />
    <ResultField name="SortOrder" type="Integer" />
    <SQL>
      <Statement dtype="String">
        <![CDATA[
        SELECT
          m.hierarchy_id AS hierarchyId,
          m.description AS description,
          m.level_code AS levelCode,
          m.parent_id AS parentId,
          m.item_matrix_color AS itemMatrixColor,
          COALESCE(s.sort_order, -1) AS sortOrder
        FROM 
          itm_merch_hierarchy m
        LEFT JOIN
          itm_matrix_sort_order s
        ON
          m.organization_id = s.organization_id AND
          m.hierarchy_id = s.matrix_sort_id
        WHERE
          m.organization_id = ? AND
          COALESCE(m.hidden_flag, 0) = 0 AND
          COALESCE(m.disallow_matrix_display_flag, 0) = 0 AND
          COALESCE(/*UPPER*/ s.matrix_sort_type, 'ITEM_MERCH') = 'ITEM_MERCH'
      ]]>
      </Statement>
      <Parameter name="argOrganizationId" />
    </SQL>
    <Property>
      <Key dtype="String">MaxRows</Key>
      <Value dtype="String"><![CDATA[350]]></Value>
    </Property>
  </Query>

  <Query name="ITEM_GROUP_DETAILS" pmType="ITEM">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.query.results.ItemPropertyWithGroupDetailsQueryResult</ResultClass>
    <ResultField name="ItemId" type="String" />
    <ResultField name="ItemName" type="String" />
    <ResultField name="Description" type="String" />
    <ResultField name="StringValue" type="String" />
    <ResultField name="PropertyCode" type="String" />
    <ResultField name="PropertyValueDescription" type="String" />
    <ResultField name="PropertyCodeDescription" type="String" />
    <ResultField name="PropertyCodeSortOrder" type="int" />
    <SQL>
      <Statement dtype="String"><![CDATA[
        SELECT i.ITEM_ID, 
      i.NAME, i.DESCRIPTION, 
      p.string_value, 
      p.itm_deal_property_code,
      c.description descr,
      com.description pdescr,
      com.sort_order

    FROM itm_item_deal_prop p

    LEFT OUTER JOIN itm_item i
      ON p.organization_id = i.organization_id
      AND p.item_id = i.ITEM_ID

    LEFT OUTER JOIN com_code_value c
      ON p.organization_id = c.organization_id
      AND /*UPPER*/ p.string_value = c.code
      
    LEFT OUTER JOIN com_code_value com
      ON p.organization_id = com.organization_id
      AND p.itm_deal_property_code = com.code

    WHERE p.organization_id = ?
      AND p.item_id = ?
      ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argItemId" />
    </SQL>
  </Query>

  <Query name="DRILL_DOWN_MERCHLEVEL1" pmType="ITEM">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.pos.reporting.drilldown.query.DrillDownQueryResult</ResultClass>
    <ResultField name="HierarchyType" type="String" />
    <ResultField name="Id" type="String" />
    <ResultField name="Description" type="String" />
    <ResultField name="SaleCount" type="BigDecimal" />
    <ResultField name="SaleAmount" type="BigDecimal" />
    <ResultField name="ReturnCount" type="BigDecimal" />
    <ResultField name="ReturnAmount" type="BigDecimal" />
    <ResultField name="DiscountCount" type="BigDecimal" />
    <ResultField name="DiscountAmount" type="BigDecimal" />
    <ResultField name="NetAmount" type="BigDecimal" />
    <SQL>
      <Statement dtype="String"><![CDATA[
    SELECT ? as hierarchy_type,
      h.hierarchy_id as id,
      h.description as description,
    
    SUM(CASE WHEN rsl.return_flag = 0 THEN COALESCE(rsl.quantity,0) END) AS sale_count, 
    ROUND(SUM(CASE WHEN rsl.return_flag = 0 THEN rsl.gross_amt END), 2) AS sale_amount, 
    SUM(CASE WHEN rsl.return_flag = 1 THEN COALESCE(rsl.quantity,0) END) AS return_count, 
    ROUND(SUM(CASE WHEN rsl.return_flag = 1 THEN rsl.net_amt END), 2) AS return_amount, 
    COALESCE(SUM(CASE WHEN COALESCE(rsl.discount_amt,0) <> 0 THEN COALESCE(rsl.quantity,0) END), 0) AS discount_count, 
    ROUND(SUM(COALESCE(rsl.discount_amt,0)), 2) AS discount_amount, 
    ROUND(SUM(COALESCE(rsl.net_amt,0)), 2) AS net_amount 
    
    FROM rpt_sale_line rsl
    INNER JOIN itm_merch_hierarchy h
      ON h.organization_id = rsl.organization_id
      AND /*UPPER*/ h.level_code = ?
      AND h.hierarchy_id = /*UPPER*/ rsl.merch_level_1
    WHERE rsl.organization_id = ?
      AND rsl.trans_date BETWEEN ? AND ?
      AND QUANTITY <> 0
      AND /*UPPER*/ sale_lineitm_typcode <> 'ONHOLD'
      AND /*UPPER*/ trans_statcode = 'COMPLETE'
    GROUP BY h.hierarchy_id, h.description
    
    UNION ALL
    
    SELECT 'ITEM' as hierarchy_type,
      i.item_id as id,
      COALESCE(i.description, i.name)  as description,
    
    SUM(CASE WHEN rsl.return_flag = 0 THEN COALESCE(rsl.quantity,0) END) AS sale_count, 
    ROUND(SUM(CASE WHEN rsl.return_flag = 0 THEN rsl.gross_amt END), 2) AS sale_amount, 
    SUM(CASE WHEN rsl.return_flag = 1 THEN COALESCE(rsl.quantity,0) END) AS return_count, 
    ROUND(SUM(CASE WHEN rsl.return_flag = 1 THEN rsl.net_amt END), 2) AS return_amount, 
    COALESCE(SUM(CASE WHEN COALESCE(rsl.discount_amt,0) <> 0 THEN COALESCE(rsl.quantity,0) END), 0) AS discount_count, 
    ROUND(SUM(COALESCE(rsl.discount_amt,0)), 2) AS discount_amount, 
    ROUND(SUM(COALESCE(rsl.net_amt,0)), 2) AS net_amount 
    
    FROM rpt_sale_line rsl
    INNER JOIN itm_item i
      ON i.organization_id = rsl.organization_id
      AND i.item_id = rsl.item_id
      AND /*UPPER*/ i.merch_level_1 NOT IN (SELECT m.hierarchy_id FROM itm_merch_hierarchy m 
                                  WHERE m.organization_id = rsl.organization_Id AND /*UPPER*/ m.level_code = ?)
    WHERE rsl.organization_id = ?
      AND rsl.trans_date BETWEEN ? AND ?
      AND COALESCE(rsl.exclude_from_net_sales_flag, 0) = 0
      AND QUANTITY <> 0
      AND /*UPPER*/ sale_lineitm_typcode <> 'ONHOLD'
      AND /*UPPER*/ trans_statcode = 'COMPLETE'
    GROUP BY i.item_id, COALESCE(i.description, i.name)
      ]]></Statement>
      <Parameter name="argMerchLevel1Id" />
      <Parameter name="argMerchLevel1Id" />
      <Parameter name="argOrganizationId" />
      <Parameter name="argStartDate" />
      <Parameter name="argEndDate" />
      <Parameter name="argMerchLevel1Id" />
      <Parameter name="argOrganizationId" />
      <Parameter name="argStartDate" />
      <Parameter name="argEndDate" />
    </SQL>
  </Query>

  <Query name="DRILL_DOWN_MERCHLEVEL2" pmType="ITEM">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.pos.reporting.drilldown.query.DrillDownQueryResult</ResultClass>
    <ResultField name="HierarchyType" type="String" />
    <ResultField name="Id" type="String" />
    <ResultField name="Description" type="String" />
    <ResultField name="SaleCount" type="BigDecimal" />
    <ResultField name="SaleAmount" type="BigDecimal" />
    <ResultField name="ReturnCount" type="BigDecimal" />
    <ResultField name="ReturnAmount" type="BigDecimal" />
    <ResultField name="DiscountCount" type="BigDecimal" />
    <ResultField name="DiscountAmount" type="BigDecimal" />
    <ResultField name="NetAmount" type="BigDecimal" />
    <SQL>
      <Statement dtype="String"><![CDATA[
  SELECT ? as hierarchy_type,
    h.hierarchy_id as id,
    h.description as description,
    
  SUM(CASE WHEN rsl.return_flag = 0 THEN COALESCE(rsl.quantity,0) END) AS sale_count, 
  ROUND(SUM(CASE WHEN rsl.return_flag = 0 THEN rsl.gross_amt END), 2) AS sale_amount, 
  SUM(CASE WHEN rsl.return_flag = 1 THEN COALESCE(rsl.quantity,0) END) AS return_count, 
  ROUND(SUM(CASE WHEN rsl.return_flag = 1 THEN rsl.net_amt END), 2) AS return_amount, 
  COALESCE(SUM(CASE WHEN COALESCE(rsl.discount_amt,0) <> 0 THEN COALESCE(rsl.quantity,0) END), 0) AS discount_count, 
  ROUND(SUM(COALESCE(rsl.discount_amt,0)), 2) AS discount_amount, 
  ROUND(SUM(COALESCE(rsl.net_amt,0)), 2) AS net_amount 
  
  FROM rpt_sale_line rsl
  INNER JOIN itm_item i
    ON i.organization_id = rsl.organization_id
    AND i.item_id = rsl.item_id
  INNER JOIN itm_merch_hierarchy h
    ON h.organization_id = rsl.organization_id
    AND /*UPPER*/ h.level_code = ?
    AND h.hierarchy_id = /*UPPER*/ i.merch_level_2
    AND /*UPPER*/ h.parent_id = ?
  WHERE rsl.organization_id = ?
    AND rsl.trans_date BETWEEN ? AND ?
    AND COALESCE(rsl.exclude_from_net_sales_flag, 0) = 0
    AND QUANTITY <> 0
    AND /*UPPER*/ sale_lineitm_typcode <> 'ONHOLD'
    AND /*UPPER*/ trans_statcode = 'COMPLETE'
  GROUP BY h.hierarchy_id, h.description
  
  UNION ALL
  
  SELECT ? as hierarchy_type,
    h.hierarchy_id as id,
    h.description as description,
    
  SUM(CASE WHEN rsl.return_flag = 0 THEN COALESCE(rsl.quantity,0) END) AS sale_count, 
  ROUND(SUM(CASE WHEN rsl.return_flag = 0 THEN rsl.gross_amt END), 2) AS sale_amount, 
  SUM(CASE WHEN rsl.return_flag = 1 THEN COALESCE(rsl.quantity,0) END) AS return_count, 
  ROUND(SUM(CASE WHEN rsl.return_flag = 1 THEN rsl.net_amt END), 2) AS return_amount, 
  COALESCE(SUM(CASE WHEN COALESCE(rsl.discount_amt,0) <> 0 THEN COALESCE(rsl.quantity,0) END), 0) AS discount_count, 
  ROUND(SUM(COALESCE(rsl.discount_amt,0)), 2) AS discount_amount, 
  ROUND(SUM(COALESCE(rsl.net_amt,0)), 2) AS net_amount 
  
  FROM rpt_sale_line rsl
  INNER JOIN itm_item i
    ON i.organization_id = rsl.organization_id
    AND i.item_id = rsl.item_id
  INNER JOIN itm_merch_hierarchy h
    ON h.organization_id = rsl.organization_id
    AND /*UPPER*/ h.level_code = ?
    AND h.hierarchy_id = /*UPPER*/ i.merch_level_3
    AND /*UPPER*/ h.parent_id = ?
  WHERE rsl.organization_id = ?
    AND rsl.trans_date BETWEEN ? AND ?
    AND COALESCE(rsl.exclude_from_net_sales_flag, 0) = 0
    AND QUANTITY <> 0
    AND /*UPPER*/ sale_lineitm_typcode <> 'ONHOLD'
    AND /*UPPER*/ trans_statcode = 'COMPLETE'
  GROUP BY h.hierarchy_id, h.description
  
  UNION ALL
  
  SELECT ? as hierarchy_type,
    h.hierarchy_id as id,
    h.description as description,
    
  SUM(CASE WHEN rsl.return_flag = 0 THEN COALESCE(rsl.quantity,0) END) AS sale_count, 
  ROUND(SUM(CASE WHEN rsl.return_flag = 0 THEN rsl.gross_amt END), 2) AS sale_amount, 
  SUM(CASE WHEN rsl.return_flag = 1 THEN COALESCE(rsl.quantity,0) END) AS return_count, 
  ROUND(SUM(CASE WHEN rsl.return_flag = 1 THEN rsl.net_amt END), 2) AS return_amount, 
  COALESCE(SUM(CASE WHEN COALESCE(rsl.discount_amt,0) <> 0 THEN COALESCE(rsl.quantity,0) END), 0) AS discount_count, 
  ROUND(SUM(COALESCE(rsl.discount_amt,0)), 2) AS discount_amount, 
  ROUND(SUM(COALESCE(rsl.net_amt,0)), 2) AS net_amount 
  
  FROM rpt_sale_line rsl
  INNER JOIN itm_item i
    ON i.organization_id = rsl.organization_id
    AND i.item_id = rsl.item_id
  INNER JOIN itm_merch_hierarchy h
    ON h.organization_id = rsl.organization_id
    AND /*UPPER*/ h.level_code = ?
    AND h.hierarchy_id = /*UPPER*/ i.merch_level_4
    AND /*UPPER*/ h.parent_id = ?
  WHERE rsl.organization_id = ?
    AND rsl.trans_date BETWEEN ? AND ?
    AND COALESCE(rsl.exclude_from_net_sales_flag, 0) = 0
    AND QUANTITY <> 0
    AND /*UPPER*/ sale_lineitm_typcode <> 'ONHOLD'
    AND /*UPPER*/ trans_statcode = 'COMPLETE'
  GROUP BY h.hierarchy_id, h.description
  
  UNION ALL
  
  SELECT 'ITEM' as hierarchy_type,
    i.item_id as id,
    COALESCE(i.description, i.name) as description,
  
  SUM(CASE WHEN rsl.return_flag = 0 THEN COALESCE(rsl.quantity,0) END) AS sale_count, 
  ROUND(SUM(CASE WHEN rsl.return_flag = 0 THEN rsl.gross_amt END), 2) AS sale_amount, 
  SUM(CASE WHEN rsl.return_flag = 1 THEN COALESCE(rsl.quantity,0) END) AS return_count, 
  ROUND(SUM(CASE WHEN rsl.return_flag = 1 THEN rsl.net_amt END), 2) AS return_amount, 
  COALESCE(SUM(CASE WHEN COALESCE(rsl.discount_amt,0) <> 0 THEN COALESCE(rsl.quantity,0) END), 0) AS discount_count, 
  ROUND(SUM(COALESCE(rsl.discount_amt,0)), 2) AS discount_amount, 
  ROUND(SUM(COALESCE(rsl.net_amt,0)), 2) AS net_amount 
  
  FROM rpt_sale_line rsl
  INNER JOIN itm_item i
    ON i.organization_id = rsl.organization_id
    AND i.item_id = rsl.item_id
    AND /*UPPER*/ i.merch_level_1 = ?
    AND i.merch_level_2 IS NULL
    AND i.merch_level_3 IS NULL
    AND i.merch_level_4 IS NULL
  WHERE rsl.organization_id = ?
    AND rsl.trans_date BETWEEN ? AND ?
    AND COALESCE(rsl.exclude_from_net_sales_flag, 0) = 0
    AND QUANTITY <> 0
    AND /*UPPER*/ sale_lineitm_typcode <> 'ONHOLD'
    AND /*UPPER*/ trans_statcode = 'COMPLETE'
  GROUP BY i.item_id, COALESCE(i.description, i.name)
      ]]></Statement>
      <Parameter name="argMerchLevel2Id" />
      <Parameter name="argMerchLevel2Id" />
      <Parameter name="argParentId" />
      <Parameter name="argOrganizationId" />
      <Parameter name="argStartDate" />
      <Parameter name="argEndDate" />
      <Parameter name="argMerchLevel3Id" />
      <Parameter name="argMerchLevel3Id" />
      <Parameter name="argParentId" />
      <Parameter name="argOrganizationId" />
      <Parameter name="argStartDate" />
      <Parameter name="argEndDate" />
      <Parameter name="argMerchLevel4Id" />
      <Parameter name="argMerchLevel4Id" />
      <Parameter name="argParentId" />
      <Parameter name="argOrganizationId" />
      <Parameter name="argStartDate" />
      <Parameter name="argEndDate" />
      <Parameter name="argMerchLevel1Value" />
      <Parameter name="argOrganizationId" />
      <Parameter name="argStartDate" />
      <Parameter name="argEndDate" />
    </SQL>
  </Query>

  <Query name="DRILL_DOWN_MERCHLEVEL3" pmType="ITEM">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.pos.reporting.drilldown.query.DrillDownQueryResult</ResultClass>
    <ResultField name="HierarchyType" type="String" />
    <ResultField name="Id" type="String" />
    <ResultField name="Description" type="String" />
    <ResultField name="SaleCount" type="BigDecimal" />
    <ResultField name="SaleAmount" type="BigDecimal" />
    <ResultField name="ReturnCount" type="BigDecimal" />
    <ResultField name="ReturnAmount" type="BigDecimal" />
    <ResultField name="DiscountCount" type="BigDecimal" />
    <ResultField name="DiscountAmount" type="BigDecimal" />
    <ResultField name="NetAmount" type="BigDecimal" />
    <SQL>
      <Statement dtype="String"><![CDATA[
  SELECT ? as hierarchy_type,
    h.hierarchy_id as id,
    h.description as description,
    
  SUM(CASE WHEN rsl.return_flag = 0 THEN COALESCE(rsl.quantity,0) END) AS sale_count, 
  ROUND(SUM(CASE WHEN rsl.return_flag = 0 THEN rsl.gross_amt END), 2) AS sale_amount, 
  SUM(CASE WHEN rsl.return_flag = 1 THEN COALESCE(rsl.quantity,0) END) AS return_count, 
  ROUND(SUM(CASE WHEN rsl.return_flag = 1 THEN rsl.net_amt END), 2) AS return_amount, 
  COALESCE(SUM(CASE WHEN COALESCE(rsl.discount_amt,0) <> 0 THEN COALESCE(rsl.quantity,0) END), 0) AS discount_count, 
  ROUND(SUM(COALESCE(rsl.discount_amt,0)), 2) AS discount_amount, 
  ROUND(SUM(COALESCE(rsl.net_amt,0)), 2) AS net_amount 
  
  FROM rpt_sale_line rsl
  INNER JOIN itm_item i
    ON i.organization_id = rsl.organization_id
    AND i.item_id = rsl.item_id
  INNER JOIN itm_merch_hierarchy h
    ON h.organization_id = rsl.organization_id
    AND /*UPPER*/ h.level_code = ?
    AND h.hierarchy_id = /*UPPER*/ i.merch_level_3
    AND /*UPPER*/ h.parent_id = ?
  WHERE rsl.organization_id = ?
    AND rsl.trans_date BETWEEN ? AND ?
    AND COALESCE(rsl.exclude_from_net_sales_flag, 0) = 0
    AND QUANTITY <> 0
    AND /*UPPER*/ sale_lineitm_typcode <> 'ONHOLD'
    AND /*UPPER*/ trans_statcode = 'COMPLETE'
  GROUP BY h.hierarchy_id, h.description
  
  UNION ALL
  
  SELECT ? as hierarchy_type,
    h.hierarchy_id as id,
    h.description as description,
  
  SUM(CASE WHEN rsl.return_flag = 0 THEN COALESCE(rsl.quantity,0) END) AS sale_count, 
  ROUND(SUM(CASE WHEN rsl.return_flag = 0 THEN rsl.gross_amt END), 2) AS sale_amount, 
  SUM(CASE WHEN rsl.return_flag = 1 THEN COALESCE(rsl.quantity,0) END) AS return_count, 
  ROUND(SUM(CASE WHEN rsl.return_flag = 1 THEN rsl.net_amt END), 2) AS return_amount, 
  COALESCE(SUM(CASE WHEN COALESCE(rsl.discount_amt,0) <> 0 THEN COALESCE(rsl.quantity,0) END), 0) AS discount_count, 
  ROUND(SUM(COALESCE(rsl.discount_amt,0)), 2) AS discount_amount, 
  ROUND(SUM(COALESCE(rsl.net_amt,0)), 2) AS net_amount 
  
  FROM rpt_sale_line rsl
  INNER JOIN itm_item i
    ON i.organization_id = rsl.organization_id
    AND i.item_id = rsl.item_id
  INNER JOIN itm_merch_hierarchy h
    ON h.organization_id = rsl.organization_id
    AND /*UPPER*/ h.level_code = ?
    AND h.hierarchy_id = /*UPPER*/ i.merch_level_4
    AND /*UPPER*/ h.parent_id = ?
  WHERE rsl.organization_id = ?
    AND rsl.trans_date BETWEEN ? AND ?
    AND COALESCE(rsl.exclude_from_net_sales_flag, 0) = 0
    AND QUANTITY <> 0
    AND /*UPPER*/ sale_lineitm_typcode <> 'ONHOLD'
    AND /*UPPER*/ trans_statcode = 'COMPLETE'
  GROUP BY h.hierarchy_id, h.description
  
  UNION ALL
  
  SELECT 'ITEM' as hierarchy_type,
    i.item_id as id,
    COALESCE(i.description, i.name) as description,
  
  SUM(CASE WHEN rsl.return_flag = 0 THEN COALESCE(rsl.quantity,0) END) AS sale_count, 
  ROUND(SUM(CASE WHEN rsl.return_flag = 0 THEN rsl.gross_amt END), 2) AS sale_amount, 
  SUM(CASE WHEN rsl.return_flag = 1 THEN COALESCE(rsl.quantity,0) END) AS return_count, 
  ROUND(SUM(CASE WHEN rsl.return_flag = 1 THEN rsl.net_amt END), 2) AS return_amount, 
  COALESCE(SUM(CASE WHEN COALESCE(rsl.discount_amt,0) <> 0 THEN COALESCE(rsl.quantity,0) END), 0) AS discount_count, 
  ROUND(SUM(COALESCE(rsl.discount_amt,0)), 2) AS discount_amount, 
  ROUND(SUM(COALESCE(rsl.net_amt,0)), 2) AS net_amount 
  
  FROM rpt_sale_line rsl
  INNER JOIN itm_item i
    ON i.organization_id = rsl.organization_id
    AND i.item_id = rsl.item_id
    AND /*UPPER*/ i.merch_level_2 = ?
    AND i.merch_level_3 IS NULL
    AND i.merch_level_4 IS NULL
  WHERE rsl.organization_id = ?
    AND rsl.trans_date BETWEEN ? AND ?
    AND COALESCE(rsl.exclude_from_net_sales_flag, 0) = 0
    AND QUANTITY <> 0
    AND /*UPPER*/ sale_lineitm_typcode <> 'ONHOLD'
    AND /*UPPER*/ trans_statcode = 'COMPLETE'
  GROUP BY i.item_id, COALESCE(i.description, i.name)
      ]]></Statement>
      <Parameter name="argMerchLevel3Id" />
      <Parameter name="argMerchLevel3Id" />
      <Parameter name="argParentId" />
      <Parameter name="argOrganizationId" />
      <Parameter name="argStartDate" />
      <Parameter name="argEndDate" />
      <Parameter name="argMerchLevel4Id" />
      <Parameter name="argMerchLevel4Id" />
      <Parameter name="argParentId" />
      <Parameter name="argOrganizationId" />
      <Parameter name="argStartDate" />
      <Parameter name="argEndDate" />
      <Parameter name="argMerchLevel2Value" />
      <Parameter name="argOrganizationId" />
      <Parameter name="argStartDate" />
      <Parameter name="argEndDate" />
    </SQL>
  </Query>

  <Query name="DRILL_DOWN_MERCHLEVEL4" pmType="ITEM">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.pos.reporting.drilldown.query.DrillDownQueryResult</ResultClass>
    <ResultField name="HierarchyType" type="String" />
    <ResultField name="Id" type="String" />
    <ResultField name="Description" type="String" />
    <ResultField name="SaleCount" type="BigDecimal" />
    <ResultField name="SaleAmount" type="BigDecimal" />
    <ResultField name="ReturnCount" type="BigDecimal" />
    <ResultField name="ReturnAmount" type="BigDecimal" />
    <ResultField name="DiscountCount" type="BigDecimal" />
    <ResultField name="DiscountAmount" type="BigDecimal" />
    <ResultField name="NetAmount" type="BigDecimal" />
    <SQL>
      <Statement dtype="String"><![CDATA[
  SELECT ? as hierarchy_type,
    h.hierarchy_id as id,
    h.description as description,
    
  SUM(CASE WHEN rsl.return_flag = 0 THEN COALESCE(rsl.quantity,0) END) AS sale_count, 
  ROUND(SUM(CASE WHEN rsl.return_flag = 0 THEN rsl.gross_amt END), 2) AS sale_amount, 
  SUM(CASE WHEN rsl.return_flag = 1 THEN COALESCE(rsl.quantity,0) END) AS return_count, 
  ROUND(SUM(CASE WHEN rsl.return_flag = 1 THEN rsl.net_amt END), 2) AS return_amount, 
  COALESCE(SUM(CASE WHEN COALESCE(rsl.discount_amt,0) <> 0 THEN COALESCE(rsl.quantity,0) END), 0) AS discount_count, 
  ROUND(SUM(COALESCE(rsl.discount_amt,0)), 2) AS discount_amount, 
  ROUND(SUM(COALESCE(rsl.net_amt,0)), 2) AS net_amount 
  
  FROM rpt_sale_line rsl
  INNER JOIN itm_item i
    ON i.organization_id = rsl.organization_id
    AND i.item_id = rsl.item_id
  INNER JOIN itm_merch_hierarchy h
    ON h.organization_id = rsl.organization_id
    AND /*UPPER*/ h.level_code = ?
    AND h.hierarchy_id = /*UPPER*/ i.merch_level_4
    AND /*UPPER*/ h.parent_id = ?
  WHERE rsl.organization_id = ?
    AND rsl.trans_date BETWEEN ? AND ?
    AND COALESCE(rsl.exclude_from_net_sales_flag, 0) = 0
    AND QUANTITY <> 0
    AND /*UPPER*/ sale_lineitm_typcode <> 'ONHOLD'
    AND /*UPPER*/ trans_statcode = 'COMPLETE'
  GROUP BY h.hierarchy_id, h.description
  
  UNION ALL
  
  SELECT 'ITEM' as hierarchy_type,
    i.item_id as id,
    COALESCE(i.description, i.name) as description,
  
  SUM(CASE WHEN rsl.return_flag = 0 THEN COALESCE(rsl.quantity,0) END) AS sale_count, 
  ROUND(SUM(CASE WHEN rsl.return_flag = 0 THEN rsl.gross_amt END), 2) AS sale_amount, 
  SUM(CASE WHEN rsl.return_flag = 1 THEN COALESCE(rsl.quantity,0) END) AS return_count, 
  ROUND(SUM(CASE WHEN rsl.return_flag = 1 THEN rsl.net_amt END), 2) AS return_amount, 
  COALESCE(SUM(CASE WHEN COALESCE(rsl.discount_amt,0) <> 0 THEN COALESCE(rsl.quantity,0) END), 0) AS discount_count, 
  ROUND(SUM(COALESCE(rsl.discount_amt,0)), 2) AS discount_amount, 
  ROUND(SUM(COALESCE(rsl.net_amt,0)), 2) AS net_amount 
  
  FROM rpt_sale_line rsl
  INNER JOIN itm_item i
    ON i.organization_id = rsl.organization_id
    AND i.item_id = rsl.item_id
    AND /*UPPER*/ i.merch_level_3 = ?
    AND i.merch_level_4 IS NULL
  WHERE rsl.organization_id = ?
    AND rsl.trans_date BETWEEN ? AND ?
    AND COALESCE(rsl.exclude_from_net_sales_flag, 0) = 0
    AND QUANTITY <> 0
    AND /*UPPER*/ sale_lineitm_typcode <> 'ONHOLD'
    AND /*UPPER*/ trans_statcode = 'COMPLETE'
  GROUP BY i.item_id, COALESCE(i.description, i.name)
      ]]></Statement>
      <Parameter name="argMerchLevel4Id" />
      <Parameter name="argMerchLevel4Id" />
      <Parameter name="argParentId" />
      <Parameter name="argOrganizationId" />
      <Parameter name="argStartDate" />
      <Parameter name="argEndDate" />
      <Parameter name="argMerchLevel3Value" />
      <Parameter name="argOrganizationId" />
      <Parameter name="argStartDate" />
      <Parameter name="argEndDate" />
    </SQL>
  </Query>

  <Query name="DRILL_DOWN_ITEMLEVEL" pmType="ITEM">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.pos.reporting.drilldown.query.DrillDownQueryResult</ResultClass>
    <ResultField name="HierarchyType" type="String" />
    <ResultField name="Id" type="String" />
    <ResultField name="Description" type="String" />
    <ResultField name="SaleCount" type="BigDecimal" />
    <ResultField name="SaleAmount" type="BigDecimal" />
    <ResultField name="ReturnCount" type="BigDecimal" />
    <ResultField name="ReturnAmount" type="BigDecimal" />
    <ResultField name="DiscountCount" type="BigDecimal" />
    <ResultField name="DiscountAmount" type="BigDecimal" />
    <ResultField name="NetAmount" type="BigDecimal" />
    <SQL>
      <Statement dtype="String"><![CDATA[
  SELECT 'ITEM' as hierarchy_type,
    i.item_id as id,
    COALESCE(i.description, i.name) as description,
  
  SUM(CASE WHEN rsl.return_flag = 0 THEN COALESCE(rsl.quantity,0) END) AS sale_count, 
  ROUND(SUM(CASE WHEN rsl.return_flag = 0 THEN rsl.gross_amt END), 2) AS sale_amount, 
  SUM(CASE WHEN rsl.return_flag = 1 THEN COALESCE(rsl.quantity,0) END) AS return_count, 
  ROUND(SUM(CASE WHEN rsl.return_flag = 1 THEN rsl.net_amt END), 2) AS return_amount, 
  COALESCE(SUM(CASE WHEN COALESCE(rsl.discount_amt,0) <> 0 THEN COALESCE(rsl.quantity,0) END), 0) AS discount_count, 
  ROUND(SUM(COALESCE(rsl.discount_amt,0)), 2) AS discount_amount, 
  ROUND(SUM(COALESCE(rsl.net_amt,0)), 2) AS net_amount 
  
  FROM rpt_sale_line rsl
  INNER JOIN itm_item i
    ON i.organization_id = rsl.organization_id
    AND i.item_id = rsl.item_id
    AND /*UPPER*/ i.merch_level_4 = ?
  WHERE rsl.organization_id = ?
    AND rsl.trans_date BETWEEN ? AND ?
    AND COALESCE(rsl.exclude_from_net_sales_flag, 0) = 0
    AND QUANTITY <> 0
    AND /*UPPER*/ sale_lineitm_typcode <> 'ONHOLD'
    AND /*UPPER*/ trans_statcode = 'COMPLETE'
  GROUP BY i.item_id, COALESCE(i.description, i.name)
      ]]></Statement>
      <Parameter name="argMerchLevel4Value" />
      <Parameter name="argOrganizationId" />
      <Parameter name="argStartDate" />
      <Parameter name="argEndDate" />
    </SQL>
  </Query>

  <Query name="INVENTORY_CONTROL_LINES_FOR_ORDER">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.inv.InventoryDocumentLineItemId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[
          WHERE t.organization_id = ?  
            AND t.invctl_document_id = ?
            AND t.document_typcode = 'RECEIVING'
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Parameter name="argInvCtlDocId" />
    </SQL>
  </Query>

  <Query name="HEAL_SESSION_TENDERS_NOT_PRESENT" pmType="REGISTER_CORE">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <SQL>
      <Statement dtype="String"><![CDATA[        
        SELECT t.tndr_id FROM tnd_tndr t WHERE t.tndr_id NOT IN (
        SELECT st.tndr_id
          FROM tsn_session
               INNER JOIN tsn_tndr_repository r ON tsn_session.organization_id = r.organization_id AND tsn_session.rtl_loc_id = r.rtl_loc_id AND /*UPPER*/ tsn_session.tndr_repository_id = r.tndr_repository_id
               INNER JOIN tsn_session_tndr st ON st.organization_id = tsn_session.organization_id AND st.rtl_loc_id = tsn_session.rtl_loc_id AND st.session_id = tsn_session.session_id
         WHERE r.organization_id = ?
           AND r.rtl_loc_id = ?
           AND /*UPPER*/ r.typcode = 'STOREBANK')
      ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
    </SQL>
  </Query>

  <Query name="|REPL|DELETE_EMPLOYEE_CHALLENGE_QUESTIONS" pmType="EMPLOYEE">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <SQL>
      <Statement dtype="String"><![CDATA[
        DELETE FROM hrs_employee_answers
         WHERE organization_id = ? 
           AND employee_id = ?]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argEmployeeId" />
    </SQL>
  </Query>

  <Query name="ALL_QUICK_ITEMS">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.itm.QuickItemId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[
        WHERE t.organization_id = ?        
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
    </SQL>
  </Query>

  <Query name="ALL_COUNTRY_RETURN_MAP" pmType="REGISTER_CORE">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.com.CountryReturnMapId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[
        WHERE t.organization_id = ?     
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Expression trigger="argPurchasedFrom"><![CDATA[t.purchased_from = ?]]></Expression>
      <Expression trigger="argReturnTo"><![CDATA[t.return_to = ?]]></Expression>
    </SQL>
  </Query>

  <Query name="ALTERNATE_PARTY_ID" pmType="XSTORE">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.crm.PartyIdCrossReferenceId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[        
          WHERE organization_id = ?         
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Expression trigger="argPartyId"><![CDATA[party_id = ?]]></Expression>
      <Expression trigger="argAlternateIdOwner"><![CDATA[alternate_id_owner = ?]]></Expression>
      <Expression trigger="argAlternateId"><![CDATA[/*UPPER*/ alternate_id = ?]]></Expression>
    </SQL>
  </Query>

  <Query name="LOOKUP_PARTY_ID_FOR_CUSTOMER_ID" pmType="XSTORE">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.crm.impl.cust.lookup.resp.CustomerQueryResult</ResultClass>
    <ResultField name="OrganizationId" />
    <ResultField name="Id" />
    <SQL>
      <Statement dtype="String">
        <![CDATA[
          SELECT organization_id, party_id from crm_party
          WHERE organization_id = ?
          AND /*UPPER*/ cust_id = ?
        ]]>
      </Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argCustomerId" />
    </SQL>
  </Query>

  <Query name="|REPL|UPDATE_CUSTOMER_ID_FOR_PARTY_ID" pmType="XSTORE">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <SQL>
      <Statement dtype="String">
        <![CDATA[        
          UPDATE crm_party
             SET cust_id = ?
           WHERE organization_id = ?
             AND party_id = ?
        ]]>
      </Statement>
      <Parameter name="argCustomerId" />
      <Parameter name="argOrganizationId" />
      <Parameter name="argPartyId" />
    </SQL>
  </Query>

  <Query name="CRM_CUSTOMER_LOOKUP" pmType="CUSTOMER_CRM">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.crm.impl.cust.lookup.resp.CustomerQueryResult</ResultClass>
    <ResultField name="OrganizationId" type="long" />
    <ResultField name="Id" type="Long" />
    <ResultField name="CustomerId" type="String" />
    <ResultField name="FirstName" type="String" />
    <ResultField name="LastName" type="String" />
    <ResultField name="Address" type="String" />
    <ResultField name="City" type="String" />
    <ResultField name="State" type="String" />
    <ResultField name="PostalCode" type="String" />
    <ResultField name="County" type="String" />
    <ResultField name="Neighborhood" type="String" />
    <ResultField name="Country" type="String" />
    <ResultField name="OrganizationName" type="String" />
    <ResultField name="Telephone1" type="String" />
    <ResultField name="EmailAddress" type="String" />
    <ResultField name="PostalCode" type="String" />
    <ResultField name="Address2" type="String" />
    <ResultField name="Apartment" type="String" />
    <SQL>
      <Statement dtype="String"><![CDATA[
        SELECT p.organization_id, 
            p.party_id,
            p.cust_id,
            p.first_name,
            p.last_name,
            addr.address1,
            addr.city,
            addr.state,
            addr.postal_code, 
            addr.county, 
            addr.neighborhood,
            addr.country,
            p.organization_name,
            tel.telephone_number,
            eaddr.email_address,
            addr.postal_code,
            addr.address2,
            addr.apartment
          FROM crm_party p
            LEFT OUTER JOIN crm_party_locale_information addr
                 ON p.party_id = addr.party_id
                AND p.organization_id = addr.organization_id
            LEFT OUTER JOIN crm_party_telephone tel
                 ON p.party_id = tel.party_id
                AND p.organization_id = tel.organization_id
                AND tel.primary_flag = 1
            LEFT OUTER JOIN crm_party_email eaddr
                 ON p.party_id = eaddr.party_id
                AND p.organization_id = eaddr.organization_id
                AND eaddr.primary_flag = 1
          WHERE p.organization_id = ?
            AND (p.void_flag IS NULL OR p.void_flag = ?)
            AND (/*UPPER*/ p.party_typcode = 'EMPLOYEE' OR /*UPPER*/ p.party_typcode = 'CUSTOMER')
      ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argVoidFlag" />
      <Expression trigger="argAccountNumber"><![CDATA[EXISTS
          (Select * From cat_cust_acct acct
             Where acct.organization_id = p.organization_id
               And acct.party_id = p.party_id
               And acct.cust_acct_code = 'ACCOUNTS_RECEIVABLE'
               And acct.cust_acct_id = ?)]]>
      </Expression>
      <Expression trigger="argLoyaltyNumber"><![CDATA[EXISTS
          (Select * From cat_cust_acct_card card
             Where card.organization_id = p.organization_id
               And card.party_id = p.party_id
               And card.cust_acct_card_nbr = ?)]]>
      </Expression>
      <Expression trigger="argCustomerId"><![CDATA[/*UPPER*/ p.cust_id = ?]]></Expression>
      <Expression trigger="argEmployeeId"><![CDATA[/*UPPER*/ p.employee_id = ?]]></Expression>
      <Expression trigger="argStoreNumber"><![CDATA[p.allegiance_rtl_loc_id = ?]]></Expression>
      <Expression parameters="argFirstName%" trigger="argFirstName"><![CDATA[/*UPPER*/ p.first_name like ?]]></Expression>
      <Expression parameters="argLastName%" trigger="argLastName"><![CDATA[/*UPPER*/ p.last_name like ?]]></Expression>
      <Expression parameters="argCompanyName%" trigger="argCompanyName"><![CDATA[/*UPPER*/ p.organization_name like ?]]></Expression>
      <Expression parameters="argCity%" trigger="argCity"><![CDATA[/*UPPER*/ addr.city like ?]]></Expression>
      <Expression parameters="argState%" trigger="argState"><![CDATA[/*UPPER*/ addr.state like ?]]></Expression>
      <Expression parameters="argCounty%" trigger="argCounty"><![CDATA[/*UPPER*/ addr.county like ?]]></Expression>
      <Expression parameters="argNeighborhood%" trigger="argNeighborhood"><![CDATA[/*UPPER*/ addr.neighborhood like ?]]></Expression>
      <Expression parameters="argCountry%" trigger="argCountry"><![CDATA[/*UPPER*/ addr.country like ?]]></Expression>
      <Expression parameters="argPostalCode%" trigger="argPostalCode"><![CDATA[/*UPPER*/ addr.postal_code like ?]]></Expression>
      <Expression trigger="argTelephone"><![CDATA[EXISTS
          (Select * From crm_party_telephone ph
             Where ph.organization_id = p.organization_id
               And ph.party_id = p.party_id
               And /*UPPER*/ ph.telephone_number = ?)
      ]]></Expression>
      <Expression parameters="argEmailAddress%" trigger="argEmailAddress"><![CDATA[EXISTS
          (Select * From crm_party_email em
             Where em.organization_id = p.organization_id
               And em.party_id = p.party_id
               And /*UPPER*/ em.email_address like ?)
      ]]></Expression>
      <Expression trigger="argActiveFlag"><![CDATA[p.active_flag = ?]]></Expression>
    </SQL>
    <Property key="ClassName" value="dtv.xst.dao.crm.IParty" />
    <Property key="MaxRows" value="50" />
    <Suffix dtype="String"><![CDATA[ORDER BY p.last_name, p.first_name]]></Suffix>
  </Query>

  <Query name="CRM_CUSTOMER_LOOKUP_PRIMARY" pmType="CUSTOMER_CRM">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.crm.impl.cust.lookup.resp.CustomerQueryResult</ResultClass>
    <ResultField name="OrganizationId" type="long" />
    <ResultField name="Id" type="Long" />
    <ResultField name="CustomerId" type="String" />
    <ResultField name="FirstName" type="String" />
    <ResultField name="LastName" type="String" />
    <ResultField name="Address" type="String" />
    <ResultField name="City" type="String" />
    <ResultField name="State" type="String" />
    <ResultField name="PostalCode" type="String" />
    <ResultField name="County" type="String" />
    <ResultField name="Neighborhood" type="String" />
    <ResultField name="Country" type="String" />
    <ResultField name="OrganizationName" type="String" />
    <ResultField name="Telephone1" type="String" />
    <ResultField name="EmailAddress" type="String" />
    <SQL>
      <Statement dtype="String"><![CDATA[
        SELECT p.organization_id, 
            p.party_id,
            p.cust_id,
            p.first_name,
            p.last_name,
            addr.address1,
            addr.city,
            addr.state,
            addr.postal_code, 
            addr.county, 
            addr.neighborhood,
            addr.country,
            p.organization_name,
            tel.telephone_number,
            eaddr.email_address
          FROM crm_party p
            LEFT OUTER JOIN crm_party_locale_information addr
                 ON p.party_id = addr.party_id
                AND p.organization_id = addr.organization_id
                AND addr.primary_flag = ?
            LEFT OUTER JOIN crm_party_telephone tel
                 ON p.party_id = tel.party_id
                AND p.organization_id = tel.organization_id
                AND tel.primary_flag = 1
            LEFT OUTER JOIN crm_party_email eaddr
                 ON p.party_id = eaddr.party_id
                AND p.organization_id = eaddr.organization_id
                AND eaddr.primary_flag = 1
          WHERE p.organization_id = ?
            AND (p.void_flag IS NULL OR p.void_flag = ?)
            AND (/*UPPER*/ p.party_typcode = 'EMPLOYEE' OR /*UPPER*/ p.party_typcode = 'CUSTOMER')
      ]]></Statement>
      <Parameter name="argPrimaryAddress" />
      <Parameter name="argOrganizationId" />
      <Parameter name="argVoidFlag" />
      <Expression trigger="argAccountNumber"><![CDATA[EXISTS
          (Select * From cat_cust_acct acct
             Where acct.organization_id = p.organization_id
               And acct.party_id = p.party_id
               And acct.cust_acct_code = 'ACCOUNTS_RECEIVABLE'
               And acct.cust_acct_id = ?)]]>
      </Expression>
      <Expression trigger="argLoyaltyNumber"><![CDATA[EXISTS
          (Select * From cat_cust_acct_card card
             Where card.organization_id = p.organization_id
               And card.party_id = p.party_id
               And card.cust_acct_card_nbr = ?)]]>
      </Expression>
      <Expression trigger="argCustomerId"><![CDATA[/*UPPER*/ p.cust_id = ?]]></Expression>
      <Expression trigger="argEmployeeId"><![CDATA[/*UPPER*/ p.employee_id = ?]]></Expression>
      <Expression trigger="argStoreNumber"><![CDATA[p.allegiance_rtl_loc_id = ?]]></Expression>
      <Expression parameters="argFirstName%" trigger="argFirstName"><![CDATA[/*UPPER*/ p.first_name like ?]]></Expression>
      <Expression parameters="argLastName%" trigger="argLastName"><![CDATA[/*UPPER*/ p.last_name like ?]]></Expression>
      <Expression parameters="argCompanyName%" trigger="argCompanyName"><![CDATA[/*UPPER*/ p.organization_name like ?]]></Expression>
      <Expression parameters="argCity%" trigger="argCity"><![CDATA[/*UPPER*/ addr.city like ?]]></Expression>
      <Expression parameters="argState%" trigger="argState"><![CDATA[/*UPPER*/ addr.state like ?]]></Expression>
      <Expression parameters="argCounty%" trigger="argCounty"><![CDATA[/*UPPER*/ addr.county like ?]]></Expression>
      <Expression parameters="argNeighborhood%" trigger="argNeighborhood"><![CDATA[/*UPPER*/ addr.neighborhood like ?]]></Expression>
      <Expression parameters="argCountry%" trigger="argCountry"><![CDATA[/*UPPER*/ addr.country like ?]]></Expression>
      <Expression parameters="argPostalCode%" trigger="argPostalCode"><![CDATA[/*UPPER*/ addr.postal_code like ?]]></Expression>
      <Expression trigger="argTelephone"><![CDATA[EXISTS
          (Select * From crm_party_telephone ph
             Where ph.organization_id = p.organization_id
               And ph.party_id = p.party_id
               And /*UPPER*/ ph.telephone_number = ?)
      ]]></Expression>
      <Expression parameters="argEmailAddress%" trigger="argEmailAddress"><![CDATA[EXISTS
          (Select * From crm_party_email em
             Where em.organization_id = p.organization_id
               And em.party_id = p.party_id
               And /*UPPER*/ em.email_address like ?)
      ]]></Expression>
      <Expression trigger="argActiveFlag"><![CDATA[p.active_flag = ?]]></Expression>
    </SQL>
    <Property key="ClassName" value="dtv.xst.dao.crm.IParty" />
    <Property key="MaxRows" value="50" />
    <Suffix dtype="String"><![CDATA[ORDER BY p.last_name, p.first_name]]></Suffix>
  </Query>

  <Query name="CRM_CUSTOMER_SIGN_UP" pmType="CUSTOMER_CRM">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.crm.impl.cust.lookup.resp.CustomerQueryResult</ResultClass>
    <ResultClass dtype="String">dtv.xst.crm.impl.cust.lookup.resp.CustomerQueryResult</ResultClass>
    <ResultField name="OrganizationId" />
    <ResultField name="Id" />
    <ResultField name="CustomerId" />
    <ResultField name="FirstName" />
    <ResultField name="LastName" />
    <ResultField name="Address" />
    <ResultField name="City" />
    <ResultField name="State" />
    <ResultField name="PostalCode" />
    <ResultField name="County" />
    <ResultField name="Neighborhood" />
    <ResultField name="Country" />
    <ResultField name="OrganizationName" />
    <ResultField name="Telephone1" />
    <ResultField name="EmailAddress" />
    <SQL>
      <Statement dtype="String"><![CDATA[
        SELECT p.organization_id, 
            p.party_id,
            p.cust_id,
            p.first_name,
            p.last_name,
            addr.address1,
            addr.city,
            addr.state,
            addr.postal_code, 
            addr.county, 
            addr.neighborhood,
            addr.country,
            p.organization_name,
            tel.telephone_number,
            eaddr.email_address
          FROM crm_party p
          WHERE p.organization_id = ?
            AND (p.void_flag IS NULL OR p.void_flag = ?)
            AND (/*UPPER*/ p.party_typcode = 'CUSTOMER')
      ]]></Statement>
    </SQL>


  </Query>

  <Query name="CUSTOMER_NOTES">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.crm.CustomerNoteId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[
        WHERE t.organization_id = ? AND t.party_id = ?        
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Parameter name="argPartyId" />
    </SQL>
    <Suffix dtype="String"><![CDATA[ORDER BY note_timestamp DESC]]></Suffix>
  </Query>

  <Query name="CUSTOMER_PROPERTY_VALUE_LOOKUP">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.crm.PartyPropertyId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[        
          WHERE organization_id = ? 
          AND property_code = ?        
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Parameter name="argPropertyCode" />
      <Expression trigger="argStringValue"><![CDATA[/*UPPER*/ string_value = ?]]></Expression>
    </SQL>
  </Query>

  <Query name="CUSTOMER_GROUP_RANK_LOOKUP" pmType="CUSTOMER">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.query.results.CustGroupRankUrlResult</ResultClass>
    <ResultField name="IconUrl" type="String" />
    <SQL>
      <Statement dtype="String"><![CDATA[
        SELECT image_url FROM com_code_value
        WHERE organization_id = ? 
        AND code IN ?
        AND category = 'CUSTOMER_GROUPS'
      ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="@paramCustGroupCodes" />       
    </SQL>
    <Property>
      <Key dtype="String">MaxRows</Key>
      <Value dtype="String"><![CDATA[1]]></Value>
    </Property>
    <Suffix dtype="String"><![CDATA[ORDER BY rank ASC]]></Suffix>    
  </Query>

  <Query name="PREVIOUS_CREDIT_CARD_RETURN_TENDER_LINES" pmType="TRANSACTION_LOOKUP">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.ttr.impl.TenderLineItemModel</ResultClass>
    <ResultField name="OrganizationId" />
    <ResultField name="RetailLocationId" />
    <ResultField name="BusinessDate" />
    <ResultField name="WorkstationId" />
    <ResultField name="TransactionSequence" />
    <ResultField name="RetailTransactionLineItemSequence" />
    <ResultField name="Amount" />
    <ResultField name="Change" />
    <ResultField name="HostValidation" />
    <ResultField name="TenderId" />
    <ResultField name="SerialNumber" />
    <ResultField name="TenderStatusCode" />
    <ResultField name="ForeignAmount" />
    <ResultField name="ExchangeRate" />
    <SQL>
      <Statement dtype="String"><![CDATA[
        SELECT DISTINCT 
          ttl.organization_id, 
          ttl.rtl_loc_id, 
          ttl.business_date, 
          ttl.wkstn_id, 
          ttl.trans_seq, 
          ttl.rtrans_lineitm_seq, 
          ttl.amt, 
          ttl.change_flag, 
          ttl.host_validation_flag, 
          ttl.tndr_id, 
          ttl.serial_nbr, 
          ttl.tndr_statcode, 
          ttl.foreign_amt, 
          ttl.exchange_rate       
        FROM 
          trl_returned_item_journal trij
          INNER JOIN ttr_credit_debit_tndr_lineitm tcdtl ON
            trij.organization_id = tcdtl.organization_id AND
            trij.rtn_rtl_loc_id = tcdtl.rtl_loc_id AND
            trij.rtn_business_date = tcdtl.business_date AND
            trij.rtn_wkstn_id = tcdtl.wkstn_id AND
            trij.rtn_trans_seq = tcdtl.trans_seq
          INNER JOIN ttr_tndr_lineitm ttl ON
            ttl.organization_id = tcdtl.organization_id AND
            ttl.rtl_loc_id = tcdtl.rtl_loc_id AND
            ttl.business_date = tcdtl.business_date AND
            ttl.wkstn_id = tcdtl.wkstn_id AND
            ttl.trans_seq = tcdtl.trans_seq AND
            ttl.rtrans_lineitm_seq = tcdtl.rtrans_lineitm_seq
        WHERE 
          trij.organization_id = ? AND
          trij.rtl_loc_id = ? AND
          trij.business_date = ? AND
          trij.wkstn_id = ? AND
          trij.trans_seq = ?                   
          ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocId" />
      <Parameter name="argBusinessDate" />
      <Parameter name="argWorkStationId" />
      <Parameter name="argTransactionSequence" />
      <Expression trigger="argAcctNumberHash"><![CDATA[(/*UPPER*/ tcdtl.acct_nbr_hash = ? OR tcdtl.acct_nbr_hash = null)]]></Expression>
    </SQL>
  </Query>

  <Query name="AIRLINE_INFORMATION_LOOKUP" pmType="AIRLINE_INFO">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.com.impl.FlightInformationModel</ResultClass>
    <ResultField name="OrganizationId" />
    <ResultField name="ScheduledDateTime" />
    <ResultField name="FlightNumber" />
    <ResultField name="OriginAirport" />
    <ResultField name="DestinationAirport" />
    <ResultField name="Via1Airport" />
    <ResultField name="Via2Airport" />
    <ResultField name="Via3Airport" />
    <SQL>
      <Statement dtype="String"><![CDATA[
      SELECT a.ORGANIZATION_ID,
        a.SCHEDULED_DATE_TIME,
        a.FLIGHT_NUMBER,
        a.ORIGIN_AIRPORT,
        a.DESTINATION_AIRPORT,
        a.VIA_1_AIRPORT,
        a.VIA_2_AIRPORT,
        a.VIA_3_AIRPORT
      FROM COM_FLIGHT_INFO a
      WHERE a.ORGANIZATION_ID    = ?
      AND ((a.SCHEDULED_DATE_TIME >= ?) and (a.SCHEDULED_DATE_TIME <= ?)) 
      AND a.FLIGHT_NUMBER        = ?
      AND a.ORIGIN_AIRPORT       = ?
      ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argStartDate" />
      <Parameter name="argEndDate" />
      <Parameter name="argFlightId" />
      <Parameter name="argOriginAirport" />
      <!-- <Expression trigger="argDestinationAirport" parameters="argDestinationAirport,argDestinationAirport,argDestinationAirport,argDestinationAirport"><![CDATA[((a.DESTINATION_AIRPORT 
        = ?) OR (a.VIA_1_AIRPORT = ?) OR (a.VIA_2_AIRPORT = ?) OR (a.VIA_3_AIRPORT = ?))]]></Expression> -->
    </SQL>
  </Query>

  <!-- This query is intended to get a list of the item IDs that are on file based on the list of item IDs that 
    are provided. The point being that the parameter list may have come from a different system. -->
  <Query name="CUST_ITEM_LIST_ON_FILE" pmType="ITEM">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.query.results.BasicItemQueryResult</ResultClass>
    <ResultField name="ItemId" type="String" />
    <SQL>
      <Statement dtype="String">
        SELECT item_id FROM itm_item
        WHERE organization_id = ?
        AND item_id IN ?
      </Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="@argItemIds" />
    </SQL>
  </Query>

  <Query name="RETURNED_ITEMS">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.trl.ReturnedItemCountId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[
        WHERE t.organization_id = ?
        AND rtl_loc_id = ?
        AND business_date = ?  
        AND wkstn_id = ?
        AND trans_seq = ?        
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocId" />
      <Parameter name="argBusinessDate" />
      <Parameter name="argWorkStationId" />
      <Parameter name="argTransactionSequence" />
    </SQL>
  </Query>

  <Query name="SEARCH_LAST_TRANSACTION" pmType="REGISTER_CORE">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.query.results.TransactionIdSearchResult</ResultClass>
    <ResultField name="OrganizationId" type="Long" />
    <ResultField name="RetailLocationId" type="Long" />
    <ResultField name="BusinessDate" type="Date" />
    <ResultField name="TransactionDate" type="Date" />
    <ResultField name="BeginDateTimestamp" type="Date" />
    <ResultField name="TransactionSequence" type="Long" />
    <ResultField name="WorkstationId" type="Long" />
    <SQL>
      <Statement dtype="String"><![CDATA[
SELECT organization_id, rtl_loc_id, business_date, trans_date, begin_datetime, MAX(trans_seq), wkstn_id  
  FROM trn_trans
 WHERE organization_id = ?
  AND rtl_loc_id = ?
  AND wkstn_id = ?
  AND business_date = ?
  AND /*UPPER*/ trans_typcode = 'RETAIL_SALE'
GROUP BY organization_id, rtl_loc_id, wkstn_id, business_date, trans_date, trans_seq, begin_datetime
  ORDER BY trans_seq DESC
      ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
      <Parameter name="argWorkStationId" />
      <Parameter name="argBusinessDate" />
    </SQL>
  </Query>

  <Query name="WORK_ORDER_INVOICE_LOOKUP">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.cwo.InvoiceId</ResultClass>
    <ResultField name="InvoiceCount" type="Integer" />
    <SQL>
      <WhereClause dtype="String"><![CDATA[
          WHERE t.organization_id = ? 
            AND t.service_loc_id = ?
            AND t.invoice_number = ?
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Parameter name="argServiceLocId" />
      <Parameter name="argInvoiceNbr" />
    </SQL>
  </Query>

  <Query name="CRM_TASK_LOOKUP" pmType="REGISTER_CORE">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.crm.impl.task.TaskQueryResult</ResultClass>
    <ResultField name="OrganizationId" type="Long"  />
    <ResultField name="TaskId" type="long"  />
    <ResultField name="Title" type="String"  />
    <ResultField name="RetailLocationId" type="long"  />
    <ResultField name="StartDate" type="Date"  />
    <ResultField name="EndDate" type="Date"  />
    <ResultField name="Type" type="String"  />
    <ResultField name="Status" type="String"  />
    <ResultField name="Priority" type="String"  />
    <ResultField name="Visibility" type="String"  />
    <ResultField name="AssignmentId" type="String"  />
    <ResultField name="PartyId" type="Long"  />
    <SQL>
      <Statement dtype="String"><![CDATA[
        SELECT organization_id,
          task_id,
          title,
          rtl_loc_id,
          start_date,
          end_date,
          typcode,
          status_code,
          priority,
          visibility,
          assignment_id,
          party_id
        FROM hrs_employee_task
        WHERE organization_id = ?
        AND rtl_loc_id = ?
        AND void_flag = 0
      ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
      <Expression parameters="argStartDate, argEndDate" trigger="argStartDate"><![CDATA[start_date BETWEEN ? AND ?]]></Expression>
      <Expression trigger="argTabStartDate"><![CDATA[start_date <= ?]]></Expression>
      <Expression trigger="argTabEndDate"><![CDATA[end_date >= ?]]></Expression>
      <Expression trigger="argCustomerId"><![CDATA[party_id = ?]]></Expression>
      <Expression trigger="argGrouplessUserId"><![CDATA[(/*UPPER*/ visibility = 'EMPLOYEE' AND /*UPPER*/ assignment_id = ?)]]></Expression>
      <Expression parameters="argUserId, argUserGroup" trigger="argUserId"><![CDATA[((/*UPPER*/ visibility = 'EMPLOYEE' AND /*UPPER*/ assignment_id = ?) OR (/*UPPER*/ visibility = 'EMPLOYEE_GROUP' AND /*UPPER*/ assignment_id = ?))]]></Expression>
    </SQL>
  </Query>

  <Query name="CRM_TASK_TYPE_LOOKUP" pmType="CODES">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.crm.impl.task.TaskTypeResult</ResultClass>
    <ResultField name="TypeCode" type="String" />
    <ResultField name="TypeCodeDescription" type="String" />
    <ResultField name="SortOrder" type="int" />
    <SQL>
      <Statement dtype="String"><![CDATA[
        SELECT code,
          description,
          sort_order
        FROM com_code_value
        WHERE organization_id = ?
        AND category = 'EMPLOYEE_TASK_TYPE'
        AND COALESCE(hidden_flag, 0) = 0
      ]]></Statement>
      <Parameter name="argOrganizationId" />
    </SQL>
    <Suffix dtype="String"><![CDATA[ORDER BY sort_order ASC]]></Suffix>
  </Query>

  <Query name="GET_NEXT_SEQUENCE_VALUE" pmType="LOCAL_ONLY">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.query.results.SequenceQueryResult</ResultClass>
    <ResultField name="ReturnValue" />
    <SQL>
      <Statement dtype="String"><![CDATA[
        {? = call sp_next_sequence_value(?, ?, ?, ?, ?, ?, ?, ?, ?)}
      ]]></Statement>
      <Parameter name="argSequenceValue" />
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
      <Parameter name="argWorkstationId" />
      <Parameter name="argSequenceId" />
      <Parameter name="argSequenceMode" />
      <Parameter name="argIncrement" />
      <Parameter name="argIncrementalValue" />
      <Parameter name="argMaximumValue" />
      <Parameter name="argInitialValue" />
    </SQL>
    <Property>
      <Key dtype="String">QueryType</Key>
      <Value dtype="String"><![CDATA[Procedure]]></Value>
    </Property>
    <Property>
      <Key dtype="String">HasReturnValue</Key>
      <Value dtype="String"><![CDATA[true]]></Value>
    </Property>
  </Query>

  <Query name="GET_NEXT_SEQUENCE_VALUE_STORE_LEVEL" pmType="RESERVED_STORE">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.query.results.SequenceQueryResult</ResultClass>
    <ResultField name="ReturnValue" />
    <SQL>
      <Statement dtype="String"><![CDATA[
        {? = call sp_next_sequence_value(?, ?, ?, ?, ?, ?, ?, ?, ?)}
      ]]></Statement>
      <Parameter name="argSequenceValue" />
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
      <Parameter name="argWorkstationId" />
      <Parameter name="argSequenceId" />
      <Parameter name="argSequenceMode" />
      <Parameter name="argIncrement" />
      <Parameter name="argIncrementalValue" />
      <Parameter name="argMaximumValue" />
      <Parameter name="argInitialValue" />
    </SQL>
    <Property>
      <Key dtype="String">QueryType</Key>
      <Value dtype="String"><![CDATA[Procedure]]></Value>
    </Property>
    <Property>
      <Key dtype="String">HasReturnValue</Key>
      <Value dtype="String"><![CDATA[true]]></Value>
    </Property>
  </Query>

  <Query name="SET_SEQUENCE_VALUE" pmType="LOCAL_ONLY">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.query.results.SequenceQueryResult</ResultClass>
    <ResultField name="ReturnValue" />
    <SQL>
      <Statement dtype="String"><![CDATA[
        {call sp_set_sequence_value(?, ?, ?, ?, ?, ?)}
      ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
      <Parameter name="argWorkstationId" />
      <Parameter name="argSequenceId" />
      <Parameter name="argSequenceMode" />
      <Parameter name="argSequenceValue" />
    </SQL>
    <Property>
      <Key dtype="String">QueryType</Key>
      <Value dtype="String"><![CDATA[Procedure]]></Value>
    </Property>
  </Query>

  <Query name="SET_SEQUENCE_VALUE_STORE_LEVEL" pmType="RESERVED_STORE">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.query.results.SequenceQueryResult</ResultClass>
    <ResultField name="ReturnValue" />
    <SQL>
      <Statement dtype="String"><![CDATA[
        {call sp_set_sequence_value(?, ?, ?, ?, ?, ?)}
      ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
      <Parameter name="argWorkstationId" />
      <Parameter name="argSequenceId" />
      <Parameter name="argSequenceMode" />
      <Parameter name="argSequenceValue" />
    </SQL>
    <Property>
      <Key dtype="String">QueryType</Key>
      <Value dtype="String"><![CDATA[Procedure]]></Value>
    </Property>
  </Query>

  <Query name="CHEETAH_CLIENT_DEVICE_ACCESS_LIST">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.ctl.CheetahClientDeviceAccessId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[
      WHERE organization_id = ? 
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Expression trigger="argRetailLocationId"><![CDATA[rtl_loc_id = ?]]></Expression>
      <Expression trigger="argWorkstationId"><![CDATA[wkstn_id = ?]]></Expression>
      <Expression trigger="argStatus"><![CDATA[/*UPPER*/ status = ?]]></Expression>
    </SQL>
  </Query>

  <!-- ********************************************************************* -->
  <!-- * * -->
  <!-- * XFG only queries start here * -->
  <!-- * * -->
  <!-- ********************************************************************* -->

  <Query name="ITEMS_BY_EXTENDED_INPUT" pmType="ITEM">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.itm.IItem</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[
            WHERE ITEM_ID IN 
              (SELECT DISTINCT i.ITEM_ID
              FROM itm_item i 
                LEFT JOIN  com_translations tr ON 
                /*UPPER*/ i.NAME = tr.translation_key
                AND i.organization_id = ?
                LEFT JOIN itm_item_cross_reference cr ON 
                 /*UPPER*/ cr.item_id = i.ITEM_ID
                 AND cr.organization_id = i.organization_id
              WHERE REGEXP_LIKE(tr.translation, ?, 'i')
              AND tr.locale IN ?
              OR i.item_id LIKE ?
              OR cr.manufacturer_upc LIKE ?
              OR REGEXP_LIKE(i.description, ?, 'i'))
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Parameter name="argItemName" />
      <Parameter name="@argLocaleList" />
      <Parameter name="argItemPlu%" />
      <Parameter name="argItemManufacturer%" />
      <Parameter name="argDescription" />
    </SQL>
    <Property>
      <Key dtype="String">MaxRows</Key>
      <Value dtype="String"><![CDATA[50]]></Value>
    </Property>
    <Suffix dtype="String"><![CDATA[ORDER BY ITEM_ID ASC]]></Suffix>
  </Query>

  <Query name="ITEM_RESTRICTIONS_BY_ITEM_ID" pmType="ITEM">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.itm.IItemRestrictGS1</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[
            WHERE t.organization_id = ?
            AND t.item_id = ?
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Parameter name="argItemId" />
    </SQL>
  </Query>

  <Query name="BUTTON_GRID" pmType="REGISTER_CORE">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.com.IButtonGrid</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[
            WHERE t.organization_id = ?
            AND t.level_code = ?
            AND t.level_value = ?
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Parameter name="argLevelCode" />
      <Parameter name="argLevelValue" />
    </SQL>
  </Query>

  <Query name="MATRIX_MERCH_HIERARCHY_LEVEL_LOOKUP" pmType="ITEM">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.query.results.MatrixMerchHierarchyQueryResult</ResultClass>
    <ResultField name="HierarchyId" />
    <ResultField name="Description" />
    <ResultField name="LevelCode" />
    <ResultField name="ParentId" />
    <ResultField name="ItemMatrixColor" />
    <ResultField name="SortOrder" />
    <ResultField name="ImageUrl" />
    <SQL>
      <Statement dtype="String">
        <![CDATA[
        SELECT
          m.hierarchy_id AS hierarchyId,
          m.description AS description,
          m.level_code AS levelCode,
          m.parent_id AS parentId,
          m.item_matrix_color AS itemMatrixColor,
          s.sort_order AS sortOrder,
          iii.image_url AS imageUrl
        FROM 
          itm_merch_hierarchy m
        LEFT JOIN
          itm_matrix_sort_order s
        ON
          m.organization_id = s.organization_id AND
          m.hierarchy_id = s.matrix_sort_id
        LEFT JOIN
          itm_item_images iii
        ON
              m.organization_id = iii.organization_id
          AND m.hierarchy_id = iii.item_id
          AND iii.feature_id = ?
        WHERE
              m.organization_id = ?
          AND COALESCE(m.hidden_flag, 0) = 0
          AND COALESCE(m.disallow_matrix_display_flag, 0) = 0
          AND COALESCE(/*UPPER*/ s.matrix_sort_type, 'ITEM_MERCH') = 'ITEM_MERCH'
      ]]>
      </Statement>
      <Parameter name="argFeatureId" />
      <Parameter name="argOrganizationId" />
    </SQL>
    <Property>
      <Key dtype="String">MaxRows</Key>
      <Value dtype="String"><![CDATA[1000]]></Value>
    </Property>
    <Suffix dtype="String"><![CDATA[ORDER BY sortOrder, description, hierarchyId ASC]]></Suffix>
  </Query>

  <Query name="MATRIX_ITEM_LEVEL_LOOKUP" pmType="ITEM">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultFilter dtype="String">levelCodeLevelValueResultFilter</ResultFilter>
    <ResultClass dtype="String">dtv.xst.query.results.MatrixItemQueryResult</ResultClass>
    <ResultField name="ItemId" />
    <ResultField name="Description" />
    <ResultField name="ItemMatrixColor" />
    <ResultField name="DisallowMatrixDisplay" />
    <ResultField name="MerchLevel1Id" />
    <ResultField name="MerchLevel2Id" />
    <ResultField name="MerchLevel3Id" />
    <ResultField name="MerchLevel4Id" />
    <ResultField name="SortOrder" />
    <ResultField name="AvailabilityCode" />
    <ResultField name="LevelCode" />
    <ResultField name="LevelValue" />
    <ResultField name="ImageUrl" />
    <SQL>
      <Statement dtype="String"><![CDATA[
      
        SELECT 
          i.item_id AS itemId,
          i.description AS description,
          i.item_matrix_color AS itemMatrixColor,
          i.disallow_matrix_display_flag,
          i.merch_level_1 AS merchLevel1Id,
          i.merch_level_2 AS merchLevel2Id,
          i.merch_level_3 AS merchLevel3Id,
          i.merch_level_4 AS merchLevel4Id,
          s.sort_order AS sortOrder,
          o.item_availability_code,
          o.level_code,
          o.level_value,
          iii.image_url AS imageUrl
        FROM 
          itm_item i JOIN itm_item_options o ON i.organization_id = o.organization_id AND i.item_id = o.item_id
        LEFT JOIN
          itm_matrix_sort_order s
        ON
          i.organization_id = s.organization_id AND
          i.item_id = s.matrix_sort_id
        LEFT JOIN
          itm_item_images iii
        ON
              i.organization_id = iii.organization_id
          AND i.item_id = iii.item_id
          AND iii.feature_id = ?
      WHERE
            i.organization_id = ?
        AND /*UPPER*/ i.item_lvlcode = 'ITEM'
        AND COALESCE(s.matrix_sort_type, 'ITEM') = 'ITEM'
    
    ]]></Statement>
      <Parameter name="argFeatureId" />
      <Parameter name="argOrganizationId" />
      <Expression parameters="" trigger="argMerchLevel1_NULL"><![CDATA[i.merch_level_1 IS NULL]]></Expression>
      <Expression parameters="argMerchLevel1" trigger="argMerchLevel1"><![CDATA[/*UPPER*/ i.merch_level_1 = ? AND i.merch_level_2 IS NULL AND i.merch_level_3 IS NULL AND i.merch_level_4 IS NULL]]></Expression>
      <Expression parameters="argMerchLevel2" trigger="argMerchLevel2"><![CDATA[/*UPPER*/ i.merch_level_2 = ? AND i.merch_level_3 IS NULL AND i.merch_level_4 IS NULL]]></Expression>
      <Expression parameters="argMerchLevel3" trigger="argMerchLevel3"><![CDATA[/*UPPER*/ i.merch_level_3 = ? AND i.merch_level_4 IS NULL]]></Expression>
      <Expression parameters="argMerchLevel4" trigger="argMerchLevel4"><![CDATA[/*UPPER*/ i.merch_level_4 = ?]]></Expression>
    </SQL>
    <Property>
      <Key dtype="String">MaxRows</Key>
      <Value dtype="String"><![CDATA[1000]]></Value>
    </Property>
    <Suffix dtype="String"><![CDATA[ORDER BY sortOrder, description, itemId ASC]]></Suffix>
  </Query>

  <Query name="ITEM_RESTRICTION_MAPPING.LOOKUP" pmType="ITEM">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.itm.IItemRestrictionMapping</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[
            WHERE t.organization_id = ? AND ((merch_hierarchy_level='ITEM' AND merch_hierarchy_id= ?) 
            OR (t.merch_hierarchy_level = ? AND t.merch_hierarchy_id = ?)
            OR (t.merch_hierarchy_level = ? AND t.merch_hierarchy_id = ?)
            OR (t.merch_hierarchy_level = ? AND t.merch_hierarchy_id = ?)
            OR (t.merch_hierarchy_level = ? AND t.merch_hierarchy_id = ?))
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Parameter name="argItemId" />
      <Parameter name="argMerchLevel1" />
      <Parameter name="argMerchLevel1Id" />
      <Parameter name="argMerchLevel2" />
      <Parameter name="argMerchLevel2Id" />
      <Parameter name="argMerchLevel3" />
      <Parameter name="argMerchLevel3Id" />
      <Parameter name="argMerchLevel4" />
      <Parameter name="argMerchLevel4Id" />
    </SQL>
  </Query>

  <Query name="ITEM_RESTRICTION.LOOKUP" pmType="ITEM">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.itm.IItemRestriction</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[
          WHERE organization_id = ? 
            AND restriction_category = ?]]>
      </WhereClause>
      <Parameter name="argOrganizationId" />
      <Parameter name="argCategory" />
      <Expression parameters="argDate, argDate" trigger="argDate"><![CDATA[effective_date <= ? AND
          (expiration_date IS NULL OR expiration_date >= ?)]]></Expression>
    </SQL>
    <Suffix dtype="String"><![CDATA[ORDER BY restriction_category, restriction_code, property_name ASC]]></Suffix>
  </Query>

  <Query name="ITEM_RESTRICTIONS.SEARCH_BY_CALENDAR" pmType="ITEM">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.itm.IItemRestrictionCalendar</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[        
          WHERE organization_id = ?
            AND restriction_category = ?
            AND sale_lineitm_typecode = ?]]>
      </WhereClause>
      <Parameter name="argOrganizationId" />
      <Parameter name="argCategory" />
      <Parameter name="argSaleItemType" />
      <Expression trigger="argCode"><![CDATA[restriction_code = ?]]></Expression>
      <Expression parameters="argDayCode, argAnyDayCode" trigger="argDayCode"><![CDATA[(day_code = ? OR day_code = ?)]]></Expression>
      <Expression parameters="argDate, argDate" trigger="argDate"><![CDATA[effective_date <= ? AND
          (expiration_date IS NULL OR expiration_date >= ?)]]></Expression>
      <Expression parameters="argTime, argTime" trigger="argTime"><![CDATA[start_time <= ? AND
          (end_time IS NULL OR end_time >= ?)]]></Expression>
    </SQL>
  </Query>

  <Query name="TRANSACTION_LINK" pmType="ITEM">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.trn.IPosTransactionLink</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[
      WHERE t.organization_id = ?
        AND t.link_business_date = ?
        AND t.link_rtl_loc_id = ?
        AND t.link_wkstn_id = ?
        AND t.link_trans_seq = ?
        ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Parameter name="argLinkBusinessDate" />
      <Parameter name="argLinkRetailLocId" />
      <Parameter name="argLinkWkstnId" />
      <Parameter name="argLinkTransSeq" />
    </SQL>
  </Query>

  <Query name="IP_CASH_DRAWER_DEVICE_ACCESS_LIST_BY_LOCATION">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.ctl.IpCashDrawerDeviceId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[
        WHERE organization_id = ?
          AND rtl_loc_id = ? 
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
      <Expression trigger="argDrawerStatus"><![CDATA[/*UPPER*/ drawer_status = ?]]></Expression>
    </SQL>
  </Query>
  <Query name="|REPL|REPRINIT_GIFT_RCPT_UPDATE_LINE_ITEM" pmType="TRANSACTION">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <SQL>
      <Statement dtype="String"><![CDATA[        
          UPDATE trl_sale_lineitm
             SET rcpt_count = ?
          WHERE organization_id = ?
             AND rtl_loc_id = ?
             AND business_date = ?
             AND wkstn_id = ?
             AND trans_seq = ?    
             AND rtrans_lineitm_seq = ?            
      ]]></Statement>
      <Parameter name="argRcptCount" />
      <Parameter name="argOrganizationId" />
      <Parameter name="argRetailLocationId" />
      <Parameter name="argBusinessDate" />
      <Parameter name="argWorkStationId" />
      <Parameter name="argTransSeq" />
      <Parameter name="argRetailTransLineItemSeq" />
    </SQL>
  </Query>
  <Query name="EMPLOYEE_PASSWORD">
    <QueryHandler dtype="Class">dtv.data2.access.query.DtxQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.xst.dao.hrs.EmployeePasswordId</ResultClass>
    <SQL>
      <WhereClause dtype="String"><![CDATA[
        WHERE t.organization_id = ?
      ]]></WhereClause>
      <Parameter name="argOrganizationId" />
      <Expression trigger="argEmployeeId"><![CDATA[employee_id = ?]]></Expression>
    </SQL>
  </Query>
</QuerySet>
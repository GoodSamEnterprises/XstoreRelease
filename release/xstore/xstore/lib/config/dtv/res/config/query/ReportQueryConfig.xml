<?xml version="1.0" encoding="UTF-8"?>
<QuerySet xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="QueryConfig.xsd">

  <Query name="EMPLOYEE_PERFORMANCE_REPORT_PRED" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.data2.access.DefaultQueryResult</ResultClass>
    <ResultField name="id" type="String" />
    <ResultField name="party_id" type="String" />
    <ResultField name="first_name" type="String" />
    <ResultField name="last_name" type="String" />
    <ResultField name="start_time" type="Object" />
    <ResultField name="end_time" type="Object" />
    <ResultField name="work_code" type="String" />
    <ResultField name="employee_id" type="String" />
    <ResultField name="business_date" type="Date" />
    <ResultField name="duration" type="BigDecimal" />
    <ResultField name="clock_in_timestamp" type="Object" />
    <ResultField name="clock_out_timestamp" type="Object" />
    <ResultField name="total_sales" type="BigDecimal" />
    <ResultField name="rtl_loc_id" type="String" />
    <ResultField name="wkstn_id" type="String" />
    <ResultField name="trans_sequence" type="BigDecimal" />
    <ResultField name="qty" type="BigDecimal" />
    <SQL>
      <Statement dtype="String"><![CDATA[
          SELECT
            '1' AS id,
            p.party_id,
            p.first_name,
            p.last_name,
            hsc.start_time,
            hsc.end_time,
            hsc.work_code,
            hsc.employee_id,
            hsc.business_date,
            NULL AS duration,
            NULL AS clock_in_timestamp,
            NULL AS clock_out_timestamp,
            0 AS total_sales,
            0 AS rtl_loc_id,
            0 AS wkstn_id,
            0 AS trans_sequence,
            0 AS qty
          FROM
            sch_schedule hsc

          LEFT OUTER JOIN
            crm_party p
          ON
            /*UPPER*/ p.employee_id = hsc.employee_id
            AND p.organization_id = hsc.organization_id

          LEFT OUTER JOIN
            hrs_employee_store hrs
          ON
            hrs.organization_id = hsc.organization_id
		    AND hrs.employee_id = /*UPPER*/ p.employee_id]]></Statement>
    </SQL>
    <SQL required="false">
      <Statement dtype="String"><![CDATA[INNER JOIN (SELECT org_value FROM dbo.fn_storesInHierarchy(?, ?, ?)) sih on CAST(hrs.rtl_loc_id AS NVARCHAR)=sih.org_value]]></Statement>
      <Parameter name="organizationId" />
      <Parameter name="orgCode" />
      <Parameter name="orgValue" />
    </SQL>
    <SQL>
      <Statement dtype="String"><![CDATA[
          WHERE
            hsc.organization_id = ?
            AND (
              hsc.void_flag IS NULL
              OR hsc.void_flag <> '1'
            )
            AND (hsc.business_date BETWEEN ? AND ?)
      ]]></Statement>
      <Parameter name="organizationId" />
      <Parameter name="argBusinessDateStart" />
      <Parameter name="argBusinessDateEnd" />
      <Expression trigger="empId"><![CDATA[hsc.employee_id LIKE ?]]></Expression>
      <Expression trigger="workCode"><![CDATA[/*UPPER*/ hsc.work_code LIKE ?]]></Expression>
      <Expression trigger="retailLocationId"><![CDATA[hrs.rtl_loc_id = ?]]></Expression>
      <Expression trigger="@storeList"><![CDATA[hrs.rtl_loc_id IN ?]]></Expression>
    </SQL>
    <SQL>
      <Statement dtype="String"><![CDATA[

          UNION

          SELECT
            '2' AS id,
            te.party_id,
            p.first_name,
            p.last_name,
            NULL,
            NULL,
            te.work_code,
            p.employee_id,
            te.business_date,
            te.duration,
            te.clock_in_timestamp,
            te.clock_out_timestamp,
            0 AS total_sales,
            0 AS rtl_loc_id,
            0 AS wkstn_id,
            0 AS trans_sequence,
            0 AS qty
          FROM
            thr_timecard_entry te

          LEFT OUTER JOIN
            crm_party p
          ON
            p.party_id = te.party_id
            AND p.organization_id = te.organization_id

          LEFT OUTER JOIN
            hrs_employee_store hrs
          ON
            hrs.organization_id = te.organization_id
            AND hrs.employee_id = /*UPPER*/ p.employee_id]]></Statement>
    </SQL>
    <SQL required="false">
      <Statement dtype="String"><![CDATA[INNER JOIN (SELECT org_value FROM dbo.fn_storesInHierarchy(?, ?, ?)) sih on CAST(hrs.rtl_loc_id AS NVARCHAR)=sih.org_value]]></Statement>
      <Parameter name="organizationId" />
      <Parameter name="orgCode" />
      <Parameter name="orgValue" />
    </SQL>
    <SQL>
      <Statement dtype="String"><![CDATA[
          WHERE
            te.organization_id = ?
            AND (te.business_date BETWEEN ? AND ?)
      ]]></Statement>
      <Parameter name="organizationId" />
      <Parameter name="argBusinessDateStart" />
      <Parameter name="argBusinessDateEnd" />
      <Expression trigger="empId"><![CDATA[/*UPPER*/ p.employee_id LIKE ?]]></Expression>
      <Expression trigger="workCode"><![CDATA[/*UPPER*/ te.work_code LIKE ?]]></Expression>
      <Expression trigger="retailLocationId"><![CDATA[hrs.rtl_loc_id = ?]]></Expression>
      <Expression trigger="@storeList"><![CDATA[hrs.rtl_loc_id IN ?]]></Expression>
    </SQL>
    <SQL>
      <Statement dtype="String"><![CDATA[

          UNION

          SELECT
            '3' AS id,
            tcm.employee_party_id,
            p.first_name,
            p.last_name,
            NULL,
            NULL,
            NULL,
            p.employee_id,
            tsl.business_date AS business_date,
            NULL,
            NULL,
            NULL,
            SUM((tsl.net_amt)/tcm.percentage_of_item) AS total_sales,
            tsl.rtl_loc_id AS rtl_loc_id,
            tsl.wkstn_id AS wkstn_id,
            tsl.trans_seq AS trans_sequence,
            SUM(CASE WHEN COALESCE(tsl.net_amt,0) >= 0 THEN tsl.quantity ELSE -tsl.quantity END) AS qty

          FROM
            rpt_sale_line tsl

          INNER JOIN
            trl_commission_mod tcm
          ON
            tcm.organization_id = tsl.organization_id
            AND tcm.wkstn_id = tsl.wkstn_id
            AND tcm.trans_seq = tsl.trans_seq
            AND tcm.business_date = tsl.business_date
            AND tcm.rtl_loc_id = tsl.rtl_loc_id
            AND tcm.rtrans_lineitm_seq = tsl.rtrans_lineitm_seq
            AND tcm.employee_party_id IS NOT NULL

          LEFT OUTER JOIN
            crm_party p
          ON
            p.party_id = tcm.employee_party_id
            AND p.organization_id = tcm.organization_id

          LEFT OUTER JOIN
            hrs_employee_store hrs
          ON
            hrs.organization_id = tcm.organization_id
            AND hrs.employee_id = /*UPPER*/ p.employee_id]]></Statement>
    </SQL>
    <SQL required="false">
      <Statement dtype="String"><![CDATA[INNER JOIN (SELECT org_value FROM dbo.fn_storesInHierarchy(?, ?, ?)) sih on CAST(hrs.rtl_loc_id AS NVARCHAR)=sih.org_value]]></Statement>
      <Parameter name="organizationId" />
      <Parameter name="orgCode" />
      <Parameter name="orgValue" />
    </SQL>
    <SQL>
      <Statement dtype="String"><![CDATA[
          WHERE
            tsl.organization_id = ?
            AND tsl.business_date BETWEEN ? AND ?
            AND /*UPPER*/ tsl.trans_statcode = 'COMPLETE'
      ]]></Statement>
      <Parameter name="organizationId" />
      <Parameter name="argBusinessDateStart" />
      <Parameter name="argBusinessDateEnd" />
      <Expression trigger="empId"><![CDATA[/*UPPER*/ p.employee_id LIKE ?]]></Expression>
      <Expression trigger="retailLocationId"><![CDATA[hrs.rtl_loc_id = ?]]></Expression>
      <Expression trigger="@storeList"><![CDATA[hrs.rtl_loc_id IN ?]]></Expression>
    </SQL>
    <Suffix dtype="String"><![CDATA[GROUP BY
            tcm.employee_party_id,
            p.first_name,
            p.last_name,
            p.employee_id,
            tsl.rtl_loc_id,
            tsl.wkstn_id,
            tsl.business_date,
            tsl.trans_seq
          ORDER BY
            2, 7, 4]]></Suffix>
  </Query>
  <!-- 345640: Stock Valuation -->
  <Query name="SP_FIFO_STOCK_VALUATION" pmType="TRANSACTION">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <SQL>
      <Statement dtype="String"><![CDATA[exec sp_fifo_summary @merch_level_1_param=?, @merch_level_2_param=?, @merch_level_3_param=?,
          @merch_level_4_param=?, @item_id_param=?, @style_id_param=?, @rtl_loc_id_param=?, @organization_id_param=?,
          @user_name_param=?, @stock_val_date_param=?]]></Statement>
      <Parameter name="argMerch1Id" />
      <Parameter name="argMerch2Id" />
      <Parameter name="argMerch3Id" />
      <Parameter name="argMerch4Id" />
      <Parameter name="argItemId" />
      <Parameter name="argStyleId" />
      <Parameter name="argRtlLocIdList" />
      <Parameter name="argOrganizationId" />
      <Parameter name="argUserName" />
      <Parameter name="argBusinessDateStart" />
    </SQL>
    <Property>
      <Key dtype="String">QueryType</Key>
      <Value dtype="String"><![CDATA[Procedure]]></Value>
    </Property>
  </Query>
  <Query name="SP_FIFO_DETAIL_STOCK_VALUATION" pmType="TRANSACTION">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <SQL>
      <Statement dtype="String"><![CDATA[exec sp_fifo_detail @merch_level_1_param=?, @merch_level_2_param=?, @merch_level_3_param=?,
          @merch_level_4_param=?, @item_id_param=?, @style_id_param=?, @rtl_loc_id_param=?, @organization_id_param=?,
          @user_name_param=?, @stock_val_date_param=?]]></Statement>
      <Parameter name="argMerch1Id" />
      <Parameter name="argMerch2Id" />
      <Parameter name="argMerch3Id" />
      <Parameter name="argMerch4Id" />
      <Parameter name="argItemId" />
      <Parameter name="argStyleId" />
      <Parameter name="argRtlLocIdList" />
      <Parameter name="argOrganizationId" />
      <Parameter name="argUserName" />
      <Parameter name="argBusinessDateStart" />
    </SQL>
    <Property>
      <Key dtype="String">QueryType</Key>
      <Value dtype="String"><![CDATA[Procedure]]></Value>
    </Property>
  </Query>
  <Query name="FIFO_STOCK_VALUATION_REPORT" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.data2.access.DefaultQueryResult</ResultClass>
    <ResultField name="itemId" type="String" />
    <ResultField name="itemDesc" type="String" />
    <ResultField name="styleId" type="String" />
    <ResultField name="styleDesc" type="String" />
    <ResultField name="rtlLocId" type="Integer" />
    <ResultField name="storeName" type="String" />
    <ResultField name="unitCount" type="BigDecimal" />
    <ResultField name="unitCost" type="BigDecimal" />
    <ResultField name="comment" type="String" />
    <ResultField name="cost" type="BigDecimal" />
    <SQL>
      <Statement dtype="String"><![CDATA[
            SELECT item_id, description, style_id, style_desc, rtl_loc_id, store_name, unit_count, unit_cost, comment, unit_cost * unit_count as cost
            FROM rpt_fifo
            WHERE user_name = ?
            AND organization_id = ?
            AND unit_count <> 0
            ORDER BY rtl_loc_id, item_id ASC
      ]]></Statement>
      <Parameter name="argUserName" />
      <Parameter name="argOrganizationId" />
    </SQL>
  </Query>
  <Query name="FIFO_DETAIL_STOCK_VALUATION_REPORT" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.data2.access.DefaultQueryResult</ResultClass>
    <ResultField name="itemId" type="String" />
    <ResultField name="description" type="String" />
    <ResultField name="styleId" type="String" />
    <ResultField name="styleDesc" type="String" />
    <ResultField name="rtlLocId" type="Integer" />
    <ResultField name="storeName" type="String" />
    <ResultField name="invcltDocumentId" type="String" />
    <ResultField name="invctlDocLineNbr" type="Integer" />
    <ResultField name="invctlDocCreateDate" type="Date" />
    <ResultField name="unitCount" type="BigDecimal" />
    <ResultField name="currentUnitCount" type="BigDecimal" />
    <ResultField name="unitCost" type="BigDecimal" />
    <ResultField name="unitCountA" type="BigDecimal" />
    <ResultField name="currentCost" type="BigDecimal" />
    <ResultField name="comment" type="String" />
    <ResultField name="pendingCount" type="BigDecimal" />
    <SQL>
      <Statement dtype="String"><![CDATA[
         SELECT item_id, MAX(description) as description, style_id, MAX(style_desc) as styleDesc, rtl_loc_id, MAX(store_name), invctl_doc_id,
              invctl_doc_line_nbr, invctl_doc_create_date, MAX(unit_count), MAX(current_unit_count),
              MAX(unit_cost), MAX(unit_count_a), MAX(current_cost), MAX(comment), MAX(pending_count)
         FROM rpt_fifo_detail
         WHERE user_name = ?
         AND organization_id = ?
         GROUP BY style_id, item_id, rtl_loc_id, invctl_doc_id, invctl_doc_line_nbr, invctl_doc_create_date
         ORDER BY item_id, invctl_doc_create_date DESC
      ]]></Statement>
      <Parameter name="argUserName" />
      <Parameter name="argOrganizationId" />
    </SQL>
  </Query>
  <Query name="SYSTEM_ERROR_REPORT" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.data2.access.DefaultQueryResult</ResultClass>
    <ResultField name="rtl_loc_id" type="Integer" />
    <ResultField name="wkstn_id" type="String" />
    <ResultField name="business_date" type="Date" />
    <ResultField name="log_level" type="String" />
    <ResultField name="log_timestamp" type="Date" />
    <ResultField name="source" type="String" />
    <ResultField name="thread_name" type="String" />
    <ResultField name="logger_category" type="String" />
    <ResultField name="log_message" type="String" />
    <SQL>
      <Statement dtype="String"><![CDATA[
          select rtl_loc_id,
			wkstn_id,
			business_date,
			log_level,
			log_timestamp,
			source,
			thread_name,
			logger_category,
			log_message
		  from ctl_event_log
		where organization_id = ? AND
        rtl_loc_id = ?
      ]]></Statement>
      <Parameter name="organizationId" />
      <Parameter name="retailLocationId" />
      <Expression trigger="Workstation"><![CDATA[wkstn_id LIKE ?]]></Expression>
      <Expression trigger="LogLevel"><![CDATA[/*UPPER*/ log_level LIKE ?]]></Expression>
      <Expression trigger="LogCategory"><![CDATA[/*UPPER*/ logger_category LIKE ?]]></Expression>
      <Expression trigger="Thread"><![CDATA[/*UPPER*/ thread_name LIKE ?]]></Expression>
      <Expression parameters="argBusinessDateStart, argBusinessDateEnd" trigger="argBusinessDateStart"><![CDATA[business_date BETWEEN ? AND ?]]></Expression>
    </SQL>
    <Suffix dtype="String"><![CDATA[order by log_timestamp]]></Suffix>

  </Query>
  <Query name="DEVICE_STATUS_REPORT" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.data2.access.DefaultQueryResult</ResultClass>
    <ResultField name="rtl_loc_id" type="Integer" />
    <ResultField name="wkstn_id" type="Long" />
    <ResultField name="business_date" type="Date" />
    <ResultField name="ip_address" type="String" />
    <ResultField name="machine_name" type="String" />
    <ResultField name="mac_address" type="String" />
    <ResultField name="xstore_version" type="String" />
    <ResultField name="env_version" type="String" />
    <SQL>
      <Statement dtype="String"><![CDATA[
          select rtl_loc_id,
					wkstn_id,
					business_date,
					ip_address,
					machine_name,
					mac_address,
					xstore_version,
					env_version
					from ctl_device_registration
					where organization_id = ? AND
					rtl_loc_id = ?
      ]]></Statement>
      <Parameter name="organizationId" />
      <Parameter name="retailLocationId" />
      <Expression trigger="StartReg"><![CDATA[wkstn_id >= ?]]></Expression>
      <Expression trigger="EndReg"><![CDATA[wkstn_id <= ?]]></Expression>
    </SQL>
    <Suffix dtype="String"><![CDATA[order by rtl_loc_id,wkstn_id]]></Suffix>
  </Query>
  <Query name="DEVICE_STATUS_SUBREPORT" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.data2.access.DefaultQueryResult</ResultClass>
    <ResultField name="device_name" type="String" />
    <ResultField name="device_type" type="String" />
    <ResultField name="model" type="String" />
    <ResultField name="serial_number" type="String" />
    <ResultField name="firmware" type="String" />
    <ResultField name="firmware_date" type="Date" />
    <ResultField name="asset_status" type="String" />
    <SQL>
      <Statement dtype="String"><![CDATA[
          select device_name,
			device_type,
			model,
			serial_number,
			firmware,
			firmware_date,
			asset_status
			from ctl_device_information
		where organization_id = ? AND
        rtl_loc_id = ? AND
		wkstn_id = ?
      ]]></Statement>
      <Parameter name="organizationId" />
      <Parameter name="retailLocationId" />
      <Parameter name="WorkstationId" />
    </SQL>
    <Suffix dtype="String"><![CDATA[order by dev_seq]]></Suffix>
  </Query>


  <!-- Queries used by BI Publisher reports -->
  <Query name="AIRSIDE_CSV_REPORT" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.data2.access.DefaultQueryResult</ResultClass>
    <ResultField name="transaction_date" type="Date" />
    <ResultField name="flight_number" type="String" />
    <ResultField name="item_id" type="String" />
    <ResultField name="item_sku" type="String" />
    <ResultField name="item_description" type="String" />
    <ResultField name="destination_airport" type="String" />
    <ResultField name="item_qty" type="BigDecimal" />
    <ResultField name="net_sales" type="BigDecimal" />
    <SQL>
      <Statement dtype="String"><![CDATA[
        SELECT
          trl.begin_date_timestamp,
          trfi.flight_number,
          tsl.item_id,
          sku.manufacturer_upc,
          item.description,
          trfi.destination_airport,
          (CASE WHEN return_flag = 1 THEN tsl.quantity * -1 ELSE tsl.quantity END) as quantity,
          tsl.extended_amt as net_sales
        FROM trl_sale_lineitm tsl
          INNER JOIN trn_trans trn
            ON tsl.organization_id = trn.organization_id
            AND tsl.rtl_loc_id = trn.rtl_loc_id
            AND tsl.business_date = trn.business_date
            AND tsl.wkstn_id = trn.wkstn_id
            AND tsl.trans_seq = trn.trans_seq
          INNER JOIN trl_rtrans_flight_info trfi
            ON tsl.organization_id = trfi.organization_id
            AND tsl.rtl_loc_id = trfi.rtl_loc_id
            AND tsl.business_date = trfi.business_date
            AND tsl.wkstn_id = trfi.wkstn_id
            AND tsl.trans_seq = trfi.trans_seq
          INNER JOIN trl_rtrans_lineitm trl
            ON tsl.organization_id = trl.organization_id
            AND tsl.rtl_loc_id = trl.rtl_loc_id
            AND tsl.business_date = trl.business_date
            AND tsl.wkstn_id = trl.wkstn_id
            AND tsl.trans_seq = trl.trans_seq
            AND tsl.rtrans_lineitm_seq = trl.rtrans_lineitm_seq
          LEFT OUTER JOIN itm_item item
            ON tsl.organization_id = item.organization_id
            AND /*UPPER*/ tsl.item_id = item.item_id
          LEFT OUTER JOIN itm_item_cross_reference sku
            ON item.organization_id = sku.organization_id
            AND item.item_id = /*UPPER*/ sku.item_id
            AND primary_flag = 1
        WHERE tsl.organization_id = ?
        AND tsl.rtl_loc_id = ?
        AND trn.trans_date = ?
        AND /*UPPER*/ trn.trans_statcode = 'COMPLETE'
        AND trn.post_void_flag = 0
        AND trl.void_flag = 0
        AND /*UPPER*/ trfi.tax_calculation_mode = 'TAX_FREE'
      ]]></Statement>
      <Parameter name="organizationId" />
      <Parameter name="retailLocationId" />
      <Parameter name="argBusinessDateStart" />
    </SQL>
    <Suffix dtype="String"><![CDATA[ORDER BY trl.begin_date_timestamp ASC, tsl.rtrans_lineitm_seq ASC]]></Suffix>
  </Query>
  <Query name="AIRSIDE_SALES_TAX_REPORT" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.data2.access.DefaultQueryResult</ResultClass>
    <ResultField name="destination_zone" type="String" />
    <ResultField name="zone_description" type="String" />
    <ResultField name="transaction_date" type="Date" />
    <ResultField name="item_id" type="String" />
    <ResultField name="item_description" type="String" />
    <ResultField name="transaction_number" type="String" />
    <ResultField name="flight_number" type="String" />
    <ResultField name="destination_airport" type="String" />
    <ResultField name="item_qty" type="BigDecimal" />
    <ResultField name="unit_price" type="BigDecimal" />
    <ResultField name="extended_amt" type="BigDecimal" />
    <ResultField name="shop_id" type="String" />
    <SQL>
      <Statement dtype="String"><![CDATA[
        SELECT
          trfi.destination_zone,
          caz.description,
          trl.begin_date_timestamp,
          tsl.item_id,
          item.description,
          tsl.trans_seq,
          trfi.flight_number,
          trfi.destination_airport,
          (CASE WHEN return_flag = 1 THEN tsl.quantity * -1 ELSE tsl.quantity END) as quantity,
          tsl.unit_price,
          tsl.extended_amt,
          loc.alternate_store_nbr
        FROM trl_sale_lineitm tsl
          INNER JOIN trn_trans trn
            ON tsl.organization_id = trn.organization_id
            AND tsl.rtl_loc_id = trn.rtl_loc_id
            AND tsl.business_date = trn.business_date
            AND tsl.wkstn_id = trn.wkstn_id
            AND tsl.trans_seq = trn.trans_seq
          INNER JOIN trl_rtrans_flight_info trfi
            ON tsl.organization_id = trfi.organization_id
            AND tsl.rtl_loc_id = trfi.rtl_loc_id
            AND tsl.business_date = trfi.business_date
            AND tsl.wkstn_id = trfi.wkstn_id
            AND tsl.trans_seq = trfi.trans_seq
          INNER JOIN trl_rtrans_lineitm trl
            ON tsl.organization_id = trl.organization_id
            AND tsl.rtl_loc_id = trl.rtl_loc_id
            AND tsl.business_date = trl.business_date
            AND tsl.wkstn_id = trl.wkstn_id
            AND tsl.trans_seq = trl.trans_seq
            AND tsl.rtrans_lineitm_seq = trl.rtrans_lineitm_seq          
        LEFT OUTER JOIN com_airport_zone caz ON trfi.organization_id = caz.organization_id
          AND /*UPPER*/ trfi.destination_zone = caz.zone_id
        LEFT OUTER JOIN itm_item item ON tsl.organization_id = item.organization_id
          AND /*UPPER*/ tsl.item_id = item.item_id
        LEFT OUTER JOIN loc_rtl_loc loc ON tsl.organization_id = loc.organization_id
          AND tsl.rtl_loc_id = loc.rtl_loc_id        
        WHERE tsl.organization_id = ?
          AND tsl.rtl_loc_id = ?
          AND trn.trans_date = ?
          AND /*UPPER*/ trn.trans_statcode = 'COMPLETE'
          AND trn.post_void_flag = 0
          AND trl.void_flag = 0
          AND /*UPPER*/ trfi.tax_calculation_mode <> 'TAX_NORMAL'         
      ]]></Statement>
      <Parameter name="organizationId" />
      <Parameter name="retailLocationId" />
      <Parameter name="argBusinessDateStart" />
    </SQL>
    <Suffix dtype="String"><![CDATA[ORDER BY trfi.destination_zone ASC, tsl.trans_seq DESC, tsl.rtrans_lineitm_seq ASC]]></Suffix>
  </Query>
  <Query name="ASSOCIATE_RECONCILIATION_REPORT" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.data2.access.DefaultQueryResult</ResultClass>
    <ResultField name="description" type="String" />
    <ResultField name="quantity" type="String" />
    <ResultField name="employee_id" type="String" />
    <ResultField name="drawer_total" type="BigDecimal" />
    <ResultField name="assc_name" type="String" />
    <ResultField name="declared_amount" type="BigDecimal" />
    <ResultField name="over_short" type="BigDecimal" />
    <SQL>
      <Statement dtype="String"><![CDATA[
          SELECT
            TTD.description,
            COALESCE(SUM(TTTC.media_count),0) AS quantity,
            CRM.employee_id,
            (
              COALESCE(SUM(TTTC.amt),0) - COALESCE(SUM(TTTC.difference_amt),0)
            ) AS drawer_total,
            CASE WHEN COALESCE(/*UPPER*/ CRM.first_name,' ') <> ' ' OR COALESCE(/*UPPER*/ CRM.last_name,' ') <> ' ' 
            THEN CONCAT(CRM.first_name, CONCAT('::', CRM.last_name))END AS assc_name,
            COALESCE(SUM(TTTC.amt),0) AS declared_amount,
            COALESCE(SUM(TTTC.difference_amt),0) AS over_short
          FROM
            tsn_session TS

          INNER JOIN
            tsn_tndr_control_trans TTCT
          ON
            TS.rtl_loc_id = TTCT.rtl_loc_id
            AND TS.organization_id = TTCT.organization_id
            AND TS.session_id = TTCT.outbound_session_id

          INNER JOIN
            tsn_tndr_repository TTR
          ON
            TTCT.rtl_loc_id = TTR.rtl_loc_id
            AND TTCT.organization_id = TTR.organization_id
            AND /*UPPER*/ TTCT.outbound_tndr_repository_id = TTR.tndr_repository_id

          INNER JOIN
            tsn_tndr_tndr_count TTTC
          ON
            TTCT.organization_id = TTTC.organization_id
            AND TTCT.rtl_loc_id = TTTC.rtl_loc_id
            AND TTCT.business_date = TTTC.business_date
            AND TTCT.wkstn_id = TTTC.wkstn_id
            AND TTCT.trans_seq = TTTC.trans_seq

          INNER JOIN
            tnd_tndr TTD
          ON
            TTTC.organization_id = TTD.organization_id
            AND TTTC.tndr_id = TTD.tndr_id

          INNER JOIN
            crm_party CRM
          ON
            TS.employee_party_id = CRM.party_id
            AND TS.organization_id = CRM.organization_id

          WHERE
            /*UPPER*/ TTCT.typcode = 'ENDCOUNT'
            AND TTCT.organization_id = ?
      ]]></Statement>
      <Parameter name="organizationId" />
      <Expression trigger="rtl_loc_id"><![CDATA[TTCT.rtl_loc_id = ?]]></Expression>
      <Expression trigger="startEmp"><![CDATA[/*UPPER*/ crm.employee_id >= ?]]></Expression>
      <Expression trigger="endEmp"><![CDATA[/*UPPER*/ crm.employee_id <= ?]]></Expression>
      <Expression trigger="argBusinessDateStart"><![CDATA[TTCT.business_date = ?]]></Expression>
    </SQL>
    <Suffix dtype="String"><![CDATA[GROUP BY CRM.employee_id, TTD.description,CRM.first_name,CRM.last_name
                 ORDER BY CRM.employee_id, TTD.description]]></Suffix>
  </Query>
  <Query name="BEST_SELLERS_BY_ITEM_REPORT" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.data2.access.DefaultQueryResult</ResultClass>
    <ResultField name="item_id" type="String" />
    <ResultField name="description" type="String" />
    <ResultField name="qty" type="BigDecimal" />
    <ResultField name="amt" type="BigDecimal" />
    <ResultField name="sort_data" type="BigDecimal" />
    <SQL>
      <Statement dtype="String"><![CDATA[
        SELECT 
          rsl.item_id   AS item_id,
          item_desc     AS description,
          SUM(quantity) AS qty,
          SUM(net_amt)  AS amt,
          CASE WHEN 'QTY'= ? THEN SUM(quantity) ELSE SUM(net_amt) END AS sort_data
          FROM rpt_sale_line rsl
          LEFT JOIN itm_non_phys_item npi
          ON rsl.organization_id    = npi.organization_id
          AND rsl.item_id           = npi.item_id
          WHERE npi.item_id        IS NULL
          AND /*UPPER*/ trans_statcode        = 'COMPLETE'
          AND /*UPPER*/ sale_lineitm_typcode <> 'REMOTE_SEND'
          AND return_flag           = '0'
          AND rsl.organization_id   = ?
          AND rtl_loc_id            = ?
          AND 'ITEM'                = ?
          AND COALESCE(/*UPPER*/ merch_level_1, '') LIKE ? 
          AND rsl.trans_date BETWEEN ? AND ?
          AND wkstn_id >= ? 
          AND wkstn_id <= ?
          GROUP BY rsl.item_id, item_desc
          ORDER BY sort_data DESC
      ]]></Statement>
      <Parameter name="sortOrder" />
      <Parameter name="organizationId" />
      <Parameter name="retailLocationId" />
      <Parameter name="itemOrStyle" />
      <Parameter name="merchLevel1" />
      <Parameter name="argBusinessDateStart" />
      <Parameter name="argBusinessDateEnd" />
      <Parameter name="startReg" />
      <Parameter name="endReg" />
    </SQL>
    <Property>
      <Key dtype="String">MaxRows</Key>
      <Value dtype="String"><![CDATA[50]]></Value>
    </Property>
  </Query>
  <Query name="BEST_SELLERS_BY_STYLE_REPORT" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.data2.access.DefaultQueryResult</ResultClass>
    <ResultField name="group_id" type="String" />
    <ResultField name="item_id" type="String" />
    <ResultField name="description" type="String" />
    <ResultField name="qty" type="BigDecimal" />
    <ResultField name="amt" type="BigDecimal" />
    <ResultField name="sort_data" type="BigDecimal" />
    <SQL>
      <Statement dtype="String"><![CDATA[
          SELECT
            'STYLE' AS group_id,
            iib.item_id,
            iib.description,
            SUM(rsl.quantity) AS qty,
            SUM(rsl.net_amt) AS amt,
            CASE WHEN 'qty'= ? THEN SUM(quantity) ELSE SUM(net_amt) END AS sort_data
          FROM 
            rpt_sale_line rsl
          INNER JOIN 
            itm_item iia 
           ON
            rsl.organization_id = iia.organization_id  
            AND /*UPPER*/ rsl.item_id = iia.item_id
          INNER JOIN 
            itm_item iib 
          ON 
            iia.organization_id = iib.organization_id 
            AND /*UPPER*/ iia.parent_item_id = iib.item_id
          WHERE
            rsl.organization_id = ?
            AND /*UPPER*/ rsl.sale_lineitm_typcode <> 'REMOTE_SEND'
            AND rsl.quantity > 0
            AND /*UPPER*/ iia.item_lvlcode = 'ITEM'
            AND /*UPPER*/ iib.item_lvlcode = 'STYLE'
            AND /*UPPER*/ rsl.trans_statcode = 'COMPLETE'
            AND rsl.RETURN_FLAG <> 1
            AND rsl.rtl_loc_id = ?
            AND 'STYLE'= ?
            AND COALESCE(/*UPPER*/ iia.merch_level_1, '') LIKE ? 
            AND rsl.trans_date BETWEEN ? AND ?
            AND rsl.wkstn_id >= ?
            AND rsl.wkstn_id <= ?
            GROUP BY iib.item_id, iib.description
            ORDER BY sort_data DESC
      ]]></Statement>
      <Parameter name="sortOrder" />
      <Parameter name="organizationId" />
      <Parameter name="retailLocationId" />
      <Parameter name="itemOrStyle" />
      <Parameter name="merchLevel1" />
      <Parameter name="argBusinessDateStart" />
      <Parameter name="argBusinessDateEnd" />
      <Parameter name="startReg" />
      <Parameter name="endReg" />
    </SQL>
    <Property>
      <Key dtype="String">MaxRows</Key>
      <Value dtype="String"><![CDATA[50]]></Value>
    </Property>
  </Query>
  <Query name="CANCELLED_TRANSACTION_DETAIL_REPORT" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.data2.access.DefaultQueryResult</ResultClass>
    <ResultField name="trans_cancel_reascode" type="String" />
    <ResultField name="transaction_number" type="String" />
    <ResultField name="sold_by" type="String" />
    <ResultField name="associate_no" type="String" />
    <ResultField name="register_no" type="String" />
    <ResultField name="transaction_time" type="Date" />
    <ResultField name="reason_code_desc" type="String" />
    <ResultField name="lineitemseq" type="String" />
    <ResultField name="itemid" type="String" />
    <ResultField name="itemdesc" type="String" />
    <ResultField name="quantity" type="BigDecimal" />
    <ResultField name="unitprice" type="BigDecimal" />
    <ResultField name="extamount" type="BigDecimal" />
    <ResultField name="tax" type="BigDecimal" />
    <ResultField name="total" type="BigDecimal" />
    <ResultField name="trans_date" type="Date" />
    <SQL>
      <Statement dtype="String"><![CDATA[
          SELECT
            trn_trans.trans_cancel_reascode,
            trn_trans.trans_seq AS transaction_number,
            crm_party.employee_id AS sold_by,
            crm_party.employee_id AS associate_no,
            trn_trans.wkstn_id AS register_no,
            trn_trans.begin_datetime AS transaction_time,
            COALESCE((
              SELECT description
              FROM com_reason_code
              WHERE organization_id = trn_trans.organization_id
                AND reason_code = /*UPPER*/ trn_trans.trans_cancel_reascode
                AND reason_typcode = 'TRANSACTION_CANCEL'
            ), '_rptNotAvailable') AS reason_code_desc,
            trl_sale_lineitm.rtrans_lineitm_seq AS lineitemseq,
            trl_sale_lineitm.item_id AS itemid,
            (
              SELECT description
              FROM itm_item
              WHERE organization_id = trl_sale_lineitm.organization_id
                AND item_id = /*UPPER*/ trl_sale_lineitm.item_id
            ) AS itemdesc,
            COALESCE(trl_sale_lineitm.quantity, 0) AS quantity,
            COALESCE(trl_sale_lineitm.unit_price, 0) AS unitprice,
            COALESCE(trl_sale_lineitm.extended_amt, 0) AS extamount,
            COALESCE(trn_trans.taxtotal, 0) AS tax,
            COALESCE(trn_trans.total, 0) AS total,
            trn_trans.trans_date
          FROM
            trn_trans

          INNER JOIN
            crm_party
          ON
            crm_party.organization_id = trn_trans.organization_id
            AND crm_party.party_id = trn_trans.operator_party_id

          LEFT OUTER JOIN
            trl_sale_lineitm
          ON
            trl_sale_lineitm.organization_id = trn_trans.organization_id
            AND trl_sale_lineitm.rtl_loc_id = trn_trans.rtl_loc_id
            AND trl_sale_lineitm.wkstn_id = trn_trans.wkstn_id
            AND trl_sale_lineitm.business_date = trn_trans.business_date
            AND trl_sale_lineitm.trans_seq = trn_trans.trans_seq

          INNER 
            JOIN TRL_RTRANS_LINEITM
          ON trl_sale_lineitm.ORGANIZATION_ID     = TRL_RTRANS_LINEITM.ORGANIZATION_ID
            AND trl_sale_lineitm.RTL_LOC_ID         = TRL_RTRANS_LINEITM.RTL_LOC_ID
            AND trl_sale_lineitm.BUSINESS_DATE      = TRL_RTRANS_LINEITM.BUSINESS_DATE
            AND trl_sale_lineitm.WKSTN_ID           = TRL_RTRANS_LINEITM.WKSTN_ID
            AND trl_sale_lineitm.TRANS_SEQ          = TRL_RTRANS_LINEITM.TRANS_SEQ
            AND trl_sale_lineitm.RTRANS_LINEITM_SEQ = TRL_RTRANS_LINEITM.RTRANS_LINEITM_SEQ
            AND TRL_RTRANS_LINEITM.VOID_FLAG = 0

          WHERE
            trn_trans.rtl_loc_id = ?
            AND trn_trans.organization_id = ?
            AND /*UPPER*/ trn_trans.trans_statcode = 'CANCEL'
            AND trn_trans.trans_date BETWEEN ? AND ?
            AND 'SUMMARY' <> ?
      ]]></Statement>
      <Parameter name="retailLocationId" />
      <Parameter name="organizationId" />
      <Parameter name="argBusinessDateStart" />
      <Parameter name="argBusinessDateEnd" />
      <Parameter name="displayOption" />
    </SQL>
    <Suffix dtype="String"><![CDATA[ORDER BY trn_trans.trans_seq]]></Suffix>
  </Query>
  <Query name="CANCELLED_TRANSACTION_SUMMARY_REPORT" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.data2.access.DefaultQueryResult</ResultClass>
    <ResultField name="trans_cancel_reascode" type="String" />
    <ResultField name="transaction_number" type="String" />
    <ResultField name="sold_by" type="String" />
    <ResultField name="associate_no" type="String" />
    <ResultField name="register_no" type="String" />
    <ResultField name="transaction_time" type="Date" />
    <ResultField name="total" type="BigDecimal" />
    <ResultField name="tax" type="BigDecimal" />
    <ResultField name="sub_total" type="BigDecimal" />
    <ResultField name="reason_code_desc" type="String" />
    <ResultField name="trans_date" type="Date" />
    <SQL>
      <Statement dtype="String"><![CDATA[
          SELECT
            trn_trans.trans_cancel_reascode as reason_code,
            trn_trans.trans_seq AS transaction_number,
            crm_party.employee_id AS sold_by,
            crm_party.employee_id AS associate_no,
            trn_trans.wkstn_id AS register_no,
            trn_trans.begin_datetime AS transaction_time,
            COALESCE(trn_trans.total,0) AS total,
            COALESCE(trn_trans.taxtotal,0) AS tax,
            COALESCE(trn_trans.subtotal,0) AS sub_total,
            COALESCE((
              SELECT
                description
              FROM
                com_reason_code
              WHERE
                organization_id = trn_trans.organization_id
                AND reason_code = /*UPPER*/ trn_trans.trans_cancel_reascode
                AND reason_typcode = 'TRANSACTION_CANCEL'
            ), '_rptNotAvailable') AS reason_code_desc,
            trn_trans.trans_date
          FROM
            trn_trans

          INNER JOIN
            crm_party
          ON
            crm_party.organization_id = trn_trans.organization_id
            AND crm_party.party_id = trn_trans.operator_party_id

          WHERE
            /*UPPER*/ trn_trans.trans_statcode = 'CANCEL'
            AND /*UPPER*/ trn_trans.trans_typcode = 'RETAIL_SALE'
            AND trn_trans.rtl_loc_id = ?
            AND trn_trans.organization_id = ?
            AND trn_trans.trans_date BETWEEN ? AND ?
            AND 'DETAIL' <> ?
      ]]></Statement>
      <Parameter name="retailLocationId" />
      <Parameter name="organizationId" />
      <Parameter name="argBusinessDateStart" />
      <Parameter name="argBusinessDateEnd" />
      <Parameter name="displayOption" />
    </SQL>
    <Suffix dtype="String"><![CDATA[ORDER BY trn_trans.trans_seq]]></Suffix>
  </Query>
  <Query name="CASH_DRAWER_AUDIT_REPORT" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.data2.access.DefaultQueryResult</ResultClass>
    <ResultField name="register" type="Integer" />
    <ResultField name="till_id" type="String" />
    <ResultField name="drawer_id" type="String" />
    <ResultField name="register_status" type="String" />
    <ResultField name="assc_name" type="String" />
    <ResultField name="employee_party_id" type="String" />
    <ResultField name="currency_id" type="String" />
    <ResultField name="currency_desc" type="String" />
    <ResultField name="amt" type="BigDecimal" />
    <ResultField name="amt_over" type="BigDecimal" />
    <SQL>
      <Statement dtype="String"><![CDATA[
    SELECT t.register,
         COALESCE(t.till_id, ' ') AS till_id,
         COALESCE(t.drawer_id,' ') AS drawer_id,
         t.register_status,
         CASE WHEN COALESCE(/*UPPER*/ t.first_name,' ') <> ' ' OR COALESCE(/*UPPER*/ t.last_name,' ') <> ' ' 
         THEN CONCAT(t.first_name, CONCAT('::', t.last_name))END AS assc_name,
         t.employee_party_id,
         t.currency_id,
         t.currency_desc,
         t.amt,
         t.amt_over
      FROM (
          SELECT
            TSW.wkstn_id AS register,
            TTR.tndr_repository_id AS till_id,
            TSW.cash_drawer_id AS drawer_id,
            LSJ.string_value AS register_status,
            CP.last_name AS last_name,
            CP.first_name AS first_name,
            HRE.employee_id AS employee_party_id,
            TND.currency_id,
            TND.description AS currency_desc,
            TST.actual_media_amt AS amt,
            (TST.actual_media_amt-TNDOP.suggested_deposit_threshold) AS amt_over
           FROM
            tsn_tndr_repository TTR

          LEFT OUTER JOIN
            tsn_tndr_repository_status TTRS
          ON
            TTR.organization_id = TTRS.organization_id
            AND TTR.rtl_loc_id = TTRS.rtl_loc_id
            AND TTR.tndr_repository_id = TTRS.tndr_repository_id
            
          INNER JOIN
            tsn_session TS
          ON
            TS.organization_id = TTR.organization_id
            AND TS.rtl_loc_id = TTR.rtl_loc_id
            AND /*UPPER*/ TS.statcode <> 'RECONCILED'
            AND TS.statcode IS NOT NULL
            AND TS.session_id = TTRS.active_session_id

          LEFT OUTER JOIN
            tsn_session_wkstn TSW
          ON
            TSW.organization_id = TTR.organization_id
            AND TSW.rtl_loc_id = TTR.rtl_loc_id
            AND TSW.session_id = TS.session_id
            AND TSW.attached_flag = 1

          LEFT OUTER JOIN
            loc_state_journal LSJ
          ON
            LSJ.organization_id = TTR.organization_id
            AND LSJ.rtl_loc_id = TTR.rtl_loc_id
            AND LSJ.wkstn_id = TSW.wkstn_id
            AND LSJ.status_typcode = 'WKSTN_STATE'

          LEFT OUTER JOIN
            crm_party CP
          ON
            CP.organization_id = TTR.organization_id
            AND CP.party_id = TS.employee_party_id

          LEFT OUTER JOIN
            hrs_employee HRE
          ON
            HRE.organization_id = TTR.organization_id
            AND HRE.party_id = TS.employee_party_id

          LEFT OUTER JOIN
            tsn_session_tndr TST
          ON
            TST.organization_id = TTR.organization_id
            AND TST.rtl_loc_id = TTR.rtl_loc_id
            AND TST.session_id = TS.session_id

          LEFT OUTER JOIN
            tnd_tndr TND
          ON
            TND.organization_id = TTR.organization_id
            AND TND.tndr_id = TST.tndr_id
            AND /*UPPER*/ TND.tndr_typcode = 'CURRENCY'

          JOIN tnd_tndr_options TNDOP
          ON
            TND.organization_id = TNDOP.organization_id
            AND TND.tndr_id = TNDOP.tndr_id

          WHERE
            TTR.organization_id = ?
            AND TTR.rtl_loc_id = ?
            AND /*UPPER*/ TTR.typcode = 'TILL'
            AND LSJ.time_stamp IN (
              SELECT
                MAX(time_stamp)
              FROM
                loc_state_journal
              WHERE
                organization_id = TTR.organization_id
                AND rtl_loc_id = TTR.rtl_loc_id
                AND status_typcode = 'WKSTN_STATE'
                AND wkstn_id = TSW.wkstn_id
            )


          GROUP BY
            TSW.wkstn_id,
            TTR.tndr_repository_id,
            TSW.cash_drawer_id,
            LSJ.string_value,
            CP.last_name,
            CP.first_name,
            HRE.employee_id,
            TND.currency_id,
            TND.description,
            TST.actual_media_amt,
            TNDOP.suggested_deposit_threshold

          UNION

          SELECT
            LW.wkstn_id AS register,
            NULL AS till_id,
            NULL AS drawer_id,
            LSJ.string_value AS register_status,
            NULL AS last_name,
            NULL AS first_name,
            NULL AS employee_party_id,
            NULL AS currency_id,
            NULL AS currency_desc,
            NULL AS amt,
            NULL AS amt_over
           FROM
            loc_wkstn LW

          LEFT OUTER JOIN
            loc_state_journal LSJ
          ON
            LSJ.organization_id = LW.organization_id
            AND LSJ.rtl_loc_id = LW.rtl_loc_id
            AND LSJ.wkstn_id = LW.wkstn_id
            AND LSJ.status_typcode = 'WKSTN_STATE'

          WHERE
            LW.wkstn_id NOT IN (
              SELECT
                TSW.wkstn_id
              FROM
                tsn_tndr_repository TTR

              INNER JOIN
                tsn_session TS
              ON
                TS.organization_id = TTR.organization_id
                AND TS.rtl_loc_id = TTR.rtl_loc_id
                AND /*UPPER*/ TS.statcode <> 'RECONCILED'
                AND TS.statcode IS NOT NULL

              LEFT OUTER JOIN
                tsn_session_wkstn TSW
              ON
                TSW.organization_id = TTR.organization_id
                AND TSW.rtl_loc_id = TTR.rtl_loc_id
                AND TSW.session_id = TS.session_id
                AND TSW.attached_flag = 1

              WHERE
                TTR.organization_id = ?
                AND TTR.rtl_loc_id = ?
                AND /*UPPER*/ TTR.typcode = 'TILL'
                AND TSW.wkstn_id IS NOT NULL
              GROUP BY
                TSW.wkstn_id, TTR.tndr_repository_id, TSW.cash_drawer_id
            )
            AND LSJ.time_stamp IN (
              SELECT
                MAX(time_stamp)
              FROM
                loc_state_journal
              WHERE
                organization_id = LW.organization_id
                AND rtl_loc_id = LW.rtl_loc_id
                AND status_typcode = 'WKSTN_STATE'
                AND wkstn_id = LW.wkstn_id
            )
            AND LW.organization_id = ?
            AND LW.rtl_loc_id = ?
          GROUP BY
            LW.wkstn_id, LSJ.string_value

          UNION

          SELECT
            NULL AS register,
            tndr_repository_id AS till_id,
            NULL AS drawer_id,
            NULL AS register_status,
            NULL AS last_name,
            NULL AS first_name,
            NULL AS employee_party_id,
            NULL AS currency_id,
            NULL AS currency_desc,
            NULL AS amt,
            NULL AS amt_over
          FROM
            tsn_tndr_repository
          WHERE
            tndr_repository_id NOT IN (
              SELECT
                TTR.tndr_repository_id
              FROM
                tsn_tndr_repository TTR

              INNER JOIN
                tsn_session TS
              ON
                TS.organization_id = TTR.organization_id
                AND TS.rtl_loc_id = TTR.rtl_loc_id
                AND /*UPPER*/ TS.statcode <> 'RECONCILED'
                AND TS.statcode IS NOT NULL

              WHERE
                TTR.organization_id = ?
                AND TTR.rtl_loc_id = ?
                AND /*UPPER*/ TTR.typcode = 'TILL'
              GROUP BY
                TTR.tndr_repository_id
            )
            AND organization_id = ?
            AND rtl_loc_id = ?
            AND /*UPPER*/ typcode = 'TILL'
          GROUP BY
            tndr_repository_id

          UNION

          SELECT 
            NULL                                 AS register,
            COALESCE(TS.TNDR_REPOSITORY_ID, ' ') AS till_id,
            TS.CASH_DRAWER_ID                    AS drawer_id,
            NULL                                 AS register_status,
            CP.last_name                         AS last_name,
            CP.first_name                        AS first_name,
            HRE.employee_id                      AS employee_party_id,
            TND.CURRENCY_ID,
            TND.DESCRIPTION                      AS currency_desc,
            TST.ACTUAL_MEDIA_AMT                                       AS amt,
            (TST.ACTUAL_MEDIA_AMT - TNDOP.SUGGESTED_DEPOSIT_THRESHOLD) AS amt_over

          FROM tsn_session TS
          LEFT OUTER JOIN tsn_tndr_repository TTR
          ON TS.ORGANIZATION_ID     = TTR.ORGANIZATION_ID
          AND TS.RTL_LOC_ID         = TTR.RTL_LOC_ID
          AND /*UPPER*/ TS.TNDR_REPOSITORY_ID = TTR.TNDR_REPOSITORY_ID
          AND TS.CASH_DRAWER_ID    IS NOT NULL

          INNER JOIN ctl_ip_cashdrawer_device CICD
          ON TS.ORGANIZATION_ID = CICD.ORGANIZATION_ID
          AND TS.RTL_LOC_ID     = CICD.RTL_LOC_ID
          AND /*UPPER*/ TS.CASH_DRAWER_ID   = CICD.CASH_DRAWER_ID
        
          INNER JOIN CTL_IP_CASHDRAWER_DEVICE_P CICDP
          ON CICD.ORGANIZATION_ID = CICDP.ORGANIZATION_ID
          AND CICD.RTL_LOC_ID     = CICDP.RTL_LOC_ID
          AND CICD.CASH_DRAWER_ID = CICDP.CASH_DRAWER_ID
          AND CICDP.PROPERTY_CODE = 'DRAWER_INSERTED'
          AND CICDP.DECIMAL_VALUE = 1

          INNER JOIN tsn_tndr_repository_status TTRS
          ON TTR.ORGANIZATION_ID     = TTRS.ORGANIZATION_ID
          AND TTR.RTL_LOC_ID         = TTRS.RTL_LOC_ID
          AND TTR.TNDR_REPOSITORY_ID = TTRS.TNDR_REPOSITORY_ID
          AND TS.SESSION_ID = TTRS.ACTIVE_SESSION_ID

          LEFT OUTER JOIN tsn_session_tndr TST
          ON TST.ORGANIZATION_ID = TS.ORGANIZATION_ID
          AND TST.RTL_LOC_ID     = TS.RTL_LOC_ID
          AND TST.SESSION_ID     = TS.SESSION_ID
          
          LEFT OUTER JOIN crm_party CP
          ON CP.ORGANIZATION_ID = TS.ORGANIZATION_ID
          AND CP.PARTY_ID       = TS.EMPLOYEE_PARTY_ID

          LEFT OUTER JOIN hrs_employee HRE
          ON HRE.organization_id = TTR.organization_id
          AND HRE.party_id       = TS.employee_party_id

          INNER JOIN tnd_tndr TND
          ON TND.TNDR_ID          = TST.TNDR_ID
          AND TND.ORGANIZATION_ID = TST.ORGANIZATION_ID
          
          INNER JOIN tnd_tndr_options TNDOP
          ON TND.ORGANIZATION_ID      = TNDOP.ORGANIZATION_ID
          AND TND.TNDR_ID             = TNDOP.TNDR_ID
          
          WHERE TTR.ORGANIZATION_ID   = ?
          AND TTR.RTL_LOC_ID          = ?
          AND UPPER(TTR.TYPCODE)      = 'TILL'
          AND UPPER(TND.TNDR_TYPCODE) = 'CURRENCY' 
            ) t
      ]]></Statement>
      <Parameter name="organizationId" />
      <Parameter name="retailLocationId" />
      <Parameter name="organizationId" />
      <Parameter name="retailLocationId" />
      <Parameter name="organizationId" />
      <Parameter name="retailLocationId" />
      <Parameter name="organizationId" />
      <Parameter name="retailLocationId" />
      <Parameter name="organizationId" />
      <Parameter name="retailLocationId" />
      <Parameter name="organizationId" />
      <Parameter name="retailLocationId" />
    </SQL>
    <Suffix dtype="String"><![CDATA[order by 1 asc, 3 asc, 2 asc]]></Suffix>
  </Query>
  <Query name="CASH_DRAWER_AUDIT_OPEN_UNATTACHED_IP_DRAWER_REPORT" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.data2.access.DefaultQueryResult</ResultClass>
    <ResultField name="drawer_id" type="String" />
    <ResultField name="drawer_status" type="String" />
    <ResultField name="till_id" type="String" />
    <ResultField name="session_id" type="String" />
     <SQL>
      <Statement dtype="String"><![CDATA[
        SELECT TS.CASH_DRAWER_ID AS drawer_id,
          CICDP.PROPERTY_CODE    AS drawer_status,
          TS.TNDR_REPOSITORY_ID  AS till_id,
          TS.SESSION_ID          AS session_id

        FROM tsn_session TS

        INNER JOIN ctl_ip_cashdrawer_device CICD
        ON TS.ORGANIZATION_ID           = CICD.ORGANIZATION_ID
        AND TS.RTL_LOC_ID               = CICD.RTL_LOC_ID
        AND /*UPPER*/ TS.CASH_DRAWER_ID = CICD.CASH_DRAWER_ID
        AND /*UPPER*/ TS.STATCODE      <> 'RECONCILED'

        INNER JOIN CTL_IP_CASHDRAWER_DEVICE_P CICDP
        ON CICD.ORGANIZATION_ID = CICDP.ORGANIZATION_ID
        AND CICD.RTL_LOC_ID     = CICDP.RTL_LOC_ID
        AND CICD.CASH_DRAWER_ID = CICDP.CASH_DRAWER_ID
        AND CICDP.PROPERTY_CODE = 'DRAWER_INSERTED'
        AND CICDP.DECIMAL_VALUE = 0

        WHERE TS.ORGANIZATION_ID   = ?
          AND TS.RTL_LOC_ID        = ?
        ]]></Statement>
      <Parameter name="organizationId" />
      <Parameter name="retailLocationId" />
    </SQL>
    <Suffix dtype="String"><![CDATA[ORDER BY TS.CASH_DRAWER_ID,  TS.TNDR_REPOSITORY_ID]]></Suffix>
  </Query>
  <Query name="CASH_DRAWER_RECONCILIATION_REPORT" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.data2.access.DefaultQueryResult</ResultClass>
    <ResultField name="wkstn_id" type="String" />
    <ResultField name="session_id" type="String" />
    <ResultField name="session_begin_time" type="Date" />
    <ResultField name="till_id" type="String" />
    <ResultField name="description" type="String" />
    <ResultField name="quantity" type="BigDecimal" />
    <ResultField name="drawer_total" type="BigDecimal" />
    <ResultField name="declared_amount" type="BigDecimal" />
    <ResultField name="over_short" type="BigDecimal" />

    <SQL>
      <Statement dtype="String"><![CDATA[
          SELECT
            TTC.wkstn_id,
            trans.session_id AS session_id,
            COALESCE(tsn_session.begin_datetime, trans.begin_datetime) AS session_begin_time,
            tsn_session.tndr_repository_id AS till_id,
            TTD.description,
            COUNT(TTD.description) AS quantity,
            (COALESCE(SUM(TTC.amt),0) - COALESCE(SUM(TTC.difference_amt),0)) AS drawer_total,
            COALESCE(SUM(TTC.amt),0) AS declared_amount,
            COALESCE(SUM(TTC.difference_amt),0) AS over_short

          FROM
            tsn_tndr_tndr_count TTC

          INNER JOIN
            tsn_tndr_control_trans TCON
          ON
            TCON.organization_id = TTC.organization_id
            AND TCON.rtl_loc_id = TTC.rtl_loc_id
            AND TCON.wkstn_id = TTC.wkstn_id
            AND TCON.trans_seq = TTC.trans_seq
            AND TCON.business_date = TTC.business_date

          INNER JOIN
            tnd_tndr TTD
          ON
            TTC.organization_id = TTD.organization_id
            AND TTC.tndr_id = TTD.tndr_id

          INNER JOIN
            trn_trans trans
          ON
            TTC.organization_id = trans.organization_id
            AND TTC.rtl_loc_id = trans.rtl_loc_id
            AND TTC.business_date = trans.business_date
            AND TTC.wkstn_id = trans.wkstn_id
            AND TTC.trans_seq = trans.trans_seq

          INNER JOIN
            tsn_session
          ON
            tsn_session.organization_id = trans.organization_id
            AND tsn_session.session_id = trans.session_id
            AND tsn_session.rtl_loc_id = trans.rtl_loc_id

          WHERE
            /*UPPER*/ TCON.typcode = 'ENDCOUNT'
            AND TTC.organization_id = ?
            AND TTC.rtl_loc_id = ?
      ]]></Statement>
      <Parameter name="organizationId" />
      <Parameter name="retailLocationId" />
      <Expression trigger="dtvStartRegNo"><![CDATA[TTC.wkstn_id = ?]]></Expression>
      <Expression trigger="argBusinessDateStart"><![CDATA[trans.trans_date = ?]]></Expression>
    </SQL>
    <Suffix dtype="String"><![CDATA[GROUP BY TTC.wkstn_id, trans.session_id, tsn_session.begin_datetime, tsn_session.tndr_repository_id, TTD.description, TTD.flash_sales_display_order, trans.begin_datetime  ORDER BY TTC.wkstn_id, trans.session_id, trans.begin_datetime, tsn_session.begin_datetime, TTD.flash_sales_display_order]]></Suffix>
  </Query>
  <Query name="CASH_DRAWER_REPORT" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.data2.access.DefaultQueryResult</ResultClass>
    <ResultField name="id_group" type="BigDecimal" />
    <ResultField name="register" type="String" />
    <ResultField name="description" type="String" />
    <ResultField name="drawer_total" type="BigDecimal" />
    <ResultField name="session_id" type="String" />
    <ResultField name="session_begin_time" type="String" />
    <ResultField name="till_id" type="String" />
    <ResultField name="drawer_id" type="String" />
    <ResultField name="drawer_type" type="String"/>
    <SQL>
      <Statement dtype="String"><![CDATA[
        SELECT
          1 AS id_group,
          CASE WHEN TSN.cash_drawer_id IS NOT NULL THEN 999999 
            ELSE COALESCE(
              (SELECT DISTINCT wkstn_id
              FROM tsn_session_wkstn
                WHERE organization_id = ?
                AND rtl_loc_id        = ?
                AND session_id        = TRN.session_id
                AND (attached_flag     = 1
                OR LRL.use_till_accountability_flag = 0)),999998) 
            END AS register,
            'Opening Balance' AS description,
            SUM(TCT.amt) AS drawer_total,
            TRN.session_id AS session_id,
            TSN.begin_datetime as session_begin_time,
            COALESCE(TSN.tndr_repository_id, ' ') AS till_id,
            COALESCE(TSN.cash_drawer_id, ' ') AS drawer_id,
            CASE WHEN TSN.cash_drawer_id IS NOT NULL THEN 1 ELSE 0 END as drawer_type
          FROM
            tsn_tndr_control_trans TCT
            INNER JOIN
              trn_trans TRN
              ON
                TRN.business_date = TCT.business_date AND
                TRN.organization_id = TCT.organization_id AND
                TRN.rtl_loc_id = TCT.rtl_loc_id AND
                TRN.trans_seq = TCT.trans_seq AND
                TRN.wkstn_id = TCT.wkstn_id
            INNER JOIN
              tsn_session TSN
              ON
                TRN.organization_id = TSN.organization_id AND
                TRN.rtl_loc_id = TSN.rtl_loc_id AND
                TRN.session_id = TSN.session_id AND
                TRN.wkstn_id = TCT.wkstn_id
            INNER JOIN 
              loc_rtl_loc LRL
              ON 
                LRL.organization_id    = TSN.organization_id
                AND LRL.rtl_loc_id        = TSN.rtl_loc_id   
          WHERE
            TCT.organization_id = ? AND
            TCT.rtl_loc_id = ? AND
            ((/*UPPER*/TCT.typcode = 'BEGINCOUNT' AND
             /*UPPER*/(TSN.statcode)   = 'BEGINCOUNT' AND
            (TCT.wkstn_id >= ? ) AND (TCT.wkstn_id <= ? )) OR
            (/*UPPER*/TCT.typcode = 'ISSUE_TILL_STARTING_CASH' AND
            /*UPPER*/TSN.statcode = 'UNCOUNTED') OR 
            (TSN.cash_drawer_id is not null AND
            /*UPPER*/TCT.typcode = 'BEGINCOUNT')) 
      ]]></Statement>
      <Parameter name="organizationId" />
      <Parameter name="retailLocationId" />
      <Parameter name="organizationId" />
      <Parameter name="retailLocationId" />
      <Parameter name="startReg"/>
      <Parameter name="endReg"/>
      <Expression trigger="argBusinessDateStart"><![CDATA[trn.business_date = ?]]></Expression>
    </SQL>
    <SQL>
      <Statement dtype="String"><![CDATA[
          GROUP BY
            TRN.wkstn_id, TRN.session_id, TCT.typcode, TSN.tndr_repository_id, TSN.begin_datetime, TSN.cash_drawer_id, LRL.use_till_accountability_flag

          UNION ALL

          SELECT
            3 AS id_group,
            CASE WHEN TSN.cash_drawer_id IS NOT NULL THEN 999999 
                ELSE COALESCE(
                (SELECT DISTINCT wkstn_id
                FROM tsn_session_wkstn
                WHERE organization_id = ?
                AND rtl_loc_id        = ?
                AND session_id        = TRN.session_id
                AND (attached_flag     = 1
                OR LRL.use_till_accountability_flag = 0)),999998)
              END AS register,
            '_rptPaidIn' AS description,
            SUM(TCT.amt) AS drawer_total,
            TRN.session_id AS session_id,
            TSN.begin_datetime as session_begin_time,
            TSN.tndr_repository_id AS till_id,
            COALESCE(TSN.cash_drawer_id, ' ') AS drawer_id,
            CASE WHEN TSN.cash_drawer_id IS NOT NULL THEN 1 ELSE 0 END as drawer_type
          FROM
            tsn_tndr_control_trans TCT
            INNER JOIN
              trn_trans TRN
              ON
                TRN.business_date = TCT.business_date AND
                TRN.organization_id = TCT.organization_id AND
                TRN.rtl_loc_id = TCT.rtl_loc_id AND
                TRN.trans_seq = TCT.trans_seq AND
                TRN.wkstn_id = TCT.wkstn_id
            INNER JOIN
              tsn_session TSN
              ON
                TRN.organization_id = TSN.organization_id AND
                TRN.rtl_loc_id = TSN.rtl_loc_id AND
                TRN.session_id = TSN.session_id AND
                TRN.wkstn_id = TCT.wkstn_id
            INNER JOIN 
              loc_rtl_loc LRL
              ON 
                LRL.organization_id    = TSN.organization_id
                AND LRL.rtl_loc_id        = TSN.rtl_loc_id                   
          WHERE
            TCT.organization_id = ? AND
            TCT.rtl_loc_id = ? AND
            /*UPPER*/TCT.typcode = 'PAID_IN' AND
            /*UPPER*/(TSN.statcode)   = 'BEGINCOUNT' AND
            ((TCT.wkstn_id >= ? ) AND (TCT.wkstn_id <= ? ) 
              OR TSN.cash_drawer_id is not null) 
      ]]></Statement>
      <Parameter name="organizationId" />
      <Parameter name="retailLocationId" />
      <Parameter name="organizationId" />
      <Parameter name="retailLocationId" />      
      <Parameter name="startReg"/>
      <Parameter name="endReg"/>
      <Expression trigger="argBusinessDateStart"><![CDATA[TCT.business_date = ?]]></Expression>
    </SQL>
    <SQL>
      <Statement dtype="String"><![CDATA[
          GROUP BY TRN.wkstn_id, TRN.session_id, TCT.typcode, TSN.tndr_repository_id, TSN.begin_datetime, TSN.cash_drawer_id, LRL.use_till_accountability_flag

          UNION ALL

          SELECT
            3 AS id_group,
            CASE WHEN TSN.cash_drawer_id IS NOT NULL THEN 999999 
              ELSE COALESCE(
                (SELECT DISTINCT wkstn_id
                FROM tsn_session_wkstn
                WHERE organization_id = ?
                AND rtl_loc_id        = ?
                AND session_id        = TRN.session_id
                AND (attached_flag     = 1
                OR LRL.use_till_accountability_flag = 0)),999998) 
              END AS register,
            CASE WHEN /*UPPER*/TCT.typcode = 'PAID_OUT' THEN '_rptPaidOut' ELSE '_rptCashPickup' END AS description,
            SUM(TCT.amt) * -1 AS drawer_total,
            TRN.session_id AS session_id,
            TSN.begin_datetime as session_begin_time,
            TSN.tndr_repository_id AS till_id,
            COALESCE(TSN.cash_drawer_id, ' ') AS drawer_id,
            CASE WHEN TSN.cash_drawer_id IS NOT NULL THEN 1 ELSE 0 END as drawer_type
          FROM
            tsn_tndr_control_trans TCT
            INNER JOIN
              trn_trans TRN
              ON
                TRN.business_date = TCT.business_date AND
                TRN.organization_id = TCT.organization_id AND
                TRN.rtl_loc_id = TCT.rtl_loc_id AND
                TRN.trans_seq = TCT.trans_seq AND
                TRN.wkstn_id = TCT.wkstn_id
            INNER JOIN
              tsn_session TSN
              ON
                TRN.organization_id = TSN.organization_id AND
                TRN.rtl_loc_id = TSN.rtl_loc_id AND
                TRN.session_id = TSN.session_id AND
                TRN.wkstn_id = TCT.wkstn_id
            INNER JOIN 
              loc_rtl_loc LRL
              ON 
                LRL.organization_id    = TSN.organization_id
                AND LRL.rtl_loc_id        = TSN.rtl_loc_id   
          WHERE
            TCT.organization_id = ? AND
            TCT.rtl_loc_id = ? AND
            (
              /*UPPER*/TCT.typcode = 'PAID_OUT'
              OR /*UPPER*/TCT.typcode = 'CASH_PICKUP'
            ) AND
            /*UPPER*/(TSN.statcode) = 'BEGINCOUNT' AND
            ((TCT.wkstn_id >= ? ) AND (TCT.wkstn_id <= ? ) 
              OR TSN.cash_drawer_id is not null) 
      ]]></Statement>
      <Parameter name="organizationId" />
      <Parameter name="retailLocationId" />
      <Parameter name="organizationId" />
      <Parameter name="retailLocationId" />      
      <Parameter name="startReg"/>
      <Parameter name="endReg"/>
      <Expression trigger="argBusinessDateStart"><![CDATA[TCT.business_date = ?]]></Expression>
    </SQL>
    <SQL>
      <Statement dtype="String"><![CDATA[
          GROUP BY
            TRN.wkstn_id, TRN.session_id, TCT.typcode, TSN.tndr_repository_id, TSN.begin_datetime, TSN.cash_drawer_id, LRL.use_till_accountability_flag

          UNION ALL

          SELECT
            2 AS id_group,
            CASE WHEN TSN.cash_drawer_id IS NOT NULL THEN 999999
            ELSE
              COALESCE(
              (SELECT
                distinct wkstn_id
              FROM
                tsn_session_wkstn
              WHERE
                organization_id = ?
                AND rtl_loc_id = ?
                AND session_id = TST.session_id
                AND (attached_flag = 1
                OR LRL.use_till_accountability_flag = 0)), 999998)
            END AS register,
            TTD.description AS description,
            TST.actual_media_amt AS drawer_total,
            TST.session_id AS session_id,
            TSN.begin_datetime as session_begin_time,
            TSN.tndr_repository_id AS till_id,
            COALESCE(TSN.cash_drawer_id, ' ') AS drawer_id,
            CASE WHEN TSN.cash_drawer_id IS NOT NULL THEN 1 ELSE 0 END as drawer_type
          FROM
            tsn_session_tndr TST
            INNER JOIN
              tnd_tndr_availability TTA
              ON
                TST.organization_id = TTA.organization_id AND
                TST.tndr_id = TTA.tndr_id
            INNER JOIN
              tnd_tndr TTD
              ON
                TTD.organization_id = TST.organization_id AND
                TTD.tndr_id = TST.tndr_id
            INNER JOIN
              tsn_session TSN
              ON
                TST.organization_id = TSN.organization_id AND
                TST.rtl_loc_id = TSN.rtl_loc_id AND
                TST.session_id = TSN.session_id
            INNER JOIN loc_rtl_loc LRL
              ON 
                LRL.organization_id    = TSN.organization_id
                AND LRL.rtl_loc_id        = TSN.rtl_loc_id
          WHERE
            TST.organization_Id = ? AND
            TST.rtl_loc_id = ? AND
            TTA.availability_code = 'CASH_DRAWER_REPORT' AND
            TST.session_id > 0 AND
            TST.session_id IN (
              SELECT DISTINCT
                session_id
              FROM
                trn_trans
              WHERE
                organization_id = ? AND
                rtl_loc_id = ? AND
                session_id IS NOT NULL AND
                (/*UPPER*/ trans_typcode = 'RETAIL_SALE' AND
                /*UPPER*/(TSN.statcode)   = 'BEGINCOUNT' AND
                wkstn_id >= ?  AND wkstn_id <= ? ) OR
                (/*UPPER*/ trans_typcode = 'TENDER_CONTROL' AND
                LRL.use_till_accountability_flag = 0 AND
                /*UPPER*/(TSN.statcode)   = 'BEGINCOUNT' AND
                wkstn_id >= ?  AND wkstn_id <= ? ) OR
                (TSN.cash_drawer_id is not null AND
                /*UPPER*/(TSN.statcode) = 'BEGINCOUNT') OR
                /*UPPER*/TSN.statcode = 'UNCOUNTED' 
                
      ]]></Statement>
      <Parameter name="organizationId" />
      <Parameter name="retailLocationId" />
      <Parameter name="organizationId" />
      <Parameter name="retailLocationId" />
      <Parameter name="organizationId" />
      <Parameter name="retailLocationId" />
      <Parameter name="startReg"/>
      <Parameter name="endReg"/>
      <Parameter name="startReg"/>
      <Parameter name="endReg"/>
      <Expression trigger="argBusinessDateStart"><![CDATA[business_date = ?]]></Expression>
    </SQL>
    <SQL>
      <Statement dtype="String"><![CDATA[
            )
      ]]></Statement>
      <Expression trigger="argBusinessDateStart"><![CDATA[business_date = ?]]></Expression>
    </SQL>
    <Suffix dtype="String"><![CDATA[ORDER BY 9 ASC, 2, 8, 7, 5, 1]]></Suffix>
  </Query>
  <!-- XSTORE-79: CCA Report -->
  <Query name="CONFIGURABLE_CUST_ACCT_ACTIVITY_SUMMARY_REPORT" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.data2.access.DefaultQueryResult</ResultClass>
    <ResultField name="cust_acct_id" type="String" />
    <ResultField name="last_name" type="String" />
    <ResultField name="first_name" type="String" />
    <ResultField name="party_id" type="String" />
    <ResultField name="telephone1" type="String" />
    <ResultField name="acct_setup_date" type="Date" />
    <ResultField name="last_activity_date" type="Date" />
    <ResultField name="last_payment_date" type="Date" />
    <ResultField name="account_status" type="String" />
    <ResultField name="acct_total" type="BigDecimal" />
    <ResultField name="total_payment_amt" type="BigDecimal" />
    <ResultField name="acct_balance" type="BigDecimal" />
    <ResultField name="account_type" type="String" />
    <SQL>
      <Statement dtype="String"><![CDATA[
        SELECT distinct cust_acct_id, last_name, first_name, party_id, telephone1, 
               setup_date, last_activity_date, last_payment_date, 
               cust_acct_statcode, acct_total, total_payment_amt, acct_balance, cust_acct_code 
        FROM (
          SELECT
            ca.cust_acct_id,
            crm.last_name,
            crm.first_name,
            ca.party_id,
            cpt.telephone_number as telephone1,
            ca.acct_setup_date as setup_date,
            ca.last_activity_date as last_activity_date,
            CASE 
              WHEN ca.cust_acct_code='SEND_SALE' 
                THEN ca.last_activity_date 
              WHEN ca.cust_acct_code = 'HOUSE_ACCOUNT'
                THEN 
                  (SELECT MAX(chrg.business_date) 
                    FROM cat_charge_acct_history chrg 
                    WHERE 
                      /*UPPER*/ chrg.activity_enum = 'PAYMENT' 
                      AND ca.cust_acct_id = chrg.cust_acct_id
                      AND ca.cust_acct_code  = chrg.cust_acct_code
                      AND ca.organization_id = chrg.organization_id
                      AND ca.rtl_loc_id = chrg.rtl_loc_id
                  )
              ELSE
              (
                SELECT
                  MAX(caa.business_date)
                FROM
                 cat_cust_item_acct_activity caa
                WHERE
                      ca.cust_acct_id = caa.cust_acct_id
                  AND ca.cust_acct_code = caa.cust_acct_code
                  AND ca.organization_id = caa.organization_id
                  AND (/*UPPER*/ caa.line_typcode='PAYMENT' 
                  OR /*UPPER*/ caa.line_typcode='DEPOSIT'
                  OR /*UPPER*/ caa.item_acct_activity_code='PICKUP')
              ) END as last_payment_date,
            ca.cust_acct_statcode,
            CASE 
                 WHEN ca.cust_acct_code = 'HOUSE_ACCOUNT'
                  THEN 
                    (SELECT SUM(chrg.amt) 
                       FROM cat_charge_acct_history chrg 
                       WHERE 
                        /*UPPER*/ chrg.activity_enum = 'CHARGE'
                        AND ca.cust_acct_id = chrg.cust_acct_id
                        AND ca.cust_acct_code  = chrg.cust_acct_code
                        AND ca.organization_id = chrg.organization_id
                        AND ca.rtl_loc_id = chrg.rtl_loc_id
                    )                     
                  ELSE 
                   cia.acct_total END acct_total,
            CASE WHEN ca.cust_acct_code='SEND_SALE' 
                    THEN ca.acct_balance
                 WHEN ca.cust_acct_code = 'HOUSE_ACCOUNT'
                  THEN 
                    (SELECT SUM(chrg.amt)*-1 
                       FROM cat_charge_acct_history chrg 
                       WHERE 
                        (/*UPPER*/ chrg.activity_enum = 'PAYMENT' or /*UPPER*/ chrg.activity_enum = 'REVERSAL')
                        AND ca.cust_acct_id = chrg.cust_acct_id
                        AND ca.cust_acct_code  = chrg.cust_acct_code
                        AND ca.organization_id = chrg.organization_id
                        AND ca.rtl_loc_id = chrg.rtl_loc_id
                    )                     
                 ELSE cia.total_payment_amt END total_payment_amt,
            CASE 
              WHEN ca.cust_acct_code='SEND_SALE' 
                THEN 0 
              ELSE 
                ca.acct_balance 
            END acct_balance,
            ca.cust_acct_code
          FROM
            cat_cust_acct ca

          LEFT OUTER JOIN
            cat_cust_item_acct cia
          ON
            ca.organization_id = cia.organization_id
            AND ca.cust_acct_id = cia.cust_acct_id
            AND ca.cust_acct_code = cia.cust_acct_code

          INNER JOIN
            crm_party crm
          ON
            ca.organization_id = crm.organization_id
            AND ca.party_id = crm.party_id
      LEFT OUTER JOIN
        crm_party_telephone cpt ON crm.party_id = cpt.party_id AND crm.organization_id = cpt.organization_id AND cpt.telephone_type = /*UPPER*/ 'Home'
          WHERE 
              ca.organization_id = ?
          AND ca.rtl_loc_id = ?
          AND /*UPPER*/ ca.cust_acct_statcode LIKE ?
          AND ca.cust_acct_code LIKE ? ) dt
       WHERE (? = 'SETUP DATE' and setup_date between ? and ?) 
           OR (? = 'LAST ACTIVITY DATE' and last_activity_date between ? and ?)
           OR (? = 'LAST PAYMENT DATE' and last_payment_date between ? and ?)
      ]]></Statement>
      <Parameter name="organizationId" />
      <Parameter name="retailLocationId" />
      <Parameter name="accountStatus" />
      <Parameter name="accountType" />
      <Parameter name="baseAgeOn" />
      <Parameter name="argBusinessDateStart" />
      <Parameter name="argBusinessDateEnd" />
      <Parameter name="baseAgeOn" />
      <Parameter name="argBusinessDateStart" />
      <Parameter name="argBusinessDateEnd" />
      <Parameter name="baseAgeOn" />
      <Parameter name="argBusinessDateStart" />
      <Parameter name="argBusinessDateEnd" />
    </SQL>
    <SQL>
      <Statement dtype="String"><![CDATA[
        UNION
        SELECT cust_acct_id, last_name, first_name, party_id, telephone1, 
               setup_date, last_activity_date, last_payment_date, 
               cust_acct_statcode, acct_total, total_payment_amt, acct_balance, cust_acct_code 
        FROM (
          SELECT
            ca.cust_acct_id,
            crm.last_name,
            crm.first_name,
            ca.party_id,
            cpt.telephone_number as telephone1,
            ca.acct_setup_date as setup_date,
            ca.last_activity_date as last_activity_date,
            null as last_payment_date,
            null as cust_acct_statcode,
            null as acct_total,
            null as total_payment_amt,
            cia.amt as acct_balance,
            'ESCROW' as cust_acct_code
          FROM
            cat_escrow_acct ca

          INNER JOIN
            cat_escrow_acct_activity cia
          ON
            ca.organization_id = cia.organization_id
            AND ca.cust_acct_id = cia.cust_acct_id

          INNER JOIN
            crm_party crm
          ON
            ca.organization_id = crm.organization_id
            AND ca.party_id = crm.party_id
          
          LEFT OUTER JOIN
            crm_party_telephone cpt 
          ON 
            crm.party_id = cpt.party_id 
            AND crm.organization_id = cpt.organization_id 
            AND cpt.telephone_type = /*UPPER*/ 'Home'
          WHERE 
              cia.organization_id = ?
          AND cia.rtl_loc_id = ?
          AND 'ESCROW' LIKE ? ) dt
       WHERE ( ? = 'SETUP DATE' and setup_date between ? and ?) 
           OR (? = 'LAST ACTIVITY DATE' and last_activity_date between ? and ?)
      ]]></Statement>
      <Parameter name="organizationId" />
      <Parameter name="retailLocationId" />
      <Parameter name="accountType" />
      <Parameter name="baseAgeOn" />
      <Parameter name="argBusinessDateStart" />
      <Parameter name="argBusinessDateEnd" />
      <Parameter name="baseAgeOn" />
      <Parameter name="argBusinessDateStart" />
      <Parameter name="argBusinessDateEnd" />
    </SQL>    
    <Sort field="sortOrder" />
  </Query>
  <Query name="CREDIT_CARD_REPORT" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.data2.access.DefaultQueryResult</ResultClass>
    <ResultField name="wkstn_id" type="String" />
    <ResultField name="employee_id" type="String" />
    <ResultField name="trans_seq" type="String" />
    <ResultField name="business_date" type="Date" />
    <ResultField name="end_datetime" type="Timestamp" />
    <ResultField name="string_value" type="String" />
    <ResultField name="description" type="String" />
    <ResultField name="expr_date" type="String" />
    <ResultField name="auth_nbr" type="String" />
    <ResultField name="amt" type="BigDecimal" />
    <ResultField name="total" type="BigDecimal" />
    <SQL>
      <Statement dtype="String"><![CDATA[
          SELECT
            TTL.wkstn_id,
            CP.employee_id,
            TrnT.trans_seq,
            TrnT.business_date,
            TrnT.end_datetime,
            TLP.string_value,
            TndT.description,
            TCDTL.expr_date,
            TCDTL.auth_nbr,
            TTL.amt,
            TrnT.total
          FROM
            tnd_tndr TndT

          INNER JOIN
            ttr_tndr_lineitm TTL
          ON
            TndT.organization_Id = TTL.organization_Id
            AND TndT.tndr_id = /*UPPER*/ TTL.tndr_id

          INNER JOIN
            trn_trans TrnT
          ON
            TrnT.organization_id = TTL.organization_id
            AND TrnT.trans_seq = TTL.trans_seq
            AND TrnT.business_date = TTL.business_date
            AND TrnT.wkstn_id = TTL.wkstn_id
            AND TrnT.rtl_loc_id = TTL.rtl_loc_id

          INNER JOIN
            ttr_credit_debit_tndr_lineitm TCDTL
          ON
            TCDTL.organization_id = TTL.organization_id
            AND TCDTL.rtl_loc_id = TTL.rtl_loc_id
            AND TCDTL.wkstn_id = TTL.wkstn_id
            AND TCDTL.business_date = TTL.business_date
            AND TCDTL.trans_seq = TTL.trans_seq
            AND TCDTL.rtrans_lineitm_seq = TTL.rtrans_lineitm_seq

          INNER JOIN
            trl_rtrans_lineitm_p TLP
          ON
            TLP.organization_id = TTL.organization_id
            AND TLP.rtl_loc_id = TTL.rtl_loc_id
            AND TLP.wkstn_id = TTL.wkstn_id
            AND TLP.business_date = TTL.business_date
            AND TLP.trans_seq = TTL.trans_seq
            AND TLP.rtrans_lineitm_seq = TTL.rtrans_lineitm_seq
            AND TLP.property_code = 'MASKED_ACCOUNT_NUMBER'

          INNER JOIN
            crm_party CP
          ON
            TrnT.organization_id = CP.organization_id
            AND TrnT.operator_party_id = CP.party_id

          INNER JOIN
            trl_rtrans_lineitm TRL
          ON
            TCDTL.organization_id = TRL.organization_id
            AND TCDTL.rtl_loc_id = TRL.rtl_loc_id
            AND TCDTL.wkstn_id = TRL.wkstn_id
            AND TCDTL.business_date = TRL.business_date
            AND TCDTL.trans_seq = TRL.trans_seq
            AND TCDTL.rtrans_lineitm_seq = TRL.rtrans_lineitm_seq

          WHERE
            /*UPPER*/ TndT.tndr_typcode = 'CREDIT_CARD'
            AND TrnT.post_void_flag = '0'
            AND TndT.organization_id = ?
            AND TrnT.organization_id = ?
            AND TrnT.rtl_loc_id = ?
            AND TRL.void_flag <> '1'
      ]]></Statement>
      <Parameter name="organizationId" />
      <Parameter name="organizationId" />
      <Parameter name="retailLocationId" />
      <Expression parameters="startEmployee, endEmployee" trigger="startEmployee"><![CDATA[/*UPPER*/ CP.employee_id between ? AND ?]]></Expression>
      <Expression parameters="argBusinessDateStart, argBusinessDateEnd" trigger="argBusinessDateStart"><![CDATA[TrnT.trans_date BETWEEN ? AND ?]]></Expression>
      <Expression trigger="startReg"><![CDATA[TTL.wkstn_id >= ?]]></Expression>
      <Expression trigger="endReg"><![CDATA[TTL.wkstn_id <= ?]]></Expression>
    </SQL>
    <Suffix dtype="String"><![CDATA[ORDER BY TrnT.business_date, TrnT.end_datetime, TTL.wkstn_id]]></Suffix>
  </Query>
  <Query name="CUSTOMER_LIST_REPORT" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.pos.common.AddressQueryResult</ResultClass>
    <ResultField name="fullName" type="String" />
    <ResultField name="partyId" type="String" />
    <ResultField name="customerId" type="String" />
    <ResultField name="emailAddress" type="String" />
    <ResultField name="birthDate" type="Date" />
    <ResultField name="mailingListFlag" type="Boolean" />
    <ResultField name="telephone1" type="String" />
    <ResultField name="telephone2" type="String" />
    <ResultField name="employeeId" type="String" />
    <ResultField name="lastContactDate" type="Date" />
    <ResultField name="purchaseAmount" type="BigDecimal" />
    <ResultField name="returnAmount" type="BigDecimal" />
    <ResultField name="purchaseCount" type="Long" />
    <ResultField name="returnCount" type="Long" />
    <SQL>
      <Statement dtype="String"><![CDATA[
          SELECT
            CONCAT(MAX(CRP.first_name), CONCAT('::', MAX(CRP.last_name)))  AS fullName,
            MAX(CRP.party_id) AS partyId,
            CRP.cust_id AS customerId,
            MAX(CPT_EMAIL.email_address) AS emailAddress,
            MAX(CRP.birth_date) AS birthDate,
            MAX(CASE WHEN CRLP.contact_flag = '0' THEN 0 ELSE 1 END) AS mailingListFlag,
            MAX(CPT_HOME.telephone_number) AS telephone1,
            MAX(CPT_WORK.telephone_number) AS telephone2,
            MAX(CRP.employee_id) AS employeeId,
            MAX(TSL.business_date) AS lastActivityDate,
            COALESCE(SUM(CASE WHEN TSL.return_flag = '0' THEN TSL.net_amt END), 0) AS purchaseAmount,
            COALESCE(SUM(CASE WHEN TSL.return_flag = '1' THEN TSL.net_amt END), 0) AS returnAmount,
            COUNT(DISTINCT CASE WHEN TSL.return_flag = '0' THEN TSL.trans_seq END) AS purchaseCount,
            COUNT(DISTINCT CASE WHEN TSL.return_flag = '1' THEN TSL.trans_seq END) AS returnCount
          FROM
            rpt_trl_sale_lineitm_view TSL
          INNER JOIN trn_trans TT
            ON TSL.organization_id = TT.organization_id
            AND TSL.rtl_loc_id = TT.rtl_loc_id
            AND TSL.business_date = TT.business_date
            AND TSL.wkstn_id = TT.wkstn_id
            AND TSL.trans_seq = TT.trans_seq
          INNER JOIN crm_party CRP
            ON CRP.party_id = TSL.cust_party_id
            AND CRP.organization_id = TSL.organization_id
          LEFT OUTER JOIN crm_party_email CPT_EMAIL
            ON CRP.organization_id = CPT_EMAIL.organization_id
            AND CRP.party_id = CPT_EMAIL.party_id
            AND /*UPPER*/ CPT_EMAIL.email_type = /*UPPER*/ 'Home'
          LEFT OUTER JOIN crm_party_telephone CPT_HOME
            ON CRP.party_id = CPT_HOME.party_id
            AND CRP.organization_id = CPT_HOME.organization_id
            AND CPT_HOME.telephone_type = /*UPPER*/ 'Home'
          LEFT OUTER JOIN crm_party_telephone CPT_WORK
            ON CRP.party_id = CPT_WORK.party_id
            AND CRP.organization_id = CPT_WORK.organization_id
            AND CPT_WORK.telephone_type = /*UPPER*/ 'Work'
          LEFT OUTER JOIN crm_party_locale_information CRLP
            ON CRP.organization_id = CRLP.organization_id
            AND CRP.party_id = CRLP.party_id
            AND CRLP.PARTY_LOCALE_SEQ = 1
          LEFT OUTER JOIN trl_commission_mod TCM 
            ON TCM.organization_id = TSL.organization_id
            AND TCM.rtl_loc_id = TSL.rtl_loc_id
            AND TCM.wkstn_id = TSL.wkstn_id
            AND TCM.business_date = TSL.business_date
            AND TCM.trans_seq = TSL.trans_seq
            AND TCM.rtrans_lineitm_seq = TSL.rtrans_lineitm_seq
          INNER JOIN hrs_employee EMP
            ON EMP.organization_id = TCM.organization_id
            AND TCM.employee_party_id = EMP.party_id
          WHERE
            CRP.organization_id = ?
            AND COALESCE(TSL.void_flag,0) = 0
            AND TT.post_void_flag = 0
            AND CRP.party_id IS NOT NULL
      ]]></Statement>
      <Parameter name="organizationId" />
      <Expression trigger="partyIdFilter"><![CDATA[CRP.party_id = ?]]></Expression>
      <Expression trigger="assignedAssoc"><![CDATA[COALESCE(EMP.employee_id,'') LIKE ?]]></Expression>
      <Expression trigger="retailLocationId"><![CDATA[TSL.rtl_loc_id = ?]]></Expression>
      <Expression parameters="argBusinessDateStart, argBusinessDateEnd" trigger="argBusinessDateStart"><![CDATA[TT.trans_date BETWEEN ? AND ?]]></Expression>
      <Expression trigger="city"><![CDATA[COALESCE(/*UPPER*/ CRLP.city,'') LIKE ?]]></Expression>
      <Expression trigger="state"><![CDATA[COALESCE(/*UPPER*/ CRLP.state,'') LIKE ?]]></Expression>
      <Expression trigger="postalCode"><![CDATA[COALESCE(/*UPPER*/CRLP.postal_code,'') LIKE ?]]></Expression>
    </SQL>
    <Sort field="sortOrder" />
    <Having>
      <TestExpression dtype="String"><![CDATA[COALESCE(SUM(CASE WHEN TSL.return_flag='0' THEN TSL.net_amt END),0)]]></TestExpression>
      <Condition dtype="String">BETWEEN ? AND ?</Condition>
      <Parameter name="startAmtPurchased" />
      <Parameter name="endAmtPurchased" />
    </Having>
    <Having>
      <TestExpression dtype="String"><![CDATA[COALESCE(SUM(CASE WHEN TSL.return_flag='1' THEN ABS(TSL.net_amt) END),0)]]></TestExpression>
      <Condition dtype="String">BETWEEN ? AND ?</Condition>
      <Parameter name="startAmtReturned" />
      <Parameter name="endAmtReturned" />
    </Having>
    <Suffix dtype="String"><![CDATA[GROUP BY CRP.cust_id, CRP.party_id]]></Suffix>
  </Query>
  <Query name="CUSTOMER_LIST_ADDRESSES_SUBREPORT" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.pos.common.AddressQueryResult</ResultClass>
    <ResultField name="partyId" type="String" />
    <ResultField name="address1" type="String" />
    <ResultField name="address2" type="String" />
    <ResultField name="address3" type="String" />
    <ResultField name="address4" type="String" />
    <ResultField name="apartment" type="String" />
    <ResultField name="city" type="String" />
    <ResultField name="state" type="String" />
    <ResultField name="postalCode" type="String" />
    <ResultField name="country" type="String" />
    <ResultField name="addressType" type="String" />
    <ResultField name="primaryFlag" type="Boolean" />
    <SQL>
      <Statement dtype="String"><![CDATA[
          SELECT
            CRLP.party_id AS partyId,
            CRLP.address1 AS address1,
            CRLP.address2 AS address2,
            CRLP.address3 AS address3,
            CRLP.address4 AS address4,
            CRLP.apartment AS apartment,
            CRLP.city AS city,
            CRLP.state AS state,
            CRLP.postal_code AS postalCode,
            CRLP.country AS country,
            CRLP.address_type AS addressType,
            CRLP.primary_flag AS primaryFlag 
          FROM
            rpt_trl_sale_lineitm_view TSL
          INNER JOIN trn_trans TT
            ON TSL.organization_id = TT.organization_id
            AND TSL.rtl_loc_id = TT.rtl_loc_id
            AND TSL.business_date = TT.business_date
            AND TSL.wkstn_id = TT.wkstn_id
            AND TSL.trans_seq = TT.trans_seq
          INNER JOIN crm_party CRP
            ON CRP.party_id = TSL.cust_party_id
            AND CRP.organization_id = TSL.organization_id
          LEFT OUTER JOIN crm_party_email CPT_EMAIL
            ON CRP.organization_id = CPT_EMAIL.organization_id
            AND CRP.party_id = CPT_EMAIL.party_id
            AND /*UPPER*/ CPT_EMAIL.email_type = /*UPPER*/ 'Home'
          LEFT OUTER JOIN crm_party_telephone CPT_HOME
            ON CRP.party_id = CPT_HOME.party_id
            AND CRP.organization_id = CPT_HOME.organization_id
            AND CPT_HOME.telephone_type = /*UPPER*/ 'Home'
          LEFT OUTER JOIN crm_party_telephone CPT_WORK
            ON CRP.party_id = CPT_WORK.party_id
            AND CRP.organization_id = CPT_WORK.organization_id
            AND CPT_WORK.telephone_type = /*UPPER*/ 'Work'
          LEFT OUTER JOIN crm_party_locale_information CRLP
            ON CRP.organization_id = CRLP.organization_id
            AND CRP.party_id = CRLP.party_id
          LEFT OUTER JOIN trl_commission_mod TCM 
            ON TCM.organization_id = TSL.organization_id
            AND TCM.rtl_loc_id = TSL.rtl_loc_id
            AND TCM.wkstn_id = TSL.wkstn_id
            AND TCM.business_date = TSL.business_date
            AND TCM.trans_seq = TSL.trans_seq
            AND TCM.rtrans_lineitm_seq = TSL.rtrans_lineitm_seq
          LEFT OUTER JOIN hrs_employee EMP
            ON EMP.organization_id = TCM.organization_id
            AND TCM.employee_party_id = EMP.party_id
          WHERE
            CRP.organization_id = ?
            AND COALESCE(TSL.void_flag,0) = 0
            AND TT.post_void_flag = 0
            AND CRP.party_id IS NOT NULL
      ]]></Statement>
      <Parameter name="organizationId" />
      <Expression trigger="assignedAssoc"><![CDATA[COALESCE(EMP.employee_id,'') LIKE ?]]></Expression>
      <Expression trigger="retailLocationId"><![CDATA[TSL.rtl_loc_id = ?]]></Expression>
      <Expression parameters="argBusinessDateStart, argBusinessDateEnd" trigger="argBusinessDateStart"><![CDATA[TT.trans_date BETWEEN ? AND ?]]></Expression>
      <Expression trigger="city"><![CDATA[COALESCE(/*UPPER*/ CRLP.city,'') LIKE ?]]></Expression>
      <Expression trigger="state"><![CDATA[COALESCE(/*UPPER*/ CRLP.state,'') LIKE ?]]></Expression>
      <Expression trigger="postalCode"><![CDATA[/*UPPER*/ CRLP.postal_code LIKE ?]]></Expression>
    </SQL>
    <Sort field="CRLP.primary_flag DESC" />
    <Having>
      <TestExpression dtype="String"><![CDATA[COALESCE(SUM(CASE WHEN TSL.return_flag='0' THEN TSL.net_amt END),0)]]></TestExpression>
      <Condition dtype="String">BETWEEN ? AND ?</Condition>
      <Parameter name="startAmtPurchased" />
      <Parameter name="endAmtPurchased" />
    </Having>
    <Having>
      <TestExpression dtype="String"><![CDATA[COALESCE(SUM(CASE WHEN TSL.return_flag='1' THEN ABS(TSL.net_amt) END),0)]]></TestExpression>
      <Condition dtype="String">BETWEEN ? AND ?</Condition>
      <Parameter name="startAmtReturned" />
      <Parameter name="endAmtReturned" />
    </Having>
    <Suffix dtype="String"><![CDATA[GROUP BY CRLP.party_id, CRLP.address1, CRLP.address2, CRLP.address3, CRLP.address4, CRLP.apartment, CRLP.city, CRLP.state, CRLP.postal_code, CRLP.country, CRLP.address_type, CRLP.primary_flag]]></Suffix>
  </Query>
  <Query name="CUSTOMER_LIST_MERCH_SUBREPORT" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.data2.access.DefaultQueryResult</ResultClass>
    <ResultField name="partyId" type="String" />
    <ResultField name="merchLv" type="String" />
    <ResultField name="itemCount" type="BigDecimal" />
    <ResultField name="totalAmount" type="BigDecimal" />
    <ResultField name="returnFlag" type="BigDecimal" />
    <ResultField name="description" type="String" />
    <SQL>
      <Statement dtype="String"><![CDATA[
        SELECT partyId, merchLv, sum(quantity) as itemCount, sum(net_amt) as totalAmount, returnFlag, description from 
        (
          SELECT distinct
            RTRL.cust_party_id as partyId,
            (CASE
                WHEN ?='MERCHLEVEL1' THEN ITM.merch_level_1
                WHEN ?='MERCHLEVEL2' THEN ITM.merch_level_2
             END) AS merchLv,
            itm.item_id,
            CASE WHEN TSL.return_flag=1 THEN TSL.quantity*-1 ELSE TSL.quantity END as quantity,
            TRL.net_amt,
            TSL.return_flag as returnFlag,         
            (SELECT description FROM
                itm_merch_hierarchy dt1
               WHERE organization_id = ? AND 
                  (?='MERCHLEVEL1' AND hierarchy_id      = /*UPPER*/ ITM.merch_level_1) OR
                  (?='MERCHLEVEL2' AND hierarchy_id      = /*UPPER*/ ITM.merch_level_2) 
            ) AS description
        FROM trn_trans TRN
        
        INNER JOIN trl_sale_lineitm TRL
            ON TRN.organization_id = TRL.organization_id
            AND TRN.rtl_loc_id     = TRL.rtl_loc_id
            AND TRN.wkstn_id       = TRL.wkstn_id
            AND TRN.business_date  = TRL.business_date
            AND TRN.trans_seq      = TRL.trans_seq
        INNER JOIN trl_rtrans RTRL
            ON TRN.organization_id = RTRL.organization_id
            AND TRN.rtl_loc_id     = RTRL.rtl_loc_id
            AND TRN.wkstn_id       = RTRL.wkstn_id
            AND TRN.business_date  = RTRL.business_date
            AND TRN.trans_seq      = RTRL.trans_seq
        INNER JOIN rpt_trl_sale_lineitm_view TSL
            ON TSL.organization_id = TRN.organization_id
            AND TSL.rtl_loc_id = TRN.rtl_loc_id
            AND TSL.business_date = TRN.business_date
            AND TSL.wkstn_id = TRN.wkstn_id
            AND TSL.trans_seq = TRN.trans_seq  
            AND TSL.rtrans_lineitm_seq = TRL.rtrans_lineitm_seq          
        INNER JOIN trl_commission_mod TCM 
            ON TCM.organization_id = TSL.organization_id
            AND TCM.rtl_loc_id = TSL.rtl_loc_id
            AND TCM.wkstn_id = TSL.wkstn_id
            AND TCM.business_date = TSL.business_date
            AND TCM.trans_seq = TSL.trans_seq
            AND TCM.rtrans_lineitm_seq = TSL.rtrans_lineitm_seq
        INNER JOIN hrs_employee EMP
            ON EMP.organization_id = TCM.organization_id
            AND TCM.employee_party_id = EMP.party_id              
        INNER JOIN crm_party CRP
            ON CRP.party_id         = RTRL.cust_party_id
            AND CRP.organization_id = RTRL.organization_id
        INNER JOIN crm_party_locale_information CRLP
            ON CRP.organization_id = CRLP.organization_id
            AND CRP.party_id       = CRLP.party_id             
        INNER JOIN
            itm_item ITM
            ON TRN.organization_id    = ITM.organization_id
            AND /*UPPER*/ TRL.item_id           = ITM.item_id

            WHERE
                TRN.organization_id = ?
                AND TRN.rtl_loc_id = ?
                AND RTRL.cust_party_id IS NOT NULL
                AND (? = 'MERCHLEVEL1' or ? = 'MERCHLEVEL2')
                AND /*UPPER*/ TRN.trans_statcode ='COMPLETE' 
                AND (COALESCE(/*UPPER*/ CRLP.city,'') LIKE ? )
                AND (COALESCE(/*UPPER*/ CRLP.postal_code,'') LIKE ? )
                AND (COALESCE(EMP.employee_id,'') LIKE ? )
                AND (COALESCE(/*UPPER*/ CRLP.state,'') LIKE ? )
                
      ]]></Statement>
      <Parameter name="merchandiseLevel" />
      <Parameter name="merchandiseLevel" />
      <Parameter name="argOrganizationId" />
      <Parameter name="merchandiseLevel" />
      <Parameter name="merchandiseLevel" />
      <Parameter name="argOrganizationId" />
      <Parameter name="retailLocationId" />
      <Parameter name="merchandiseLevel" />
      <Parameter name="merchandiseLevel" />
      <Parameter name="city" />
      <Parameter name="postalCode" />
      <Parameter name="assignedAssoc" />
      <Parameter name="state" />
      <Expression parameters="argBusinessDateStart, argBusinessDateEnd" trigger="argBusinessDateStart"><![CDATA[TRN.trans_date BETWEEN ? AND ? ]]></Expression>
    </SQL>
    <Sort field="partyId, merchLv, description" />
    <Having>
      <TestExpression dtype="String"><![CDATA[COALESCE((CASE WHEN returnFlag='0' THEN sum(net_amt) END),0)]]></TestExpression>
      <Condition dtype="String">BETWEEN ? AND ?</Condition>
      <Parameter name="startAmtPurchased" />
      <Parameter name="endAmtPurchased" />
    </Having>
    <Having>
      <TestExpression dtype="String"><![CDATA[COALESCE((CASE WHEN returnFlag='1' THEN ABS(sum(net_amt)) END),0)]]></TestExpression>
      <Condition dtype="String">BETWEEN ? AND ?</Condition>
      <Parameter name="startAmtReturned" />
      <Parameter name="endAmtReturned" />
    </Having>
    <Suffix dtype="String"><![CDATA[) dt2 GROUP BY partyId, merchLv, description, returnFlag]]></Suffix>
  </Query>
  <Query name="CUSTOMER_LIST_MERCH_ITEM_SUBREPORT" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.data2.access.DefaultQueryResult</ResultClass>
    <ResultField name="partyId" type="String" />
    <ResultField name="merchLv" type="String" />
    <ResultField name="itemCount" type="BigDecimal" />
    <ResultField name="totalAmount" type="BigDecimal" />
    <ResultField name="returnFlag" type="BigDecimal" />
    <ResultField name="description" type="String" />
    <SQL>
      <Statement dtype="String"><![CDATA[
        SELECT partyId,
          merchLv,
          sum(quantity) as itemCount,
          sum(totalAmount) as totalAmount,
          returnFlag,
          description
        FROM
          (SELECT distinct 
            RTRL.cust_party_id AS partyId,
            itm.item_id AS merchLv,
            CASE WHEN TSL.return_flag=1 THEN TSL.quantity*-1 ELSE TSL.quantity END as quantity,
            TRL.net_amt as totalAmount,
            TSL.return_flag AS returnFlag,
            itm.description
          FROM trn_trans TRN
          INNER JOIN trl_sale_lineitm TRL
            ON TRN.organization_id = TRL.organization_id
            AND TRN.rtl_loc_id     = TRL.rtl_loc_id
            AND TRN.wkstn_id       = TRL.wkstn_id
            AND TRN.business_date  = TRL.business_date
            AND TRN.trans_seq      = TRL.trans_seq
          INNER JOIN trl_rtrans RTRL
            ON TRN.organization_id = RTRL.organization_id
            AND TRN.rtl_loc_id     = RTRL.rtl_loc_id
            AND TRN.wkstn_id       = RTRL.wkstn_id
            AND TRN.business_date  = RTRL.business_date
            AND TRN.trans_seq      = RTRL.trans_seq
          INNER JOIN rpt_trl_sale_lineitm_view TSL
            ON TSL.organization_id = TRN.organization_id
            AND TSL.rtl_loc_id     = TRN.rtl_loc_id
            AND TSL.business_date  = TRN.business_date
            AND TSL.wkstn_id       = TRN.wkstn_id
            AND TSL.trans_seq      = TRN.trans_seq
            AND TSL.rtrans_lineitm_seq = TRL.rtrans_lineitm_seq
          INNER JOIN trl_commission_mod TCM
            ON TCM.organization_id     = TSL.organization_id
            AND TCM.rtl_loc_id         = TSL.rtl_loc_id
            AND TCM.wkstn_id           = TSL.wkstn_id
            AND TCM.business_date      = TSL.business_date
            AND TCM.trans_seq          = TSL.trans_seq
            AND TCM.rtrans_lineitm_seq = TSL.rtrans_lineitm_seq
          INNER JOIN hrs_employee EMP
            ON EMP.organization_id    = TCM.organization_id
            AND TCM.employee_party_id = EMP.party_id
          INNER JOIN crm_party CRP
            ON CRP.party_id         = RTRL.cust_party_id
            AND CRP.organization_id = RTRL.organization_id
          INNER JOIN crm_party_locale_information CRLP
            ON CRP.organization_id = CRLP.organization_id
            AND CRP.party_id       = CRLP.party_id
          INNER JOIN
            itm_item ITM
            ON TRN.organization_id    = ITM.organization_id
            AND /*UPPER*/ TRL.item_id           = ITM.item_id
      
          WHERE TRN.organization_id = ?
          AND TRN.rtl_loc_id        = ?
          AND RTRL.cust_party_id   IS NOT NULL
          AND ? = 'ITEM'
          AND /*UPPER*/ TRN.trans_statcode ='COMPLETE'
          AND (COALESCE(/*UPPER*/ CRLP.city,'') LIKE ? )
          AND (COALESCE(/*UPPER*/ CRLP.postal_code,'') LIKE ? )
          AND (COALESCE(EMP.employee_id,'') LIKE ? )
          AND (COALESCE(/*UPPER*/ CRLP.state,'') LIKE ? )
      ]]></Statement>
      <Parameter name="argOrganizationId" />
      <Parameter name="retailLocationId" />
      <Parameter name="merchandiseLevel" />
      <Parameter name="city" />
      <Parameter name="postalCode" />
      <Parameter name="assignedAssoc" />
      <Parameter name="state" />
      <Expression parameters="argBusinessDateStart, argBusinessDateEnd" trigger="argBusinessDateStart"><![CDATA[TRN.trans_date BETWEEN ? AND ? ]]></Expression>
    </SQL>
    <Sort field="partyId, merchLv" />
    <Having>
      <TestExpression dtype="String"><![CDATA[COALESCE((CASE WHEN returnFlag='0' THEN sum(totalAmount) END),0)]]></TestExpression>
      <Condition dtype="String">BETWEEN ? AND ?</Condition>
      <Parameter name="startAmtPurchased" />
      <Parameter name="endAmtPurchased" />
    </Having>
    <Having>
      <TestExpression dtype="String"><![CDATA[COALESCE((CASE WHEN returnFlag='1' THEN ABS(sum(totalAmount)) END),0)]]></TestExpression>
      <Condition dtype="String">BETWEEN ? AND ?</Condition>
      <Parameter name="startAmtReturned" />
      <Parameter name="endAmtReturned" />
    </Having>
    <Suffix dtype="String"><![CDATA[) dt GROUP BY partyId, merchLv, returnFlag, description]]></Suffix>
  </Query>
  <Query name="EMPLOYEE_PERFORMANCE_REPORT" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.data2.access.DefaultQueryResult</ResultClass>
    <ResultField name="employee_id" type="String" />
    <ResultField name="cust_name" type="String" />
    <ResultField name="sch_hour" type="BigDecimal" />
    <ResultField name="wk_hour" type="BigDecimal" />
    <ResultField name="diff" type="BigDecimal" />
    <ResultField name="net_sale" type="BigDecimal" />
    <ResultField name="sales_per_trans" type="BigDecimal" />
    <ResultField name="sales_per_hour" type="BigDecimal" />
    <ResultField name="num_of_sales" type="Integer" />
    <SQL>
      <Statement dtype="String"><![CDATA[
          SELECT employee_id, 
                 cust_name, 
                 sum(sch_hour)  AS sch_hour, 
                 wk_hour        AS wk_hour,
                 wk_hour - SUM(sch_hour)       AS diff,
                 net_sale                      AS net_sale,
                 net_sale/num_of_sales         AS sales_per_trans,
                 net_sale/Nullif((wk_hour/3600000),0) AS sales_per_hour,
                 num_of_sales                  AS num_of_sales
          FROM (
             SELECT 
                 employee_id, 
                 cust_name, 
                 sch_hour, 
                 sum(wk_hour) as wk_hour, 
                 sum(net_sale) as net_sale, 
                 sum(num_of_sales) as num_of_sales
             FROM (
                SELECT p.employee_id as employee_id,
                       CASE WHEN COALESCE(/*UPPER*/ p.first_name,' ') <> ' ' OR COALESCE(/*UPPER*/ p.last_name,' ') <> ' ' 
                       THEN CONCAT(p.first_name, CONCAT('::', p.last_name)) END
                        AS cust_name,
                        hsc.schedule_seq AS schedule_seq,
                        hsc.schedule_duration AS sch_hour,
                        max(te.duration)       AS wk_hour,
                        SUM((tsl.net_amt))*(nullif((tcm.percentage_of_item),0)) AS net_sale,
                        COUNT(DISTINCT tsl.trans_seq) AS num_of_sales
                FROM crm_party p
        
                LEFT OUTER JOIN sch_schedule hsc
                    ON hsc.organization_id = p.organization_id
                    AND hsc.employee_id    = /*UPPER*/ p.employee_id
                RIGHT OUTER JOIN thr_timecard_entry te
                    ON te.organization_id = p.organization_id
                    AND te.party_id = p.party_id
                JOIN trl_commission_mod tcm
                    ON tcm.organization_id    = te.organization_id
                    AND tcm.employee_party_id = te.party_id
                    AND tcm.business_date     = te.business_date
                JOIN rpt_sale_line tsl
                    ON tcm.organization_id     = tsl.organization_id
                    AND tcm.wkstn_id           = tsl.wkstn_id
                    AND tcm.trans_seq          = tsl.trans_seq
                    AND tcm.business_date      = tsl.business_date
                    AND tcm.rtl_loc_id         = tsl.rtl_loc_id
                    AND tcm.rtrans_lineitm_seq = tsl.rtrans_lineitm_seq
                    AND tcm.employee_party_id IS NOT NULL
                JOIN trl_rtrans_lineitm trl
                    ON trl.organization_id     = tsl.organization_id
                    AND trl.wkstn_id           = tsl.wkstn_id
                    AND trl.trans_seq          = tsl.trans_seq
                    AND trl.business_date      = tsl.business_date
                    AND trl.rtl_loc_id         = tsl.rtl_loc_id
                    AND trl.rtrans_lineitm_seq = tsl.rtrans_lineitm_seq
                JOIN trn_trans trn
                    ON trl.organization_id    = trn.organization_id
                    AND trl.wkstn_id          = trn.wkstn_id
                    AND trl.trans_seq         = trn.trans_seq
                    AND trl.business_date     = trn.business_date
                    AND trl.rtl_loc_id        = trn.rtl_loc_id
                    AND /*UPPER*/ trn.trans_typcode     = 'RETAIL_SALE'
                    AND trn.begin_datetime BETWEEN te.clock_in_timestamp AND te.clock_out_timestamp
                    AND trn.end_datetime   BETWEEN te.clock_in_timestamp AND te.clock_out_timestamp
                    AND trn.trans_date  BETWEEN ? AND ?
       ]]></Statement>
    </SQL>
    <SQL>
      <Statement dtype="String"><![CDATA[
          WHERE
            te.duration IS NOT NULL
            AND te.organization_id = ?
            AND (
              hsc.void_flag IS NULL
              OR hsc.void_flag <> '1'
            )
            AND (hsc.business_date BETWEEN ? AND ?)
      ]]></Statement>
      <Parameter name="argBusinessDateStart" />
      <Parameter name="argBusinessDateEnd" />
      <Parameter name="organizationId" />
      <Parameter name="argBusinessDateStart" />
      <Parameter name="argBusinessDateEnd" />
      <Expression trigger="empId"><![CDATA[/*UPPER*/ p.employee_id LIKE ?]]></Expression>
      <Expression trigger="workCode"><![CDATA[/*UPPER*/ te.work_code LIKE ?]]></Expression>
      <Expression trigger="retailLocationId"><![CDATA[te.rtl_loc_id = ?]]></Expression>
      <Expression trigger="@storeList"><![CDATA[hrs.rtl_loc_id IN ?]]></Expression>
    </SQL>
    <Suffix dtype="String"><![CDATA[
        GROUP BY
            p.employee_id, p.last_name, p.first_name, te.timecard_entry_id, hsc.schedule_seq, hsc.schedule_duration,tcm.percentage_of_item  
              ) dt1
              GROUP BY 
                employee_id, cust_name, schedule_seq, sch_hour 
                 ) dt2
                   GROUP BY employee_id, cust_name, wk_hour, net_sale, num_of_sales
                   ORDER BY employee_id]]></Suffix>
  </Query>
  <Query name="DAILY_SALES_REPORT" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.data2.access.DefaultQueryResult</ResultClass>
    <ResultField name="trans_date" type="Date" />
    <ResultField name="wkstn_id" type="String" />
    <ResultField name="trans_seq" type="String" />
    <ResultField name="rtrans_lineitm_seq" type="String" />
    <ResultField name="rtrans_lineitm_1" type="BigDecimal" />
    <ResultField name="item_id" type="String" />
    <ResultField name="commission_mod_seq_nbr" type="String" />
    <ResultField name="employee_id" type="String" />
    <ResultField name="quantity" type="BigDecimal" />
    <ResultField name="price_change_amt" type="BigDecimal" />
    <ResultField name="discounts" type="BigDecimal" />
    <ResultField name="net_sales" type="BigDecimal" />
    <ResultField name="net_sale_per_employee" type="BigDecimal" />
    <ResultField name="item_price" type="BigDecimal" />
    <ResultField name="item_description" type="String" />
    <SQL>
      <Statement dtype="String"><![CDATA[
          SELECT
            tsl.trans_date,
            tsl.wkstn_id,
            tsl.trans_seq,
            tsl.rtrans_lineitm_seq,
            CASE WHEN tsl.rtrans_lineitm_seq = 1 THEN 1 ELSE 0 END AS rtrans_lineitm_1,
            tsl.item_id,
            COALESCE(com.commission_mod_seq_nbr, 1),
            COALESCE(crp.employee_id,' '),
            tsl.quantity,
            CASE WHEN COALESCE(tsl.override_amt,0) = 0 OR COALESCE(tsl.quantity,tsl.actual_quantity,0) = 0 THEN 0 ELSE COALESCE(tsl.unit_price,0) + COALESCE(tsl.discount_amt,0)/COALESCE(tsl.quantity,tsl.actual_quantity) END AS price_change_amt,
            CASE WHEN COALESCE(tsl.quantity,tsl.actual_quantity,0) = 0 THEN 0 ELSE COALESCE(tsl.discount_amt/COALESCE(tsl.quantity,tsl.actual_quantity),0) end AS discounts,
            COALESCE(tsl.unit_price,0) * tsl.quantity AS net_sales,
            COALESCE(tsl.unit_price, 0) * tsl.quantity * COALESCE(percentage_of_item,1) AS net_sale_per_employee,
            COALESCE(tsl.unit_price,0) + CASE WHEN COALESCE(tsl.quantity,tsl.actual_quantity,0) = 0 THEN 0 ELSE COALESCE(tsl.discount_amt,0)/COALESCE(tsl.quantity,tsl.actual_quantity) + COALESCE(tsl.override_amt,0)/COALESCE(tsl.quantity,tsl.actual_quantity) end AS item_price,
            tsl.item_desc AS item_description
          FROM
            rpt_sale_line tsl

          LEFT OUTER JOIN
            trl_commission_mod com
          ON
            com.organization_id = tsl.organization_id
            AND com.rtl_loc_id = tsl.rtl_loc_id
            AND com.wkstn_id = tsl.wkstn_id
            AND com.business_date = tsl.business_date
            AND com.trans_seq = tsl.trans_seq
            AND com.rtrans_lineitm_seq = tsl.rtrans_lineitm_seq

          LEFT OUTER JOIN
            crm_party crp
          ON
            com.organization_id = crp.organization_id
            AND com.employee_party_id = crp.party_id

          WHERE
            tsl.organization_id = ?
            AND tsl.rtl_loc_id = ?
            AND tsl.trans_date BETWEEN ? AND ?
            AND /*UPPER*/ tsl.trans_statcode = 'COMPLETE'
            AND /*UPPER*/ tsl.sale_lineitm_typcode IN ('SALE','SEND_SALE','SPECIAL_ORDER','LAYAWAY', 'PRESALE')
      ]]></Statement>
      <Parameter name="organizationId" />
      <Parameter name="retailLocationId" />
      <Parameter name="argBusinessDateStart" />
      <Parameter name="argBusinessDateEnd" />
      <Expression trigger="employeeId"><![CDATA[/*UPPER*/ crp.employee_id LIKE ?]]></Expression>
    </SQL>
    <Suffix dtype="String"><![CDATA[ORDER BY tsl.trans_date, tsl.wkstn_id, tsl.trans_seq, tsl.rtrans_lineitm_seq, tsl.item_id, crp.employee_id]]></Suffix>
  </Query>
  <Query name="DAILY_SALES_COUNTS_SUMMARY_REPORT" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.data2.access.DefaultQueryResult</ResultClass>
    <ResultField name="displayOrder" type="String" />
    <ResultField name="description" type="String" />
    <ResultField name="count" type="BigDecimal" />
    <SQL>
      <Statement dtype="String"><![CDATA[

          SELECT
            0,
            '_rptDailySalesReportTransCountHeading' AS description,
            COUNT(tt.trans_seq) AS count
          FROM
            trn_trans tt
          WHERE
            tt.organization_id = ?
            AND tt.rtl_loc_id = ?
            AND tt.trans_date = ?
            AND /*UPPER*/ tt.trans_statcode = 'COMPLETE'
            AND tt.post_void_flag = '0'
            AND /*UPPER*/ tt.trans_typcode = 'RETAIL_SALE'
      ]]></Statement>
      <Parameter name="organizationId" />
      <Parameter name="retailLocationId" />
      <Parameter name="argBusinessDateStart" />
    </SQL>
    <SQL>
      <Statement dtype="String"><![CDATA[

          UNION ALL

          SELECT
            1,
            '_rptDailySalesReportPostVoidHeading' AS description,
            COUNT(tt.trans_seq) AS amount
          FROM
            trn_trans tt
          WHERE
            tt.organization_id = ?
            AND tt.rtl_loc_id = ?
            AND tt.trans_date = ?
            AND /*UPPER*/ tt.trans_statcode = 'COMPLETE'
            AND tt.post_void_flag = '1'
            AND /*UPPER*/ tt.trans_typcode = 'RETAIL_SALE'
      ]]></Statement>
      <Parameter name="organizationId" />
      <Parameter name="retailLocationId" />
      <Parameter name="argBusinessDateStart" />
    </SQL>
    <SQL>
      <Statement dtype="String"><![CDATA[

          UNION ALL

          SELECT
            2,
            '_rptDailySalesReportPostVoidOtherHeading' AS description,
            COUNT(tt.trans_seq) AS amount
          FROM
            trn_trans tt
          WHERE
            tt.organization_id = ?
            AND tt.rtl_loc_id = ?
            AND tt.trans_date = ?
            AND /*UPPER*/ tt.trans_statcode = 'COMPLETE'
            AND tt.post_void_flag = '1'
            AND /*UPPER*/ tt.trans_typcode <> 'RETAIL_SALE'
      ]]></Statement>
      <Parameter name="organizationId" />
      <Parameter name="retailLocationId" />
      <Parameter name="argBusinessDateStart" />
    </SQL>
    <SQL>
      <Statement dtype="String"><![CDATA[

          UNION ALL

          SELECT
            3,
            '_rptDailySalesReportLineVoidItemHead' AS description,
            COUNT(tt.trans_seq) AS amount
          FROM
            trl_rtrans_lineitm tt

          INNER JOIN
            trn_trans trn
          ON
            trn.organization_id = tt.organization_id
            AND trn.business_date = tt.business_date
            AND trn.wkstn_id = tt.wkstn_id
            AND trn.rtl_loc_id = tt.rtl_loc_id
            AND trn.trans_seq = tt.trans_seq

          WHERE
            tt.organization_id = ?
            AND tt.rtl_loc_id = ?
            AND trn.trans_date = ?
            AND /*UPPER*/ tt.rtrans_lineitm_typcode = 'ITEM'
            AND tt.void_flag = '1'
            AND /*UPPER*/ trn.trans_statcode = 'COMPLETE'
            AND trn.post_void_flag = '0'
            AND /*UPPER*/ trn.trans_typcode = 'RETAIL_SALE'
      ]]></Statement>
      <Parameter name="organizationId" />
      <Parameter name="retailLocationId" />
      <Parameter name="argBusinessDateStart" />
    </SQL>
    <SQL>
      <Statement dtype="String"><![CDATA[

          UNION ALL

          SELECT
            4,
            '_rptDailySalesReportLineVoidTenderHead' AS description,
            count(tt.trans_seq) AS amount
          FROM
            trl_rtrans_lineitm tt

          INNER JOIN
            trn_trans trn
          ON
            trn.organization_id = tt.organization_id
            AND trn.business_date = tt.business_date
            AND trn.wkstn_id = tt.wkstn_id
            AND trn.rtl_loc_id = tt.rtl_loc_id
            AND trn.trans_seq = tt.trans_seq

          WHERE
            tt.organization_id = ?
            AND tt.rtl_loc_id = ?
            AND trn.trans_date = ?
            AND /*UPPER*/ tt.rtrans_lineitm_typcode = 'TENDER'
            AND tt.void_flag = '1'
            AND /*UPPER*/ trn.trans_statcode = 'COMPLETE'
            AND trn.post_void_flag = '0'
            AND /*UPPER*/ trn.trans_typcode = 'RETAIL_SALE'
      ]]></Statement>
      <Parameter name="organizationId" />
      <Parameter name="retailLocationId" />
      <Parameter name="argBusinessDateStart" />
    </SQL>
    <Suffix dtype="String"><![CDATA[ORDER BY 1]]></Suffix>
  </Query>
  <Query name="DAILY_SALES_SALES_SUMMARY_REPORT" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.data2.access.DefaultQueryResult</ResultClass>
    <ResultField name="description" type="String" />
    <ResultField name="amount" type="BigDecimal" />
    <SQL>
      <Statement dtype="String"><![CDATA[
          SELECT
            '_rptDailySalesCashSales' AS description,
            COALESCE(SUM(net_amt)+SUM(discount_amt),0) AS amount
          FROM
            rpt_sale_line
          WHERE
            organization_id = ?
            AND rtl_loc_id = ?
            AND trans_date = ?
            AND /*UPPER*/ trans_statcode = 'COMPLETE'
            AND return_flag = '0'
            AND /*UPPER*/ sale_lineitm_typcode IN ('SALE', 'SEND_SALE', 'ORDER')
      ]]></Statement>
      <Parameter name="organizationId" />
      <Parameter name="retailLocationId" />
      <Parameter name="argBusinessDateStart" />
    </SQL>
    <SQL>
      <Statement dtype="String"><![CDATA[
          UNION ALL

          SELECT
            '_rptDailySalesCashReturns' AS description,
            COALESCE(SUM(net_amt)+SUM(discount_amt),0) AS amount
          FROM
            rpt_sale_line
          WHERE
            organization_id = ?
            AND rtl_loc_id = ?
            AND trans_date = ?
            AND /*UPPER*/ trans_statcode = 'COMPLETE'
            AND return_flag = '1'
      ]]></Statement>
      <Parameter name="organizationId" />
      <Parameter name="retailLocationId" />
      <Parameter name="argBusinessDateStart" />
    </SQL>
    <SQL>
      <Statement dtype="String"><![CDATA[
          UNION ALL

          SELECT
            '_rptDailySalesCashMarkdowns' AS description,
            COALESCE(SUM(COALESCE(discount_amt,0))* -1,0) AS amount
          FROM
            rpt_sale_line
          WHERE
            organization_id = ?
            AND rtl_loc_id = ?
            AND trans_date = ?
            AND /*UPPER*/ trans_statcode = 'COMPLETE'
            AND QUANTITY <> 0
            AND /*UPPER*/ sale_lineitm_typcode IN ('SALE', 'SEND_SALE', 'ORDER')
      ]]></Statement>
      <Parameter name="organizationId" />
      <Parameter name="retailLocationId" />
      <Parameter name="argBusinessDateStart" />
    </SQL>
    <SQL>
      <Statement dtype="String"><![CDATA[
          UNION ALL

          SELECT
            '_rptDailySalesCashTotalTax' AS description,
            COALESCE(SUM(tax_amt),0) AS amount
          FROM
            trl_tax_lineitm ttl

          INNER JOIN
            tax_tax_group_rule ttgr
          ON
            ttl.organization_id = ttgr.organization_id
            AND /*UPPER*/ ttl.tax_group_id = ttgr.tax_group_id
            AND /*UPPER*/ ttl.tax_loc_id = ttgr.tax_loc_id
            AND ttl.tax_rule_seq_nbr = ttgr.tax_rule_seq_nbr

          INNER JOIN
            trn_trans tt
          ON
            ttl.organization_id = tt.organization_id
            AND ttl.rtl_loc_id = tt.rtl_loc_id
            AND ttl.wkstn_id = tt.wkstn_id
            AND ttl.business_date = tt.business_date
            AND ttl.trans_seq = tt.trans_seq

          INNER JOIN
            trl_rtrans_lineitm l
          ON
            ttl.organization_id = l.organization_id
            AND ttl.rtl_loc_id = l.rtl_loc_id
            AND ttl.wkstn_id = l.wkstn_id
            AND ttl.trans_seq = l.trans_seq
            AND ttl.business_date = l.business_date
            AND ttl.rtrans_lineitm_seq = l.rtrans_lineitm_seq

          WHERE
            ttl.rtl_loc_id = ?
            AND ttl.organization_id = ?
            AND tt.trans_date = ?
            AND /*UPPER*/ tt.trans_statcode = 'COMPLETE'
            AND tt.post_void_flag = '0'
            AND l.void_flag = '0'
       ]]></Statement>
      <Parameter name="retailLocationId" />
      <Parameter name="organizationId" />
      <Parameter name="argBusinessDateStart" />
    </SQL>
  </Query>
  <Query name="DAILY_SALES_TENDERS_SUMMARY_REPORT" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.data2.access.DefaultQueryResult</ResultClass>
    <ResultField name="description" type="String" />
    <ResultField name="amount" type="BigDecimal" />
    <SQL>
      <Statement dtype="String"><![CDATA[
          SELECT
            '_rptDailySalesCashSales' AS description,
            SUM(amt) AS amount
          FROM
            ttr_tndr_lineitm ttl

          INNER JOIN
            trn_trans tt
          ON
            ttl.business_date = tt.business_date
            AND ttl.rtl_loc_id = tt.rtl_loc_id
            AND ttl.trans_seq = tt.trans_seq
            AND ttl.wkstn_id = tt.wkstn_id
            AND ttl.organization_id = tt.organization_id

          INNER JOIN
            trl_rtrans_lineitm trl
          ON
            ttl.organization_id = trl.organization_id
            AND ttl.rtrans_lineitm_seq = trl.rtrans_lineitm_seq
            AND ttl.rtl_loc_id = trl.rtl_loc_id
            AND ttl.wkstn_id = trl.wkstn_id
            AND ttl.business_date = trl.business_date
            AND ttl.trans_seq = trl.trans_seq

          WHERE
            ttl.organization_id = ?
            AND ttl.rtl_loc_id = ?
            AND tt.trans_date = ?
            AND (
              /*UPPER*/ ttl.tndr_statcode = /*UPPER*/ 'Tender'
              OR /*UPPER*/ ttl.tndr_statcode = /*UPPER*/ 'Change'
            )
            AND tt.post_void_flag = '0'
            AND /*UPPER*/ tt.trans_statcode = 'COMPLETE'
            AND trl.void_flag = '0'
            AND /*UPPER*/ tt.trans_typcode = 'RETAIL_SALE'
            AND /*UPPER*/ ttl.tndr_id NOT IN ('ACCOUNT_CREDIT')
       ]]></Statement>
      <Parameter name="organizationId" />
      <Parameter name="retailLocationId" />
      <Parameter name="argBusinessDateStart" />
    </SQL>
    <SQL>
      <Statement dtype="String"><![CDATA[
          UNION ALL

          SELECT
            '_rptDailySalesCashRefunds' AS description,
            COALESCE(SUM(amt), 0)       AS amount
          FROM
            ttr_tndr_lineitm ttl

          INNER JOIN
            trn_trans tt
          ON
            ttl.organization_id = tt.organization_id
            AND ttl.rtl_loc_id = tt.rtl_loc_id
            AND ttl.wkstn_id = tt.wkstn_id
            AND ttl.trans_seq = tt.trans_seq
            AND ttl.business_date = tt.business_date

          INNER JOIN
            trl_rtrans_lineitm trl
          ON
            ttl.organization_id = trl.organization_id
            AND ttl.rtl_loc_id = trl.rtl_loc_id
            AND ttl.wkstn_id = trl.wkstn_id
            AND ttl.trans_seq = trl.trans_seq
            AND ttl.rtrans_lineitm_seq = trl.rtrans_lineitm_seq
            AND ttl.business_date = trl.business_date

          WHERE
            tt.trans_date = ?
            AND /*UPPER*/ tndr_statcode = /*UPPER*/ 'Refund'
            AND /*UPPER*/ tt.trans_statcode = 'COMPLETE'
            AND tt.post_void_flag = '0'
            AND trl.void_flag = '0'
            AND ttl.rtl_loc_id = ?
      ]]></Statement>
      <Parameter name="argBusinessDateStart" />
      <Parameter name="retailLocationId" />
    </SQL>
    <SQL>
      <Statement dtype="String"><![CDATA[
          UNION ALL

          SELECT
            '_paidIn' AS description,
            COALESCE(SUM(ttct.amt), 0) AS amount
          FROM
            tsn_tndr_control_trans ttct

          INNER JOIN
            trn_trans tt
          ON
            ttct.organization_id = tt.organization_id
            AND ttct.rtl_loc_id = tt.rtl_loc_id
            AND ttct.wkstn_id = tt.wkstn_id
            AND ttct.trans_seq = tt.trans_seq
            AND ttct.business_date = tt.business_date

          WHERE
            /*UPPER*/ ttct.typcode='PAID_IN'
            AND tt.trans_date = ?
            AND ttct.organization_id = ?
            AND ttct.rtl_loc_id = ?
            AND /*UPPER*/ tt.trans_statcode = 'COMPLETE'
            AND tt.post_void_flag = '0'
      ]]></Statement>
      <Parameter name="argBusinessDateStart" />
      <Parameter name="organizationId" />
      <Parameter name="retailLocationId" />
    </SQL>
    <SQL>
      <Statement dtype="String"><![CDATA[
          UNION ALL

          SELECT
            '_paidOut' AS description,
            COALESCE(SUM(ttct.amt * -1), 0) AS amount
          FROM
            tsn_tndr_control_trans ttct

          INNER JOIN
            trn_trans tt
          ON
            ttct.organization_id = tt.organization_id
            AND ttct.rtl_loc_id = tt.rtl_loc_id
            AND ttct.wkstn_id = tt.wkstn_id
            AND ttct.trans_seq = tt.trans_seq
            AND ttct.business_date = tt.business_date

          WHERE
            /*UPPER*/ ttct.typcode = 'PAID_OUT'
            AND tt.trans_date = ?
            AND ttct.organization_id = ?
            AND ttct.rtl_loc_id = ?
            AND /*UPPER*/ tt.trans_statcode = 'COMPLETE'
            AND tt.post_void_flag = '0'
      ]]></Statement>
      <Parameter name="argBusinessDateStart" />
      <Parameter name="organizationId" />
      <Parameter name="retailLocationId" />
    </SQL>
  </Query>
  <Query name="DAILY_SALES_SALES_DETAIL_REPORT" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.data2.access.DefaultQueryResult</ResultClass>
    <ResultField name="group_key" type="String" />
    <ResultField name="description" type="String" />
    <ResultField name="amount" type="BigDecimal" />
    <SQL>
      <Statement dtype="String"><![CDATA[
          SELECT
            '_rptDailySalesCashMerchandise' AS group_key,
            '_rptDailySalesCashTaxable' AS description,
            COALESCE(SUM(net_amt)+SUM(discount_amt),0) AS amount
          FROM
            rpt_sale_line rsl
          WHERE
            trans_date = ?
            AND organization_id = ?
            AND rtl_loc_id = ?
            AND /*UPPER*/ trans_statcode = 'COMPLETE'
            AND QUANTITY <> 0
            AND return_flag = '0'
      ]]></Statement>
      <Parameter name="argBusinessDateStart" />
      <Parameter name="organizationId" />
      <Parameter name="retailLocationId" />
    </SQL>
    <SQL>
      <Statement dtype="String"><![CDATA[
            AND item_id NOT IN (
              SELECT
                item_id
              FROM
                itm_non_phys_item
              WHERE
                organization_id = ?)
           AND EXISTS (
                  SELECT
                    1
                  FROM
                    trl_sale_tax_lineitm tstl
                  WHERE
                    rsl.organization_id = tstl.organization_id
                    AND rsl.rtrans_lineitm_seq = tstl.rtrans_lineitm_seq
                    AND rsl.rtl_loc_id = tstl.rtl_loc_id
                    AND rsl.wkstn_id = tstl.wkstn_id
                    AND rsl.business_date = tstl.business_date
                    AND rsl.trans_seq = tstl.trans_seq
                  GROUP BY
                    tstl.trans_seq
                  HAVING
                    SUM(ABS(tax_amt)) > 0
                )
      ]]></Statement>
      <Parameter name="organizationId" />
    </SQL>
    <SQL>
      <Statement dtype="String"><![CDATA[
          UNION ALL

          SELECT
            '_rptDailySalesCashMerchandise' AS group_key,
            '_rptDailySalesCashNonTaxable' AS description,
            COALESCE(SUM(net_amt)+SUM(discount_amt), 0) AS amount
          FROM
            rpt_sale_line rsl
          WHERE
            trans_date = ?
            AND organization_id = ?
            AND rtl_loc_id = ?
            AND /*UPPER*/ trans_statcode = 'COMPLETE'
            AND QUANTITY <> 0
            AND return_flag = '0'
      ]]></Statement>
      <Parameter name="argBusinessDateStart" />
      <Parameter name="organizationId" />
      <Parameter name="retailLocationId" />
    </SQL>
    <SQL>
      <Statement dtype="String"><![CDATA[
            AND item_id NOT IN (
              SELECT
                item_id
              FROM
                itm_non_phys_item
              WHERE
                organization_id = ?)
           AND EXISTS (
                  SELECT
                    1
                  FROM
                    trl_sale_tax_lineitm tstl
                  WHERE
                    rsl.organization_id = tstl.organization_id
                    AND rsl.rtrans_lineitm_seq = tstl.rtrans_lineitm_seq
                    AND rsl.rtl_loc_id = tstl.rtl_loc_id
                    AND rsl.wkstn_id = tstl.wkstn_id
                    AND rsl.business_date = tstl.business_date
                    AND rsl.trans_seq = tstl.trans_seq
                  GROUP BY
                    tstl.trans_seq
                  HAVING
                    SUM(ABS(tax_amt)) = 0
                )
      ]]></Statement>
      <Parameter name="organizationId" />
    </SQL>
    <SQL>
      <Statement dtype="String"><![CDATA[
          UNION ALL

          SELECT
            '_rptDailySalesCashNonMerchandise' AS group_key,
            '_rptDailySalesCashTaxable' AS description,
            COALESCE(SUM(net_amt)+SUM(discount_amt), 0) AS amount
          FROM
            rpt_sale_line rsl
          WHERE
            trans_date = ?
            AND organization_id = ?
            AND rtl_loc_id = ?
            AND /*UPPER*/ trans_statcode = 'COMPLETE'
            AND QUANTITY <> 0
            AND return_flag = '0'
      ]]></Statement>
      <Parameter name="argBusinessDateStart" />
      <Parameter name="organizationId" />
      <Parameter name="retailLocationId" />
    </SQL>
    <SQL>
      <Statement dtype="String"><![CDATA[
            AND item_id IN (
              SELECT
                item_id
              FROM
                itm_non_phys_item
              WHERE
                organization_id = ?)
                AND EXISTS (
                  SELECT
                    1
                  FROM
                    trl_sale_tax_lineitm tstl
                  WHERE
                    rsl.organization_id = tstl.organization_id
                    AND rsl.rtrans_lineitm_seq = tstl.rtrans_lineitm_seq
                    AND rsl.rtl_loc_id = tstl.rtl_loc_id
                    AND rsl.wkstn_id = tstl.wkstn_id
                    AND rsl.business_date = tstl.business_date
                    AND rsl.trans_seq = tstl.trans_seq
                  GROUP
                    BY tstl.trans_seq
                  HAVING
                    SUM(ABS(tax_amt)) > 0
                )
      ]]></Statement>
      <Parameter name="organizationId" />
    </SQL>
    <SQL>
      <Statement dtype="String"><![CDATA[
          UNION ALL

          SELECT
            '_rptDailySalesCashNonMerchandise' AS group_key,
            '_rptDailySalesCashNonTaxable' AS description,
            COALESCE(SUM(net_amt)+SUM(discount_amt),0) AS amount
          FROM
            rpt_sale_line rsl
          WHERE
            trans_date = ?
            AND organization_id = ?
            AND rtl_loc_id = ?
            AND /*UPPER*/ trans_statcode = 'COMPLETE'
            AND quantity <> 0
            AND return_flag = '0'
      ]]></Statement>
      <Parameter name="argBusinessDateStart" />
      <Parameter name="organizationId" />
      <Parameter name="retailLocationId" />
    </SQL>
    <SQL>
      <Statement dtype="String"><![CDATA[
            AND item_id IN (
              SELECT
                item_id
              FROM
                itm_non_phys_item
              WHERE
                organization_id = ?)
                AND EXISTS (
                  SELECT
                    1
                  FROM
                    trl_sale_tax_lineitm tstl
                  WHERE
                    rsl.organization_id = tstl.organization_id
                    AND rsl.rtrans_lineitm_seq = tstl.rtrans_lineitm_seq
                    AND rsl.rtl_loc_id = tstl.rtl_loc_id
                    AND rsl.wkstn_id = tstl.wkstn_id
                    AND rsl.business_date = tstl.business_date
                    AND rsl.trans_seq = tstl.trans_seq
                  GROUP BY
                    tstl.trans_seq
                  HAVING
                    SUM(ABS(tax_amt)) = 0
                )
      ]]></Statement>
      <Parameter name="organizationId" />
    </SQL>
    <SQL>
      <Statement dtype="String"><![CDATA[
          UNION ALL

          SELECT
            '_rptDailySalesCashMarkdowns' AS group_key,
            DSC.description AS description,
            COALESCE(SUM(TRPM.amt)* -1,0) AS amount
          FROM
            trl_rtl_price_mod TRPM

          INNER JOIN
            dsc_discount DSC
          ON
            TRPM.organization_id = DSC.Organization_id
            AND /*UPPER*/ TRPM.discount_code = DSC.discount_code

          INNER JOIN
            rpt_sale_line RSL
          ON
            TRPM.organization_id = RSL.organization_id
            AND TRPM.rtl_loc_id = RSL.rtl_loc_id
            AND TRPM.trans_seq = RSL.trans_seq
            AND TRPM.rtrans_lineitm_seq = RSL.rtrans_lineitm_seq
            AND TRPM.business_date = RSL.business_date

          WHERE
            TRPM.void_flag = '0'
            AND RSL.discount_amt > 0
            AND RSL.trans_date = ?
            AND TRPM.rtl_loc_id = ?
            AND TRPM.organization_id = ?
            AND /*UPPER*/ RSL.trans_statcode = 'COMPLETE'
            AND (
              /*UPPER*/ TRPM.rtl_price_mod_reascode = 'LINE_ITEM_DISCOUNT'
              OR /*UPPER*/ TRPM.rtl_price_mod_reascode = 'TRANSACTION_DISCOUNT'
            )
            AND /*UPPER*/ RSL.sale_lineitm_typcode IN ('SALE', 'SEND_SALE', 'ORDER')
      ]]></Statement>
      <Parameter name="argBusinessDateStart" />
      <Parameter name="retailLocationId" />
      <Parameter name="organizationId" />
    </SQL>
    <SQL>
      <Statement dtype="String"><![CDATA[
          GROUP BY
            DSC.description

          UNION ALL

          SELECT
            '_rptDailySalesCashTax' AS group_key,
            ttgr.name AS description,
            COALESCE(SUM(tax_amt), 0) AS amount

          FROM
            trl_tax_lineitm ttl

      INNER JOIN
            trl_rtrans_lineitm l
          ON
            ttl.organization_id = l.organization_id
            AND ttl.rtl_loc_id = l.rtl_loc_id
            AND ttl.wkstn_id = l.wkstn_id
            AND ttl.trans_seq = l.trans_seq
            AND ttl.business_date = l.business_date
            AND ttl.rtrans_lineitm_seq = l.rtrans_lineitm_seq

          INNER JOIN
            tax_tax_group_rule ttgr
          ON
            ttl.organization_id = ttgr.organization_id
            AND /*UPPER*/ ttl.tax_group_id = ttgr.tax_group_id
            AND /*UPPER*/ ttl.tax_loc_id = ttgr.tax_loc_id
            AND ttl.tax_rule_seq_nbr = ttgr.tax_rule_seq_nbr

          INNER JOIN
            trn_trans tt
          ON
            ttl.organization_id = tt.organization_id
            AND ttl.rtl_loc_id = tt.rtl_loc_id
            AND ttl.wkstn_id = tt.wkstn_id
            AND ttl.business_date = tt.business_date
            AND ttl.trans_seq = tt.trans_seq

          WHERE
            l.void_flag = '0'
            AND tt.post_void_flag = '0'
            AND tax_amt > 0
            AND tt.trans_date = ?
            AND ttl.rtl_loc_id = ?
            AND ttl.organization_id = ?
            AND /*UPPER*/ tt.trans_statcode = 'COMPLETE'
      ]]></Statement>
      <Parameter name="argBusinessDateStart" />
      <Parameter name="retailLocationId" />
      <Parameter name="organizationId" />
    </SQL>
    <SQL>
      <Statement dtype="String"><![CDATA[
          GROUP BY
            ttgr.name
          HAVING
            SUM(tax_amt) > 0
      ]]></Statement>
    </SQL>
  </Query>
  <Query name="DAILY_SALES_RETURNS_DETAIL_REPORT" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.data2.access.DefaultQueryResult</ResultClass>
    <ResultField name="group_key" type="String" />
    <ResultField name="description" type="String" />
    <ResultField name="amount" type="BigDecimal" />
    <SQL>
      <Statement dtype="String"><![CDATA[
          SELECT
            '_rptDailySalesCashMerchandise' AS group_key,
            '_rptDailySalesCashTaxable' AS description,
            COALESCE(SUM(net_amt) +SUM(discount_amt), 0) AS amount
          FROM
            rpt_sale_line rsl
          WHERE
            trans_date = ?
            AND organization_id = ?
            AND rtl_loc_id = ?
            AND /*UPPER*/ trans_statcode = 'COMPLETE'
            AND quantity <> 0
            AND return_flag = '1'
      ]]></Statement>
      <Parameter name="argBusinessDateStart" />
      <Parameter name="organizationId" />
      <Parameter name="retailLocationId" />
    </SQL>
    <SQL>
      <Statement dtype="String"><![CDATA[
            AND item_id NOT IN (
              SELECT
                item_id
              FROM
                itm_non_phys_item
              WHERE
                organization_id = ?)
                AND exists (
                  SELECT
                    1
                  FROM
                    trl_sale_tax_lineitm tstl
                  WHERE
                    rsl.organization_id = tstl.organization_id
                    AND rsl.rtrans_lineitm_seq = tstl.rtrans_lineitm_seq
                    AND rsl.rtl_loc_id = tstl.rtl_loc_id
                    AND rsl.wkstn_id = tstl.wkstn_id
                    AND rsl.business_date = tstl.business_date
                    AND rsl.trans_seq = tstl.trans_seq
                  GROUP BY
                    tstl.trans_seq
                  HAVING
                    SUM(ABS(tax_amt)) > 0
                )
      ]]></Statement>
      <Parameter name="organizationId" />
    </SQL>
    <SQL>
      <Statement dtype="String"><![CDATA[
          UNION ALL

          SELECT
            '_rptDailySalesCashMerchandise' AS group_key,
            '_rptDailySalesCashNonTaxable' AS description,
            COALESCE(SUM(net_amt), 0) AS amount
          FROM
            rpt_sale_line rsl
          WHERE
            trans_date = ?
            AND organization_id = ?
            AND rtl_loc_id = ?
            AND /*UPPER*/ trans_statcode = 'COMPLETE'
            AND return_flag = '1'
      ]]></Statement>
      <Parameter name="argBusinessDateStart" />
      <Parameter name="organizationId" />
      <Parameter name="retailLocationId" />
    </SQL>
    <SQL>
      <Statement dtype="String"><![CDATA[
            AND item_id NOT IN (
              SELECT
                item_id
              FROM
                itm_non_phys_item
              WHERE
                organization_id = ?)
           AND EXISTS (
                  SELECT
                    1
                  FROM
                    trl_sale_tax_lineitm tstl
                  WHERE
                    rsl.organization_id = tstl.organization_id
                    AND rsl.rtrans_lineitm_seq = tstl.rtrans_lineitm_seq
                    AND rsl.rtl_loc_id = tstl.rtl_loc_id
                    AND rsl.wkstn_id = tstl.wkstn_id
                    AND rsl.business_date = tstl.business_date
                    AND rsl.trans_seq = tstl.trans_seq
                  GROUP BY
                    tstl.trans_seq
                  HAVING
                    SUM(ABS(tax_amt)) = 0
                )
      ]]></Statement>
      <Parameter name="organizationId" />
    </SQL>
    <SQL>
      <Statement dtype="String"><![CDATA[
          UNION ALL

          SELECT
            '_rptDailySalesCashNonMerchandise' AS group_key,
            '_rptDailySalesCashTaxable' AS description,
            COALESCE(SUM(net_amt), 0) AS amount
          FROM
            rpt_sale_line rsl
          WHERE
            trans_date = ?
            AND organization_id = ?
            AND rtl_loc_id = ?
            AND /*UPPER*/ trans_statcode = 'COMPLETE'
            AND return_flag = '1'
      ]]></Statement>
      <Parameter name="argBusinessDateStart" />
      <Parameter name="organizationId" />
      <Parameter name="retailLocationId" />
    </SQL>
    <SQL>
      <Statement dtype="String"><![CDATA[
            AND item_id IN (
              SELECT
                item_id
              FROM
                itm_non_phys_item
              WHERE
                organization_id = ?)
                AND exists (
                  SELECT
                    1
                  FROM
                    trl_sale_tax_lineitm tstl
                  WHERE
                    rsl.organization_id = tstl.organization_id
                    AND rsl.rtrans_lineitm_seq = tstl.rtrans_lineitm_seq
                    AND rsl.rtl_loc_id = tstl.rtl_loc_id
                    AND rsl.wkstn_id = tstl.wkstn_id
                    AND rsl.business_date = tstl.business_date
                    AND rsl.trans_seq = tstl.trans_seq
                  GROUP BY
                    tstl.trans_seq
                  HAVING
                    SUM(ABS(tax_amt)) > 0
                )
      ]]></Statement>
      <Parameter name="organizationId" />
    </SQL>
    <SQL>
      <Statement dtype="String"><![CDATA[
          UNION ALL

          SELECT
            '_rptDailySalesCashNonMerchandise' AS group_key,
            '_rptDailySalesCashNonTaxable' AS description,
            COALESCE(SUM(net_amt), 0) AS amount
          FROM
            rpt_sale_line rsl
          WHERE
            trans_date = ?
            AND organization_id = ?
            AND rtl_loc_id = ?
            AND /*UPPER*/ trans_statcode = 'COMPLETE'
            AND return_flag = '1'
      ]]></Statement>
      <Parameter name="argBusinessDateStart" />
      <Parameter name="organizationId" />
      <Parameter name="retailLocationId" />
    </SQL>
    <SQL>
      <Statement dtype="String"><![CDATA[
            AND item_id IN (
              SELECT
                item_id
              FROM
                itm_non_phys_item
              WHERE
                organization_id = ?)
                AND EXISTS (
                  SELECT
                    1
                  FROM
                    trl_sale_tax_lineitm tstl
                  WHERE
                    rsl.organization_id = tstl.organization_id
                    AND rsl.rtrans_lineitm_seq = tstl.rtrans_lineitm_seq
                    AND rsl.rtl_loc_id = tstl.rtl_loc_id
                    AND rsl.wkstn_id = tstl.wkstn_id
                    AND rsl.business_date = tstl.business_date
                    AND rsl.trans_seq = tstl.trans_seq
                  GROUP BY
                    tstl.trans_seq
                  HAVING
                    SUM(ABS(tax_amt)) = 0
                )
      ]]></Statement>
      <Parameter name="organizationId" />
    </SQL>
    <SQL>
      <Statement dtype="String"><![CDATA[
          UNION ALL

          SELECT
            '_rptDailySalesCashMarkdowns' AS group_key,
            DSC.description AS description,
           COALESCE(SUM(RSL.discount_amt)* -1, 0) AS amount
          FROM
            trl_rtl_price_mod TRPM

          INNER JOIN
            dsc_discount DSC
          ON
            TRPM.organization_id = DSC.Organization_id
            AND /*UPPER*/ TRPM.discount_code = DSC.discount_code

          INNER JOIN
            rpt_sale_line RSL
          ON
            TRPM.organization_id = RSL.organization_id
            AND TRPM.rtl_loc_id = RSL.rtl_loc_id
            AND TRPM.trans_seq = RSL.trans_seq
            AND TRPM.rtrans_lineitm_seq = RSL.rtrans_lineitm_seq
            AND TRPM.business_date = RSL.business_date

          WHERE
            RSL.trans_date = ?
            AND TRPM.rtl_loc_id = ?
            AND TRPM.organization_id = ?
            AND /*UPPER*/ RSL.trans_statcode = 'COMPLETE'
            AND RSL.discount_amt < 0
            AND (
              /*UPPER*/ TRPM.rtl_price_mod_reascode = 'LINE_ITEM_DISCOUNT'
              OR /*UPPER*/ TRPM.rtl_price_mod_reascode = 'TRANSACTION_DISCOUNT'
            )
            AND /*UPPER*/ RSL.sale_lineitm_typcode IN ('SALE', 'SEND_SALE', 'ORDER')
      ]]></Statement>
      <Parameter name="argBusinessDateStart" />
      <Parameter name="retailLocationId" />
      <Parameter name="organizationId" />
    </SQL>
    <SQL>
      <Statement dtype="String"><![CDATA[
          GROUP BY
            DSC.description

          UNION ALL

          SELECT
            '_rptDailySalesCashTax' AS group_key,
            ttgr.name AS rowdescription,
            COALESCE(SUM(tax_amt),0) AS amount
          FROM
            trl_tax_lineitm ttl

          INNER JOIN
            trl_rtrans_lineitm l
          ON
            ttl.organization_id = l.organization_id
            AND ttl.rtl_loc_id = l.rtl_loc_id
            AND ttl.wkstn_id = l.wkstn_id
            AND ttl.trans_seq = l.trans_seq
            AND ttl.business_date = l.business_date
            AND ttl.rtrans_lineitm_seq = l.rtrans_lineitm_seq

          INNER JOIN
            tax_tax_group_rule ttgr
          ON
            ttl.organization_id = ttgr.organization_id
            AND /*UPPER*/ ttl.tax_group_id = ttgr.tax_group_id
            AND /*UPPER*/ ttl.tax_loc_id = ttgr.tax_loc_id
            AND ttl.tax_rule_seq_nbr = ttgr.tax_rule_seq_nbr

          INNER JOIN
            trn_trans tt
          ON
            ttl.organization_id = tt.organization_id
            AND ttl.rtl_loc_id = tt.rtl_loc_id
            AND ttl.wkstn_id = tt.wkstn_id
            AND ttl.business_date = tt.business_date
            AND ttl.trans_seq = tt.trans_seq

          WHERE
            tt.post_void_flag = '0'
            AND l.void_flag = '0'
            AND tt.trans_date = ?
            AND ttl.rtl_loc_id = ?
            AND ttl.organization_id = ?
            AND /*UPPER*/ tt.trans_statcode = 'COMPLETE'
            AND tax_amt < 0
      ]]></Statement>
      <Parameter name="argBusinessDateStart" />
      <Parameter name="retailLocationId" />
      <Parameter name="organizationId" />
    </SQL>
    <SQL>
      <Statement dtype="String"><![CDATA[
          GROUP BY
            ttgr.name
          HAVING
            SUM(tax_amt) < 0
       ]]></Statement>
    </SQL>
  </Query>
  <Query name="DAILY_SALES_TAX_DETAIL_REPORT" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.data2.access.DefaultQueryResult</ResultClass>
    <ResultField name="group_key" type="String" />
    <ResultField name="description" type="String" />
    <ResultField name="amount" type="BigDecimal" />
    <SQL>
      <Statement dtype="String"><![CDATA[
          SELECT
            '_rptDailySalesCashTax' AS group_key,
            ttgr.name AS rowdescription,
            COALESCE(SUM(tax_amt), 0) AS amount
          FROM
            trl_tax_lineitm ttl

          INNER JOIN
            tax_tax_group_rule ttgr
          ON
            ttl.organization_id = ttgr.organization_id
            AND /*UPPER*/ ttl.tax_group_id = ttgr.tax_group_id
            AND /*UPPER*/ ttl.tax_loc_id = ttgr.tax_loc_id
            AND ttl.tax_rule_seq_nbr = ttgr.tax_rule_seq_nbr

          INNER JOIN
            trn_trans tt
          ON
            ttl.organization_id = tt.organization_id
            AND ttl.rtl_loc_id = tt.rtl_loc_id
            AND ttl.wkstn_id = tt.wkstn_id
            AND ttl.business_date = tt.business_date
            AND ttl.trans_seq = tt.trans_seq

          INNER JOIN
            trl_rtrans_lineitm l
          ON
            ttl.organization_id = l.organization_id
            AND ttl.rtl_loc_id = l.rtl_loc_id
            AND ttl.wkstn_id = l.wkstn_id
            AND ttl.trans_seq = l.trans_seq
            AND ttl.business_date = l.business_date
            AND ttl.rtrans_lineitm_seq = l.rtrans_lineitm_seq

          WHERE
            ttl.rtl_loc_id = ?
            AND ttl.organization_id = ?
            AND tt.trans_date = ?
            AND /*UPPER*/ tt.trans_statcode = 'COMPLETE'
            AND tt.post_void_flag = '0'
            AND l.void_flag = '0'
          GROUP BY
            ttgr.name
      ]]></Statement>
      <Parameter name="retailLocationId" />
      <Parameter name="organizationId" />
      <Parameter name="argBusinessDateStart" />
    </SQL>
  </Query>
  <Query name="DAILY_SALES_TENDERS_DETAIL_REPORT" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.data2.access.DefaultQueryResult</ResultClass>
    <ResultField name="group_key" type="String" />
    <ResultField name="description" type="String" />
    <ResultField name="amount" type="BigDecimal" />
    <SQL>
      <Statement dtype="String"><![CDATA[
          SELECT
            '_rptDailySalesCashSales' AS group_key,
            tnd.description AS rowdescription,
            COALESCE(SUM(ttl.amt), 0) AS amount
          FROM
            ttr_tndr_lineitm ttl

          INNER JOIN
            trn_trans tt
          ON
            ttl.organization_id = tt.organization_id
            AND ttl.rtl_loc_id = tt.rtl_loc_id
            AND ttl.wkstn_id = tt.wkstn_id
            AND ttl.business_date = tt.business_date
            AND ttl.trans_seq = tt.trans_seq

          INNER JOIN
            trl_rtrans_lineitm trl
          ON
            trl.organization_id = ttl.organization_id
            AND trl.rtrans_lineitm_seq = ttl.rtrans_lineitm_seq
            AND trl.business_date = ttl.business_date
            AND trl.rtl_loc_id = tt.rtl_loc_id
            AND trl.wkstn_id = tt.wkstn_id
            AND trl.trans_seq = tt.trans_seq

          INNER JOIN
            tnd_tndr tnd
          ON
            ttl.organization_id = tnd.organization_id
            AND /*UPPER*/ ttl.tndr_id = tnd.tndr_id

          WHERE
            ttl.organization_id = ?
            AND ttl.rtl_loc_id = ?
            AND tt.trans_date = ?
            AND tt.post_void_flag = '0'
            AND trl.void_flag = '0'
            AND /*UPPER*/ tt.trans_statcode = 'COMPLETE'
            AND /*UPPER*/ tt.trans_typcode = 'RETAIL_SALE'
            AND (
              /*UPPER*/ tndr_statcode = /*UPPER*/ 'Tender'
              OR /*UPPER*/ tndr_statcode = /*UPPER*/ 'Change'
            )
      ]]></Statement>
      <Parameter name="organizationId" />
      <Parameter name="retailLocationId" />
      <Parameter name="argBusinessDateStart" />
    </SQL>
    <SQL>
      <Statement dtype="String"><![CDATA[
          GROUP BY
            tnd.description

          UNION ALL

          SELECT
            '_rptDailySalesCashRefunds' AS group_key,
            tnd.description AS rowdescription,
            COALESCE(SUM(ttl.amt), 0) AS amount
          FROM
            ttr_tndr_lineitm ttl

          INNER JOIN
            trn_trans tt
          ON
            ttl.organization_id = tt.organization_id
            AND ttl.rtl_loc_id = tt.rtl_loc_id
            AND ttl.wkstn_id = tt.wkstn_id
            AND ttl.business_date = tt.business_date
            AND ttl.trans_seq = tt.trans_seq

          INNER JOIN
            trl_rtrans_lineitm trl
          ON
            trl.organization_id = ttl.organization_id
            AND trl.rtrans_lineitm_seq = ttl.rtrans_lineitm_seq
            AND trl.business_date = ttl.business_date
            AND trl.rtl_loc_id = tt.rtl_loc_id
            AND trl.wkstn_id = tt.wkstn_id
            AND trl.trans_seq = tt.trans_seq
          INNER JOIN
            tnd_tndr tnd
          ON
            ttl.organization_id = tnd.organization_id
            AND /*UPPER*/ ttl.tndr_id = tnd.tndr_id

          WHERE
            tt.trans_date = ?
            AND ttl.rtl_loc_id = ?
            AND tt.post_void_flag = '0'
            AND trl.void_flag = '0'
            AND /*UPPER*/ ttl.tndr_statcode = /*UPPER*/ 'Refund'
            AND /*UPPER*/ tt.trans_statcode = 'COMPLETE'
      ]]></Statement>
      <Parameter name="argBusinessDateStart" />
      <Parameter name="retailLocationId" />
    </SQL>
    <SQL>
      <Statement dtype="String"><![CDATA[
          GROUP BY
            tnd.description

          UNION ALL

          SELECT
            '_rptDailySalesCashPettyCash' AS group_key,
            '_paidIn' AS rowdescription,
            COALESCE(SUM(amt), 0) AS amount
          FROM
            tsn_tndr_control_trans ttct

          INNER JOIN
            trn_trans tt
          ON
            ttct.organization_id = tt.organization_id
            AND ttct.rtl_loc_id = tt.rtl_loc_id
            AND ttct.wkstn_id = tt.wkstn_id
            AND ttct.business_date = tt.business_date
            AND ttct.trans_seq = tt.trans_seq

          WHERE
            tt.post_void_flag = '0'
            AND tt.trans_date = ?
            AND ttct.organization_id = ?
            AND ttct.rtl_loc_id = ?
            AND /*UPPER*/ ttct.typcode = 'PAID_IN'
            AND /*UPPER*/ tt.trans_statcode = 'COMPLETE'
      ]]></Statement>
      <Parameter name="argBusinessDateStart" />
      <Parameter name="organizationId" />
      <Parameter name="retailLocationId" />
    </SQL>
    <SQL>
      <Statement dtype="String"><![CDATA[
          GROUP BY
            ttct.typcode

          UNION ALL

          SELECT
            '_rptDailySalesCashPettyCash' AS group_key,
            '_paidOut' AS rowdescription,
            COALESCE(SUM(amt), 0) * -1 AS amount
          FROM
            tsn_tndr_control_trans ttct

          INNER JOIN
            trn_trans tt
          ON
            ttct.organization_id = tt.organization_id
            AND ttct.rtl_loc_id = tt.rtl_loc_id
            AND ttct.wkstn_id = tt.wkstn_id
            AND ttct.business_date = tt.business_date
            AND ttct.trans_seq = tt.trans_seq

          WHERE
            tt.post_void_flag = '0'
            AND tt.trans_date = ?
            AND ttct.organization_id = ?
            AND ttct.rtl_loc_id = ?
            AND /*UPPER*/ ttct.typcode = 'PAID_OUT'
            AND /*UPPER*/ tt.trans_statcode = 'COMPLETE'
    ]]></Statement>
      <Parameter name="argBusinessDateStart" />
      <Parameter name="organizationId" />
      <Parameter name="retailLocationId" />
    </SQL>
    <SQL>
      <Statement dtype="String"><![CDATA[GROUP BY ttct.typcode]]></Statement>
    </SQL>
  </Query>
  <Query name="EMPLOYEE_PRODUCTIVITY_REPORT" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.data2.access.DefaultQueryResult</ResultClass>
    <ResultField name="employee_id" type="String" />
    <ResultField name="employee_name" type="String" />
    <ResultField name="trans_count" type="Long" />
    <ResultField name="item_avg" type="BigDecimal" />
    <ResultField name="avg_sale" type="BigDecimal" />
    <ResultField name="return_amt" type="BigDecimal" />
    <ResultField name="ret_percent" type="BigDecimal" />
    <ResultField name="mkdn_percent" type="BigDecimal" />
    <ResultField name="net_amt" type="BigDecimal" />
    <SQL>
      <Statement dtype="String"><![CDATA[
          Select 
              employee_id,
              employee_name,
              trans_count,
              item_quantity / trans_count as item_avg,
              net_amt / trans_count as avg_sale,
              return_amt,
              CASE WHEN net_amt = 0 THEN 0 
                ELSE (ABS(return_amt) /  ABS(net_amt)) * 100
              END as ret_percent,
              CASE WHEN mkdnWithNet_total = 0 THEN 0
                ELSE (mkdn_amt / mkdnWithNet_total) * 100
              END as mkdn_percent,
              net_amt
            FROM  
              (SELECT
                SUM(TSL.net_amt * TCM.percentage_of_item) AS net_amt,
                SUM(COALESCE(CASE return_flag WHEN 0 THEN TSL.net_amt
                  * TCM.percentage_of_item END,0)) AS gross_amt,
                SUM(COALESCE(CASE return_flag WHEN 0 THEN TSL.net_amt
                  * TCM.percentage_of_item END,0)) AS sale_amt,
                SUM(COALESCE(CASE return_flag WHEN 1 THEN TSL.net_amt
                  * TCM.percentage_of_item END,0)) AS return_amt,
                HRE.employee_id,
                CASE WHEN COALESCE(/*UPPER*/ HRE.first_name,' ') <> ' ' OR COALESCE(/*UPPER*/ HRE.last_name,' ') <> ' '
                 THEN CONCAT(HRE.first_name, CONCAT('::', HRE.last_name)) END
                 AS employee_name,
                SUM(COALESCE(TSL.discount_amt,0) * TCM.percentage_of_item) AS mkdn_amt,
                  (CASE
                    WHEN
                      SUM(COALESCE(TSL.discount_amt,0) * TCM.percentage_of_item) = 0
                    THEN
                      0
                    ELSE
                      (SUM(TSL.net_amt * TCM.percentage_of_item)
                        + SUM(COALESCE(TSL.discount_amt,0) * TCM.percentage_of_item))
                    END
                  ) AS mkdnWithNet_total,
                  SUM(TSL.quantity) AS item_quantity,
                  COUNT(DISTINCT TCM.trans_seq) AS trans_count
              FROM
                rpt_sale_line TSL
              INNER JOIN
                trl_commission_mod TCM
              ON
                TCM.organization_id = TSL.organization_id
                AND TCM.rtl_loc_id = TSL.rtl_loc_id
                AND TCM.business_date = TSL.business_date
                AND TCM.wkstn_id = TSL.wkstn_id
                AND TCM.trans_seq = TSL.trans_seq
                AND TCM.rtrans_lineitm_seq = TSL.rtrans_lineitm_seq
              INNER JOIN
                crm_party HRE
              ON
                TSL.organization_id = HRE.organization_id
                AND TCM.employee_party_id = HRE.party_id
          WHERE
            TSL.organization_id = ?
            AND TSL.rtl_loc_id = ?
            AND TSL.trans_date BETWEEN ? AND ? 
            AND /*UPPER*/ TSL.trans_statcode = 'COMPLETE'
            AND (
              TSL.exclude_from_net_sales_flag IS NULL
              OR TSL.exclude_from_net_sales_flag <> '1'
            )
      ]]></Statement>
      <Parameter name="organizationId" />
      <Parameter name="retailLocationId" />
      <Parameter name="argBusinessDateStart" />
      <Parameter name="argBusinessDateEnd" />
      <Expression trigger="employeeId"><![CDATA[HRE.party_id LIKE ?]]></Expression>
    </SQL>
    <Suffix dtype="String"><![CDATA[GROUP BY
            HRE.employee_id,
            HRE.last_name,
            HRE.first_name) DT
            ORDER BY (CASE WHEN employee_id IS NULL THEN '-1' ELSE employee_id END)]]></Suffix>
  </Query>
  <Query name="EMPLOYEE_TASKS_REPORT" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.data2.access.DefaultQueryResult</ResultClass>
    <ResultField name="start_date" type="Date" />
    <ResultField name="due_date" type="Date" />
    <ResultField name="type_desc" type="String" />
    <ResultField name="visibility_desc" type="String" />
    <ResultField name="title" type="String" />
    <ResultField name="priority_key" type="String" />
    <ResultField name="status_key" type="String" />
    <SQL>
      <Statement dtype="String"><![CDATA[
        SELECT t.start_date, 
               t.end_date, 
               (SELECT description from com_code_value value 
                 WHERE value.organization_id = t.organization_id
                   AND value.category = 'EMPLOYEE_TASK_TYPE'
                   AND value.code     = /*UPPER*/ t.typcode) 
                   as type_desc,
               (SELECT description from com_code_value value 
                 WHERE value.organization_id = t.organization_id
                   AND value.category = 'EMPLOYEE_TASK_VISIBILITY'
                   AND value.code     = /*UPPER*/ t.visibility) 
                   as visibility_desc,
               t.title, 
               CONCAT('_dtv.pos.tasks.TaskPriority.', t.priority) AS priority_key,
               CONCAT('_dtv.pos.tasks.TaskStatus.', t.status_code) AS status_key
          FROM hrs_employee_task t
            WHERE t.organization_id = ?
            AND t.rtl_loc_id = ?
            AND t.end_date BETWEEN ? AND ?
      ]]></Statement>
      <Parameter name="organizationId" />
      <Parameter name="retailLocationId" />
      <Parameter name="argBusinessDateStart" />
      <Parameter name="argBusinessDateEnd" />
      <Expression trigger="status"><![CDATA[/*UPPER*/ t.status_code = ?]]></Expression>
      <Expression trigger="type"><![CDATA[/*UPPER*/ t.typcode = ?]]></Expression>
    </SQL>
    <Suffix dtype="String"><![CDATA[ORDER BY t.start_date]]></Suffix>
  </Query>
  <Query name="FLASH_SALES_BY_EMPLOYEE_COMMISSIONED_REPORT" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.data2.access.DefaultQueryResult</ResultClass>
    <ResultField name="employee_id" type="String" />
    <ResultField name="last_name" type="String" />
    <ResultField name="emp_name" type="String" />
    <ResultField name="quantity" type="BigDecimal" />
    <ResultField name="amount" type="BigDecimal" />
    <SQL>
      <Statement dtype="String"><![CDATA[
         SELECT 
            pty.employee_id,
            pty.last_name,
            CASE WHEN COALESCE(/*UPPER*/ pty.first_name,' ') <> ' ' 
                   OR COALESCE(/*UPPER*/ pty.last_name,' ') <> ' ' 
                 THEN CONCAT(pty.first_name, CONCAT('::', pty.last_name)) 
            END AS emp_name,
            SUM(rpt.quantity) AS quantity,
            SUM(COALESCE(rpt.net_amt,0)* com.percentage_of_item) AS amount

          FROM
            rpt_sale_line rpt,
            trl_commission_mod com,
            crm_party pty,
            (SELECT a.*
                FROM itm_item_options a
                  INNER JOIN loc_org_hierarchy b ON b.organization_id = a.ORGANIZATION_ID AND b.org_code = a.LEVEL_CODE AND b.org_value = a.LEVEL_VALUE
                  INNER JOIN (
                    SELECT a.organization_id, a.item_id, MAX(b.level_order) level_order 
                    FROM itm_item_options a 
                    INNER JOIN loc_org_hierarchy b ON b.organization_id = a.ORGANIZATION_ID AND b.org_code = a.LEVEL_CODE AND b.org_value = a.LEVEL_VALUE
                    GROUP BY a.organization_id, a.item_id)  c ON c.organization_id = a.ORGANIZATION_ID AND c.ITEM_ID = a.ITEM_ID AND c.level_order = b.level_order) itm

          WHERE com.organization_id = rpt.organization_id
            AND com.rtl_loc_id = rpt.rtl_loc_id
            AND com.wkstn_id = rpt.wkstn_id
            AND com.business_date = rpt.business_date
            AND com.trans_seq = rpt.trans_seq
            AND com.rtrans_lineitm_seq=rpt.rtrans_lineitm_seq

            AND com.employee_party_id = pty.party_id
            AND com.organization_id = pty.organization_id

            AND rpt.item_id = itm.item_id
            AND rpt.organization_id = itm.organization_id

            AND itm.exclude_from_net_sales_flag <> 1
            AND rpt.organization_id = ?
            AND rpt.rtl_loc_id = ?
            AND rpt.trans_date = ?
            AND /*UPPER*/ rpt.trans_statcode='COMPLETE'
            AND 'EMPLOYEE' = ?

          GROUP BY pty.employee_id, pty.first_name, pty.last_name
          ORDER BY amount DESC
      ]]></Statement>
      <Parameter name="organizationId" />
      <Parameter name="retailLocationId" />
      <Parameter name="argBusinessDateStart" />
      <Parameter name="displayOption" />
    </SQL>
  </Query>
    <Query name="FLASH_SALES_BY_EMPLOYEE_NON_COMMISSIONED_REPORT" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.data2.access.DefaultQueryResult</ResultClass>
    <ResultField name="quantity" type="BigDecimal" />
    <ResultField name="amount" type="BigDecimal" />
    <SQL>
      <Statement dtype="String"><![CDATA[
         SELECT
            COALESCE(SUM(CASE WHEN return_flag = 1 THEN rpt.quantity * -1 ELSE rpt.quantity END),0) quantity,
            COALESCE(SUM(rpt.net_amt),0) amount
          FROM rpt_sale_line rpt

          INNER JOIN itm_item itmi ON
            rpt.organization_id = itmi.organization_id
            AND rpt.item_id=itmi.item_id

          INNER JOIN (SELECT a.*
                FROM itm_item_options a
                  INNER JOIN loc_org_hierarchy b ON b.organization_id = a.ORGANIZATION_ID AND b.org_code = a.LEVEL_CODE AND b.org_value = a.LEVEL_VALUE
                  INNER JOIN (
                    SELECT a.organization_id, a.item_id, MAX(b.level_order) level_order 
                    FROM itm_item_options a 
                    INNER JOIN loc_org_hierarchy b ON b.organization_id = a.ORGANIZATION_ID AND b.org_code = a.LEVEL_CODE AND b.org_value = a.LEVEL_VALUE
                    GROUP BY a.organization_id, a.item_id)  c ON c.organization_id = a.ORGANIZATION_ID AND c.ITEM_ID = a.ITEM_ID AND c.level_order = b.level_order)
              itmo ON
            itmi.organization_id = itmo.organization_id
            AND rpt.item_id=itmo.item_id

          LEFT OUTER JOIN TRL_COMMISSION_MOD com
            ON com.ORGANIZATION_ID     = rpt.ORGANIZATION_ID
            AND com.RTL_LOC_ID         = rpt.RTL_LOC_ID
            AND com.BUSINESS_DATE      = rpt.BUSINESS_DATE
            AND com.WKSTN_ID           = rpt.WKSTN_ID
            AND com.TRANS_SEQ          = rpt.TRANS_SEQ
            AND com.RTRANS_LINEITM_SEQ = rpt.RTRANS_LINEITM_SEQ

          WHERE rpt.organization_id = ?
            AND rpt.rtl_loc_id = ?
            AND rpt.trans_date = ?
            AND rpt.quantity <> 0
            AND itmo.exclude_from_net_sales_flag <> 1
            AND com.EMPLOYEE_PARTY_ID IS NULL
            AND 'EMPLOYEE' = ?

      ]]></Statement>
      <Parameter name="organizationId" />
      <Parameter name="retailLocationId" />
      <Parameter name="argBusinessDateStart" />
      <Parameter name="displayOption" />
    </SQL>
  </Query>
   <Query name="FLASH_SALES_BY_EMPLOYEE_TOTAL_REPORT" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.data2.access.DefaultQueryResult</ResultClass>
    <ResultField name="quantity" type="BigDecimal" />
    <ResultField name="amount" type="BigDecimal" />
    <SQL>
      <Statement dtype="String"><![CDATA[
        SELECT 
          SUM(quantity) AS quantity, 
          SUM(amount) AS amount
        FROM
          (SELECT 
              SUM(rpt.quantity) AS quantity,
              SUM(COALESCE(rpt.net_amt,0)* com.percentage_of_item) AS amount

            FROM
              rpt_sale_line rpt,
              trl_commission_mod com,
              crm_party pty,
              (SELECT a.*
                FROM itm_item_options a
                  INNER JOIN loc_org_hierarchy b ON b.organization_id = a.ORGANIZATION_ID AND b.org_code = a.LEVEL_CODE AND b.org_value = a.LEVEL_VALUE
                  INNER JOIN (
                    SELECT a.organization_id, a.item_id, MAX(b.level_order) level_order 
                    FROM itm_item_options a 
                    INNER JOIN loc_org_hierarchy b ON b.organization_id = a.ORGANIZATION_ID AND b.org_code = a.LEVEL_CODE AND b.org_value = a.LEVEL_VALUE
                    GROUP BY a.organization_id, a.item_id)  c ON c.organization_id = a.ORGANIZATION_ID AND c.ITEM_ID = a.ITEM_ID AND c.level_order = b.level_order) itm

            WHERE com.organization_id = rpt.organization_id
              AND com.rtl_loc_id = rpt.rtl_loc_id
              AND com.wkstn_id = rpt.wkstn_id
              AND com.business_date = rpt.business_date
              AND com.trans_seq = rpt.trans_seq
              AND com.rtrans_lineitm_seq=rpt.rtrans_lineitm_seq

              AND com.employee_party_id = pty.party_id
              AND com.organization_id = pty.organization_id

              AND rpt.item_id = itm.item_id
              AND rpt.organization_id = itm.organization_id

              AND itm.exclude_from_net_sales_flag <> 1
              AND rpt.organization_id = ?
              AND rpt.rtl_loc_id = ?
              AND rpt.trans_date = ?
              AND /*UPPER*/ rpt.trans_statcode='COMPLETE']]></Statement>
      <Parameter name="organizationId" />
      <Parameter name="retailLocationId" />
      <Parameter name="argBusinessDateStart" />
    </SQL>
    <SQL>
      <Statement dtype="String"><![CDATA[
           UNION 
             SELECT
                COALESCE(SUM(rpt.quantity),0) quantity,
                COALESCE(SUM(rpt.net_amt),0) amount
              FROM rpt_sale_line rpt

              INNER JOIN itm_item itmi ON
                rpt.organization_id = itmi.organization_id
                AND rpt.item_id=itmi.item_id

              INNER JOIN itm_item_options itmo ON
                itmi.organization_id = itmo.organization_id
                AND rpt.item_id=itmo.item_id

              WHERE rpt.organization_id = ?
                AND rpt.rtl_loc_id = ?
                AND rpt.trans_date = ?
                AND rpt.quantity <> 0
                AND itmo.disallow_commission_flag = 1
                AND itmo.exclude_from_net_sales_flag <> 1) dt
           WHERE 'EMPLOYEE' = ?]]></Statement>
      <Parameter name="organizationId" />
      <Parameter name="retailLocationId" />
      <Parameter name="argBusinessDateStart" />
      <Parameter name="displayOption" />
    </SQL>
  </Query>
  <Query name="FLASH_SALES_BY_HOUR_REPORT" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.data2.access.DefaultQueryResult</ResultClass>
    <ResultField name="group" type="String" />
    <ResultField name="hour" type="Integer" />
    <ResultField name="hour_start_key" type="String" />
    <ResultField name="hour_end_key" type="String" />
    <ResultField name="trans_count" type="BigDecimal" />
    <ResultField name="item_count" type="BigDecimal" />
    <ResultField name="net_sales" type="BigDecimal" />
    <SQL>
      <Statement dtype="String"><![CDATA[
          SELECT '_rptHourFlashStoreHours',
          hour,
          CONCAT('_rptHourStart', hour) AS hour_start_key,
          CONCAT('_rptHourEnd', hour) AS hour_end_key,
          SUM(trans_count) AS trans_count,
          SUM(qty) AS item_count,
          SUM(net_sales)
        FROM rpt_sales_by_hour
        WHERE organization_id = ?
          AND rtl_loc_id = ?
          AND business_date = ?
          AND 'HOUR' = ?
        GROUP BY hour
        ORDER BY hour ASC 
      ]]></Statement>
      <Parameter name="organizationId" />
      <Parameter name="retailLocationId" />
      <Parameter name="argBusinessDateStart" />
      <Parameter name="displayOption" />
    </SQL>
  </Query>
  <Query name="FLASH_SALES_BY_MERCHLVL1_REPORT" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.data2.access.DefaultQueryResult</ResultClass>
    <ResultField name="group" type="String" />
    <ResultField name="merch_level_1" type="String" />
    <ResultField name="line_count" type="BigDecimal" />
    <ResultField name="line_amt" type="BigDecimal" />
    <ResultField name="description" type="String" />
    <ResultField name="alt_description" type="String" />
    <SQL>
      <Statement dtype="String"><![CDATA[
        SELECT '_merchLevel1',
          sales.merch_level_1,
          SUM(sales.line_count),
          SUM(sales.line_amt),
          MAX(COALESCE(merch.description,' ')) AS description,
          MAX(COALESCE(merch.description, sales.merch_level_1)) AS alt_description
        FROM rpt_merchlvl1_sales sales 
        LEFT OUTER JOIN itm_merch_hierarchy merch
        ON (sales.organization_id = merch.organization_id
        AND sales.merch_level_1 = merch.hierarchy_id
        AND /*UPPER*/ merch.level_code = ?)]]></Statement>
      <Parameter name="merchLevel1Code" />
    </SQL>
    <SQL required="false">
      <Statement dtype="String"><![CDATA[INNER JOIN (SELECT org_value FROM dbo.fn_storesInHierarchy(?, ?, ?)) sih ON CAST(sales.rtl_loc_id AS NVARCHAR)=sih.org_value]]></Statement>
      <Parameter name="organizationId" />
      <Parameter name="orgCode" />
      <Parameter name="orgValue" />
    </SQL>
    <SQL>
      <Statement dtype="String"><![CDATA[
      WHERE sales.organization_id = ?
      AND sales.business_date = ?
      AND sales.rtl_loc_id = ?
      AND 'MERCHLVL1' = ?
      ]]></Statement>
      <Parameter name="organizationId" />
      <Parameter name="argBusinessDateStart" />
      <Parameter name="retailLocationId" />
      <Parameter name="displayOption" />
    </SQL>
    <Suffix dtype="String"><![CDATA[GROUP BY sales.merch_level_1 ORDER BY SUM(sales.line_amt) DESC]]></Suffix>
  </Query>
  <Query name="FLASH_SALES_SALES_REPORT" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.data2.access.DefaultQueryResult</ResultClass>
    <ResultField name="group" type="String" />
    <ResultField name="element" type="String" />
    <ResultField name="count" type="BigDecimal" />
    <ResultField name="amount" type="BigDecimal" />
    <SQL>
      <Statement dtype="String"><![CDATA[
          SELECT '_rptFlashSales', 
            org.report_element,
            SUM(COALESCE(flash.line_count,0)) AS line_count,
            SUM(COALESCE(flash.line_amt,0)) AS line_amount
          FROM rpt_organizer org
          LEFT OUTER JOIN rpt_flash_sales flash
          ON flash.organization_id  = org.organization_id
          AND flash.line_enum       = org.report_element
          AND org.report_name       = /*UPPER*/ 'flash_sales'
          AND org.report_group      = /*UPPER*/ 'Sales'
          AND flash.organization_id = ?
          AND flash.rtl_loc_id      = ?
          AND flash.business_date   = ?
          GROUP BY org.report_element, org.report_order
          ORDER BY org.report_order
      ]]></Statement>
      <Parameter name="organizationId" />
      <Parameter name="retailLocationId" />
      <Parameter name="argBusinessDateStart" />
    </SQL>
  </Query>
  <Query name="FLASH_SALES_TENDERS_REPORT" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.data2.access.DefaultQueryResult</ResultClass>
    <ResultField name="group" type="String" />
    <ResultField name="tenderId" type="String" />
    <ResultField name="tenderDescription" type="String" />
    <ResultField name="count" type="BigDecimal" />
    <ResultField name="amount" type="BigDecimal" />
    <ResultField name="order" type="Integer" />
    <SQL>
      <Statement dtype="String"><![CDATA[
          SELECT '_rptFlashSalesTenders', 
          tnd.tndr_id,
          tnd.description,
          SUM(flash.line_count),
          SUM(COALESCE(flash.line_amt,0)),
          tnd.flash_sales_display_order
        FROM tnd_tndr tnd
        JOIN rpt_flash_sales flash
        ON flash.organization_id           = tnd.organization_id
        AND flash.line_enum                = tnd.tndr_id
        AND tnd.flash_sales_display_order IS NOT NULL
        AND tnd.disabled_flag              = 0
        AND flash.organization_id          = ?
        AND flash.rtl_loc_id               = ?
        AND flash.business_date            = ?
        AND 'SUMMARY' = ?
        GROUP BY tnd.tndr_id,
          tnd.description,
          tnd.flash_sales_display_order
        ORDER BY tnd.flash_sales_display_order
      ]]></Statement>
      <Parameter name="organizationId" />
      <Parameter name="retailLocationId" />
      <Parameter name="argBusinessDateStart" />
      <Parameter name="displayOption" />
    </SQL>
  </Query>
  <Query name="GIFT_CERTIFICATE_REPORT" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.data2.access.DefaultQueryResult</ResultClass>
    <ResultField name="serial_nbr" type="String" />
    <ResultField name="business_date" type="date" />
    <ResultField name="trans_seq" type="String" />
    <ResultField name="employee_id" type="String" />
    <ResultField name="face_value_amt" type="BigDecimal" />
    <ResultField name="tndr_serial_nbr" type="String" />
    <ResultField name="tndr_business_date" type="date" />
    <ResultField name="tndr_trans_seq" type="String" />
    <ResultField name="tndr_amt" type="BigDecimal" />
    <ResultField name="tnd_employee_id" type="String" />
    <ResultField name="redeemed_amt" type="BigDecimal" />
    <ResultField name="redeemed" type="BigDecimal" />
    <SQL>
      <Statement dtype="String"><![CDATA[
      SELECT tvs.serial_nbr, tvs.business_date, tvs.trans_seq, crp.employee_id, ttv.face_value_amt,
             ttr.serial_nbr AS tndr_serial_nbr, ttr.business_date AS tndr_business_date,
             ttr.trans_seq AS tndr_trans_seq, ttr.amt AS tndr_amt, ttr.create_user_id AS tnd_employee_id,
             (Case When Coalesce(tt.total, 0) < Coalesce(ttr.amt, 0)
                   Then Coalesce(tt.total, 0)
                   Else Coalesce(ttr.amt, 0) End) AS redeemed_amt,
             CASE WHEN Coalesce(ttr.amt, 0) > 0 THEN 1 ELSE 0 END AS redeemed
        FROM trl_voucher_sale_lineitm tvs
            JOIN trn_trans tt
                 ON tvs.organization_id = tt.organization_id
                AND tvs.rtl_loc_id = tt.rtl_loc_id
                AND tvs.business_date = tt.business_date
                AND tvs.wkstn_id = tt.wkstn_id
                AND tvs.trans_seq = tt.trans_seq
            LEFT OUTER JOIN crm_party crp
                 ON tt.organization_id = crp.organization_id
                AND tt.operator_party_id = crp.party_id
            FULL OUTER JOIN ttr_tndr_lineitm ttr
                 ON tvs.organization_id = ttr.organization_id
                AND tvs.rtl_loc_id = ttr.rtl_loc_id
                AND /*UPPER*/ tvs.serial_nbr = /*UPPER*/ ttr.serial_nbr
            LEFT OUTER JOIN ttr_voucher ttv
                 ON tvs.organization_id = ttv.organization_id
                AND /*UPPER*/ tvs.serial_nbr = ttv.serial_nbr
                AND /*UPPER*/ tvs.voucher_typcode = ttv.voucher_typcode
        WHERE Coalesce(tvs.organization_id, ?) = ?
          AND Coalesce(tvs.rtl_loc_id, ?) = ?
          AND Coalesce(ttr.organization_id, ?) = ?
          AND Coalesce(ttr.rtl_loc_id, ?) = ?
          AND ((/*UPPER*/ tvs.voucher_typcode = 'GIFT_CERTIFICATE' And /*UPPER*/ tvs.activity_code = 'ISSUED')
                OR (/*UPPER*/ ttr.tndr_id = 'GIFT_CERTIFICATE' AND /*UPPER*/ ttr.tndr_statcode = 'TENDER'))
          AND (tvs.voucher_status_code IS NULL OR /*UPPER*/ tvs.voucher_status_code <> 'VOID')
          AND tt.post_void_flag <> 1]]></Statement>
      <Parameter name="organizationId" />
      <Parameter name="organizationId" />
      <Parameter name="retailLocationId" />
      <Parameter name="retailLocationId" />
      <Parameter name="organizationId" />
      <Parameter name="organizationId" />
      <Parameter name="retailLocationId" />
      <Parameter name="retailLocationId" />
      <Expression trigger="startEmployee"><![CDATA[/*UPPER*/ crp.employee_id >= ?]]></Expression>
      <Expression trigger="endEmployee"><![CDATA[/*UPPER*/ crp.employee_id <= ?]]></Expression>
      <Expression parameters="argBusinessDateStart, argBusinessDateEnd, argBusinessDateStart, argBusinessDateEnd"
        trigger="argBusinessDateStart"><![CDATA[(tt.trans_date Between ? And ? OR ttr.business_date Between ? And ?)]]></Expression>
    </SQL>
    <Suffix dtype="String"><![CDATA[ORDER BY tvs.business_date, ttr.business_date, tvs.serial_nbr, ttr.serial_nbr]]></Suffix>
  </Query>
  <!-- Inventory Count Variance Transalation -->
  <Query name="INVENTORY_COUNT_VARIANCE" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.data2.access.DefaultQueryResult</ResultClass>
    <ResultField name="code" type="String" />
    <ResultField name="description" type="String" />
    <SQL>
      <Statement dtype="String"><![CDATA[
       SELECT code, description FROM com_code_value WHERE organization_id = ? and category = 'INV_BUCKET'
      ]]></Statement>
      <Parameter name="organizationId" />
    </SQL>
  </Query>
  <Query name="INVENTORY_MOVEMENT_REPORT" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.data2.access.DefaultQueryResult</ResultClass>
    <ResultField name="business_date" type="Date" />
    <ResultField name="inventory_item_id" type="String" />
    <ResultField name="item_serial_nbr" type="String" />
    <ResultField name="quantity" type="BigDecimal" />
    <ResultField name="description" type="String" />
    <ResultField name="create_user_id" type="String" />
    <ResultField name="rtl_loc_id" type="String" />
    <ResultField name="source_location_id" type="String" />
    <ResultField name="source_bucket_id" type="String" />
    <ResultField name="dest_location_id" type="String" />
    <ResultField name="dest_bucket_id" type="String" />
    <SQL>
      <Statement dtype="String"><![CDATA[
          SELECT
            ITJ.business_date,
            ITJ.inventory_item_id,
            ITJ.item_serial_nbr,
            ITJ.quantity,
            ITJ.action_code AS description,
            ITJ.create_user_id,
            ITJ.rtl_loc_id,
            sloc.name AS source_location_id,
            sbuc.name AS source_bucket_id,
            dloc.name AS dest_location_id,
            dbuc.name AS dest_bucket_id
          FROM
            inv_inventory_journal ITJ
          LEFT OUTER JOIN
            inv_location sloc
          ON
            ITJ.organization_id = sloc.organization_id
            AND ITJ.rtl_loc_id = sloc.rtl_loc_id
            AND /*UPPER*/ ITJ.source_location_id = sloc.inv_location_id
          LEFT OUTER JOIN
            inv_bucket sbuc
          ON
            /*UPPER*/ ITJ.source_bucket_id = sbuc.bucket_id
            AND ITJ.organization_id = sbuc.organization_id
            AND ITJ.rtl_loc_id = sbuc.rtl_loc_id
          LEFT OUTER JOIN
            inv_location dloc
          ON
            /*UPPER*/ ITJ.dest_location_id = dloc.inv_location_id
            AND ITJ.organization_id = dloc.organization_id
            AND ITJ.rtl_loc_id = dloc.rtl_loc_id
          LEFT OUTER JOIN
            inv_bucket dbuc
          ON
            /*UPPER*/ ITJ.dest_bucket_id = dbuc.bucket_id
            AND ITJ.organization_id = dbuc.organization_id
            AND ITJ.rtl_loc_id = dbuc.rtl_loc_id
          WHERE
            ITJ.organization_id = ?
            AND ITJ.rtl_loc_id = ?
      ]]></Statement>
      <Parameter name="organizationId" />
      <Parameter name="retailLocationId" />
      <Expression trigger="transSeq"><![CDATA[ITJ.trans_seq LIKE ?]]></Expression>
      <Expression trigger="actionCodeFilter"><![CDATA[/*UPPER*/ ITJ.action_code LIKE ?]]></Expression>
      <Expression trigger="startItemId"><![CDATA[/*UPPER*/ ITJ.inventory_item_id >= ?]]></Expression>
      <Expression trigger="endItemId"><![CDATA[/*UPPER*/ ITJ.inventory_item_id <= ?]]></Expression>
      <Expression parameters="argBusinessDateStart, argBusinessDateEnd" trigger="argBusinessDateStart"><![CDATA[ITJ.business_date BETWEEN ? AND ?]]></Expression>
    </SQL>
    <Suffix dtype="String"><![CDATA[ORDER BY ITJ.business_date, ITJ.inventory_item_id]]></Suffix>
  </Query>
  <Query name="INVENTORY_MOVEMENT_HISTORY_REPORT" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.data2.access.DefaultQueryResult</ResultClass>
    <ResultField name="sort_order" type="Integer" />
    <ResultField name="item_id" type="String" />
    <ResultField name="source_bucket" type="String" />
    <ResultField name="source_location" type="String" />
    <ResultField name="dest_bucket" type="String" />
    <ResultField name="dest_location" type="String" />
    <ResultField name="quantity" type="BigDecimal" />
    <ResultField name="description" type="String" />
    <ResultField name="action_code" type="String" />
    <ResultField name="business_date" type="String" />
    <ResultField name="trans_seq" type="String" />
    <SQL>
      <Statement dtype="String"><![CDATA[
      select 1 as sort_order,stock.item_id,buc.name as source_bucket,loc.name as source_location,
      ' ' as dest_bucket, ' ' as dest_location,sum(stock.unitcount)as quantity,
      item.description, ' ' as action_code, 'On Stock' as business_date, ' ' as trans_seq
      from  itm_item item,
      inv_stock_ledger_acct stock left outer join inv_location loc on
      stock.inv_location_id = loc.inv_location_id
      and stock.organization_id = loc.organization_id
      and stock.rtl_loc_id = loc.rtl_loc_id
      left outer join inv_bucket buc on
      stock.bucket_id = buc.bucket_id
      and stock.organization_id = buc.organization_id
      and stock.rtl_loc_id = buc.rtl_loc_id
      where stock.organization_id = item.organization_id
      and stock.item_id= item.item_id
      and stock.unitcount <> 0
      and stock.organization_id = ?
      and (stock.rtl_loc_id = ?) ]]></Statement>
      <Parameter name="organizationId" />
      <Parameter name="retailLocationId" />
      <Expression trigger="itemId"><![CDATA[stock.item_id=?]]></Expression>
    </SQL>
    <SQL>
      <Statement dtype="String"><![CDATA[
      group by stock.item_id,buc.name,loc.name,item.description
      union all
      SELECT 2 as sort_order, ITJ.inventory_item_id,sbuc.name as source_bucket,sloc.name as source_location,
      dbuc.name as dest_bucket,dloc.name as dest_location,
      ITJ.quantity, ' ' as description, coalesce(ITJ.action_code, ' ') as action_code,to_char(ITJ.business_date, 'MM/DD/YYYY') ,to_char(ITJ.trans_seq)
      FROM inv_inventory_journal ITJ
      left outer join inv_location sloc on
      ITJ.organization_id = sloc.organization_id
      and ITJ.rtl_loc_id = sloc.rtl_loc_id
      and /*UPPER*/ ITJ.source_location_id = sloc.inv_location_id
      left outer join inv_bucket sbuc on
      /*UPPER*/ ITJ.source_bucket_id = sbuc.bucket_id
      and ITJ.organization_id = sbuc.organization_id
      and ITJ.rtl_loc_id = sbuc.rtl_loc_id
      left outer join inv_location dloc on
      /*UPPER*/ ITJ.dest_location_id = dloc.inv_location_id
      and ITJ.organization_id = dloc.organization_id
      and ITJ.rtl_loc_id = dloc.rtl_loc_id
      left outer join inv_bucket dbuc on
      /*UPPER*/ ITJ.dest_bucket_id = dbuc.bucket_id
      and ITJ.organization_id = dbuc.organization_id
      and ITJ.rtl_loc_id = dbuc.rtl_loc_id
      where ITJ.organization_id = ?
      and ITJ.rtl_loc_id = ?]]></Statement>
      <Parameter name="organizationId" />
      <Parameter name="retailLocationId" />
      <Expression trigger="itemId"><![CDATA[/*UPPER*/ ITJ.inventory_item_id=?]]></Expression>
      <Expression parameters="argBusinessDateStart, argBusinessDateEnd" trigger="argBusinessDateStart"><![CDATA[ITJ.business_date between ? AND ?]]></Expression>
    </SQL>
    <Suffix dtype="String"><![CDATA[order by 2,1,10 desc]]></Suffix>
  </Query>
  <Query name="INVENTORY_MOVEMENT_PENDING" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.data2.access.DefaultQueryResult</ResultClass>
    <ResultField name="item_id" type="String" />
    <ResultField name="serial_nbr" type="String" />
    <ResultField name="code" type="String" />
    <ResultField name="quantity" type="BigDecimal" />
    <ResultField name="trans_seq" type="BigDecimal" />
    <ResultField name="business_date" type="date" />
    <ResultField name="description" type="String" />
    <SQL>
      <Statement dtype="String"><![CDATA[
        select pend.item_id,pend.serial_nbr,code.description,pend.quantity,
        pend.trans_seq,pend.business_date,item.description
        from inv_movement_pending pend, itm_item item,com_code_value code
        where pend.organization_id = item.organization_id
        and code.code=/*UPPER*/ pend.action_code
        and /*UPPER*/ pend.item_id = item.item_id
        and void_flag='0'
        and reconciled_flag='0'
        and pend.organization_id = ?
        and pend.rtl_loc_id = ?
      ]]></Statement>
      <Parameter name="organizationId" />
      <Parameter name="retailLocationId" />
      <Expression parameters="argBusinessDateStart, argBusinessDateEnd" trigger="argBusinessDateStart"><![CDATA[business_date between ? AND ?]]></Expression>
    </SQL>
    <Suffix dtype="String"><![CDATA[order by 6 desc, 5 desc]]></Suffix>
  </Query>
  <Query name="INVENTORY_RECEIVING_EXCEPTION_REPORT" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.data2.access.DefaultQueryResult</ResultClass>
    <ResultField name="trans_date" type="Timestamp" />
    <ResultField name="invctl_document_id" type="String" />
    <ResultField name="invctl_document_line_nbr" type="Integer" />
    <ResultField name="item_id" type="String" />
    <ResultField name="description" type="String" />
    <ResultField name="expected_count" type="BigDecimal" />
    <ResultField name="posted_count" type="BigDecimal" />
    <ResultField name="exception_count" type="BigDecimal" />
    <ResultField name="carton_id" type="String" />
    <ResultField name="full_carton_id" type="String" />
    <ResultField name="serial_number" type="String" />
    <SQL>
      <Statement dtype="String"><![CDATA[
          SELECT DISTINCT
            TRN.trans_date,
            IID.invctl_document_id,
            IIL.invctl_document_line_nbr,
            ITM.item_id,
            ITM.description,
            case when (IIS.serial_nbr is not null and IIL.expected_count>0) then 1 else IIL.expected_count end expected_count,
            case when (IIS.serial_nbr is not null and IIL.posted_count>0) then 1 else IIL.posted_count end posted_count,
            case when (IIS.serial_nbr is not null and IIL.posted_count>0) then 1 else IIL.posted_count end - case when (IIS.serial_nbr is not null and IIL.expected_count>0) then 1 else IIL.expected_count end AS exception_count,
            COALESCE(IIL.carton_id, '') AS carton_id,
            CONCAT(CONCAT(IID.invctl_document_id, '_'), COALESCE(IIL.carton_id, '')) AS full_carton_id,
            COALESCE(IIL.serial_number,IIS.serial_nbr)
          FROM
            inv_invctl_document IID
            INNER JOIN inv_invctl_document_lineitm IIL ON
              IID.organization_id = IIL.organization_id
              AND IID.rtl_loc_id = IIL.rtl_loc_id
              AND IID.invctl_document_id = IIL.invctl_document_id
              AND IID.document_typcode = IIL.document_typcode
            INNER JOIN inv_invctl_trans IIT ON
              IID.organization_id = IIT.organization_id
              AND IID.rtl_loc_id = IIT.rtl_loc_id
              AND IID.invctl_document_id = /*UPPER*/ IIT.invctl_document_id
              AND /*UPPER*/ IID.status_code = /*UPPER*/ IIT.new_status_code
            INNER JOIN trn_trans TRN on 
              IIT.organization_id = TRN.organization_id 
              AND IIT.rtl_loc_id = TRN.rtl_loc_id 
              AND IIT.wkstn_id = TRN.wkstn_id 
              AND IIT.business_date = TRN.business_date 
              AND IIT.trans_seq = TRN.trans_seq
            LEFT JOIN itm_item ITM ON
              /*UPPER*/ IIL.inventory_item_id = ITM.item_id
              AND IIL.organization_id = ITM.organization_id
            LEFT JOIN inv_invctl_doc_lineserial IIS ON
              IIL.organization_id = IIS.organization_id
              AND IIL.rtl_loc_id = IIS.rtl_loc_id
              AND IIL.document_typcode = IIS.document_typcode
              AND IIL.invctl_document_id = IIS.invctl_document_id
              AND IIL.invctl_document_line_nbr = IIS.invctl_document_line_nbr
          WHERE
            IID.document_typcode = 'RECEIVING'
            AND IID.organization_id = ?
            AND IID.rtl_loc_id = ?
            AND IIL.posted_count - IIL.expected_count <> 0
      ]]></Statement>
      <Parameter name="organizationId" />
      <Parameter name="retailLocationId" />
      <Expression trigger="subDocType"><![CDATA[/*UPPER*/ IID.document_subtypcode LIKE ?]]></Expression>
      <Expression trigger="documentNumber"><![CDATA[IID.invctl_document_id LIKE ?]]></Expression>
      <Expression trigger="cartonNumber"><![CDATA[COALESCE(/*UPPER*/ IIL.carton_id,'') LIKE ?]]></Expression>
      <Expression trigger="argBusinessDateStart"><![CDATA[TRN.trans_date = ?]]></Expression>
    </SQL>
    <Suffix dtype="String"><![CDATA[ORDER BY IID.invctl_document_id, carton_id, TRN.trans_date, ITM.item_id]]></Suffix>
  </Query>
  <Query name="INVENTORY_SHIPPING_EXCEPTION_REPORT" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.data2.access.DefaultQueryResult</ResultClass>
    <ResultField name="trans_date" type="Timestamp" />
    <ResultField name="invctl_document_id" type="String" />
    <ResultField name="invctl_document_line_nbr" type="Integer" />
    <ResultField name="item_id" type="String" />
    <ResultField name="description" type="String" />
    <ResultField name="expected_count" type="BigDecimal" />
    <ResultField name="posted_count" type="BigDecimal" />
    <ResultField name="exception_count" type="BigDecimal" />
    <ResultField name="carton_id" type="String" />
    <ResultField name="full_carton_id" type="String" />
    <ResultField name="serial_number" type="String" />
    <ResultField name="entered_item_id" type="String" />
    <ResultField name="entered_item_description" type="String" />
    <SQL>
      <Statement dtype="String"><![CDATA[
          SELECT DISTINCT
            TRN.trans_date,
            IID.invctl_document_id,
            IIL.invctl_document_line_nbr,
            ITM.item_id,
            ITM.description,
            IIL.expected_count,
            IIL.posted_count,
            IIL.posted_count - IIL.expected_count AS exception_count,
            COALESCE(IIL.carton_id, '') AS carton_id,
            CONCAT(CONCAT(IID.invctl_document_id, '_'), COALESCE(IIL.carton_id, '')) AS full_carton_id,
            IIL.serial_number,
            IIL.entered_item_id,
            IIL.entered_item_description
          FROM
            inv_invctl_document IID
            INNER JOIN inv_invctl_document_lineitm IIL ON
              IID.organization_id = IIL.organization_id
              AND IID.rtl_loc_id = IIL.rtl_loc_id
              AND IID.invctl_document_id = IIL.invctl_document_id
              AND IID.document_typcode = IIL.document_typcode
            INNER JOIN inv_invctl_trans IIT ON
              IID.organization_id = IIT.organization_id
              AND IID.rtl_loc_id = IIT.rtl_loc_id
              AND IID.invctl_document_id = /*UPPER*/ IIT.invctl_document_id
              AND /*UPPER*/ IID.status_code = /*UPPER*/ IIT.new_status_code
            INNER JOIN trn_trans TRN ON 
              IIT.organization_id = TRN.organization_id 
              AND IIT.rtl_loc_id = TRN.rtl_loc_id 
              AND IIT.wkstn_id = TRN.wkstn_id 
              AND IIT.business_date = TRN.business_date 
              AND IIT.trans_seq = TRN.trans_seq
            LEFT OUTER JOIN itm_item ITM ON
              /*UPPER*/ IIL.inventory_item_id = ITM.item_id
              AND IIL.organization_id = ITM.organization_id
          WHERE
            IID.document_typcode = 'SHIPPING'
            AND IID.organization_id = ?
            AND IID.rtl_loc_id = ?
            AND IIL.posted_count - IIL.expected_count <> 0
      ]]></Statement>
      <Parameter name="organizationId" />
      <Parameter name="retailLocationId" />
      <Expression trigger="subDocType"><![CDATA[/*UPPER*/ IID.document_subtypcode LIKE ?]]></Expression>
      <Expression trigger="documentNumber"><![CDATA[IID.invctl_document_id LIKE ?]]></Expression>
      <Expression trigger="cartonNumber"><![CDATA[COALESCE(/*UPPER*/ IIL.carton_id,'') LIKE ?]]></Expression>
      <Expression trigger="argBusinessDateStart"><![CDATA[TRN.trans_date = ?]]></Expression>
    </SQL>
    <Suffix dtype="String"><![CDATA[ORDER BY IID.invctl_document_id, carton_id, TRN.trans_date, ITM.item_id]]></Suffix>
  </Query>
  <!-- / 345640: Stock Valuation -->
  <Query name="INVENTORY_STOCK_COST_REPORT" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.pos.inventory.ItemBasedGenericQueryResult</ResultClass>
    <ResultFilter dtype="String">levelCodeLevelValueResultFilter</ResultFilter>
    <ResultField name="merch_level_1" type="String" />
    <ResultField name="merch_level_desc" type="String" />
    <ResultField name="item_id" type="String" />
    <ResultField name="description" type="String" />
    <ResultField name="current inventory on-hand" type="BigDecimal" />
    <ResultField name="unit cost" type="BigDecimal" />
    <ResultField name="total cost" type="BigDecimal" />
    <ResultField name="LevelCode" type="String" />
    <ResultField name="LevelValue" type="String" />
    <SQL>
      <Statement dtype="String"><![CDATA[
        SELECT item.merch_level_1, 
               COALESCE(merch.description, 'UNKNOWN') merch_level_desc, 
               item.item_id, 
               item.DESCRIPTION description,  
               SUM(COALESCE(sl.unitcount, 0)) "current inventory on-hand", 
               COALESCE(opt.unit_cost, 0) "unit cost", 
               COALESCE(opt.unit_cost, 0) * SUM(unitcount) "total cost",
               opt.level_code,
               opt.level_value
          FROM itm_item item JOIN itm_item_options opt ON item.ORGANIZATION_ID = opt.ORGANIZATION_ID AND item.ITEM_ID = opt.ITEM_ID
               LEFT OUTER JOIN inv_stock_ledger_acct sl ON item.ORGANIZATION_ID = sl.organization_id AND item.ITEM_ID = sl.item_id
               LEFT OUTER JOIN itm_merch_hierarchy merch ON merch.organization_id = item.ORGANIZATION_ID AND /*UPPER*/ item.MERCH_LEVEL_1 = merch.hierarchy_id
         WHERE bucket_id IN ('ON_HAND','LAYAWAY') AND
               item.organization_id = ? AND
               sl.rtl_loc_id = ?
      ]]></Statement>
      <Parameter name="organizationId" />
      <Parameter name="retailLocationId" />
      <Expression trigger="Item_ID"><![CDATA[item.ITEM_ID LIKE ?]]></Expression>
      <Expression trigger="merchLevel1"><![CDATA[/*UPPER*/ item.merch_level_1 LIKE ?]]></Expression>
    </SQL>
    <Suffix dtype="String"><![CDATA[GROUP BY item.merch_level_1, merch.description, item.item_id, opt.LEVEL_CODE, opt.LEVEL_VALUE, item.DESCRIPTION, opt.UNIT_COST]]></Suffix>
  </Query>
  <Query name="ITEM_LIST_REPORT" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.data2.access.DefaultQueryResult</ResultClass>
    <ResultField name="item_id" type="String" />
    <ResultField name="description" type="String" />
    <ResultField name="location_id" type="String" />
    <ResultField name="bucket_id" type="String" />
    <ResultField name="unitcount" type="BigDecimal" />
    <SQL>
      <Statement dtype="String"><![CDATA[
          select stock.item_id,item.description,
          loc.name as location_id,buc.name as bucket_id,
          sum(stock.unitcount)
          from itm_item item,
          inv_stock_ledger_acct stock left outer join inv_location loc on
          stock.inv_location_id = loc.inv_location_id
          and stock.organization_id = loc.organization_id
          and stock.rtl_loc_id = loc.rtl_loc_id
          left outer join inv_bucket buc on
          stock.bucket_id = buc.bucket_id
          and stock.organization_id = buc.organization_id
          and stock.rtl_loc_id = buc.rtl_loc_id
          where stock.organization_id = item.organization_id
          and stock.item_id= item.item_id
          and stock.organization_id = ?
          and stock.rtl_loc_id = ?
          and stock.unitcount <> 0]]>
      </Statement>
      <Parameter name="organizationId" />
      <Parameter name="retailLocationId" />
      <Expression trigger="locationId"><![CDATA[stock.inv_location_id = ?]]></Expression>
      <Expression trigger="bucketId"><![CDATA[stock.bucket_id = ?]]></Expression>
    </SQL>
    <Suffix dtype="String"><![CDATA[group by stock.item_id,loc.name,buc.name,item.description order by 1,3,2]]></Suffix>
  </Query>
  <Query name="JOURNAL_ROLL_COMMISSIONED_ASSOC_REPORT" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.data2.access.DefaultQueryResult</ResultClass>
    <ResultField name="business_date" type="Date" />
    <ResultField name="wkstn_id" type="String" />
    <ResultField name="trans_seq" type="String" />
    <ResultField name="trans_lineitem_seq" type="String" />
    <ResultField name="item_id" type="String" />
    <ResultField name="emp_id" type="String" />
    <SQL>
      <Statement dtype="String"><![CDATA[
       SELECT DISTINCT tsl.business_date,
          tsl.wkstn_id,
          tsl.trans_seq,
          tsl.rtrans_lineitm_seq AS trans_lineitem_seq,
          tsl.item_id,
          COALESCE(cre.employee_id,' ') AS emp_id
  
        FROM trn_trans tt

          INNER JOIN rpt_sale_line tsl ON
            tt.trans_seq = tsl.trans_seq
            AND tt.organization_id = tsl.organization_id
            AND tt.wkstn_id = tsl.wkstn_id
            AND tt.rtl_loc_id = tsl.rtl_loc_id
            AND tt.business_date = tsl.business_date

          LEFT OUTER JOIN trl_commission_mod tcm ON
            tsl.organization_id = tcm.organization_id
            AND tsl.rtl_loc_id = tcm.rtl_loc_id
            AND tsl.wkstn_id = tcm.wkstn_id
            AND tsl.business_date = tcm.business_date
            AND tsl.trans_seq = tcm.trans_seq
            AND tsl.rtrans_lineitm_seq = tcm.rtrans_lineitm_seq

          LEFT OUTER JOIN trl_rtrans_lineitm trl ON
            TRL.organization_id = TSL.organization_id
            AND TRL.rtrans_lineitm_seq = TSL.rtrans_lineitm_seq
            AND TRL.rtl_loc_id = TSL.rtl_loc_id
            AND TRL.wkstn_id = TSL.wkstn_id
            AND TRL.business_date = TSL.business_date
            AND TRL.trans_seq = TSL.trans_seq

          INNER JOIN trn_trans trn ON 
            trl.organization_id = trn.organization_id
            AND trl.rtl_loc_id     = trn.rtl_loc_id
            AND trl.business_date  = trn.business_date
            AND trl.wkstn_id       = trn.wkstn_id
            AND trl.trans_seq      = trn.trans_seq

          LEFT OUTER JOIN
            ttr_tndr_lineitm TTR ON
            TRN.organization_id = TTR.organization_id
            AND TRN.rtl_loc_id = TTR.rtl_loc_id
            AND TRN.wkstn_id = TTR.wkstn_id
            AND TRN.business_date = TTR.business_date
            AND TRN.trans_seq = TTR.trans_seq

          LEFT OUTER JOIN crm_party CRE ON
            tcm.organization_id    = CRE.organization_id
            AND tcm.employee_party_id  = CRE.party_id

          LEFT OUTER JOIN  trl_rtrans rts ON
            TRN.organization_id = rts.organization_id
            AND TRN.rtl_loc_id = rts.rtl_loc_id
            AND TRN.business_date = rts.business_date
            AND TRN.trans_seq = rts.trans_seq
            AND TRN.wkstn_id = rts.wkstn_id

         LEFT OUTER JOIN crm_party crm ON
            TRN.organization_id = crm.organization_id
            AND rts.cust_party_id = crm.party_id

          WHERE TSL.organization_id = ?
            AND TSL.rtl_loc_id = ?
            AND TRL.void_flag = 0
      ]]></Statement>
      <Parameter name="organizationId" />
      <Parameter name="retailLocationId" />
      <Expression parameters="argBusinessDateStart, argBusinessDateEnd" trigger="argBusinessDateStart"><![CDATA[trn.trans_date BETWEEN ? AND ?]]></Expression>
      <Expression trigger="startReg"><![CDATA[TSL.wkstn_id >= ?]]></Expression>
      <Expression trigger="endReg"><![CDATA[TSL.wkstn_id <= ?]]></Expression>
      <Expression trigger="customerId"><![CDATA[COALESCE(/*UPPER*/ CRM.cust_id,'') = ?]]></Expression>
      <Expression trigger="tndrId"><![CDATA[COALESCE(/*UPPER*/ TTR.tndr_id,'') = ?]]></Expression>
      <Expression trigger="transSeq"><![CDATA[TSL.trans_seq = ?]]></Expression>
      <Expression trigger="transactionType"><![CDATA[/*UPPER*/ TRN.trans_typcode = ?]]></Expression>
      <Expression trigger="employeeId"><![CDATA[COALESCE(/*UPPER*/ CRE.employee_id,'') = ?]]></Expression>
    </SQL>
    <Suffix dtype="String"><![CDATA[ORDER BY tsl.business_date DESC, tsl.wkstn_id DESC, tsl.trans_seq DESC, tsl.rtrans_lineitm_seq ASC]]></Suffix>
  </Query>
  <Query name="JOURNAL_ROLL_ITEM_REPORT" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.data2.access.DefaultQueryResult</ResultClass>
    <ResultField name="business_date" type="Date" />
    <ResultField name="wkstn_id" type="String" />
    <ResultField name="trans_seq" type="String" />
    <ResultField name="trans_lineitem_seq" type="String" />
    <ResultField name="item_id" type="String" />
    <ResultField name="description" type="String" />
    <ResultField name="quantity" type="BigDecimal" />
    <ResultField name="unit_price" type="BigDecimal" />
    <ResultField name="extended_amt" type="BigDecimal" />
    <ResultField name="cust_acct_code" type="String" />
    <ResultField name="line_item_code" type="String" />
    <SQL>
      <Statement dtype="String"><![CDATA[
          SELECT DISTINCT
            TSL.business_date,
            TSL.wkstn_id,
            TSL.trans_seq,
            TSL.rtrans_lineitm_seq,
            TSL.item_id,
            ITM.description,
            TSL.quantity,
            TSL.unit_price,
            TSL.extended_amt,
            CCD.cust_acct_code AS cust_acct_code,
            TSL.sale_lineitm_typcode AS line_item_code

          FROM itm_item ITM

          INNER JOIN trl_sale_lineitm TSL ON
            ITM.organization_id = TSL.organization_id
            AND ITM.item_id = /*UPPER*/ TSL.item_id

          LEFT OUTER JOIN cat_cust_item_acct_activity CCD ON
            CCD.organization_id = TSL.organization_id
            AND CCD.rtl_loc_id = TSL.rtl_loc_id
            AND CCD.wkstn_id = TSL.wkstn_id
            AND CCD.trans_seq = TSL.trans_seq
            AND CCD.business_date = TSL.business_date
            AND CCD.rtrans_lineitm_seq = TSL.rtrans_lineitm_seq

          LEFT OUTER JOIN trl_rtrans_lineitm trl ON
            TRL.organization_id = TSL.organization_id
            AND TRL.rtrans_lineitm_seq = TSL.rtrans_lineitm_seq
            AND TRL.rtl_loc_id = TSL.rtl_loc_id
            AND TRL.wkstn_id = TSL.wkstn_id
            AND TRL.business_date = TSL.business_date
            AND TRL.trans_seq = TSL.trans_seq

          INNER JOIN trn_trans trn ON 
            trl.organization_id = trn.organization_id
            AND trl.rtl_loc_id     = trn.rtl_loc_id
            AND trl.business_date  = trn.business_date
            AND trl.wkstn_id       = trn.wkstn_id
            AND trl.trans_seq      = trn.trans_seq

          LEFT OUTER JOIN
            ttr_tndr_lineitm TTR ON
            TRN.organization_id = TTR.organization_id
            AND TRN.rtl_loc_id = TTR.rtl_loc_id
            AND TRN.wkstn_id = TTR.wkstn_id
            AND TRN.business_date = TTR.business_date
            AND TRN.trans_seq = TTR.trans_seq

          LEFT OUTER JOIN crm_party CRE ON
            TRN.organization_id    = CRE.organization_id

          LEFT OUTER JOIN  trl_rtrans rts ON
            TRN.organization_id = rts.organization_id
            AND TRN.rtl_loc_id = rts.rtl_loc_id
            AND TRN.business_date = rts.business_date
            AND TRN.trans_seq = rts.trans_seq
            AND TRN.wkstn_id = rts.wkstn_id

         LEFT OUTER JOIN crm_party crm ON
            TRN.organization_id = crm.organization_id
            AND rts.cust_party_id = crm.party_id

          WHERE TRN.operator_party_id = CRE.party_id
            AND TSL.organization_id = ?
            AND TSL.rtl_loc_id = ?
            AND TRL.void_flag = 0
      ]]></Statement>
      <Parameter name="organizationId" />
      <Parameter name="retailLocationId" />
      <Expression parameters="argBusinessDateStart, argBusinessDateEnd" trigger="argBusinessDateStart"><![CDATA[TRN.trans_date BETWEEN ? AND ?]]></Expression>
      <Expression trigger="startReg"><![CDATA[TSL.wkstn_id >= ?]]></Expression>
      <Expression trigger="endReg"><![CDATA[TSL.wkstn_id <= ?]]></Expression>
      <Expression trigger="customerId"><![CDATA[COALESCE(/*UPPER*/ CRM.cust_id,'') = ?]]></Expression>
      <Expression trigger="tndrId"><![CDATA[COALESCE(/*UPPER*/ TTR.tndr_id,'') = ?]]></Expression>
      <Expression trigger="transSeq"><![CDATA[TSL.trans_seq = ?]]></Expression>
      <Expression trigger="transactionType"><![CDATA[/*UPPER*/ TRN.trans_typcode = ?]]></Expression>
      <Expression trigger="employeeId"><![CDATA[COALESCE(/*UPPER*/ CRE.employee_id,'') = ?]]></Expression>
    </SQL>
    <Suffix dtype="String"><![CDATA[ORDER BY TSL.business_date DESC, TSL.wkstn_id DESC, TSL.trans_seq DESC, TSL.rtrans_lineitm_seq ASC]]></Suffix>
  </Query>
  <Query name="JOURNAL_ROLL_SERIAL_EXCHANGE_ITEM_REPORT" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.data2.access.DefaultQueryResult</ResultClass>
    <ResultField name="trans_seq" type="String" />
    <ResultField name="item_id" type="String" />
    <ResultField name="Orig_serial_nmbr" type="String" />
    <ResultField name="New_seial_nmbr" type="String" />
    <SQL>
      <Statement dtype="String"><![CDATA[
       SELECT distinct
        TRSE.TRANS_SEQ,
  		TRSE.ITEM_ID,
  		TRSE.ORIG_SERIAL_NBR,
  		TRSE.NEW_SERIAL_NBR
	FROM trl_rtrans_serial_exchange TRSE

	LEFT OUTER JOIN ttr_tndr_lineitm TTR
	ON trse.orig_trans_seq=ttr.trans_seq

	LEFT OUTER JOIN trn_trans trn
	ON TRSE.organization_id = trn.organization_id
	AND TRSE.rtl_loc_id     = trn.rtl_loc_id
	AND TRSE.business_date  = trn.business_date
	AND TRSE.wkstn_id       = trn.wkstn_id
	AND TRSE.trans_seq     = trn.trans_seq
	
	LEFT OUTER JOIN crm_party CRE
	ON TRN.organization_id = CRE.organization_id
	AND TRN.operator_party_id = CRE.party_id
	WHERE
	  TRSE.organization_id     = ?
	  AND TRSE.rtl_loc_id      = ?
      ]]></Statement>
      <Parameter name="organizationId" />
      <Parameter name="retailLocationId" />
      <Expression parameters="argBusinessDateStart, argBusinessDateEnd" trigger="argBusinessDateStart"><![CDATA[TRN.trans_date BETWEEN ? AND ?]]></Expression>
      <Expression trigger="startReg"><![CDATA[TRSE.wkstn_id >= ?]]></Expression>
      <Expression trigger="endReg"><![CDATA[TRSE.wkstn_id <= ?]]></Expression>
      <Expression trigger="customerId"><![CDATA[COALESCE(/*UPPER*/ CRE.cust_id,'') = ?]]></Expression>
      <Expression trigger="tndrId"><![CDATA[COALESCE(/*UPPER*/ TTR.tndr_id,'') = ?]]></Expression>
      <Expression trigger="transSeq"><![CDATA[TRSE.trans_seq = ?]]></Expression>
      <Expression trigger="transactionType"><![CDATA[/*UPPER*/ TRN.trans_typcode = ?]]></Expression>
      <Expression trigger="employeeId"><![CDATA[COALESCE(/*UPPER*/ CRE.employee_id,'') = ?]]></Expression>
    </SQL>
  </Query>
  <Query name="JOURNAL_ROLL_PAYMENT_REPORT" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.data2.access.DefaultQueryResult</ResultClass>
    <ResultField name="business_date" type="Date" />
    <ResultField name="wkstn_id" type="String" />
    <ResultField name="trans_seq" type="String" />
    <ResultField name="rtrans_lineitm_seq" type="String" />
    <ResultField name="amt" type="BigDecimal" />
    <SQL>
      <Statement dtype="String"><![CDATA[
        SELECT tsl.business_date,
          tsl.wkstn_id,
          tsl.trans_seq,
          tsl.rtrans_lineitm_seq,
          ABS(ccah.amt) amt

        FROM trl_sale_lineitm TSL

        INNER JOIN trl_rtrans_lineitm trl
        ON trl.organization_id     = tsl.organization_id
        AND trl.rtl_loc_id         = tsl.rtl_loc_id
        AND trl.wkstn_id           = tsl.wkstn_id
        AND trl.business_date      = tsl.business_date
        AND trl.trans_seq          = tsl.trans_seq
        AND trl.rtrans_lineitm_seq = tsl.rtrans_lineitm_seq

        INNER JOIN cat_charge_acct_history ccah
        ON trl.organization_id     = ccah.organization_id
        AND trl.rtl_loc_id         = ccah.rtl_loc_id
        AND trl.business_date      = ccah.business_date
        AND trl.wkstn_id           = ccah.wkstn_id
        AND trl.trans_seq          = ccah.trans_seq
        AND trl.rtrans_lineitm_seq = ccah.rtrans_lineitm_seq

        INNER JOIN trn_trans trn
        ON tsl.organization_id = trn.organization_id
        AND tsl.rtl_loc_id     = trn.rtl_loc_id
        AND tsl.business_date  = trn.business_date
        AND tsl.wkstn_id       = trn.wkstn_id
        AND tsl.trans_seq      = trn.trans_seq

        LEFT OUTER JOIN crm_party cre
        ON trn.organization_id    = cre.organization_id

        WHERE /*UPPER*/ ccah.activity_enum  = 'PAYMENT'
        AND trn.operator_party_id = cre.party_id
        AND tsl.organization_id   = ?
        AND tsl.rtl_loc_id        = ?
        AND trl.void_flag        <> '1'
      ]]></Statement>
      <Parameter name="organizationId" />
      <Parameter name="retailLocationId" />
      <Expression parameters="argBusinessDateStart, argBusinessDateEnd" trigger="argBusinessDateStart"><![CDATA[trn.trans_date BETWEEN ? AND ?]]></Expression>
      <Expression trigger="startReg"><![CDATA[tsl.wkstn_id >= ?]]></Expression>
      <Expression trigger="endReg"><![CDATA[tsl.wkstn_id <= ?]]></Expression>
      <Expression trigger="transSeq"><![CDATA[tsl.trans_seq = ?]]></Expression>
      <Expression trigger="customerId"><![CDATA[COALESCE(/*UPPER*/ CRE.cust_id,'') = ?]]></Expression>
      <Expression trigger="employeeId"><![CDATA[COALESCE(/*UPPER*/ cre.employee_id,'') = ?]]></Expression>
      <Expression trigger="transactionType"><![CDATA[/*UPPER*/ trn.trans_typcode = ?]]></Expression>
      <Expression parameters="transSeq, transSeq" trigger="transSeq"><![CDATA[(trn.trans_seq = ?) or (/*UPPER*/ trn.fiscal_number = ?)]]></Expression>
    </SQL>
  </Query>
  <Query name="JOURNAL_ROLL_NON_TAXABLE_REPORT" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.data2.access.DefaultQueryResult</ResultClass>
    <ResultField name="business_date" type="Date" />
    <ResultField name="wkstn_id" type="String" />
    <ResultField name="trans_seq" type="String" />
    <ResultField name="rtrans_lineitm_seq" type="String" />
    <ResultField name="amt" type="BigDecimal" />
    <SQL>
      <Statement dtype="String"><![CDATA[
          SELECT 
            TSL.business_date,
            TSL.wkstn_id,
            TSL.trans_seq,
            TSL.rtrans_lineitm_seq,
            TSL.net_amt AS amt
          FROM trl_sale_lineitm TSL

          INNER JOIN  trl_rtrans_lineitm trl 
          ON trl.organization_id = TSL.organization_id
            AND trl.rtl_loc_id = TSL.rtl_loc_id
            AND trl.wkstn_id = TSL.wkstn_id
            AND trl.business_date = TSL.business_date
            AND trl.trans_seq = TSL.trans_seq
            AND trl.rtrans_lineitm_seq = TSL.rtrans_lineitm_seq

          LEFT OUTER JOIN
            trl_rtrans rts
          ON
            TSL.organization_id = rts.organization_id
            AND TSL.rtl_loc_id = rts.rtl_loc_id
            AND TSL.business_date = rts.business_date
            AND TSL.trans_seq = rts.trans_seq
            AND TSL.wkstn_id = rts.wkstn_id

         LEFT OUTER JOIN crm_party crm
           ON TSL.organization_id = crm.organization_id
            AND rts.cust_party_id = crm.party_id

        INNER JOIN trn_trans trn ON 
            TSL.organization_id = trn.organization_id
            AND TSL.rtl_loc_id     = trn.rtl_loc_id
            AND TSL.business_date  = trn.business_date
            AND TSL.wkstn_id       = trn.wkstn_id
            AND TSL.trans_seq      = trn.trans_seq

         LEFT OUTER JOIN crm_party CRE ON
            trn.organization_id    = CRE.organization_id

          WHERE trn.operator_party_id = CRE.party_id
            AND TSL.organization_id = ?
            AND TSL.rtl_loc_id = ?
            AND trl.void_flag <> '1'
            AND 0 =
              (Select Coalesce(Sum(TSTL.tax_amt), 0)
                From trl_sale_tax_lineitm TSTL
                Where TSTL.organization_id = TSL.organization_id
                  And TSTL.rtl_loc_id = TSL.rtl_loc_id
                  And TSTL.wkstn_id = TSL.wkstn_id
                  And TSTL.business_date = TSL.business_date
                  And TSTL.trans_seq = TSL.trans_seq
                  And TSTL.rtrans_lineitm_seq = TSL.rtrans_lineitm_seq)
      ]]></Statement>
      <Parameter name="organizationId" />
      <Parameter name="retailLocationId" />
      <Expression parameters="argBusinessDateStart, argBusinessDateEnd" trigger="argBusinessDateStart"><![CDATA[trn.trans_date BETWEEN ? AND ?]]></Expression>
      <Expression trigger="startReg"><![CDATA[TSL.wkstn_id >= ?]]></Expression>
      <Expression trigger="endReg"><![CDATA[TSL.wkstn_id <= ?]]></Expression>
      <Expression trigger="transSeq"><![CDATA[TSL.trans_seq = ?]]></Expression>
      <Expression trigger="customerId"><![CDATA[COALESCE(/*UPPER*/ CRM.cust_id,'') = ?]]></Expression>
      <Expression trigger="employeeId"><![CDATA[COALESCE(/*UPPER*/ CRE.employee_id,'') = ?]]></Expression>
      <Expression trigger="transactionType"><![CDATA[/*UPPER*/ TRN.trans_typcode = ?]]></Expression>
      <Expression parameters="transSeq, transSeq" trigger="transSeq"><![CDATA[(TRN.trans_seq = ?) or (/*UPPER*/ TRN.fiscal_number = ?)]]></Expression>
    </SQL>
  </Query>
  <Query name="JOURNAL_ROLL_NOSALE_REPORT" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.data2.access.DefaultQueryResult</ResultClass>
    <ResultField name="business_date" type="Date" />
    <ResultField name="wkstn_id" type="String" />
    <ResultField name="trans_seq" type="String" />
    <ResultField name="description" type="String" />
    <SQL>
      <Statement dtype="String"><![CDATA[
          SELECT
            TST.business_date,
            TST.wkstn_id,
            TST.trans_seq,
            ( SELECT description
              FROM com_reason_code
              WHERE organization_id = ?
                AND reason_code = /*UPPER*/ TST.no_sale_reascode
                AND reason_typcode = 'NO_SALE'
            ) AS description
          FROM trn_no_sale_trans TST
          INNER JOIN trn_trans trn ON
            TST.organization_id = trn.organization_id
            AND TST.rtl_loc_id     = trn.rtl_loc_id
            AND TST.business_date  = trn.business_date
            AND TST.wkstn_id       = trn.wkstn_id
            AND TST.trans_seq      = trn.trans_seq
          WHERE
            TST.organization_id = ?
            AND TST.rtl_loc_id = ?
      ]]></Statement>
      <Parameter name="organizationId" />
      <Parameter name="organizationId" />
      <Parameter name="retailLocationId" />
      <Expression trigger="startReg"><![CDATA[TST.wkstn_id >= ?]]></Expression>
      <Expression trigger="endReg"><![CDATA[TST.wkstn_id <= ?]]></Expression>
      <Expression parameters="argBusinessDateStart, argBusinessDateEnd" trigger="argBusinessDateStart"><![CDATA[trn.trans_date BETWEEN ? AND ?]]></Expression>
      <Expression trigger="transSeq"><![CDATA[TST.trans_seq = ?]]></Expression>
    </SQL>
  </Query>
  <Query name="JOURNAL_ROLL_PAID_REPORT" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.data2.access.DefaultQueryResult</ResultClass>
    <ResultField name="business_date" type="Date" />
    <ResultField name="wkstn_id" type="String" />
    <ResultField name="trans_seq" type="String" />
    <ResultField name="reason_code" type="String" />
    <ResultField name="description" type="String" />
    <ResultField name="amt" type="BigDecimal" />
    <ResultField name="typcode" type="String" />
    <SQL>
      <Statement dtype="String"><![CDATA[
          SELECT
            TC.business_date,
            TC.wkstn_id,
            TC.trans_seq,
            TC.reascode AS reason_code,
            CRC.description AS description,
            TC.amt,
            TC.typcode

          FROM tsn_tndr_control_trans TC 
            LEFT OUTER JOIN com_reason_code CRC
            ON TC.organization_id = CRC.organization_id
            AND /*UPPER*/ TC.reascode = CRC.reason_code
            AND /*UPPER*/ TC.typcode = CRC.reason_typcode

          INNER JOIN trn_trans trn ON 
            TC.organization_id = trn.organization_id
            AND TC.rtl_loc_id     = trn.rtl_loc_id
            AND TC.business_date  = trn.business_date
            AND TC.wkstn_id       = trn.wkstn_id
            AND TC.trans_seq      = trn.trans_seq

          LEFT OUTER JOIN crm_party CRE ON
            TRN.organization_id    = CRE.organization_id

          WHERE TRN.operator_party_id = CRE.party_id
            AND TC.organization_id = ?
            AND TC.rtl_loc_id = ?
      ]]></Statement>
      <Parameter name="organizationId" />
      <Parameter name="retailLocationId" />
      <Expression trigger="startReg"><![CDATA[TC.wkstn_id >= ?]]></Expression>
      <Expression trigger="endReg"><![CDATA[TC.wkstn_id <= ?]]></Expression>
      <Expression parameters="argBusinessDateStart, argBusinessDateEnd" trigger="argBusinessDateStart"><![CDATA[trn.trans_date BETWEEN ? AND ?]]></Expression>
      <Expression trigger="transSeq"><![CDATA[TC.trans_seq = ?]]></Expression>
      <Expression trigger="transactionType"><![CDATA[/*UPPER*/ TRN.trans_typcode = ?]]></Expression>
      <Expression trigger="employeeId"><![CDATA[COALESCE(/*UPPER*/ CRE.employee_id,'') = ?]]></Expression>
    </SQL>
  </Query>
  <Query name="JOURNAL_ROLL_POSTVOID_REPORT" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.data2.access.DefaultQueryResult</ResultClass>
    <ResultField name="business_date" type="Date" />
    <ResultField name="wkstn_id" type="String" />
    <ResultField name="trans_seq" type="String" />
    <ResultField name="voided_org_id" type="String" />
    <ResultField name="voided_rtl_store_id" type="String" />
    <ResultField name="voided_wkstn_id" type="String" />
    <ResultField name="voided_business_date" type="Date" />
    <ResultField name="voided_trans_id" type="String" />
    <ResultField name="description" type="String" />
    <ResultField name="orig_trans_typcode" type="String" />
    <ResultField name="orig_amount" type="BigDecimal" />
    <SQL>
      <Statement dtype="String"><![CDATA[
          SELECT
            TPV.business_date,
            TPV.wkstn_id,
            TPV.trans_seq,
            TPV.voided_org_id,
            TPV.voided_rtl_store_id,
            TPV.voided_wkstn_id,
            TPV.voided_business_date,
            TPV.voided_trans_id,
            ( SELECT description
              FROM com_reason_code
              WHERE organization_id = ? AND reason_code = /*UPPER*/ TPV.post_void_reascode
                AND reason_typcode = 'POST_VOID'
            ) AS description,
            ( SELECT ITT.trans_typcode
              FROM trn_trans ITT
                WHERE ITT.organization_id = TPV.voided_org_id
                AND ITT.rtl_loc_id = TPV.voided_rtl_store_id
                AND ITT.wkstn_id = TPV.voided_wkstn_id
                AND ITT.business_date = TPV.voided_business_date
                AND ITT.trans_seq = TPV.voided_trans_id
            ) AS orig_trans_typcode,
            ( SELECT ITT.total
              FROM trn_trans ITT
                WHERE ITT.organization_id = TPV.voided_org_id
                AND ITT.rtl_loc_id = TPV.voided_rtl_store_id
                AND ITT.wkstn_id = TPV.voided_wkstn_id
                AND ITT.business_date = TPV.voided_business_date
                AND ITT.trans_seq = TPV.voided_trans_id
            ) AS orig_amount
          FROM trn_post_void_trans TPV
            INNER JOIN trn_trans trn ON 
            TPV.organization_id = trn.organization_id
            AND TPV.rtl_loc_id     = trn.rtl_loc_id
            AND TPV.business_date  = trn.business_date
            AND TPV.wkstn_id       = trn.wkstn_id
            AND TPV.trans_seq      = trn.trans_seq
          WHERE
            TPV.organization_id = ?
            AND TPV.rtl_loc_id = ?
      ]]></Statement>
      <Parameter name="organizationId" />
      <Parameter name="organizationId" />
      <Parameter name="retailLocationId" />
      <Expression trigger="startReg"><![CDATA[TPV.wkstn_id >= ?]]></Expression>
      <Expression trigger="endReg"><![CDATA[TPV.wkstn_id <= ?]]></Expression>
      <Expression parameters="argBusinessDateStart, argBusinessDateEnd" trigger="argBusinessDateStart"><![CDATA[trn.trans_date BETWEEN ? AND ?]]></Expression>
      <Expression trigger="transSeq"><![CDATA[TPV.trans_seq = ?]]></Expression>
    </SQL>
  </Query>
  <Query name="JOURNAL_ROLL_TAXABLE_REPORT" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.data2.access.DefaultQueryResult</ResultClass>
    <ResultField name="business_date" type="Date" />
    <ResultField name="wkstn_id" type="String" />
    <ResultField name="trans_seq" type="String" />
    <ResultField name="rtrans_lineitm_seq" type="String" />
    <ResultField name="amt" type="BigDecimal" />
    <SQL>
      <Statement dtype="String"><![CDATA[
          SELECT 
            TSL.business_date,
            TSL.wkstn_id,
            TSL.trans_seq,
            TSL.rtrans_lineitm_seq,
            TSL.net_amt AS amt
          FROM trl_sale_lineitm TSL
          
          INNER JOIN  trl_rtrans_lineitm trl 
          ON trl.organization_id = TSL.organization_id
            AND trl.rtl_loc_id = TSL.rtl_loc_id
            AND trl.wkstn_id = TSL.wkstn_id
            AND trl.business_date = TSL.business_date
            AND trl.trans_seq = TSL.trans_seq
            AND trl.rtrans_lineitm_seq = TSL.rtrans_lineitm_seq

          LEFT OUTER JOIN
            trl_rtrans rts
          ON
            TSL.organization_id = rts.organization_id
            AND TSL.rtl_loc_id = rts.rtl_loc_id
            AND TSL.business_date = rts.business_date
            AND TSL.trans_seq = rts.trans_seq
            AND TSL.wkstn_id = rts.wkstn_id

         LEFT OUTER JOIN crm_party crm
           ON TSL.organization_id = crm.organization_id
            AND rts.cust_party_id = crm.party_id

        INNER JOIN trn_trans trn ON 
            TSL.organization_id = trn.organization_id
            AND TSL.rtl_loc_id     = trn.rtl_loc_id
            AND TSL.business_date  = trn.business_date
            AND TSL.wkstn_id       = trn.wkstn_id
            AND TSL.trans_seq      = trn.trans_seq

         LEFT OUTER JOIN crm_party CRE ON
            trn.organization_id    = CRE.organization_id

          WHERE trn.operator_party_id = CRE.party_id
            AND TSL.organization_id = ?
            AND TSL.rtl_loc_id = ?
            AND trl.void_flag <> '1'
            AND 0 <>
              (Select Coalesce(Sum(TSTL.tax_amt), 0)
                From trl_sale_tax_lineitm TSTL
                Where TSTL.organization_id = TSL.organization_id
                  And TSTL.rtl_loc_id = TSL.rtl_loc_id
                  And TSTL.wkstn_id = TSL.wkstn_id
                  And TSTL.business_date = TSL.business_date
                  And TSTL.trans_seq = TSL.trans_seq
                  And TSTL.rtrans_lineitm_seq = TSL.rtrans_lineitm_seq)
      ]]></Statement>
      <Parameter name="organizationId" />
      <Parameter name="retailLocationId" />
      <Expression parameters="argBusinessDateStart, argBusinessDateEnd" trigger="argBusinessDateStart"><![CDATA[trn.trans_date BETWEEN ? AND ?]]></Expression>
      <Expression trigger="startReg"><![CDATA[TSL.wkstn_id >= ?]]></Expression>
      <Expression trigger="endReg"><![CDATA[TSL.wkstn_id <= ?]]></Expression>
      <Expression trigger="transSeq"><![CDATA[TSL.trans_seq = ?]]></Expression>
      <Expression trigger="customerId"><![CDATA[COALESCE(/*UPPER*/ CRM.cust_id,'') = ?]]></Expression>
      <Expression trigger="employeeId"><![CDATA[COALESCE(/*UPPER*/ CRE.employee_id,'') = ?]]></Expression>
      <Expression trigger="transactionType"><![CDATA[/*UPPER*/ TRN.trans_typcode = ?]]></Expression>
      <Expression parameters="transSeq, transSeq" trigger="transSeq"><![CDATA[(TRN.trans_seq = ?) or (/*UPPER*/ TRN.fiscal_number = ?)]]></Expression>
    </SQL>
  </Query>
  <Query name="JOURNAL_ROLL_TENDER_REPORT" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.data2.access.DefaultQueryResult</ResultClass>
    <ResultField name="business_date" type="Date" />
    <ResultField name="trans_seq" type="String" />
    <ResultField name="wkstn_id" type="String" />
    <ResultField name="description" type="String" />
    <ResultField name="amt" type="BigDecimal" />
    <ResultField name="tndr_statcode" type="String" />
    <SQL>
      <Statement dtype="String"><![CDATA[
          SELECT
            TTL.business_date,
            TTL.trans_seq,
            TTL.wkstn_id,
            TND.description,
            TTL.amt,
            TTL.tndr_statcode
          FROM ttr_tndr_lineitm TTL

          INNER JOIN tnd_tndr TND ON
            TND.organization_id = TTL.organization_id
            AND TND.tndr_id = /*UPPER*/ TTL.tndr_id

          INNER JOIN trl_rtrans_lineitm TRL ON
            TTL.organization_id = TRL.organization_id
            AND TTL.rtl_loc_id = TRL.rtl_loc_id
            AND TTL.wkstn_id = TRL.wkstn_id
            AND TTL.trans_seq = TRL.trans_seq
            AND TTL.business_date = TRL.business_date
            AND TTL.rtrans_lineitm_seq = TRL.rtrans_lineitm_seq

          INNER JOIN trn_trans trn ON 
            trl.organization_id = trn.organization_id
            AND trl.rtl_loc_id     = trn.rtl_loc_id
            AND trl.business_date  = trn.business_date
            AND trl.wkstn_id       = trn.wkstn_id
            AND trl.trans_seq      = trn.trans_seq

          LEFT OUTER JOIN crm_party CRE ON
            TRN.organization_id    = CRE.organization_id

          LEFT OUTER JOIN  trl_rtrans rts ON
            TRN.organization_id = rts.organization_id
            AND TRN.rtl_loc_id = rts.rtl_loc_id
            AND TRN.business_date = rts.business_date
            AND TRN.trans_seq = rts.trans_seq
            AND TRN.wkstn_id = rts.wkstn_id

         LEFT OUTER JOIN crm_party crm ON
            TRN.organization_id = crm.organization_id
            AND rts.cust_party_id = crm.party_id

          WHERE TRN.operator_party_id = CRE.party_id
            AND TTL.organization_id = ?
            AND TTL.rtl_loc_id = ?
            AND TRL.void_flag = 0
      ]]></Statement>
      <Parameter name="organizationId" />
      <Parameter name="retailLocationId" />
      <Expression parameters="argBusinessDateStart, argBusinessDateEnd" trigger="argBusinessDateStart"><![CDATA[trn.trans_date BETWEEN ? AND ?]]></Expression>
      <Expression trigger="startReg"><![CDATA[TTL.wkstn_id >= ?]]></Expression>
      <Expression trigger="endReg"><![CDATA[TTL.wkstn_id <= ?]]></Expression>
      <Expression trigger="customerId"><![CDATA[COALESCE(/*UPPER*/ CRM.cust_id,'') = ?]]></Expression>
      <Expression trigger="tndrId"><![CDATA[COALESCE(/*UPPER*/ TTL.tndr_id,'') = ?]]></Expression>
      <Expression trigger="transSeq"><![CDATA[TTL.trans_seq = ?]]></Expression>
      <Expression trigger="transactionType"><![CDATA[/*UPPER*/ TRN.trans_typcode = ?]]></Expression>
      <Expression trigger="employeeId"><![CDATA[COALESCE(/*UPPER*/ CRE.employee_id,'') = ?]]></Expression>
    </SQL>
  </Query>
  <Query name="JOURNAL_ROLL_TRANSACTION_REPORT" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.data2.access.DefaultQueryResult</ResultClass>
    <ResultField name="trans_seq" type="String" />
    <ResultField name="business_date" type="Date" />
    <ResultField name="trans_date" type="Date" />
    <ResultField name="trans_typcode" type="String" />
    <ResultField name="total" type="BigDecimal" />
    <ResultField name="taxtotal" type="BigDecimal" />
    <ResultField name="tenderControlTranTypeCode" type="String" />
    <ResultField name="sessionControlTranTypeCode" type="String" />
    <ResultField name="wkstn_id" type="String" />
    <ResultField name="rtl_loc_id" type="String" />
    <ResultField name="trans_statcode" type="String" />
    <ResultField name="employee_id" type="String" />
    <ResultField name="cust_name" type="String" />
    <SQL>
      <Statement dtype="String"><![CDATA[
          SELECT
            DISTINCT TRN.trans_seq,
            TRN.business_date,
            TRN.trans_date,
            TRN.trans_typcode AS trans_typcode,
            COALESCE(TRN.total, TCT.amt),
            TRN.taxtotal,
            TCT.typcode tenderControlTranTypeCode,
            TST.typcode sessionControlTranTypeCode,
            TRN.wkstn_id,
            TRN.rtl_loc_id,
            TRN.trans_statcode AS trans_statcode,
            CRE.employee_id,
            CASE WHEN COALESCE(/*UPPER*/ CRP.first_name,' ') <> ' ' OR COALESCE(/*UPPER*/ CRP.last_name,' ') <> ' ' 
                 THEN CONCAT(CRP.first_name, CONCAT('::', CRP.last_name)) END
                 AS cust_name

          FROM
            crm_party CRE,
            trn_trans TRN

          LEFT OUTER JOIN
            tsn_session_control_trans TST
          ON
            TRN.organization_id = TST.organization_id
            AND TRN.rtl_loc_id = TST.rtl_loc_id
            AND TRN.wkstn_id = TST.wkstn_id
            AND TRN.business_date = TST.business_date
            AND TRN.trans_seq = TST.trans_seq

          LEFT OUTER JOIN
            tsn_tndr_control_trans TCT
          ON
            TRN.organization_id=TCT.organization_id
            AND TRN.rtl_loc_id=TCT.rtl_loc_id
            AND TRN.wkstn_id=TCT.wkstn_id
            AND TRN.business_date=TCT.business_date
            AND TRN.trans_seq=TCT.trans_seq

          LEFT OUTER JOIN
            trl_rtrans rts
          ON
            TRN.organization_id = rts.organization_id
            AND TRN.rtl_loc_id = rts.rtl_loc_id
            AND TRN.business_date = rts.business_date
            AND TRN.trans_seq = rts.trans_seq
            AND TRN.wkstn_id = rts.wkstn_id

         LEFT OUTER JOIN
            crm_party crm
         ON
            TRN.organization_id = crm.organization_id
            AND rts.cust_party_id = crm.party_id

          LEFT OUTER JOIN
            crm_party CRP
          ON
            rts.organization_id = CRP.organization_id
            AND rts.cust_party_id = CRP.party_id

          LEFT OUTER JOIN
            ttr_tndr_lineitm TTR
          ON
            TRN.organization_id = TTR.organization_id
            AND TRN.rtl_loc_id = TTR.rtl_loc_id
            AND TRN.wkstn_id = TTR.wkstn_id
            AND TRN.business_date = TTR.business_date
            AND TRN.trans_seq = TTR.trans_seq

          WHERE
            TRN.operator_party_id = CRE.party_id
            AND CRE.organization_id = TRN.organization_id
            AND TRN.organization_id = ?
            AND TRN.rtl_loc_id = ?
      ]]></Statement>
      <Parameter name="organizationId" />
      <Parameter name="retailLocationId" />
      <Expression parameters="argBusinessDateStart, argBusinessDateEnd" trigger="argBusinessDateStart"><![CDATA[TRN.trans_date BETWEEN ? AND ?]]></Expression>
      <Expression trigger="startReg"><![CDATA[TRN.wkstn_id >= ?]]></Expression>
      <Expression trigger="endReg"><![CDATA[TRN.wkstn_id <= ?]]></Expression>
      <Expression trigger="customerId"><![CDATA[COALESCE(/*UPPER*/ CRM.cust_id,'') = ?]]></Expression>
      <Expression trigger="tndrId"><![CDATA[COALESCE(/*UPPER*/ TTR.tndr_id,'') = ?]]></Expression>
      <Expression parameters="transSeq, transSeq" trigger="transSeq"><![CDATA[(TRN.trans_seq = ?) or (/*UPPER*/ TRN.fiscal_number = ?)]]></Expression>
      <Expression trigger="transactionType"><![CDATA[/*UPPER*/ TRN.trans_typcode = ?]]></Expression>
      <Expression trigger="employeeId"><![CDATA[COALESCE(/*UPPER*/ CRE.employee_id,'') = ?]]></Expression>
    </SQL>
    <Suffix dtype="String"><![CDATA[ORDER BY TRN.trans_seq DESC]]></Suffix>
  </Query>
  
  <Query name="LAYAWAY_ACCOUNT_ACTIVITY_DETAIL_REPORT" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.data2.access.DefaultQueryResult</ResultClass>
    <ResultField name="cust_acct_id" type="String" />
    <ResultField name="trans_seq" type="String" />
    <ResultField name="business_date" type="Date" />
    <ResultField name="last_name" type="String" />
    <ResultField name="item_id" type="String" />
    <ResultField name="description" type="String" />
    <ResultField name="employee_party_id" type="String" />
    <ResultField name="item_acct_lineitm_statcode" type="String" />
    <ResultField name="item_acct_activity_code" type="String" />
    <ResultField name="quantity" type="BigDecimal" />
    <ResultField name="unit_price" type="BigDecimal" />
    <ResultField name="line_typcode" type="String" />
    <ResultField name="extended_amt" type="BigDecimal" />
    <ResultField name="setup_date" type="Date" />
    <ResultField name="last_activity_date" type="Date" />
    <ResultField name="last_payment_date" type="Date" />
    <ResultField name="seq_nbr" type="String" />
    <ResultField name="cust_item_acct_detail_item_nbr" type="String" />

    <SQL>
      <Statement dtype="String"><![CDATA[
        select * from (
          SELECT
            cciaa.cust_acct_id,
            cciaa.trans_seq,
            cciaa.business_date,
            crm.last_name as last_name,
            tsl.item_id,
            itm.description,
            tcm.employee_party_id,
            cciaa.item_acct_lineitm_statcode,
            cciaa.item_acct_activity_code,
            case when cciaa.quantity is null then tsl.quantity else cciaa.quantity end as quantity,
            case when cciaa.unit_price is null then tsl.unit_price else cciaa.unit_price end as unit_price,
            cciaa.line_typcode,
            cciaa.extended_amt,
            ca.acct_setup_date as setup_date,
            ca.last_activity_date as last_activity_date,
            (
              SELECT
                MAX(caa.business_date)
              FROM
                cat_cust_item_acct_activity caa
              WHERE
                ca.cust_acct_id = caa.cust_acct_id
                AND ca.cust_acct_code = caa.cust_acct_code
                AND ca.organization_id = caa.organization_id
                AND (/*UPPER*/ caa.line_typcode='PAYMENT' OR /*UPPER*/ caa.line_typcode='DEPOSIT')
            ) as last_payment_date,
            cciaa.seq_nbr,
            cciaa.cust_item_acct_detail_item_nbr
               
          FROM cat_cust_item_acct_activity cciaa

          INNER JOIN trl_sale_lineitm tsl ON
            cciaa.organization_id = tsl.organization_id
            AND cciaa.rtrans_lineitm_seq = tsl.rtrans_lineitm_seq
            AND cciaa.rtl_loc_id = tsl.rtl_loc_id
            AND cciaa.wkstn_id = tsl.wkstn_id
            AND cciaa.business_date = tsl.business_date
            AND cciaa.trans_seq = tsl.trans_seq

          INNER JOIN itm_item itm ON
            tsl.organization_id = itm.organization_id
            AND /*UPPER*/ tsl.item_id = itm.item_id
            
          INNER JOIN cat_cust_acct ca ON
            ca.organization_id = cciaa.organization_id
            AND ca.cust_acct_id   = cciaa.cust_acct_id  
        
          INNER JOIN crm_party crm ON
            ca.organization_id = crm.organization_id
            AND ca.party_id = crm.party_id                      

          LEFT OUTER JOIN trl_commission_mod tcm ON
            cciaa.organization_id = tcm.organization_id
            AND cciaa.rtrans_lineitm_seq = tcm.rtrans_lineitm_seq
            AND cciaa.rtl_loc_id = tcm.rtl_loc_id
            AND cciaa.wkstn_id = tcm.wkstn_id
            AND cciaa.business_date = tcm.business_date
            AND cciaa.trans_seq = tcm.trans_seq
            AND tcm.commission_mod_seq_nbr = '1'
          WHERE
            ca.cust_acct_code = 'LAYAWAY'
            AND cciaa.organization_id = ?
            AND cciaa.rtl_loc_id = ?
            AND /*UPPER*/ ca.cust_acct_statcode LIKE ?
            AND 'SUMMARY' <> ? 
          ) dt
       WHERE (? = 'SETUP DATE' and setup_date between ? and ?) 
          OR (? = 'LAST ACTIVITY DATE' and last_activity_date between ? and ?)
          OR (? = 'LAST PAYMENT DATE' and last_payment_date between ? and ?) 
          
       ORDER BY trans_seq DESC 
      ]]></Statement>
      <Parameter name="organizationId" />
      <Parameter name="retailLocationId" />
      <Parameter name="accountStatus" />
      <Parameter name="displayOption" />
      <Parameter name="baseAgeOn" />
      <Parameter name="argBusinessDateStart" />
      <Parameter name="argBusinessDateEnd" />
      <Parameter name="baseAgeOn" />
      <Parameter name="argBusinessDateStart" />
      <Parameter name="argBusinessDateEnd" />
      <Parameter name="baseAgeOn" />
      <Parameter name="argBusinessDateStart" />
      <Parameter name="argBusinessDateEnd" />
    </SQL>
  </Query>
  <Query name="LAYAWAY_ACCOUNT_ACTIVITY_SUMMARY_REPORT" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.data2.access.DefaultQueryResult</ResultClass>
    <ResultField name="cust_acct_id" type="String" />
    <ResultField name="customer_name" type="String" />
    <ResultField name="last_name" type="String" />
    <ResultField name="party_id" type="String" />
    <ResultField name="telephone1" type="String" />
    <ResultField name="setup_date" type="Date" />
    <ResultField name="last_activity_date" type="Date" />
    <ResultField name="last_payment_date" type="Date" />
    <ResultField name="cust_acct_statcode" type="String" />
    <ResultField name="acct_total" type="BigDecimal" />
    <ResultField name="total_payment_amt" type="BigDecimal" />
    <ResultField name="acct_balance" type="BigDecimal" />
    <SQL>
      <Statement dtype="String"><![CDATA[
        select * from (
          SELECT
            ca.cust_acct_id,
            CONCAT(CONCAT(CRM.first_name, '::'), CRM.last_name) AS customer_name,
            CRM.last_name as last_name, 
            ca.party_id,
            cpt.telephone_number as telephone1,
            ca.acct_setup_date as setup_date,
            ca.last_activity_date as last_activity_date,
            (
              SELECT
                MAX(caa.business_date)
              FROM
                cat_cust_item_acct_activity caa
              WHERE
                ca.cust_acct_id = caa.cust_acct_id
                AND ca.cust_acct_code = caa.cust_acct_code
                AND ca.organization_id = caa.organization_id
                AND (/*UPPER*/ caa.line_typcode='PAYMENT' OR /*UPPER*/ caa.line_typcode='DEPOSIT')
            ) as last_payment_date,
            ca.cust_acct_statcode,
            cia.acct_total,
            cia.total_payment_amt,
            ca.acct_balance
          FROM
            cat_cust_acct ca

          INNER JOIN
            cat_cust_item_acct cia
          ON
            ca.organization_id = cia.organization_id
            AND ca.cust_acct_id = cia.cust_acct_id
            AND ca.cust_acct_code = cia.cust_acct_code

          INNER JOIN
            crm_party crm
          ON
            ca.organization_id = crm.organization_id
            AND ca.party_id = crm.party_id
      LEFT OUTER JOIN
        crm_party_telephone cpt ON crm.party_id = cpt.party_id AND crm.organization_id = cpt.organization_id AND cpt.telephone_type = /*UPPER*/ 'Home'
          WHERE
            ca.cust_acct_code = 'LAYAWAY'
            AND ca.organization_id = ?
            AND ca.rtl_loc_id = ?
            AND /*UPPER*/ ca.cust_acct_statcode LIKE ?
            AND 'DETAIL' <> ? ) dt
      WHERE (? = 'SETUP DATE' and setup_date between ? and ?) 
         OR (? = 'LAST ACTIVITY DATE' and last_activity_date between ? and ?)
         OR (? = 'LAST PAYMENT DATE' and last_payment_date between ? and ?) 
                
      ]]></Statement>
      <Parameter name="organizationId" />
      <Parameter name="retailLocationId" />
      <Parameter name="accountStatus" />
      <Parameter name="displayOption" />
      <Parameter name="baseAgeOn" />
      <Parameter name="argBusinessDateStart" />
      <Parameter name="argBusinessDateEnd" />
      <Parameter name="baseAgeOn" />
      <Parameter name="argBusinessDateStart" />
      <Parameter name="argBusinessDateEnd" />
      <Parameter name="baseAgeOn" />
      <Parameter name="argBusinessDateStart" />
      <Parameter name="argBusinessDateEnd" />
    </SQL>
    <Sort field="sortOrder" />
  </Query>
  <Query name="LAYAWAY_AGING_DETAIL_REPORT" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.data2.access.DefaultQueryResult</ResultClass>
    <ResultField name="cust_acct_id" type="String" />
    <ResultField name="trans_seq" type="String" />
    <ResultField name="business_date" type="Date" />
    <ResultField name="last_name" type="String" />
    <ResultField name="item_id" type="String" />
    <ResultField name="description" type="String" />
    <ResultField name="employee_party_id" type="String" />
    <ResultField name="item_acct_lineitm_statcode" type="String" />
    <ResultField name="item_acct_activity_code" type="String" />
    <ResultField name="quantity" type="BigDecimal" />
    <ResultField name="unit_price" type="BigDecimal" />
    <ResultField name="line_typcode" type="String" />
    <ResultField name="extended_amt" type="BigDecimal" />
    <ResultField name="setup_date" type="Date" />
    <ResultField name="last_activity_date" type="Date" />
    <ResultField name="last_payment_date" type="Date" />
    <SQL>
      <Statement dtype="String"><![CDATA[
        select * from (
          SELECT
            cciaa.cust_acct_id,
            cciaa.trans_seq,
            cciaa.business_date,
            crm.last_name as last_name,
            tsl.item_id,
            itm.description,
            tcm.employee_party_id,
            cciaa.item_acct_lineitm_statcode,
            cciaa.item_acct_activity_code,
            CASE WHEN cciaa.quantity IS NULL THEN tsl.quantity ELSE cciaa.quantity END AS quantity,
            CASE WHEN cciaa.unit_price IS NULL THEN tsl.unit_price ELSE cciaa.unit_price END AS unit_price,
            cciaa.line_typcode,
            cciaa.extended_amt,
            ca.acct_setup_date as setup_date,
            ca.last_activity_date as last_activity_date,
            (
              SELECT
                MAX(caa.business_date)
              FROM
                cat_cust_item_acct_activity caa
              WHERE
                ca.cust_acct_id = caa.cust_acct_id
                AND ca.cust_acct_code = caa.cust_acct_code
                AND ca.organization_id = caa.organization_id
                AND (/*UPPER*/ caa.line_typcode='PAYMENT' OR /*UPPER*/ caa.line_typcode='DEPOSIT')
            ) as last_payment_date
          FROM cat_cust_item_acct_activity cciaa

          INNER JOIN trl_sale_lineitm tsl ON
            cciaa.organization_id = tsl.organization_id
            AND cciaa.rtrans_lineitm_seq = tsl.rtrans_lineitm_seq
            AND cciaa.rtl_loc_id = tsl.rtl_loc_id
            AND cciaa.wkstn_id = tsl.wkstn_id
            AND cciaa.business_date = tsl.business_date
            AND cciaa.trans_seq = tsl.trans_seq

          INNER JOIN itm_item itm ON
            tsl.organization_id = itm.organization_id
            AND /*UPPER*/ tsl.item_id = itm.item_id
            
          INNER JOIN cat_cust_acct ca ON
            ca.organization_id = cciaa.organization_id
            AND ca.cust_acct_id   = cciaa.cust_acct_id   
            
          INNER JOIN crm_party crm ON
            ca.organization_id = crm.organization_id
            AND ca.party_id = crm.party_id                           

          LEFT OUTER JOIN trl_commission_mod tcm ON
            cciaa.organization_id = tcm.organization_id
            AND cciaa.rtrans_lineitm_seq = tcm.rtrans_lineitm_seq
            AND cciaa.rtl_loc_id = tcm.rtl_loc_id
            AND cciaa.wkstn_id = tcm.wkstn_id
            AND cciaa.business_date = tcm.business_date
            AND cciaa.trans_seq = tcm.trans_seq
            AND tcm.commission_mod_seq_nbr = '1'

          WHERE
            cciaa.organization_id = ?
            AND cciaa.rtl_loc_id = ?
            AND /*UPPER*/ ca.cust_acct_statcode <> 'CLOSED'
            AND ca.cust_acct_code = 'LAYAWAY'
            AND 'SUMMARY' <> ? ) dt
         where (? = 'SETUP DATE' and setup_date < ?
         OR ? = 'LAST ACTIVITY DATE' and last_activity_date < ? 
         OR ? = 'LAST PAYMENT DATE' and last_payment_date < ? )
      ]]></Statement>
      <Parameter name="organizationId" />
      <Parameter name="retailLocationId" />
      <Parameter name="displayOption" />
      <Parameter name="baseAgeOn" />
      <Parameter name="argBusinessDateEnd" />
      <Parameter name="baseAgeOn" />
      <Parameter name="argBusinessDateEnd" />
      <Parameter name="baseAgeOn" />
      <Parameter name="argBusinessDateEnd" />
      <Expression
        parameters="agingRangeCriteria, baseAgeOn, argBusinessDateStart, baseAgeOn, argBusinessDateStart, baseAgeOn, argBusinessDateStart"
        trigger="argBusinessDateStart">
          <![CDATA[('ALL' = ? ) OR (? = 'SETUP DATE' and setup_date >= ?) OR (? = 'LAST ACTIVITY DATE' and last_activity_date >= ? ) OR (? = 'LAST PAYMENT DATE' and last_payment_date >= ? ) ]]></Expression>
    </SQL>
    <Sort field="sortOrder" />
  </Query>
  <Query name="LAYAWAY_AGING_SUMMARY_REPORT" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.data2.access.DefaultQueryResult</ResultClass>
    <ResultField name="cust_acct_id" type="String" />
    <ResultField name="customer_name" type="String" />
    <ResultField name="last_name" type="String" />
    <ResultField name="party_id" type="String" />
    <ResultField name="telephone1" type="String" />
    <ResultField name="setup_date" type="Date" />
    <ResultField name="last_activity_date" type="Date" />
    <ResultField name="last_payment_date" type="Date" />
    <ResultField name="acct_total" type="BigDecimal" />
    <ResultField name="total_payment_amt" type="BigDecimal" />
    <ResultField name="acct_balance" type="BigDecimal" />
    <SQL>
      <Statement dtype="String"><![CDATA[
        select * from (
          SELECT
            ca.cust_acct_id,
            CONCAT(CONCAT(CRM.first_name, '::'), CRM.last_name) AS customer_name,
            crm.last_name as last_name,
            ca.party_id,
            cpt.telephone_number AS telephone1,
            ca.acct_setup_date as setup_date,
            ca.last_activity_date as last_activity_date,
            (
              SELECT
                MAX(caa.business_date)
              FROM
                cat_cust_item_acct_activity caa
              WHERE
                ca.cust_acct_id = caa.cust_acct_id
                AND ca.cust_acct_code = caa.cust_acct_code
                AND ca.organization_id = caa.organization_id
                AND (/*UPPER*/ caa.line_typcode='PAYMENT' or /*UPPER*/ caa.line_typcode='DEPOSIT')
            ) AS last_payment_date,
            cia.acct_total,
            cia.total_payment_amt,
            ca.acct_balance
          FROM
            cat_cust_acct ca

          INNER JOIN
            cat_cust_item_acct cia
          ON
            ca.organization_id = cia.organization_id
            AND ca.cust_acct_id = cia.cust_acct_id
            AND ca.cust_acct_code = cia.cust_acct_code

          INNER JOIN
            crm_party crm
          ON
            ca.organization_id = crm.organization_id
            AND ca.party_id = crm.party_id

      LEFT OUTER JOIN
        crm_party_telephone cpt ON crm.party_id = cpt.party_id AND crm.organization_id = cpt.organization_id AND cpt.telephone_type = /*UPPER*/ 'Home'

          WHERE
            ca.cust_acct_code = 'LAYAWAY'
            AND /*UPPER*/ ca.cust_acct_statcode <> 'CLOSED'
            AND ca.organization_id = ?
            AND ca.rtl_loc_id = ?
            AND 'DETAIL' <> ? ) dt
      where (? = 'SETUP DATE' and setup_date < ?
         OR ? = 'LAST ACTIVITY DATE' and last_activity_date < ? 
         OR ? = 'LAST PAYMENT DATE' and last_payment_date < ? )
      ]]></Statement>
      <Parameter name="organizationId" />
      <Parameter name="retailLocationId" />
      <Parameter name="displayOption" />
      <Parameter name="baseAgeOn" />
      <Parameter name="argBusinessDateEnd" />
      <Parameter name="baseAgeOn" />
      <Parameter name="argBusinessDateEnd" />
      <Parameter name="baseAgeOn" />
      <Parameter name="argBusinessDateEnd" />
      <Expression
        parameters="agingRangeCriteria, baseAgeOn, argBusinessDateStart, baseAgeOn, argBusinessDateStart, baseAgeOn, argBusinessDateStart"
        trigger="argBusinessDateStart">
          <![CDATA[('ALL' = ? ) OR (? = 'SETUP DATE' and setup_date >= ?) OR (? = 'LAST ACTIVITY DATE' and last_activity_date >= ? ) OR (? = 'LAST PAYMENT DATE' and last_payment_date >= ? ) ]]></Expression>
    </SQL>
    <Sort field="sortOrder" />
  </Query>
  <Query name="LINE_VOID_REPORT" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.data2.access.DefaultQueryResult</ResultClass>
    <ResultField name="transaction_number" type="String" />
    <ResultField name="sold_by" type="String" />
    <ResultField name="associate_no" type="String" />
    <ResultField name="register_no" type="String" />
    <ResultField name="transaction_time" type="Date" />
    <ResultField name="amount" type="BigDecimal" />
    <ResultField name="itemid" type="String" />
    <ResultField name="itemdesc" type="String" />
    <ResultField name="quantity" type="String" />
    <ResultField name="unitprice" type="BigDecimal" />
    <ResultField name="netamount" type="BigDecimal" />
    <ResultField name="business_date" type="Date" />
    <SQL>
      <Statement dtype="String"><![CDATA[
          SELECT
            trl.trans_seq AS transaction_number,
            crm.employee_id AS sold_by,
            crm.employee_id AS associate_no,
            trn.wkstn_id AS register_no,
            trn.begin_datetime AS transaction_time,
            trn.total AS amount,
            rpt.item_id AS itemid,
            (
              SELECT
                description
              FROM
                itm_item
              WHERE
                organization_id = trl.organization_id
                AND item_id = /*UPPER*/ rpt.item_id
            ) AS itemdesc,
            rpt.quantity AS quantity,
            rpt.unit_price AS unitprice,
            rpt.net_amt AS netamount,
            trn.business_date
          FROM
            trl_rtrans_lineitm trl

          INNER JOIN
            trl_sale_lineitm rpt
          ON
            trl.organization_id = rpt.organization_id
            AND trl.rtl_loc_id = rpt.rtl_loc_id
            AND trl.rtrans_lineitm_seq = rpt.rtrans_lineitm_seq
            AND trl.wkstn_id = rpt.wkstn_id
            AND trl.business_date = rpt.business_date
            AND trl.trans_seq = rpt.trans_seq

          INNER JOIN
            trn_trans trn
          ON
            trl.organization_id = trn.organization_id
            AND trl.rtl_loc_id = trn.rtl_loc_id
            AND trl.wkstn_id = trn.wkstn_id
            AND trl.business_date = trn.business_date
            AND trl.trans_seq = trn.trans_seq

          INNER JOIN
            crm_party crm
          ON
            trl.organization_id = crm.organization_id
            AND trn.operator_party_id = crm.party_id

          WHERE
            trn.organization_id = ?
            AND trn.rtl_loc_id = ?
            AND trl.void_flag = 1
            AND /*UPPER*/ trn.trans_statcode <> 'CANCEL'
            AND trn.trans_date BETWEEN ? AND ?
          ORDER BY trn.trans_seq, trn.wkstn_id, trn.begin_datetime, crm.employee_id
      ]]></Statement>
      <Parameter name="organizationId" />
      <Parameter name="retailLocationId" />
      <Parameter name="argBusinessDateStart" />
      <Parameter name="argBusinessDateEnd" />
    </SQL>
  </Query>
  <Query name="NIGHTLY_CONTROL_ASSOCIATE_REPORT" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.data2.access.DefaultQueryResult</ResultClass>
    <ResultField name="employee_id" type="String" />
    <ResultField name="employee_name" type="String" />
    <ResultField name="sales" type="BigDecimal" />
    <ResultField name="duration" type="BigDecimal" />
    <ResultField name="sales_per_hour" type="BigDecimal" />
    <SQL>
      <Statement dtype="String"><![CDATA[
        SELECT employee_id, 
          employee_name,
          sales,
          duration,
          sales/(duration/3600000) sales_per_hour
        FROM ( 
        SELECT HRE.employee_id,
               CONCAT(HRE.first_name, CONCAT('::', HRE.last_name))  AS employee_name, 
               SUM(TSL.gross_amt * TCM.percentage_of_item) AS sales,
               SUM(TTE.duration) AS duration 
        FROM crm_party HRE, rpt_trl_sale_lineitm_view TSL, trl_commission_mod TCM
        LEFT OUTER JOIN thr_timecard_entry TTE
        ON TTE.organization_id = TCM.organization_id
          AND TTE.rtl_loc_id = TCM.rtl_loc_id
          AND TTE.business_Date = TCM.business_date
          AND TTE.party_id = TCM.employee_party_id
        WHERE TSL.trans_seq = TCM.trans_seq
          AND TSL.organization_id = TCM.organization_id
          AND TSL.wkstn_id = TCM.wkstn_id
          AND TSL.business_date = TCM.business_date
          AND TSL.rtl_loc_id = TCM.rtl_loc_id
          AND TCM.employee_party_id = HRE.party_id
          AND /*UPPER*/ TSL.trans_statcode = 'COMPLETE'
          AND TSL.organization_id = ?
          AND TSL.rtl_loc_id = ?
          AND TSL.business_date = ?
          AND HRE.organization_id = TSL.organization_id
          AND TCM.rtrans_lineitm_seq = TSL.rtrans_lineitm_seq
      ]]></Statement>
      <Parameter name="organizationId" />
      <Parameter name="retailLocationId" />
      <Parameter name="argBusinessDateStart" />
    </SQL>
    <Suffix dtype="String"><![CDATA[GROUP BY HRE.employee_id, HRE.first_name, HRE.last_name) a]]></Suffix>
  </Query>
  <Query name="NIGHTLY_CONTROL_MERCHLVL1_REPORT" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.data2.access.DefaultQueryResult</ResultClass>
    <ResultField name="dept_id" type="String" />
    <ResultField name="description" type="String" />
    <ResultField name="line_count" type="BigDecimal" />
    <ResultField name="item_amt" type="BigDecimal" />
    <SQL>
      <Statement dtype="String"><![CDATA[
        SELECT rms.merch_level_1, imh.description, SUM(rms.line_count) AS line_count, SUM(rms.line_amt) AS item_amt
        FROM rpt_merchlvl1_sales rms, itm_merch_hierarchy imh
        WHERE rms.merch_level_1 = imh.hierarchy_id
          AND rms.business_date = ?
      ]]></Statement>
      <Parameter name="argBusinessDateStart" />
    </SQL>
    <Suffix dtype="String"><![CDATA[GROUP BY rms.merch_level_1, imh.description ORDER BY item_amt desc]]></Suffix>
  </Query>
  <Query name="NIGHTLY_CONTROL_TENDER_REPORT" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.data2.access.DefaultQueryResult</ResultClass>
    <ResultField name="group_sort" type="String" />
    <ResultField name="group_name" type="String" />
    <ResultField name="description" type="String" />
    <ResultField name="line_count" type="BigDecimal" />
    <ResultField name="line_amt" type="BigDecimal" />
    <SQL>
      <Statement dtype="String"><![CDATA[
      SELECT '1', '_rptNigthlyCtlCharges' AS group_name, 
        ttr.description, SUM(rfs.line_count) AS line_count,
        SUM(rfs.line_amt) AS line_amt
        FROM rpt_flash_sales rfs, tnd_tndr ttr
        WHERE /*UPPER*/ ttr.tndr_typcode = 'CREDIT_CARD'
          AND ttr.tndr_id = rfs.line_enum
          AND rfs.business_date = ?
        GROUP BY ttr.description
      ]]></Statement>
      <Parameter name="argBusinessDateStart" />
    </SQL>
    <SQL>
      <Statement dtype="String"><![CDATA[
      
        UNION
        
        SELECT '2', '_rptNigthlyCtlOther' AS group_name,
          ttr.description, SUM(rfs.line_count) AS line_count, SUM(rfs.line_amt) AS line_amt 
        FROM rpt_flash_sales rfs, tnd_tndr ttr
        WHERE  ttr.tndr_id = rfs.line_enum
          AND /*UPPER*/ ttr.tndr_typcode in ('VOUCHER','COUPON','TRAVELLERS_CHECK','PAYROLL_DEDUCTION','MISCELLANEOUS','ACCOUNT_CREDIT','ACCOUNT')
          AND rfs.business_date = ? 
        GROUP BY ttr.description
      ]]></Statement>
      <Parameter name="argBusinessDateStart" />
    </SQL>
    <SQL>
      <Statement dtype="String"><![CDATA[
      
        UNION
        
        SELECT '3', '_rptNigthlyCtlCashCheck' AS group_name,
          ttr.description, SUM(rfs.line_count) AS line_count, SUM(rfs.line_amt) AS line_amt 
        FROM rpt_flash_sales rfs, tnd_tndr ttr 
        WHERE  ttr.tndr_id = rfs.line_enum
          AND /*UPPER*/ ttr.tndr_typcode in ('CURRENCY','CHECK')
          AND rfs.business_date = ?
        GROUP BY ttr.description
      ]]></Statement>
      <Parameter name="argBusinessDateStart" />
    </SQL>
    <Suffix dtype="String"><![CDATA[ORDER BY 1]]></Suffix>
  </Query>
  <Query name="NIGHTLY_CONTROL_TOTAL_REPORT" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.data2.access.DefaultQueryResult</ResultClass>
    <ResultField name="line_enum" type="String" />
    <ResultField name="line_count" type="BigDecimal" />
    <ResultField name="line_amt" type="BigDecimal" />
    <ResultField name="line_avg" type="BigDecimal" />
    <SQL>
      <Statement dtype="String"><![CDATA[
            SELECT line_enum,
                  line_count,
                  line_amt,
                    CASE WHEN line_count = 0
                         THEN NULL
                         ELSE line_amt/line_count
                         END AS line_avg
      FROM 
        (SELECT
            line_enum,
            SUM(line_count) AS line_count,
            SUM(line_amt) AS line_amt

          FROM
            rpt_flash_sales
          WHERE
            organization_id = ?
            AND rtl_loc_id = ?
            AND business_date = ?
            AND (line_enum = /*UPPER*/ 'NetSales'
            OR line_enum = /*UPPER*/ 'TotalTax')
          GROUP BY
            line_enum

          UNION

          SELECT
            typcode,
            0,
            SUM(amt) AS line_amt
          FROM
            tsn_tndr_control_trans
          WHERE
            organization_id = ?
            AND rtl_loc_id = ?
            AND business_date = ?
            AND (
              /*UPPER*/ typcode = 'PAID_IN'
              OR /*UPPER*/ typcode = 'PAID_OUT'
              OR /*UPPER*/ typcode = 'ASSOCIATE_ADVANCE'
            )
          GROUP BY
            typcode

          UNION

          SELECT
            'deposit' AS line_enum,
            0,
            COALESCE(SUM(TTC.amt), 0) -
              (SELECT
                COALESCE(SUM(TTR.last_closing_amount), 0)
              FROM
                tsn_tndr_repository_float TTR

              INNER JOIN
                tsn_tndr_control_trans TCT
              ON
                TTR.organization_id = TCT.organization_Id
                AND TTR.rtl_loc_id = TCT.rtl_loc_id
                AND TTR.tndr_repository_id = /*UPPER*/ TCT.outbound_tndr_repository_id

              WHERE
                TCT.organization_id = ?
                AND TCT.rtl_loc_id = ?
                AND /*UPPER*/ TCT.typcode = 'ENDCOUNT'
                AND TCT.business_date = ?
                AND TCT.outbound_session_id IN (
                  SELECT
                    MAX(outbound_session_id)
                  FROM
                    tsn_tndr_control_trans
                  WHERE
                    tsn_tndr_control_trans.rtl_loc_id = TTR.rtl_loc_id
                    AND tsn_tndr_control_trans.organization_id = TTR.organization_id
                    AND /*UPPER*/ tsn_tndr_control_trans.outbound_tndr_repository_id = TTR.tndr_repository_id
                    AND tsn_tndr_control_trans.organization_id = ?
                    AND tsn_tndr_control_trans.rtl_loc_id =  ?
                    AND /*UPPER*/ tsn_tndr_control_trans.typcode = 'ENDCOUNT'
                    AND tsn_tndr_control_trans.business_date = ?
                )
            ) AS line_amt
          FROM
            tsn_tndr_tndr_count TTC
          WHERE
            TTC.organization_id = ?
            AND TTC.rtl_loc_id = ?
            AND TTC.business_date = ?
            AND TTC.tndr_typcode = 'CURRENCY'
      ]]></Statement>
      <Parameter name="organizationId" />
      <Parameter name="retailLocationId" />
      <Parameter name="argBusinessDateStart" />
      <Parameter name="organizationId" />
      <Parameter name="retailLocationId" />
      <Parameter name="argBusinessDateStart" />
      <Parameter name="organizationId" />
      <Parameter name="retailLocationId" />
      <Parameter name="argBusinessDateStart" />
      <Parameter name="organizationId" />
      <Parameter name="retailLocationId" />
      <Parameter name="argBusinessDateStart" />
      <Parameter name="organizationId" />
      <Parameter name="retailLocationId" />
      <Parameter name="argBusinessDateStart" />
    </SQL>
    <Suffix dtype="String"><![CDATA[GROUP BY TTC.amt) a]]></Suffix>
  </Query>
  <Query name="NO_SALE_REPORT" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.data2.access.DefaultQueryResult</ResultClass>
    <ResultField name="trans_seq" type="String" />
    <ResultField name="trans_date" type="Date" />
    <ResultField name="wkstn_id" type="String" />
    <ResultField name="begin_datetime" type="Date" />
    <ResultField name="reason_code" type="String" />
    <ResultField name="employee_id" type="String" />
    <ResultField name="employee_name" type="String" />
    <ResultField name="description" type="String" />
    <SQL>
      <Statement dtype="String"><![CDATA[
          SELECT
            TT.trans_seq,
            TT.trans_date,
            TT.wkstn_id,
            TT.begin_datetime,
            TNST.no_sale_reascode AS reason_code,
            CP.employee_id,
            CASE WHEN COALESCE(/*UPPER*/ CP.first_name,' ') <> ' ' OR COALESCE(/*UPPER*/ CP.last_name,' ') <> ' ' 
                 THEN CONCAT(CP.first_name, CONCAT('::', CP.last_name)) END
                 AS employee_name,
            (
              SELECT
                description
              FROM
                com_reason_code
              WHERE
                organization_id = TNST.organization_id
                AND reason_code = /*UPPER*/ TNST.no_sale_reascode
                AND reason_typcode = 'NO_SALE'
            ) AS description
          FROM
            trn_trans TT

          LEFT OUTER JOIN
            trn_no_sale_trans TNST
          ON
            TT.organization_id = TNST.organization_id
            AND TT.trans_seq = TNST.trans_seq
            AND TT.rtl_loc_id = TNST.rtl_loc_id
            AND TT.wkstn_id = TNST.wkstn_id
            AND TT.business_date = TNST.business_date

          LEFT OUTER JOIN
            crm_party CP
          ON
            TT.organization_id = CP.organization_id
            AND TT.operator_party_id = CP.party_id

          WHERE
            TT.organization_id = ?
            AND TT.rtl_loc_id = ?
            AND /*UPPER*/ TT.trans_typcode = 'NO_SALE'
            AND /*UPPER*/ TT.trans_statcode = 'COMPLETE'
            AND TT.trans_date BETWEEN ? AND ?
          ORDER BY
            TT.trans_date, TT.begin_datetime, TT.trans_seq
      ]]></Statement>
      <Parameter name="organizationId" />
      <Parameter name="retailLocationId" />
      <Parameter name="argBusinessDateStart" />
      <Parameter name="argBusinessDateEnd" />
    </SQL>
  </Query>
  <Query name="OPEN_PRODUCT_REQUEST_SUMMARY_REPORT" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.data2.access.DefaultQueryResult</ResultClass>
    <ResultField name="documentId" type="String" />
    <ResultField name="submittedDate" type="Date" />
    <ResultField name="sourceEntityName" type="String" />
    <SQL>
      <Statement dtype="String"><![CDATA[
      SELECT DISTINCT
        IID.invctl_document_id,
        IID.submit_date,
        IVD.description
      FROM
        inv_invctl_document IID
        LEFT JOIN
        inv_invctl_document_lineitm IIDL
        ON
          IID.organization_id = IIDL.organization_id AND
              IID.rtl_loc_id = IIDL.rtl_loc_id AND
              IID.document_typcode = IIDL.document_typcode AND
              IID.invctl_document_id = IIDL.invctl_document_id AND
              /*UPPER*/ IIDL.status_code <>'VOID'

          LEFT JOIN
          inv_rep_document_lineitm PRLD
        ON
              PRLD.organization_id = IIDL.organization_id AND
              PRLD.rtl_loc_id = IIDL.rtl_loc_id AND
              PRLD.document_typcode = IIDL.document_typcode AND
              PRLD.invctl_document_id = IIDL.invctl_document_id AND
              PRLD.invctl_document_line_nbr = IIDL.invctl_document_line_nbr
          LEFT JOIN inv_valid_destinations IVD
        ON
              IVD.organization_id =PRLD.organization_id AND
              IVD.rtl_loc_id = PRLD.rtl_loc_id AND
              IVD.document_typcode = PRLD.document_typcode AND
              IVD.destination_id = /*UPPER*/ PRLD.source_id

      WHERE
        IID.organization_id = ? AND
        IID.rtl_loc_id = ? AND
        IID.document_typcode = 'REPLENISHMENT' AND
        /*UPPER*/ IID.status_code not IN ('CANCELLED','CLOSED')
      ]]></Statement>
      <Parameter name="organizationId" />
      <Parameter name="retailLocationId" />
    </SQL>
    <Suffix dtype="String"><![CDATA[ORDER BY IID.invctl_document_id,IVD.description]]></Suffix>
  </Query>
  <Query name="PAYROLL_CATEGORY_HOURS_REPORT" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.data2.access.DefaultQueryResult</ResultClass>
    <ResultField name="employee_id" type="String" />
    <ResultField name="first_name" type="String" />
    <ResultField name="last_name" type="String" />
    <ResultField name="business_date" type="Date" />
    <ResultField name="dayOfWeek" type="String" />
    <ResultField name="Bereavement" type="BigDecimal" />
    <ResultField name="DT" type="BigDecimal" />
    <ResultField name="Funeral" type="BigDecimal" />
    <ResultField name="Holiday" type="BigDecimal" />
    <ResultField name="Jury" type="BigDecimal" />
    <ResultField name="Overtime" type="BigDecimal" />
    <ResultField name="Personal" type="BigDecimal" />
    <ResultField name="Regular" type="BigDecimal" />
    <ResultField name="Sick" type="BigDecimal" />
    <ResultField name="Vacation" type="BigDecimal" />
    <ResultField name="Other" type="BigDecimal" />
    <ResultField name="DailyTotal" type="BigDecimal" />
    <ResultField name="NonWorking" type="BigDecimal" />
    <SQL>
      <Statement dtype="String"><![CDATA[
    SELECT 
        employee_id, 
        first_name, 
        last_name, 
        business_date, 
        to_char(business_date, 'DAY') as dayOfWeek,
        coalesce(BEREAVEMENT_SUM_QUANTITY,0) as Bereavement, 
        coalesce(DT_SUM_QUANTITY,0) as DT,
        coalesce(FUNERAL_SUM_QUANTITY, 0) as Funeral,
        coalesce(HOLIDAY_SUM_QUANTITY, 0) AS Holiday,
        coalesce(JURY_SUM_QUANTITY, 0) as Jury,
        coalesce(OVERTIME_SUM_QUANTITY, 0) as Overtime,
        coalesce(PERSONAL_SUM_QUANTITY, 0) as Personal,
        coalesce(REGULAR_SUM_QUANTITY, 0) as Regular,
        coalesce(SICK_SUM_QUANTITY, 0) as Sick,
        coalesce(VACATION_SUM_QUANTITY, 0) as Vacation,
        coalesce(BEREAVEMENT_SUM_QUANTITY,0) + coalesce(JURY_SUM_QUANTITY,0) + coalesce(HOLIDAY_SUM_QUANTITY,0) as Other, 
        coalesce(BEREAVEMENT_SUM_QUANTITY,0) + coalesce(DT_SUM_QUANTITY,0) +
        coalesce(FUNERAL_SUM_QUANTITY, 0) + coalesce(HOLIDAY_SUM_QUANTITY, 0) +
        coalesce(JURY_SUM_QUANTITY, 0) + coalesce(OVERTIME_SUM_QUANTITY, 0) + 
        coalesce(PERSONAL_SUM_QUANTITY, 0) + coalesce(REGULAR_SUM_QUANTITY, 0) + 
        coalesce(SICK_SUM_QUANTITY, 0) + coalesce(VACATION_SUM_QUANTITY, 0) as DailyTotal,
        coalesce(BEREAVEMENT_SUM_QUANTITY,0)+ coalesce(FUNERAL_SUM_QUANTITY, 0) + coalesce(HOLIDAY_SUM_QUANTITY, 0)+ coalesce(JURY_SUM_QUANTITY, 0) +
        coalesce(PERSONAL_SUM_QUANTITY, 0) + coalesce(SICK_SUM_QUANTITY, 0) + coalesce(VACATION_SUM_QUANTITY, 0) as NonWorking
    FROM   (
    SELECT EMP.employee_id, PRTY.first_name, PRTY.last_name, HRS.business_date, payroll_category, hours_count
        FROM   thr_payroll HRS
        INNER JOIN crm_party PRTY
            ON PRTY.party_id = HRS.party_id
        INNER JOIN hrs_employee EMP
            ON PRTY.party_id = EMP.party_id 
            AND PRTY.ORGANIZATION_ID = EMP.ORGANIZATION_ID      
    WHERE 
       HRS.organization_id=? 
       AND HRS.rtl_loc_id=?
       AND HRS.posted_date IS NOT NULL
          ]]></Statement>
      <Parameter name="organizationId" />
      <Parameter name="retailLocationId" />
      <Expression parameters="argBusinessDateStart,argBusinessDateEnd" trigger="argBusinessDateStart"><![CDATA[business_date BETWEEN ? AND ?]]></Expression>
      <Expression trigger="employeeId"><![CDATA[EMP.employee_id = ?]]></Expression>
    </SQL>
    <Suffix dtype="String"><![CDATA[
    )
    PIVOT  (SUM(hours_count) AS sum_quantity FOR (payroll_category) IN 
    (
    'BEREAVEMENT' AS Bereavement,
    'DT' AS DT,
    'FUNERAL' as Funeral,
    'HOLIDAY' AS Holiday,
    'JURY' as Jury,
    'OT' as Overtime,
    'OTHER' as Other,
    'PERSONAL' as Personal,
    'REGULAR' as Regular,
    'SICK' as Sick,
    'VACATION' as Vacation
    ))
    ORDER by employee_id, business_date
        ]]></Suffix>
  </Query>
  <Query name="POST_VOID_TRANSACTION_DETAIL_REPORT" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.data2.access.DefaultQueryResult</ResultClass>
    <ResultField name="transaction_number" type="String" />
    <ResultField name="trans_date" type="Date" />
    <ResultField name="sold_by" type="String" />
    <ResultField name="associate_no" type="String" />
    <ResultField name="register_no" type="String" />
    <ResultField name="transaction_time" type="Date" />
    <ResultField name="total" type="BigDecimal" />
    <ResultField name="tax" type="BigDecimal" />
    <ResultField name="reason_code_desc" type="String" />
    <ResultField name="lineitemseq" type="String" />
    <ResultField name="itemid" type="String" />
    <ResultField name="itemdesc" type="String" />
    <ResultField name="quantity" type="BigDecimal" />
    <ResultField name="unitprice" type="BigDecimal" />
    <ResultField name="netamount" type="BigDecimal" />
    <SQL>
      <Statement dtype="String"><![CDATA[
          SELECT
            trn_trans.trans_seq AS transaction_number,
            trn_trans.trans_date AS trans_date,
            crm_party.employee_id AS sold_by,
            crm_party.employee_id AS associate_no,
            trn_trans.wkstn_id AS register_no,
            trn_trans.begin_datetime AS transaction_time,
            COALESCE(trn_trans.total, 0) AS total,
            COALESCE(trn_trans.taxtotal,0) AS tax,
            COALESCE((
              SELECT
                description
              FROM
                com_reason_code
              WHERE
                organization_id = trn_trans.organization_id
                AND reason_code = (SELECT post_void_reascode
                                     FROM trn_post_void_trans vtrans JOIN trn_trans trans2
                                       ON vtrans.organization_id = trans2.organization_id
                                      AND vtrans.rtl_loc_id = trans2.rtl_loc_id
                                      AND vtrans.business_date = trans2.business_date
                                      AND vtrans.wkstn_id = trans2.wkstn_id
                                      AND vtrans.trans_seq = trans2.trans_seq
                                      AND /*UPPER*/ trans2.trans_statcode = 'COMPLETE'
                                    WHERE voided_org_id = trn_trans.organization_id
                                      AND voided_rtl_store_id = trn_trans.rtl_loc_id
                                      AND voided_wkstn_id = trn_trans.wkstn_id
                                      AND voided_business_date = trn_trans.business_date
                                      AND voided_trans_id = trn_trans.trans_seq)
                AND reason_typcode = 'POST_VOID'
            ), '_rptNotAvailable') AS reason_code_desc,
            rpt_sale_line.rtrans_lineitm_seq AS lineitemseq,
            rpt_sale_line.item_id AS itemid,
            rpt_sale_line.item_desc AS itemdesc,
            COALESCE(trl_sale_lineitm.quantity, 0) AS quantity,
            COALESCE(rpt_sale_line.unit_price, 0) AS unitprice,
            COALESCE(trl_sale_lineitm.extended_amt, 0) AS netamount
          FROM
            trn_trans

          INNER JOIN
            rpt_sale_line
          ON
            rpt_sale_line.organization_id = trn_trans.organization_id
            AND rpt_sale_line.rtl_loc_id = trn_trans.rtl_loc_id
            AND rpt_sale_line.wkstn_id = trn_trans.wkstn_id
            AND rpt_sale_line.trans_seq = trn_trans.trans_seq
            AND rpt_sale_line.business_date = trn_trans.business_date

          INNER JOIN
            crm_party
          ON
            crm_party.organization_id = trn_trans.organization_id
            AND crm_party.party_id = trn_trans.operator_party_id

          INNER JOIN
            trl_rtrans_lineitm
          ON
            trl_rtrans_lineitm.organization_id = rpt_sale_line.organization_id
            AND trl_rtrans_lineitm.rtl_loc_id = rpt_sale_line.rtl_loc_id
            AND trl_rtrans_lineitm.wkstn_id = rpt_sale_line.wkstn_id
            AND trl_rtrans_lineitm.trans_seq = rpt_sale_line.trans_seq
            AND trl_rtrans_lineitm.rtrans_lineitm_seq = rpt_sale_line.rtrans_lineitm_seq
            AND trl_rtrans_lineitm.business_date = rpt_sale_line.business_date
            AND trl_rtrans_lineitm.void_flag = 0

          INNER JOIN
            trl_sale_lineitm
          ON
            trl_sale_lineitm.organization_id = trl_rtrans_lineitm.organization_id
            AND trl_sale_lineitm.rtl_loc_id = trl_rtrans_lineitm.rtl_loc_id
            AND trl_sale_lineitm.trans_seq = trl_rtrans_lineitm.trans_seq
            AND trl_sale_lineitm.rtrans_lineitm_seq = trl_rtrans_lineitm.rtrans_lineitm_seq
            AND trl_sale_lineitm.wkstn_id = trl_rtrans_lineitm.wkstn_id
            AND trl_sale_lineitm.business_date = trl_rtrans_lineitm.business_date              

          WHERE
            trn_trans.organization_id = ?
            AND trn_trans.rtl_loc_id = ?
            AND /*UPPER*/ trn_trans.trans_statcode = 'COMPLETE'
            AND trn_trans.post_void_flag = 1
            AND trn_trans.trans_date BETWEEN ? AND ?
            AND 'SUMMARY' <> ?
      ]]></Statement>
      <Parameter name="organizationId" />
      <Parameter name="retailLocationId" />
      <Parameter name="argBusinessDateStart" />
      <Parameter name="argBusinessDateEnd" />
      <Parameter name="displayOption" />
    </SQL>
    <Suffix dtype="String"><![CDATA[ORDER BY trn_trans.trans_seq, trn_trans.wkstn_id]]></Suffix>
  </Query>
  <Query name="OPEN_TIMECARD_REPORT" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.data2.access.DefaultQueryResult</ResultClass>
    <ResultField name="employee_id" type="String" />
    <ResultField name="first_name" type="String" />
    <ResultField name="last_name" type="String" />
    <ResultField name="timecard_entry_id" type="String" />
    <ResultField name="wkstn_id" type="String" />
    <ResultField name="clock_in_timestamp" type="Date" />
    <ResultField name="work_code" type="String" />
    <ResultField name="description" type="String" />
    <ResultField name="entry_type_enum" type="String" />
    <ResultField name="employee_name" type="String" />
    <SQL>
      <Statement dtype="String"><![CDATA[
          SELECT
            e.employee_id,
            p.first_name,
            p.last_name,
            t.timecard_entry_id,
            t.wkstn_id,
            t.clock_in_timestamp,
            t.work_code,
            c.description,
            t.entry_type_enum,
            CASE WHEN COALESCE(/*UPPER*/ p.first_name,' ') <> ' ' OR COALESCE(/*UPPER*/ p.last_name,' ') <> ' '
                 THEN CONCAT(p.first_name, CONCAT('::', p.last_name)) END
                 AS employee_name
          FROM hrs_employee e

          INNER JOIN thr_timecard_entry t
             ON t.organization_id = e.organization_id
            AND t.party_id = e.party_id
            AND t.rtl_loc_id = ?
            AND t.open_record_flag = '1'
            AND t.business_date BETWEEN ? AND ?
            AND (t.delete_flag IS NULL OR t.delete_flag <> 1)

          INNER JOIN crm_party p
             ON p.organization_id = e.organization_id
            AND p.party_id = e.party_id

          INNER JOIN hrs_work_codes c
             ON c.organization_id = t.organization_id
            AND c.work_code = /*UPPER*/ t.work_code

          WHERE e.organization_id = ?
      ]]></Statement>
      <Parameter name="retailLocationId" />
      <Parameter name="argBusinessDateStart" />
      <Parameter name="argBusinessDateEnd" />
      <Parameter name="organizationId" />
    </SQL>
    <Suffix dtype="String"><![CDATA[ORDER BY p.last_name, p.first_name, t.clock_in_timestamp, t.timecard_entry_id]]></Suffix>
  </Query>
  <Query name="PAIDIN_PAIDOUT_REPORT" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.data2.access.DefaultQueryResult</ResultClass>
    <ResultField name="wkstn_id" type="String" />
    <ResultField name="trans_seq" type="String" />
    <ResultField name="end_datetime" type="Date" />
    <ResultField name="employee_id" type="String" />
    <ResultField name="reason_code" type="String" />
    <ResultField name="description" type="String" />
    <ResultField name="typcode" type="String" />
    <ResultField name="employee_name" type="String" />
    <ResultField name="tillId" type="String" />
    <ResultField name="amount" type="BigDecimal" />
    <SQL>
      <Statement dtype="String"><![CDATA[
          SELECT
            TT.wkstn_id,
            TT.trans_seq,
            TT.end_datetime,
     
            CP.employee_id,
            TC.reascode AS reason_code,
            (
              SELECT max(description)
              FROM com_reason_code
              WHERE organization_id = TC.organization_id AND
                    reason_code = /*UPPER*/ TC.reascode AND
                    reason_typcode = /*UPPER*/ TC.typcode
            ) AS description,
            CASE
                  WHEN /*UPPER*/ tc.typcode = 'PAID_IN' THEN '_paidIn'
                  WHEN /*UPPER*/ tc.typcode = 'PAID_OUT' THEN '_paidOut'
            END, 
            CASE WHEN COALESCE(/*UPPER*/ CP.first_name,' ') <> ' ' OR COALESCE(/*UPPER*/ CP.last_name,' ') <> ' '
                 THEN CONCAT(CP.first_name, CONCAT('::', CP.last_name)) END
                 AS employee_name,
            CASE WHEN /*UPPER*/ TC.typcode='PAID_IN' THEN TC.inbound_tndr_repository_id ELSE TC.outbound_tndr_repository_id END as tillId,
            CASE WHEN /*UPPER*/ TC.typcode='PAID_OUT' THEN (TC.amt * -1) ELSE TC.amt END AS amount
          FROM
            trn_trans TT

          INNER JOIN
            crm_party CP
          ON
            TT.organization_id = CP.organization_id AND
            TT.operator_party_id = CP.party_id

          INNER JOIN
            tsn_tndr_control_trans TC
          ON
            TT.organization_id = TC.organization_id AND
            TT.trans_seq = TC.trans_seq AND
            TT.rtl_loc_id = TC.rtl_loc_id AND
            TT.wkstn_id = TC.wkstn_id AND
            TT.business_date = TC.business_date
          WHERE
            TT.organization_id = ? AND
            TT.rtl_loc_id = ? AND
            /*UPPER*/ TT.trans_statcode = 'COMPLETE'
      ]]></Statement>
      <Parameter name="organizationId" />
      <Parameter name="retailLocationId" />
      <Expression trigger="transactionType"><![CDATA[/*UPPER*/ TC.typcode LIKE ?]]></Expression>
      <Expression trigger="registerId"><![CDATA[TT.wkstn_id = ?]]></Expression>
      <Expression parameters="argBusinessDateStart,argBusinessDateEnd" trigger="argBusinessDateStart"><![CDATA[TT.trans_date BETWEEN ? AND ?]]></Expression>
      <Expression parameters="reasonCode_getReasonTypeCode,reasonCode_getReasonCode" trigger="reasonCode_getReasonCode"><![CDATA[/*UPPER*/ CONCAT(TC.typcode, CONCAT('::', TC.reascode)) LIKE CONCAT(?, CONCAT('::', ?))]]></Expression>
      <Expression trigger="employeeId"><![CDATA[/*UPPER*/ CP.employee_id = ?]]></Expression>
    </SQL>
    <Sort field="sortOrder" />
  </Query>
  <Query name="POST_VOID_TRANSACTION_SUMMARY_REPORT" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.data2.access.DefaultQueryResult</ResultClass>
    <ResultField name="trans_date" type="Date" />
    <ResultField name="transaction_number" type="String" />
    <ResultField name="sold_by" type="String" />
    <ResultField name="associate_no" type="String" />
    <ResultField name="register_no" type="String" />
    <ResultField name="transaction_time" type="Date" />
    <ResultField name="tax" type="BigDecimal" />
    <ResultField name="sub_total" type="BigDecimal" />
    <ResultField name="total" type="BigDecimal" />
    <ResultField name="reason_code_desc" type="String" />
    <SQL>
      <Statement dtype="String"><![CDATA[
          SELECT
            trn_trans.trans_date AS trans_date,
            trn_trans.trans_seq AS transaction_number,
            crm_party.employee_id AS sold_by,
            crm_party.employee_id AS associate_no,
            trn_trans.wkstn_id AS register_no,
            trn_trans.begin_datetime AS transaction_time,
            COALESCE(trn_trans.taxtotal,0) AS tax,
            COALESCE(trn_trans.subtotal,0) AS sub_total,
            COALESCE(trn_trans.total, 0) AS total,
            COALESCE((
              SELECT
                description
              FROM
                com_reason_code
              WHERE
                organization_id = trn_trans.organization_id
                AND reason_code = (SELECT post_void_reascode
                                     FROM trn_post_void_trans vtrans JOIN trn_trans trans2
                                       ON vtrans.organization_id = trans2.organization_id
                                      AND vtrans.rtl_loc_id = trans2.rtl_loc_id
                                      AND vtrans.business_date = trans2.business_date
                                      AND vtrans.wkstn_id = trans2.wkstn_id
                                      AND vtrans.trans_seq = trans2.trans_seq
                                      AND /*UPPER*/ trans2.trans_statcode = 'COMPLETE'
                                    WHERE voided_org_id = trn_trans.organization_id
                                      AND voided_rtl_store_id = trn_trans.rtl_loc_id
                                      AND voided_wkstn_id = trn_trans.wkstn_id
                                      AND voided_business_date = trn_trans.business_date
                                      AND voided_trans_id = trn_trans.trans_seq)
                AND reason_typcode = 'POST_VOID'
            ), '_rptNotAvailable') AS reason_code_desc
          FROM
            trn_trans

          INNER JOIN
            crm_party
          ON
            crm_party.organization_id = trn_trans.organization_id
            AND crm_party.party_id = trn_trans.operator_party_id
          WHERE
            trn_trans.organization_id = ?
            AND trn_trans.rtl_loc_id = ?
            AND /*UPPER*/ trn_trans.trans_statcode = 'COMPLETE'
            AND trn_trans.post_void_flag = 1
            AND trn_trans.trans_date BETWEEN ? AND ?
            AND 'DETAIL' <> ?
      ]]></Statement>
      <Parameter name="organizationId" />
      <Parameter name="retailLocationId" />
      <Parameter name="argBusinessDateStart" />
      <Parameter name="argBusinessDateEnd" />
      <Parameter name="displayOption" />
    </SQL>
    <Suffix dtype="String"><![CDATA[ORDER BY trn_trans.trans_seq, trn_trans.wkstn_id]]></Suffix>
  </Query>
  <Query name="PRICE_CHANGE_REPORT" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.data2.access.DefaultQueryResult</ResultClass>
    <ResultField name="merch_level_1" type="String" />
    <ResultField name="trans_key" type="String" />
    <ResultField name="item_id" type="String" />
    <ResultField name="description" type="String" />
    <ResultField name="style_id" type="String" />
    <ResultField name="effective_date" type="Date" />
    <ResultField name="expiration_date" type="Date" />
    <ResultField name="old_price" type="BigDecimal" />
    <ResultField name="current_price" type="BigDecimal" />
    <SQL>
      <Statement dtype="String"><![CDATA[
          SELECT DISTINCT
            merch_level_1,
            case when (translation_key is NULL) 
              then CONCAT('_dtv.pos.common.PriceTypes.', itm_price_property_code)
              else translation_key 
            end as trans_key,
            item_id,
            description,
            COALESCE(style_id, '_rptNotAvailable') as style_id,
            effective_date,
            expiration_date,
            old_price,
            current_price
          FROM
            (
              SELECT
                item.organization_id,
                item.merch_level_1,
                a.itm_price_property_code,
                t.translation_key,
                a.item_id,
                item.description,
                item.parent_item_id AS style_id,
                a.effective_date,
                a.expiration_date,
                (
                  SELECT
                    price
                  FROM
                    itm_item_prices
                  WHERE
                    item_id = a.item_id
                    AND organization_id = a.organization_id
  					AND itm_price_property_code = a.itm_price_property_code
                    AND level_code = a.level_code
                    AND level_value = a.level_value
                    AND effective_date = (
                      SELECT
                        MAX(effective_date)
                      FROM
                        itm_item_prices
                      WHERE
                        item_id = a.item_id
                        AND organization_id = a.organization_id
                        AND effective_date < a.effective_date
	  					AND itm_price_property_code = a.itm_price_property_code
                        AND level_code = a.level_code
                        AND level_value = a.level_value
                    )
                ) AS old_price,
                a.price AS current_price
              FROM
                itm_item_prices a
                
              LEFT OUTER JOIN 
                 com_translations t
              ON
                 t.translation_key = '+CODE_VALUE.CUSTOMER_GROUPS.' || a.itm_price_property_code || '.DESCRIPTION'
                
              LEFT OUTER JOIN
                itm_item item
              ON
                a.organization_id = item.organization_id
                AND a.item_id = item.item_id
              WHERE
                level_code || ':' || level_value in (select column_value from table(fn_nodesInHierarchy(?,'STORE',?)))              
            ) d
          WHERE
            organization_id = ?
            AND COALESCE(old_price ,0) <> COALESCE(current_price,0)
      ]]></Statement>
      <Parameter name="organizationId" />
      <Parameter name="retailLocationId" />
      <Parameter name="organizationId" />
      <Expression parameters="argBusinessDateStart, argBusinessDateEnd" trigger="argBusinessDateStart"><![CDATA[effective_date BETWEEN ? AND ?]]></Expression>
      <Expression trigger="priceChangeType"><![CDATA[itm_price_property_code LIKE ?]]></Expression>
      <Expression trigger="merchLevel1"><![CDATA[/*UPPER*/ merch_level_1 = ?]]></Expression>
    </SQL>
    <Suffix dtype="String"><![CDATA[ORDER BY effective_date DESC, item_id ASC]]></Suffix>
  </Query>
  <Query name="PRICE_OVERRIDE_DETAIL" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.data2.access.DefaultQueryResult</ResultClass>
    <ResultField name="tran_date" type="Date" />
    <ResultField name="tran_time" type="Date" />
    <ResultField name="tran_id" type="String" />
    <ResultField name="employee_id" type="String" />
    <ResultField name="employee_name" type="String" />
    <ResultField name="item_id" type="String" />
    <ResultField name="description" type="String" />
    <ResultField name="reason_code" type="String" />
    <ResultField name="quantity" type="BigDecimal" />
    <ResultField name="reg_price" type="BigDecimal" />
    <ResultField name="ext_reg_price" type="BigDecimal" />
    <ResultField name="sold_price" type="BigDecimal" />
    <ResultField name="ext_sold_price" type="BigDecimal" />
    <ResultField name="diff" type="BigDecimal" />
    <ResultField name="ext_diff" type="BigDecimal" />
    <SQL>
      <Statement dtype="String"><![CDATA[
          SELECT
            rpt.trans_date AS tran_date,
            rpt.trans_timestamp AS tran_time,
            rpt.trans_seq AS tran_id,
            crm.employee_id,
            CONCAT(CONCAT(CRM.first_name, '::'), CRM.last_name) AS employee_name,
            rpt.item_id,
            rpt.item_desc AS description,
            tpcr.description AS reason_code,
            rpt.quantity,
            rpt.unit_price + (rpt.override_amt/rpt.quantity) + (rpt.discount_amt/rpt.quantity) AS reg_price,
            rpt.quantity * (rpt.unit_price   + (rpt.override_amt/rpt.quantity) + (rpt.discount_amt/rpt.quantity)) AS ext_reg_price,
            rpt.unit_price + (rpt.discount_amt/rpt.quantity) AS sold_price,
            rpt.quantity * (rpt.unit_price   + (rpt.discount_amt/rpt.quantity)) AS ext_sold_price,
            (rpt.override_amt/rpt.quantity) * -1 AS diff,
            rpt.quantity * ((rpt.override_amt/rpt.quantity) * -1) AS ext_diff

          FROM
            rpt_sale_line rpt

          INNER JOIN
            trl_rtl_price_mod trpm
          ON
            rpt.organization_id = trpm.organization_id
            AND rpt.rtrans_lineitm_seq = trpm.rtrans_lineitm_seq
            AND rpt.rtl_loc_id = trpm.rtl_loc_id
            AND rpt.wkstn_id = trpm.wkstn_id
            AND rpt.business_date = trpm.business_date
            AND rpt.trans_seq = trpm.trans_seq
            AND /*UPPER*/ trpm.rtl_price_mod_reascode = 'PRICE_OVERRIDE'

          LEFT OUTER JOIN
            com_reason_code tpcr
          ON
            trpm.organization_id = tpcr.organization_id
            AND /*UPPER*/ trpm.price_change_reascode = tpcr.reason_code
            AND tpcr.reason_typcode = 'PRICE_CHANGE'

          LEFT OUTER JOIN
            trl_commission_mod TCM
          ON
            rpt.organization_id = TCM.organization_id
            AND rpt.rtl_loc_id = TCM.rtl_loc_id
            AND rpt.wkstn_id = TCM.wkstn_id
            AND rpt.business_date = TCM.business_date
            AND rpt.rtrans_lineitm_seq = TCM.rtrans_lineitm_seq
            AND rpt.trans_seq = TCM.trans_seq

          LEFT OUTER JOIN
            crm_party crm
          ON
            rpt.organization_id = crm.organization_id
            AND TCM.employee_party_id = crm.party_id

          WHERE
            rpt.organization_id = ?
            AND rpt.rtl_loc_id = ?
            AND rpt.return_flag = '0'
            AND trpm.void_flag = '0'
            AND /*UPPER*/ rpt.trans_statcode = 'COMPLETE'
            AND rpt.override_amt <> 0
            AND rpt.quantity <> 0
            AND /*UPPER*/ crm.employee_id between ? AND ?
            AND rpt.trans_date between ? AND ?
          ORDER BY crm.employee_id, rpt.business_date DESC, rpt.trans_timestamp DESC
      ]]></Statement>
      <Parameter name="organizationId" />
      <Parameter name="retailLocationId" />
      <Parameter name="startEmployee" />
      <Parameter name="endEmployee" />
      <Parameter name="argBusinessDateStart" />
      <Parameter name="argBusinessDateEnd" />
    </SQL>
  </Query>
  <Query name="PWAC_STOCK_VALUATION_REPORT" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.data2.access.DefaultQueryResult</ResultClass>
    <ResultField name="rtlLocId" type="Integer" />
    <ResultField name="storeName" type="String" />
    <ResultField name="itemId" type="String" />
    <ResultField name="itemDesc" type="String" />
    <ResultField name="quantity" type="BigDecimal" />
    <ResultField name="value" type="BigDecimal" />
    <ResultField name="pwac" type="BigDecimal" />
    <SQL>
      <Statement dtype="String"><![CDATA[
      SELECT 
           t0.rtl_loc_id, 
           loc.store_name, 
           COALESCE(style.item_id, t0.item_id,' ') as rpt_item_id,
           COALESCE(style.description, itm.description, ' ' ) as rpt_item_desc,
           COALESCE(unitcount,0) + COALESCE(ts.quantity, 0) AS quantity, 
           (COALESCE(unitcount,0) + COALESCE(ts.quantity,0)) * b.pwac as value,
           COALESCE(b.pwac, -99999) AS pwac
      FROM loc_rtl_loc loc, inv_stock_ledger_acct t0
        LEFT OUTER JOIN
          (SELECT itm_mov.organization_id, itm_mov.rtl_loc_id, itm_mov.item_id,
                SUM(COALESCE(quantity,0) * CASE WHEN adjustment_flag = 1 THEN 1 ELSE -1 END) AS quantity
           FROM rpt_trl_stock_movement_view itm_mov
           WHERE business_date > ?
           GROUP BY itm_mov.organization_id, itm_mov.rtl_loc_id, itm_mov.item_id) ts
        ON t0.organization_id = ts.organization_id
           AND t0.rtl_loc_id = ts.rtl_loc_id
             AND t0.item_id = ts.item_id

        INNER JOIN
           (SELECT a.organization_id, a.item_id, SUM(pwac_qty_onhand_endofyear * pwac_value_onhand_endofyear)/SUM(pwac_qty_onhand_endofyear) AS pwac
            FROM
               (SELECT organization_id, item_id, SUM(COALESCE(pwac_qty_onhand_endofyear,0)) AS pwac_qty_onhand_endofyear,
                     SUM(COALESCE(pwac_value_onhand_endofyear,0)*COALESCE(pwac_qty_onhand_endofyear,0))/SUM(COALESCE(pwac_qty_onhand_endofyear,0)) AS pwac_value_onhand_endofyear
              FROM inv_cst_item_yearend inv_yearend
              WHERE fiscal_year = (SELECT MAX(fiscal_year)
                                 FROM inv_cst_item_yearend inv_yearend2
                                     WHERE inv_yearend2.organization_id =  inv_yearend.organization_id AND
                                     inv_yearend2.rtl_loc_id = inv_yearend.rtl_loc_id AND
                                   inv_yearend2.item_id = inv_yearend.item_id AND
                                         fiscal_year <= cast(to_char(? -1, 'yyyy') as number(4,0))) AND
                             rtl_loc_id IN ? AND
                               organization_id = ?
                GROUP BY organization_id, item_id
              HAVING SUM(pwac_qty_onhand_endofyear) <> 0

                UNION ALL

              SELECT inv_doc.organization_id, inv_indl.inventory_item_id, inv_indl.unit_count, (COALESCE(inv_indl.unit_count,0)*COALESCE(inv_indl.unit_cost,0))/COALESCE(inv_indl.unit_count,0)
                FROM inv_invctl_document inv_doc
                INNER JOIN
                inv_invctl_document_lineitm inv_indl
                ON inv_doc.organization_id = inv_indl.organization_id AND
                 inv_doc.rtl_loc_id = inv_indl.rtl_loc_id AND
               inv_doc.document_typcode = inv_indl.document_typcode AND
                 inv_doc.invctl_document_id = inv_indl.invctl_document_id

             LEFT OUTER JOIN
              (SELECT organization_id, end_date + 1 as startDateDetail
          FROM inv_stock_fiscal_year inv_fiscal
              WHERE fiscal_year = (SELECT COALESCE(MAX(fiscal_year),0)
                                   FROM inv_cst_item_yearend inv_yrend2
                                   WHERE inv_yrend2.organization_id =  inv_fiscal.organization_id AND
                                      fiscal_year <= cast(to_char(? -1, 'yyyy') as number(4,0))) AND
                                          organization_id = ?) fy
             ON fy.organization_id = inv_doc.organization_id

             WHERE inv_indl.create_date BETWEEN startDateDetail AND ? AND
                   /*UPPER*/ inv_doc.document_subtypcode = 'ASN' AND
                   inv_doc.organization_id = ? AND
                   inv_indl.rtl_loc_id IN ? AND
                   inv_indl.unit_count > 0 AND
                   /*UPPER*/ inv_doc.status_code IN ('CLOSED', 'OPEN', 'IN_PROCESS')) a

             GROUP BY a.organization_id, a.item_id
           HAVING SUM(pwac_qty_onhand_endofyear) <> 0) b

         ON t0.item_id = b.item_id
          AND t0.organization_id = b.organization_id

       INNER JOIN itm_item itm
         ON t0.item_id = itm.item_id
            AND t0.organization_id = itm.organization_id

         LEFT OUTER JOIN itm_item style
         ON /*UPPER*/ itm.parent_item_id = style.item_id
          AND itm.organization_id = style.organization_id
         WHERE t0.rtl_loc_id = loc.rtl_loc_id
           AND t0.rtl_loc_id IN ?
           AND t0.bucket_id = 'ON_HAND'
           AND COALESCE(unitcount,0) + COALESCE(ts.quantity, 0) <> 0
      ]]></Statement>
      <Parameter name="argBusinessDateStart" />
      <Parameter name="argBusinessDateStart" />
      <Parameter name="@retailLocationIdList" />
      <Parameter name="organizationId" />
      <Parameter name="argBusinessDateStart" />
      <Parameter name="organizationId" />
      <Parameter name="argBusinessDateStart" />
      <Parameter name="organizationId" />
      <Parameter name="@retailLocationIdList" />
      <Parameter name="@retailLocationIdList" />
      <Expression trigger="merchLevel1"><![CDATA[COALESCE(/*UPPER*/ itm.merch_level_1, '') LIKE ?]]></Expression>
      <Expression trigger="merchLevel2"><![CDATA[COALESCE(/*UPPER*/ itm.merch_level_2, '') LIKE ?]]></Expression>
      <Expression trigger="merchLevel3"><![CDATA[COALESCE(/*UPPER*/ itm.merch_level_3, '') LIKE ?]]></Expression>
      <Expression trigger="merchLevel4"><![CDATA[COALESCE(/*UPPER*/ itm.merch_level_4, '') LIKE ?]]></Expression>
      <Expression trigger="itemId"><![CDATA[COALESCE(itm.item_id, '') LIKE ?]]></Expression>
      <Expression trigger="styleId"><![CDATA[COALESCE(/*UPPER*/ itm.parent_item_id, '') LIKE ?]]></Expression>
    </SQL>
    <Suffix dtype="String"><![CDATA[ORDER BY  t0.rtl_loc_id , t0.item_id  ASC]]></Suffix>
  </Query>
  <Query name="PWAC_REPORT_STORES_LOC_TOTALS" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.data2.access.DefaultQueryResult</ResultClass>
    <ResultField name="rtlLocId" type="Integer" />
    <ResultField name="quantity" type="BigDecimal" />
    <ResultField name="value" type="BigDecimal" />
    <ResultField name="pwac" type="BigDecimal" />
    <SQL>
      <Statement dtype="String"><![CDATA[
    SELECT rtl_loc_id, sum(quantity) as tot_qty, sum(value) as tot_value, sum(value)/sum(quantity) as tot_unitcost FROM (

         SELECT 
           t0.rtl_loc_id as rtl_loc_id, 
           loc.store_name, 
           COALESCE(style.item_id, t0.item_id,' ') as rpt_item_id,
           COALESCE(style.description, itm.description, ' ' ) as rpt_item_desc,
           COALESCE(unitcount,0) + COALESCE(ts.quantity, 0) AS quantity, 
           (COALESCE(unitcount,0) + COALESCE(ts.quantity,0)) * b.pwac as value,
           b.pwac AS pwac
      FROM loc_rtl_loc loc, inv_stock_ledger_acct t0
        LEFT OUTER JOIN
          (SELECT itm_mov.organization_id, itm_mov.rtl_loc_id, itm_mov.item_id,
                SUM(COALESCE(quantity,0) * CASE WHEN adjustment_flag = 1 THEN 1 ELSE -1 END) AS quantity
           FROM rpt_trl_stock_movement_view itm_mov
           WHERE business_date > ?
           GROUP BY itm_mov.organization_id, itm_mov.rtl_loc_id, itm_mov.item_id) ts
        ON t0.organization_id = ts.organization_id
           AND t0.rtl_loc_id = ts.rtl_loc_id
             AND t0.item_id = ts.item_id

        INNER JOIN
           (SELECT a.organization_id, a.item_id, SUM(pwac_qty_onhand_endofyear * pwac_value_onhand_endofyear)/SUM(pwac_qty_onhand_endofyear) AS pwac
            FROM
               (SELECT organization_id, item_id, SUM(COALESCE(pwac_qty_onhand_endofyear,0)) AS pwac_qty_onhand_endofyear,
                     SUM(COALESCE(pwac_value_onhand_endofyear,0)*COALESCE(pwac_qty_onhand_endofyear,0))/SUM(COALESCE(pwac_qty_onhand_endofyear,0)) AS pwac_value_onhand_endofyear
              FROM inv_cst_item_yearend inv_yearend
              WHERE fiscal_year = (SELECT MAX(fiscal_year)
                                 FROM inv_cst_item_yearend inv_yearend2
                                     WHERE inv_yearend2.organization_id =  inv_yearend.organization_id AND
                                     inv_yearend2.rtl_loc_id = inv_yearend.rtl_loc_id AND
                                   inv_yearend2.item_id = inv_yearend.item_id AND
                                         fiscal_year <= cast(to_char(? -1, 'yyyy') as number(4,0))) AND
                             rtl_loc_id IN ? AND
                               organization_id = ?
                GROUP BY organization_id, item_id
              HAVING SUM(pwac_qty_onhand_endofyear) <> 0

                UNION ALL

              SELECT inv_doc.organization_id, inv_indl.inventory_item_id, inv_indl.unit_count, (COALESCE(inv_indl.unit_count,0)*COALESCE(inv_indl.unit_cost,0))/COALESCE(inv_indl.unit_count,0)
                FROM inv_invctl_document inv_doc
                INNER JOIN
                inv_invctl_document_lineitm inv_indl
                ON inv_doc.organization_id = inv_indl.organization_id AND
                 inv_doc.rtl_loc_id = inv_indl.rtl_loc_id AND
               inv_doc.document_typcode = inv_indl.document_typcode AND
                 inv_doc.invctl_document_id = inv_indl.invctl_document_id

             LEFT OUTER JOIN
              (SELECT organization_id, end_date + 1 as startDateDetail
          FROM inv_stock_fiscal_year inv_fiscal
              WHERE fiscal_year = (SELECT COALESCE(MAX(fiscal_year),0)
                                   FROM inv_cst_item_yearend inv_yrend2
                                   WHERE inv_yrend2.organization_id =  inv_fiscal.organization_id AND
                                      fiscal_year <= cast(to_char(? -1, 'yyyy') as number(4,0))) AND
                                          organization_id = ?) fy
             ON fy.organization_id = inv_doc.organization_id

             WHERE inv_indl.create_date BETWEEN startDateDetail AND ? AND
                   /*UPPER*/ inv_doc.document_subtypcode = 'ASN' AND
                   inv_doc.organization_id = ? AND
                   inv_indl.rtl_loc_id IN ? AND
                   inv_indl.unit_count > 0 AND
                   /*UPPER*/ inv_doc.status_code IN ('CLOSED', 'OPEN', 'IN_PROCESS')) a

             GROUP BY a.organization_id, a.item_id
           HAVING SUM(pwac_qty_onhand_endofyear) <> 0) b

         ON t0.item_id = b.item_id
          AND t0.organization_id = b.organization_id

       INNER JOIN itm_item itm
         ON t0.item_id = itm.item_id
            AND t0.organization_id = itm.organization_id

         LEFT OUTER JOIN itm_item style
         ON /*UPPER*/ itm.parent_item_id = style.item_id
          AND itm.organization_id = style.organization_id
         WHERE t0.rtl_loc_id = loc.rtl_loc_id
           AND t0.rtl_loc_id IN ?
           AND t0.bucket_id = 'ON_HAND'
           AND COALESCE(unitcount,0) + COALESCE(ts.quantity, 0) <> 0
      ]]></Statement>
      <Parameter name="argBusinessDateStart" />
      <Parameter name="argBusinessDateStart" />
      <Parameter name="@retailLocationIdList" />
      <Parameter name="organizationId" />
      <Parameter name="argBusinessDateStart" />
      <Parameter name="organizationId" />
      <Parameter name="argBusinessDateStart" />
      <Parameter name="organizationId" />
      <Parameter name="@retailLocationIdList" />
      <Parameter name="@retailLocationIdList" />
      <Expression trigger="merchLevel1"><![CDATA[COALESCE(/*UPPER*/ itm.merch_level_1, '') LIKE ?]]></Expression>
      <Expression trigger="merchLevel2"><![CDATA[COALESCE(/*UPPER*/ itm.merch_level_2, '') LIKE ?]]></Expression>
      <Expression trigger="merchLevel3"><![CDATA[COALESCE(/*UPPER*/ itm.merch_level_3, '') LIKE ?]]></Expression>
      <Expression trigger="merchLevel4"><![CDATA[COALESCE(/*UPPER*/ itm.merch_level_4, '') LIKE ?]]></Expression>
      <Expression trigger="itemId"><![CDATA[COALESCE(itm.item_id, '') LIKE ?]]></Expression>
      <Expression trigger="styleId"><![CDATA[COALESCE(/*UPPER*/ itm.parent_item_id, '') LIKE ?]]></Expression>
    </SQL>
    <Suffix dtype="String"><![CDATA[) GROUP BY rtl_loc_id ORDER BY rtl_loc_id ASC]]></Suffix>
  </Query>
  <Query name="PWAC_REPORT_STORES_TOTALS" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.data2.access.DefaultQueryResult</ResultClass>
    <ResultField name="quantity" type="BigDecimal" />
    <ResultField name="value" type="BigDecimal" />
    <ResultField name="pwac" type="BigDecimal" />
    <SQL>
      <Statement dtype="String"><![CDATA[
    SELECT sum(quantity) as tot_qty, sum(value) as tot_value, sum(value)/sum(quantity) as tot_unitcost FROM (

         SELECT 
           t0.rtl_loc_id as rtl_loc_id, 
           loc.store_name, 
           COALESCE(style.item_id, t0.item_id,' ') as rpt_item_id,
           COALESCE(style.description, itm.description, ' ' ) as rpt_item_desc,
           COALESCE(unitcount,0) + COALESCE(ts.quantity, 0) AS quantity, 
           (COALESCE(unitcount,0) + COALESCE(ts.quantity,0)) * b.pwac as value,
           b.pwac AS pwac
      FROM loc_rtl_loc loc, inv_stock_ledger_acct t0
        LEFT OUTER JOIN
          (SELECT itm_mov.organization_id, itm_mov.rtl_loc_id, itm_mov.item_id,
                SUM(COALESCE(quantity,0) * CASE WHEN adjustment_flag = 1 THEN 1 ELSE -1 END) AS quantity
           FROM rpt_trl_stock_movement_view itm_mov
           WHERE business_date > ?
           GROUP BY itm_mov.organization_id, itm_mov.rtl_loc_id, itm_mov.item_id) ts
        ON t0.organization_id = ts.organization_id
           AND t0.rtl_loc_id = ts.rtl_loc_id
             AND t0.item_id = ts.item_id

        INNER JOIN
           (SELECT a.organization_id, a.item_id, SUM(pwac_qty_onhand_endofyear * pwac_value_onhand_endofyear)/SUM(pwac_qty_onhand_endofyear) AS pwac
            FROM
               (SELECT organization_id, item_id, SUM(COALESCE(pwac_qty_onhand_endofyear,0)) AS pwac_qty_onhand_endofyear,
                     SUM(COALESCE(pwac_value_onhand_endofyear,0)*COALESCE(pwac_qty_onhand_endofyear,0))/SUM(COALESCE(pwac_qty_onhand_endofyear,0)) AS pwac_value_onhand_endofyear
              FROM inv_cst_item_yearend inv_yearend
              WHERE fiscal_year = (SELECT MAX(fiscal_year)
                                 FROM inv_cst_item_yearend inv_yearend2
                                     WHERE inv_yearend2.organization_id =  inv_yearend.organization_id AND
                                     inv_yearend2.rtl_loc_id = inv_yearend.rtl_loc_id AND
                                   inv_yearend2.item_id = inv_yearend.item_id AND
                                         fiscal_year <= cast(to_char(? -1, 'yyyy') as number(4,0))) AND
                             rtl_loc_id IN ? AND
                               organization_id = ?
                GROUP BY organization_id, item_id
              HAVING SUM(pwac_qty_onhand_endofyear) <> 0

                UNION ALL

              SELECT inv_doc.organization_id, inv_indl.inventory_item_id, inv_indl.unit_count, (COALESCE(inv_indl.unit_count,0)*COALESCE(inv_indl.unit_cost,0))/COALESCE(inv_indl.unit_count,0)
                FROM inv_invctl_document inv_doc
                INNER JOIN
                inv_invctl_document_lineitm inv_indl
                ON inv_doc.organization_id = inv_indl.organization_id AND
                 inv_doc.rtl_loc_id = inv_indl.rtl_loc_id AND
               inv_doc.document_typcode = inv_indl.document_typcode AND
                 inv_doc.invctl_document_id = inv_indl.invctl_document_id

             LEFT OUTER JOIN
              (SELECT organization_id, end_date + 1 as startDateDetail
          FROM inv_stock_fiscal_year inv_fiscal
              WHERE fiscal_year = (SELECT COALESCE(MAX(fiscal_year),0)
                                   FROM inv_cst_item_yearend inv_yrend2
                                   WHERE inv_yrend2.organization_id =  inv_fiscal.organization_id AND
                                      fiscal_year <= cast(to_char(? -1, 'yyyy') as number(4,0))) AND
                                          organization_id = ?) fy
             ON fy.organization_id = inv_doc.organization_id

             WHERE inv_indl.create_date BETWEEN startDateDetail AND ? AND
                   /*UPPER*/ inv_doc.document_subtypcode = 'ASN' AND
                   inv_doc.organization_id = ? AND
                   inv_indl.rtl_loc_id IN ? AND
                   inv_indl.unit_count > 0 AND
                   /*UPPER*/ inv_doc.status_code IN ('CLOSED', 'OPEN', 'IN_PROCESS')) a

             GROUP BY a.organization_id, a.item_id
           HAVING SUM(pwac_qty_onhand_endofyear) <> 0) b

         ON t0.item_id = b.item_id
          AND t0.organization_id = b.organization_id

       INNER JOIN itm_item itm
         ON t0.item_id = itm.item_id
            AND t0.organization_id = itm.organization_id

         LEFT OUTER JOIN itm_item style
         ON /*UPPER*/ itm.parent_item_id = style.item_id
          AND itm.organization_id = style.organization_id
         WHERE t0.rtl_loc_id = loc.rtl_loc_id
           AND t0.rtl_loc_id IN ?
           AND t0.bucket_id = 'ON_HAND'
           AND COALESCE(unitcount,0) + COALESCE(ts.quantity, 0) <> 0
      ]]></Statement>
      <Parameter name="argBusinessDateStart" />
      <Parameter name="argBusinessDateStart" />
      <Parameter name="@retailLocationIdList" />
      <Parameter name="organizationId" />
      <Parameter name="argBusinessDateStart" />
      <Parameter name="organizationId" />
      <Parameter name="argBusinessDateStart" />
      <Parameter name="organizationId" />
      <Parameter name="@retailLocationIdList" />
      <Parameter name="@retailLocationIdList" />
      <Expression trigger="merchLevel1"><![CDATA[COALESCE(/*UPPER*/ itm.merch_level_1, '') LIKE ?]]></Expression>
      <Expression trigger="merchLevel2"><![CDATA[COALESCE(/*UPPER*/ itm.merch_level_2, '') LIKE ?]]></Expression>
      <Expression trigger="merchLevel3"><![CDATA[COALESCE(/*UPPER*/ itm.merch_level_3, '') LIKE ?]]></Expression>
      <Expression trigger="merchLevel4"><![CDATA[COALESCE(/*UPPER*/ itm.merch_level_4, '') LIKE ?]]></Expression>
      <Expression trigger="itemId"><![CDATA[COALESCE(itm.item_id, '') LIKE ?]]></Expression>
      <Expression trigger="styleId"><![CDATA[COALESCE(/*UPPER*/ itm.parent_item_id, '') LIKE ?]]></Expression>
    </SQL>
    <Suffix dtype="String"><![CDATA[) ORDER BY rtl_loc_id ASC]]></Suffix>
  </Query>
  <Query name="PWAC_DETAIL_REPORT" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.data2.access.DefaultQueryResult</ResultClass>
    <ResultField name="itemId" type="String" />
    <ResultField name="rtlLocId" type="String" />
    <ResultField name="itemDesc" type="String" />
    <ResultField name="detailSeq" type="Integer" />
    <ResultField name="docId" type="String" />
    <ResultField name="docLineNbr" type="String" />
    <ResultField name="createDate" type="Date" />
    <ResultField name="quantity" type="BigDecimal" />
    <ResultField name="value" type="BigDecimal" />
    <ResultField name="unitCost" type="BigDecimal" />
    <SQL>
      <Statement dtype="String"><![CDATA[
    SELECT 
    COALESCE(to_char(style.item_id), to_char(a.item_id),' ') as rpt_item_id, 
    COALESCE(to_char(rtl_loc_id),' ') as rpt_loc_id, 
    COALESCE(style.description, itm.description,' ') as rpt_desc,
    SEQ as rpt_seq,
    (COALESCE(to_char(a.inv_doc_id),'Initial Value')) as inv_doc_id,
    COALESCE(to_char(a.inv_doc_id_lineNbr),' ') as inv_doc_id_linenbr, 
    a.inv_create_date as inv_create_date, 
    a.pwac_qty_onhand_endofyear, 
    a.pwac_qty_onhand_endofyear * a.pwac_unit_cost_endofyear as pwac_value_onhand_endofyear,
    a.pwac_unit_cost_endofyear
     FROM
        (SELECT organization_id, item_id, rtl_loc_id as rtl_loc_id, null as inv_doc_id, null as inv_doc_id_lineNbr, SYSDATE as inv_create_date,
                COALESCE(SUM(pwac_qty_onhand_endofyear),0) as pwac_qty_onhand_endofyear,
                SUM(COALESCE(pwac_value_onhand_endofyear,0)*COALESCE(pwac_qty_onhand_endofyear,0))/SUM(COALESCE(pwac_qty_onhand_endofyear,0)) as pwac_unit_cost_endofyear, 
                1 as SEQ
         FROM inv_cst_item_yearend inv_yearend
         WHERE fiscal_year = (SELECT MAX(fiscal_year)
               FROM inv_cst_item_yearend inv_yearend2
               WHERE inv_yearend2.organization_id =  inv_yearend.organization_id AND
                     inv_yearend2.rtl_loc_id = inv_yearend.rtl_loc_id AND
                     inv_yearend2.item_id = inv_yearend.item_id AND
                     fiscal_year <= cast(to_char(? -1, 'yyyy') as number(4,0))) AND
                     rtl_loc_id IN ? AND
                     organization_id = ?
         GROUP BY organization_id, rtl_loc_id, item_id
         HAVING SUM(pwac_qty_onhand_endofyear) <> 0

       UNION ALL

         SELECT inv_doc.organization_id, inv_indl.inventory_item_id, inv_doc.rtl_loc_id, inv_indl.invctl_document_id,
                inv_indl.invctl_document_line_nbr, inv_indl.create_date,
                COALESCE(inv_indl.unit_count,0), COALESCE(inv_indl.unit_cost,0), 2 as SEQ
         FROM inv_invctl_document inv_doc
         INNER JOIN inv_invctl_document_lineitm inv_indl
             ON inv_doc.organization_id = inv_indl.organization_id AND
                inv_doc.rtl_loc_id = inv_indl.rtl_loc_id AND
                inv_doc.document_typcode = inv_indl.document_typcode AND
                inv_doc.invctl_document_id = inv_indl.invctl_document_id
         LEFT OUTER JOIN
              (SELECT organization_id, end_date + 1 as startDateDetail
              FROM inv_stock_fiscal_year inv_fiscal
              WHERE fiscal_year = (SELECT COALESCE(MAX(fiscal_year),0)
                  FROM inv_cst_item_yearend inv_yrend2
                  WHERE inv_yrend2.organization_id =  inv_fiscal.organization_id AND
                       fiscal_year <= cast(to_char(? -1, 'yyyy') as number(4,0))) AND
                       organization_id = ?) fy
             ON fy.organization_id = inv_doc.organization_id
             WHERE inv_indl.create_date BETWEEN startDateDetail AND ? AND
                   /*UPPER*/ inv_doc.document_subtypcode = 'ASN' AND
                   inv_doc.organization_id = ? AND
                   inv_indl.rtl_loc_id IN ? AND
                   /*UPPER*/ inv_doc.status_code IN ('CLOSED', 'OPEN', 'IN_PROCESS') AND
                   inv_indl.unit_count <> 0) a
         INNER JOIN itm_item itm
             ON a.item_id = itm.item_id
                AND a.organization_id = itm.organization_id
         LEFT OUTER JOIN itm_item style
             ON /*UPPER*/ itm.parent_item_id = style.item_id
                AND itm.organization_id = style.organization_id
         WHERE a.item_id is NOT NULL
         ]]></Statement>
      <Parameter name="argBusinessDateStart" />
      <Parameter name="@retailLocationIdList" />
      <Parameter name="organizationId" />
      <Parameter name="argBusinessDateStart" />
      <Parameter name="organizationId" />
      <Parameter name="argBusinessDateStart" />
      <Parameter name="organizationId" />
      <Parameter name="@retailLocationIdList" />

      <Expression trigger="merchLevel1"><![CDATA[COALESCE(/*UPPER*/ itm.merch_level_1, '') LIKE ?]]></Expression>
      <Expression trigger="merchLevel2"><![CDATA[COALESCE(/*UPPER*/ itm.merch_level_2, '') LIKE ?]]></Expression>
      <Expression trigger="merchLevel3"><![CDATA[COALESCE(/*UPPER*/ itm.merch_level_3, '') LIKE ?]]></Expression>
      <Expression trigger="merchLevel4"><![CDATA[COALESCE(/*UPPER*/ itm.merch_level_4, '') LIKE ?]]></Expression>
    </SQL>
    <Suffix dtype="String"><![CDATA[ORDER BY rpt_item_id, rpt_loc_id, rpt_seq, inv_create_date, inv_doc_id, a.inv_doc_id_lineNbr ASC]]></Suffix>
  </Query>

  <Query name="PWAC_DETAIL_REPORT_ITEMLOC_TOTALS" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.data2.access.DefaultQueryResult</ResultClass>
    <ResultField name="itemId" type="String" />
    <ResultField name="rtlLocId" type="String" />
    <ResultField name="quantity" type="BigDecimal" />
    <ResultField name="value" type="BigDecimal" />
    <ResultField name="unitCost" type="BigDecimal" />
    <SQL>
      <Statement dtype="String"><![CDATA[
    SELECT rpt_item_id, rpt_loc_id, sum(qty_on_hand) as tot_qty, sum(value_onhand) as tot_value, sum(value_onhand)/sum(qty_on_hand) as pwac_unitcost 
         FROM (SELECT 
            COALESCE(to_char(style.item_id), to_char(a.item_id),' ') as rpt_item_id, 
            COALESCE(to_char(rtl_loc_id),' ') as rpt_loc_id, 
            (a.pwac_qty_onhand_endofyear) as qty_on_hand, 
            (a.pwac_qty_onhand_endofyear * a.pwac_unit_cost_endofyear) as value_onhand
            FROM
            (SELECT organization_id, item_id, rtl_loc_id as rtl_loc_id, null as inv_doc_id, null as inv_doc_id_lineNbr, SYSDATE as inv_create_date,
                COALESCE(SUM(pwac_qty_onhand_endofyear),0) as pwac_qty_onhand_endofyear,
                SUM(COALESCE(pwac_value_onhand_endofyear,0)*COALESCE(pwac_qty_onhand_endofyear,0))/SUM(COALESCE(pwac_qty_onhand_endofyear,0)) as pwac_unit_cost_endofyear, 
                1 as SEQ
                FROM inv_cst_item_yearend inv_yearend
                WHERE fiscal_year = (SELECT MAX(fiscal_year)
                FROM inv_cst_item_yearend inv_yearend2
                WHERE inv_yearend2.organization_id =  inv_yearend.organization_id AND
                     inv_yearend2.rtl_loc_id = inv_yearend.rtl_loc_id AND
                     inv_yearend2.item_id = inv_yearend.item_id AND
                     fiscal_year <= cast(to_char(? -1, 'yyyy') as number(4,0))) AND
                     rtl_loc_id IN ? AND
                     organization_id = ?
            GROUP BY organization_id, rtl_loc_id, item_id
            HAVING SUM(pwac_qty_onhand_endofyear) <> 0

    UNION ALL

        SELECT inv_doc.organization_id, 
               inv_indl.inventory_item_id, 
                inv_doc.rtl_loc_id, 
                inv_indl.invctl_document_id,
                inv_indl.invctl_document_line_nbr, 
                inv_indl.create_date,
                COALESCE(inv_indl.unit_count,0), 
                COALESCE(inv_indl.unit_cost,0), 
                2 as SEQ
        FROM inv_invctl_document inv_doc
        INNER JOIN inv_invctl_document_lineitm inv_indl
            ON inv_doc.organization_id = inv_indl.organization_id AND
               inv_doc.rtl_loc_id = inv_indl.rtl_loc_id AND
               inv_doc.document_typcode = inv_indl.document_typcode AND
               inv_doc.invctl_document_id = inv_indl.invctl_document_id
        LEFT OUTER JOIN
              (SELECT organization_id, end_date + 1 as startDateDetail
              FROM inv_stock_fiscal_year inv_fiscal
              WHERE fiscal_year = (SELECT COALESCE(MAX(fiscal_year),0)
                  FROM inv_cst_item_yearend inv_yrend2
                  WHERE inv_yrend2.organization_id =  inv_fiscal.organization_id AND
                        fiscal_year <= cast(to_char(? -1, 'yyyy') as number(4,0))) AND
                       organization_id = ?) fy
             ON fy.organization_id = inv_doc.organization_id
             WHERE inv_indl.create_date BETWEEN startDateDetail AND ? AND
                   /*UPPER*/ inv_doc.document_subtypcode = 'ASN' AND
                   inv_doc.organization_id = ? AND
                   inv_indl.rtl_loc_id IN ? AND
                   /*UPPER*/ inv_doc.status_code IN ('CLOSED', 'OPEN', 'IN_PROCESS') AND
                   inv_indl.unit_count <> 0) a
         INNER JOIN itm_item itm
             ON a.item_id = itm.item_id
                AND a.organization_id = itm.organization_id
         LEFT OUTER JOIN itm_item style
             ON /*UPPER*/ itm.parent_item_id = style.item_id
                AND itm.organization_id = style.organization_id
         WHERE a.item_id is NOT NULL
               ]]></Statement>
      <Parameter name="argBusinessDateStart" />
      <Parameter name="@retailLocationIdList" />
      <Parameter name="organizationId" />
      <Parameter name="argBusinessDateStart" />
      <Parameter name="organizationId" />
      <Parameter name="argBusinessDateStart" />
      <Parameter name="organizationId" />
      <Parameter name="@retailLocationIdList" />
      <Expression trigger="merchLevel1"><![CDATA[COALESCE(/*UPPER*/ itm.merch_level_1, '') LIKE ?]]></Expression>
      <Expression trigger="merchLevel2"><![CDATA[COALESCE(/*UPPER*/ itm.merch_level_2, '') LIKE ?]]></Expression>
      <Expression trigger="merchLevel3"><![CDATA[COALESCE(/*UPPER*/ itm.merch_level_3, '') LIKE ?]]></Expression>
      <Expression trigger="merchLevel4"><![CDATA[COALESCE(/*UPPER*/ itm.merch_level_4, '') LIKE ?]]></Expression>
    </SQL>
    <Suffix dtype="String"><![CDATA[) GROUP BY rpt_item_id, rpt_loc_id]]></Suffix>
  </Query>

  <Query name="PWAC_DETAIL_REPORT_ITEM_TOTALS" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.data2.access.DefaultQueryResult</ResultClass>
    <ResultField name="itemId" type="String" />
    <ResultField name="quantity" type="BigDecimal" />
    <ResultField name="value" type="BigDecimal" />
    <ResultField name="unitCost" type="BigDecimal" />
    <SQL>
      <Statement dtype="String"><![CDATA[
    SELECT rpt_item_id, sum(qty_on_hand) as tot_qty, sum(value_onhand) as tot_value, sum(value_onhand)/sum(qty_on_hand) as pwac_unitcost 
        FROM (SELECT COALESCE(to_char(style.item_id), to_char(a.item_id),' ') as rpt_item_id, 
            COALESCE(to_char(rtl_loc_id),' ') as rpt_loc_id, 
            (a.pwac_qty_onhand_endofyear) as qty_on_hand, 
            (a.pwac_qty_onhand_endofyear * a.pwac_unit_cost_endofyear) as value_onhand
        FROM
        (SELECT organization_id, item_id, rtl_loc_id as rtl_loc_id, null as inv_doc_id, null as inv_doc_id_lineNbr, SYSDATE as inv_create_date,
                COALESCE(SUM(pwac_qty_onhand_endofyear),0) as pwac_qty_onhand_endofyear,
                SUM(COALESCE(pwac_value_onhand_endofyear,0)*COALESCE(pwac_qty_onhand_endofyear,0))/SUM(COALESCE(pwac_qty_onhand_endofyear,0)) as pwac_unit_cost_endofyear, 
                1 as SEQ
         FROM inv_cst_item_yearend inv_yearend
         WHERE fiscal_year = (SELECT MAX(fiscal_year)
               FROM inv_cst_item_yearend inv_yearend2
               WHERE inv_yearend2.organization_id =  inv_yearend.organization_id AND
                     inv_yearend2.rtl_loc_id = inv_yearend.rtl_loc_id AND
                     inv_yearend2.item_id = inv_yearend.item_id AND
                     fiscal_year <= cast(to_char(? -1, 'yyyy') as number(4,0))) AND
                     rtl_loc_id IN ? AND
                     organization_id = ?
         GROUP BY organization_id, rtl_loc_id, item_id
         HAVING SUM(pwac_qty_onhand_endofyear) <> 0

       UNION ALL

         SELECT inv_doc.organization_id, 
                inv_indl.inventory_item_id, 
                inv_doc.rtl_loc_id, 
                inv_indl.invctl_document_id,
                inv_indl.invctl_document_line_nbr, 
                inv_indl.create_date,
                COALESCE(inv_indl.unit_count,0), 
                COALESCE(inv_indl.unit_cost,0), 
                2 as SEQ
         FROM inv_invctl_document inv_doc
         INNER JOIN inv_invctl_document_lineitm inv_indl
             ON inv_doc.organization_id = inv_indl.organization_id AND
                inv_doc.rtl_loc_id = inv_indl.rtl_loc_id AND
                inv_doc.document_typcode = inv_indl.document_typcode AND
                inv_doc.invctl_document_id = inv_indl.invctl_document_id
         LEFT OUTER JOIN
              (SELECT organization_id, end_date + 1 as startDateDetail
              FROM inv_stock_fiscal_year inv_fiscal
              WHERE fiscal_year = (SELECT COALESCE(MAX(fiscal_year),0)
                  FROM inv_cst_item_yearend inv_yrend2
                  WHERE inv_yrend2.organization_id =  inv_fiscal.organization_id AND
                       fiscal_year <= cast(to_char(? -1, 'yyyy') as number(4,0))) AND
                       organization_id = ?) fy
             ON fy.organization_id = inv_doc.organization_id
             WHERE inv_indl.create_date BETWEEN startDateDetail AND ? AND
                   /*UPPER*/ inv_doc.document_subtypcode = 'ASN' AND
                   inv_doc.organization_id = ? AND
                   inv_indl.rtl_loc_id IN ? AND
                   /*UPPER*/ inv_doc.status_code IN ('CLOSED', 'OPEN', 'IN_PROCESS') AND
                   inv_indl.unit_count <> 0) a
         INNER JOIN itm_item itm
             ON a.item_id = itm.item_id
                AND a.organization_id = itm.organization_id
         LEFT OUTER JOIN itm_item style
             ON /*UPPER*/ itm.parent_item_id = style.item_id
                AND itm.organization_id = style.organization_id
         WHERE a.item_id is NOT NULL
               ]]></Statement>
      <Parameter name="argBusinessDateStart" />
      <Parameter name="@retailLocationIdList" />
      <Parameter name="organizationId" />
      <Parameter name="argBusinessDateStart" />
      <Parameter name="organizationId" />
      <Parameter name="argBusinessDateStart" />
      <Parameter name="organizationId" />
      <Parameter name="@retailLocationIdList" />
      <Expression trigger="merchLevel1"><![CDATA[COALESCE(/*UPPER*/ itm.merch_level_1, '') LIKE ?]]></Expression>
      <Expression trigger="merchLevel2"><![CDATA[COALESCE(/*UPPER*/ itm.merch_level_2, '') LIKE ?]]></Expression>
      <Expression trigger="merchLevel3"><![CDATA[COALESCE(/*UPPER*/ itm.merch_level_3, '') LIKE ?]]></Expression>
      <Expression trigger="merchLevel4"><![CDATA[COALESCE(/*UPPER*/ itm.merch_level_4, '') LIKE ?]]></Expression>
    </SQL>
    <Suffix dtype="String"><![CDATA[) GROUP BY rpt_item_id]]></Suffix>
  </Query>

  <Query name="PWAC_REPORT_STORES" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.data2.access.DefaultQueryResult</ResultClass>
    <ResultField name="locId" type="String" />
    <ResultField name="locName" type="String" />
    <SQL>
      <Statement dtype="String"><![CDATA[
    SELECT rtl_loc_id, store_name
    FROM loc_rtl_loc 
    WHERE organization_id= ? AND rtl_loc_id in ?
    ORDER BY rtl_loc_id
    ]]></Statement>
      <Parameter name="organizationId" />
      <Parameter name="@retailLocationIdList" />
    </SQL>
  </Query>
  <Query name="RECEIVING_REPORT" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.data2.access.DefaultQueryResult</ResultClass>
    <ResultField name="invctl_document_id" type="String" />
    <ResultField name="invctl_document_line_nbr" type="Integer" />
    <ResultField name="merchLevel1_desc" type="String" />
    <ResultField name="carton_id" type="String" />
    <ResultField name="merchLevel1" type="String" />
    <ResultField name="sku" type="String" />
    <ResultField name="sku_desc" type="String" />
    <ResultField name="color" type="String" />
    <ResultField name="sku_size" type="String" />
    <ResultField name="update_user_id" type="String" />
    <ResultField name="expected_count" type="BigDecimal" />
    <ResultField name="new_unit_count" type="BigDecimal" />
    <ResultField name="verified" type="String" />
    <ResultField name="update_date" type="Date" />
    <SQL>
      <Statement dtype="String"><![CDATA[
      SELECT t.invctl_document_id,
      d.invctl_document_line_nbr,
      COALESCE(h.description,'UNKNOWN') merchLevel1_desc,
      d.carton_id,
      i.merch_level_1 merchLevel1,
      i.item_id sku,
      i.DESCRIPTION sku_desc,
      i.dimension1 color,
      i.dimension2 sku_size,
      p.employee_id as update_user_id,
      COALESCE(d.expected_count,0) expected_count,
      SUM(COALESCE(t.new_posted_count,0)- COALESCE(t.previous_posted_count,0)) new_unit_count,
      '' verified,
      x.trans_date update_date
      FROM itm_item i
      INNER JOIN inv_invctl_document_lineitm d on i.item_id=/*UPPER*/ d.inventory_item_id
      INNER JOIN inv_invctl_trans_detail t on d.organization_id=t.organization_id and d.rtl_loc_id=t.rtl_loc_id and d.invctl_document_id=/*UPPER*/ t.invctl_document_id and d.invctl_document_line_nbr=t.invctl_document_line_nbr
      INNER JOIN trn_trans x on t.organization_id = x.organization_id and t.rtl_loc_id = x.rtl_loc_id and t.wkstn_id = x.wkstn_id and t.business_date = x.business_date and t. trans_seq = x.trans_seq
      INNER JOIN crm_party p on x.organization_id=p.organization_id and x.operator_party_id=p.party_id
      LEFT JOIN itm_merch_hierarchy h on /*UPPER*/ i.merch_level_1=h.hierarchy_id AND /*UPPER*/ h.level_code = ?
            WHERE /*UPPER*/ t.document_typcode='RECEIVING' AND
                /*UPPER*/ t.new_status_code <> 'VOID' AND
                t.organization_id = ? AND
                t.rtl_loc_id = ?
      ]]></Statement>
      <Parameter name="merchLevel1Code" />
      <Parameter name="organizationId" />
      <Parameter name="retailLocationId" />
      <Expression trigger="documentId"><![CDATA[/*UPPER*/ t.invctl_document_id LIKE ?]]></Expression>
      <Expression trigger="cartonId"><![CDATA[/*UPPER*/ d.carton_id LIKE ?]]></Expression>
      <Expression trigger="receiverId"><![CDATA[/*UPPER*/ p.employee_id LIKE ?]]></Expression>
      <Expression parameters="argBusinessDateStart, argBusinessDateEnd" trigger="argBusinessDateStart"><![CDATA[x.trans_date BETWEEN ? AND ?]]></Expression>
    </SQL>
    <Suffix dtype="String"><![CDATA[
       group by t.invctl_document_id, d.invctl_document_line_nbr, h.description, d.carton_id, i.merch_level_1, 
                i.item_id, i.DESCRIPTION, i.dimension1, i.dimension2, p.employee_id, d.expected_count, x.trans_date
       order by update_date, t.invctl_document_id, d.carton_id]]></Suffix>
  </Query>
  <Query name="REPAIR_INVOICE_REPORT" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.pos.common.AddressQueryResult</ResultClass>
    <ResultField name="invoice_number" type="String" />
    <ResultField name="invoice_date" type="Date" />
    <ResultField name="service_loc_id" type="String" />
    <ResultField name="vendor_name" type="String" />
    <ResultField name="address1" type="String" />
    <ResultField name="address2" type="String" />
    <ResultField name="address3" type="String" />
    <ResultField name="address4" type="String" />
    <ResultField name="city" type="String" />
    <ResultField name="state" type="String" />
    <ResultField name="postalCode" type="String" />
    <ResultField name="country" type="String" />
    <ResultField name="national_tax_id" type="String" />
    <SQL>
      <Statement dtype="String"><![CDATA[
          SELECT
            inv.invoice_number,
            inv.invoice_date,
            inv.service_loc_id,
            loc.description AS vendor_name,
            addr.address1,
            addr.address2,
            addr.address3,
            addr.address4,
            addr.city,
            addr.territory,
            addr.postal_code,
            addr.country,           
            party.national_tax_id
          FROM
            cwo_invoice inv
          INNER JOIN
            cwo_service_loc loc
          ON
            inv.organization_id = loc.organization_id
            AND inv.service_loc_id = loc.service_loc_id
          INNER JOIN
            com_address addr
          ON
            loc.organization_id = addr.organization_id
            AND /*UPPER*/ loc.address_id = addr.address_id
          INNER JOIN
            crm_party party
          ON
            loc.organization_id = party.organization_id
            AND loc.party_id = party.party_id
          WHERE
            inv.organization_id = ?
            AND inv.invoice_number = ?
            AND inv.service_loc_id = ?
      ]]></Statement>
      <Parameter name="organizationId" />
      <Parameter name="invoiceNumber" />
      <Parameter name="serviceLocId" />
    </SQL>
  </Query>
  <Query name="REPAIR_INVOICE_DETAIL" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.pos.common.AddressQueryResult</ResultClass>
    <ResultField name="cust_acct_id" type="String" />
    <ResultField name="gl_account" type="String" />
    <ResultField name="amt" type="BigDecimal" />
    <ResultField name="extended_amt" type="BigDecimal " />
    <ResultField name="description" type="String" />
    <SQL>
      <Statement dtype="String"><![CDATA[
          SELECT 
			inv.cust_acct_id, 
			inv.gl_account, 
			inv.amt,
			accdet.extended_amt,
			(SELECT 
			itm.description 
		FROM 
		    itm_item itm, trl_sale_lineitm tsl
		WHERE 
		   itm.organization_id=tsl.organization_id 
	       AND itm.item_id=/*UPPER*/ tsl.item_id 
	       AND tsl.organization_id=accdet.organization_id
           AND tsl.trans_seq=accdet.trans_seq 
           AND tsl.rtrans_lineitm_seq=accdet.rtrans_lineitm_seq
           AND tsl.rtl_loc_id=accdet.rtl_loc_id 
           AND tsl.business_date=accdet.business_date
           AND tsl.wkstn_id=accdet.wkstn_id) AS description
		From 
		cwo_invoice_lineitm inv, cat_cust_item_acct_detail accdet
		WHERE 
		  inv.organization_id = accdet.organization_id
		  AND /*UPPER*/ inv.cust_acct_id=accdet.cust_acct_id
		  AND accdet.organization_id= ?
		  AND inv.invoice_number= ?
		  AND inv.service_loc_id= ? 
		  AND accdet.rtl_loc_id= ?
		ORDER BY 
		inv.gl_account,
		inv.cust_acct_id
		  ]]></Statement>
      <Parameter name="organizationId" />
      <Parameter name="invoiceNumber" />
      <Parameter name="serviceLocId" />
      <Parameter name="retailLocationId" />
    </SQL>
  </Query>
  <Query name="REPAIR_INVOICE_SUMMARY" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.pos.common.AddressQueryResult</ResultClass>
    <ResultField name="gl_account" type="String" />
    <ResultField name="acc_let" type="String" />
    <ResultField name="des" type="String" />
    <ResultField name="total_amt" type=" BigDecimal" />
    <ResultField name="has_margin" type="String" />
    <ResultField name="amt" type="BigDecimal" />
    <ResultField name="extended_amt" type="BigDecimal" />
    <ResultField name="qty" type=" BigDecimal" />
    <ResultField name="add_amt" type="BigDecimal" />
    <ResultField name="gross_margin" type="BigDecimal" />
    <SQL>
      <Statement dtype="String"><![CDATA[
		SELECT inv.gl_account,
  		(
  		CASE gl_account
   			WHEN '6200'
 			THEN '_rptRepairInv6200AccLetA'
  	 		WHEN '6263'
       	 	THEN '_rptRepairInv6263AccLetB'
  	    	WHEN '6266'
   			THEN '_rptRepairInv6266AccLetC'
  	    	WHEN '7866'
    		THEN '_rptRepairInv7868AccLetD'
    		WHEN '7870'
    		THEN '_rptRepairInv7870AccLetE'
 	   END)acc_let,
  	   (
  	   CASE gl_account
    		WHEN '6200'
    		THEN '_rptRepairInv6200'
    		WHEN '6263'
    		THEN '_rptRepairInv6263'
    		WHEN '6266'
    		THEN '_rptRepairInv6266'
    		WHEN '7866'
    		THEN '_rptRepairInv7866'
    		WHEN '7823'
    		THEN '_rptRepairInv7823'
    		WHEN '7844'
    		THEN '_rptRepairInv7844'
    		WHEN '2462'
    		THEN '_rptRepairInv2462'
  	   END) des,
  		(SELECT SUM(extended_amt)
		FROM
 		  cat_cust_item_acct_detail
		WHERE 
   		 cust_acct_id IN
    	(SELECT /*UPPER*/ cust_acct_id
    	 FROM 
    	    cwo_invoice_lineitm
    	 WHERE 
    	   invoice_number=?
           AND service_loc_id  =?
   		 )
  		) AS total_amt,
		  (
  		CASE
   		 WHEN(SELECT SUM(extended_amt)
   		     FROM
   		      cat_cust_item_acct_detail
    	   	 WHERE 
    		  cust_acct_id IN
        	(SELECT /*UPPER*/ cust_acct_id
       		 FROM 
       		    cwo_invoice_lineitm
        	 WHERE 
        	    invoice_number=?
                AND service_loc_id  =?
        ) )                 = 0
   		 THEN 'false'
   		 ELSE 'true'
  	   END)AS has_margin,
  		(SELECT SUM(iinv.amt)
  		FROM 
  		   cwo_invoice_lineitm iinv
  		WHERE 
  		  (iinv.invoice_number=?)
 		  AND (iinv.service_loc_id  =?)
  		  AND (iinv.organization_id =?)
 		  AND (/*UPPER*/ iinv.gl_account      = /*UPPER*/ inv.gl_account)
 		 )                         AS amt,
  		SUM (accdet.extended_amt) AS extended_amt,
  		COUNT(*)                  AS qty,
  		(SELECT SUM(iinv.amt)
  		FROM 
  		   cwo_invoice_lineitm iinv
 	 	WHERE (iinv.invoice_number=?)
  		   AND (iinv.service_loc_id  =?)
  	       AND (iinv.organization_id =?)
 		 ) AS amt_total,
  		(
 		 CASE
    		WHEN(SELECT SUM(extended_amt)
    	    FROM 
    	       cat_cust_item_acct_detail
            WHERE 
                cust_acct_id IN
        	(SELECT /*UPPER*/ cust_acct_id
        	FROM 
        	   cwo_invoice_lineitm
        	WHERE 
        	   invoice_number=?
        	   AND service_loc_id  =?
        ) )                !=0
   	 	THEN(((
      		(SELECT SUM(extended_amt)
      		FROM 
      		   cat_cust_item_acct_detail
      		WHERE 
      		   cust_acct_id IN
        	(SELECT /*UPPER*/ cust_acct_id
      	    FROM 
      	       cwo_invoice_lineitm
       	    WHERE 
       	       invoice_number=?
               AND service_loc_id  =?
        )
      ) -
     	 (SELECT SUM(amt)
      	  FROM 
      	     cwo_invoice_lineitm iinv
    	  WHERE  
    	     (iinv.invoice_number=?)
      	     AND (iinv.service_loc_id  =?)
      	     AND (iinv.organization_id =?)
      ))/
      (SELECT SUM(extended_amt)
      	FROM 
      	   cat_cust_item_acct_detail
      	WHERE
      	   cust_acct_id IN
        (SELECT /*UPPER*/ cust_acct_id
        FROM 
           cwo_invoice_lineitm
        WHERE 
            invoice_number=?
            AND service_loc_id  =?
        )
      )) *100)
 	 END) AS gross_margin
	FROM 
   		cwo_invoice_lineitm inv,
   		cat_cust_item_acct_detail accdet
	WHERE 
  	 inv.organization_id = accdet.organization_id
  	 AND /*UPPER*/ inv.cust_acct_id      =accdet.cust_acct_id
   	 AND inv.invoice_number    =?
   	 AND inv.service_loc_id    =?
  	 AND accdet.organization_id=?
GROUP BY 
  gl_account
ORDER BY 
  inv.gl_account
		]]></Statement>
      <Parameter name="invoiceNumber" />
      <Parameter name="serviceLocId" />
      <Parameter name="invoiceNumber" />
      <Parameter name="serviceLocId" />
      <Parameter name="invoiceNumber" />
      <Parameter name="serviceLocId" />
      <Parameter name="organizationId" />
      <Parameter name="invoiceNumber" />
      <Parameter name="serviceLocId" />
      <Parameter name="organizationId" />
      <Parameter name="invoiceNumber" />
      <Parameter name="serviceLocId" />
      <Parameter name="invoiceNumber" />
      <Parameter name="serviceLocId" />
      <Parameter name="invoiceNumber" />
      <Parameter name="serviceLocId" />
      <Parameter name="organizationId" />
      <Parameter name="invoiceNumber" />
      <Parameter name="serviceLocId" />
      <Parameter name="invoiceNumber" />
      <Parameter name="serviceLocId" />
      <Parameter name="organizationId" />
    </SQL>
  </Query>
  <Query name="RESTOCK_REPORT" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.data2.access.DefaultQueryResult</ResultClass>
    <ResultField name="merch_level_1" type="String" />
    <ResultField name="level_code" type="String" />
    <ResultField name="description" type="String" />
    <ResultField name="item_id" type="String" />
    <ResultField name="item_description" type="String" />
    <ResultField name="quantity" type="BigDecimal" />
    <SQL>
      <Statement dtype="String"><![CDATA[
          SELECT
            TSL.merch_level_1 AS merch_level_1,
            COALESCE(IMH.level_code, '_rptNotAvailable') AS level_code,
            COALESCE(IMH.description, '_rptNotAvailable') AS description,
            TSL.item_id,
            TSL.item_desc AS item_description,
            SUM(TSL.quantity) AS quantity
          FROM
            rpt_sale_line TSL

          INNER JOIN
            trn_trans TRN
          ON
            TSL.organization_id = TRN.organization_id
            AND TSL.rtl_loc_id = TRN.rtl_loc_id
            AND TSL.trans_seq = TRN.trans_seq
            AND TSL.wkstn_id = TRN.wkstn_id
            AND TSL.business_date = TRN.business_date

          INNER JOIN
            itm_item ITM
          ON
            ITM.organization_id = TSL.organization_id
            AND ITM.item_id = TSL.item_id

          LEFT OUTER JOIN
            itm_merch_hierarchy IMH
          ON
            TSL.organization_id = IMH.organization_id
            AND /*UPPER*/ TSL.merch_level_1 = IMH.hierarchy_id

          WHERE
            TSL.organization_id = ?
            AND TSL.rtl_loc_id = ?
            AND TSL.return_flag <> '1'
            AND /*UPPER*/ TSL.trans_statcode = 'COMPLETE'
            AND TSL.sale_lineitm_typcode IN (
              'SALE','SEND_SALE','LAYAWAY'
            )
            AND /*UPPER*/ ITM.item_typcode in ('STANDARD', 'KIT')
            AND IMH.hierarchy_id  LIKE ?
            AND TSL.trans_date BETWEEN ? AND ?
      ]]></Statement>
      <Parameter name="organizationId" />
      <Parameter name="retailLocationId" />
      <Parameter name="hierarchyId" />
      <Parameter name="argBusinessDateStart" />
      <Parameter name="argBusinessDateEnd" />
      <Expression trigger="startTime"><![CDATA[TRN.begin_time_int >= ?]]></Expression>
      <Expression trigger="endTime"><![CDATA[TRN.begin_time_int <= ?]]></Expression>
    </SQL>
    <Suffix dtype="String"><![CDATA[
        GROUP BY TSL.merch_level_1,  IMH.level_code,  IMH.description, TSL.item_id,  TSL.item_desc
        ORDER BY TSL.merch_level_1,  TSL.item_id]]>
    </Suffix>
  </Query>
  <Query name="RETURN_MERCHANDISE_REPORT" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.data2.access.DefaultQueryResult</ResultClass>
    <ResultField name="trans_seq" type="String" />
    <ResultField name="item_id" type="String" />
    <ResultField name="quantity" type="BigDecimal" />
    <ResultField name="unit_price" type="BigDecimal" />
    <ResultField name="ext_price" type="BigDecimal" />
    <ResultField name="commissioned_associate" type="String" />
    <ResultField name="description" type="String" />
    <ResultField name="wkstn_id" type="String" />
    <ResultField name="begin_datetime" type="Date" />
    <ResultField name="item_description" type="String" />
    <ResultField name="ringing_associate" type="String" />
    <SQL>
      <Statement dtype="String"><![CDATA[
          SELECT
            TSL.trans_seq,
            TSL.item_id,
            COALESCE((TSL.quantity * TCM.percentage_of_item), TSL.quantity) AS quantity,
            CASE
              WHEN TCM.percentage_of_item IS NULL THEN ABS(TSL.unit_price)
              ELSE ABS(COALESCE(TSL.net_amt,0) / COALESCE(TSL.quantity,1)) * COALESCE(TCM.percentage_of_item, 1)
            END AS unit_price,
            CASE
              WHEN TCM.percentage_of_item IS NULL THEN ABS(TSL.extended_amt)
              ELSE ABS(COALESCE(TSL.net_amt,0) * COALESCE(TCM.percentage_of_item, 1))
            END AS ext_price,
            CRP.employee_id as commissioned_associate,
            COALESCE(TRR.description,''),
            TSL.wkstn_id,
            TRN.begin_datetime,
            ITM.description AS item_description,
            CRE.employee_id AS ringing_associate
          FROM
            trl_sale_lineitm TSL

           INNER JOIN
            trl_rtrans_lineitm TRL
          ON
            TSL.organization_id = TRL.organization_id
            AND TSL.rtl_loc_id = TRL.rtl_loc_id
            AND TSL.trans_seq = TRL.trans_seq
            AND TSL.rtrans_lineitm_seq = TRL.rtrans_lineitm_seq
            AND TSL.wkstn_id = TRL.wkstn_id
            AND TSL.business_date = TRL.business_date
            AND TRL.void_flag = '0'

          INNER JOIN
            trn_trans TRN
          ON
            TSL.organization_id = TRN.organization_id
            AND TSL.rtl_loc_id = TRN.rtl_loc_id
            AND TSL.trans_seq = TRN.trans_seq
            AND TSL.wkstn_id = TRN.wkstn_id
            AND TSL.business_date = TRN.business_date

          INNER JOIN
            crm_party CRE
          ON
            TRN.organization_id = CRE.organization_id
            AND TRN.operator_party_id = CRE.party_id

          LEFT OUTER JOIN
            itm_item ITM
          ON
            TSL.organization_id = ITM.organization_id
            AND /*UPPER*/ TSL.item_id = ITM.item_id

          LEFT OUTER JOIN
            com_reason_code TRR
          ON
            TSL.organization_id = TRR.organization_id
            AND /*UPPER*/ TSL.return_reascode = TRR.reason_code
            AND TRR.reason_typcode = 'RETURN'

         LEFT OUTER JOIN
            trl_commission_mod TCM
         ON
           TSL.organization_id = TCM.organization_id
           AND TSL.rtl_loc_id = TCM.rtl_loc_id
           AND TSL.trans_seq = TCM.trans_seq
           AND TSL.rtrans_lineitm_seq = TCM.rtrans_lineitm_seq
           AND TSL.wkstn_id = TCM.wkstn_id
           AND TSL.business_date = TCM.business_date

         LEFT OUTER JOIN
            crm_party CRP
         ON
            TCM.organization_id = CRP.organization_id
            AND TCM.employee_party_id = CRP.party_id

          WHERE
            TSL.organization_id = ?
            AND TSL.rtl_loc_id = ?
            AND TSL.return_flag = '1'
            AND TRN.post_void_flag = '0'
            AND /*UPPER*/ TRN.trans_statcode = 'COMPLETE'
            AND (TSL.exclude_from_net_sales_flag <> '1' OR TSL.exclude_from_net_sales_flag IS NULL)
            AND /*UPPER*/ ITM.item_typcode <> 'NON_PHYSICAL'
            AND TRN.begin_datetime BETWEEN ? AND ?
            AND TSL.net_amt *-1 >= ?
      ]]></Statement>
      <Parameter name="organizationId" />
      <Parameter name="retailLocationId" />
      <Parameter name="argBusinessDateStart" />
      <Parameter name="argBusinessDateEnd" />
      <Parameter name="minimumReturnAmount" />
      <Expression trigger="returnReason_getReasonCode"><![CDATA[/*UPPER*/ TSL.return_reascode LIKE ?]]></Expression>
      <Expression parameters="startEmp, endEmp" trigger="startEmp"><![CDATA[/*UPPER*/ CRE.employee_id between ? AND ?]]></Expression>
    </SQL>
    <Sort field="sortOrder" order="ascDesc" />
  </Query>
  <Query name="SALES_BY_EMPLOYEE_AND_MERCHLVL1_REPORT" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.data2.access.DefaultQueryResult</ResultClass>
    <ResultField name="employee_id" type="String" />
    <ResultField name="emp_name" type="String" />
    <ResultField name="hierarchy_id" type="String" />
    <ResultField name="description" type="String" />
    <ResultField name="GrossCount" type="BigDecimal" />
    <ResultField name="GrossAmount" type="BigDecimal" />
    <ResultField name="ReturnCount" type="BigDecimal" />
    <ResultField name="ReturnAmount" type="BigDecimal" />
    <ResultField name="DiscountCount" type="BigDecimal" />
    <ResultField name="DiscountAmount" type="BigDecimal" />
    <ResultField name="NetCount" type="BigDecimal" />
    <ResultField name="NetAmount" type="BigDecimal" />
    <SQL>
      <Statement dtype="String"><![CDATA[
        SELECT
          employee_id,
          CONCAT( COALESCE(first_name,' '), 
                  CONCAT('::', COALESCE(last_name,' ')) ) AS emp_name,
          merch_level_1,
          description,
          GrossCount,
          GrossAmount,
          ReturnCount,
          ReturnAmount,
          DiscountCount,
          DiscountAmount,
          GrossCount - ReturnCount AS NetCount,
          NetAmount

        FROM
          (SELECT
            COALESCE(crm.employee_id,'DEF_EMP') AS employee_id,
            crm.first_name,
            crm.last_name,
            tsl.merch_level_1,
            imh.description,
            SUM(CASE WHEN tsl.return_flag = '0' THEN COALESCE(tsl.quantity,0) * TCM.percentage_of_item ELSE 0 END) AS GrossCount,
            SUM(CASE WHEN tsl.return_flag = '0' THEN COALESCE(tsl.gross_amt,0)* TCM.percentage_of_item ELSE 0 END) AS GrossAmount,
            SUM(CASE WHEN tsl.return_flag = '1' THEN COALESCE(tsl.quantity,0) * TCM.percentage_of_item ELSE 0 END) AS ReturnCount,
            SUM(CASE WHEN tsl.return_flag = '1' THEN COALESCE(tsl.gross_amt,0) * TCM.percentage_of_item ELSE 0 END) AS ReturnAmount,
            COALESCE(SUM(CASE WHEN COALESCE(tsl.discount_amt, 0) <> 0 THEN COALESCE( ( CASE WHEN 1 = tsl.return_flag THEN -tsl.quantity ELSE tsl.quantity END ) , 0) END), 0) AS DiscountCount,
            SUM(COALESCE(tsl.discount_amt,0) * TCM.percentage_of_item) AS DiscountAmount,
            SUM(COALESCE(tsl.net_amt,0) * TCM.percentage_of_item) AS NetAmount
          FROM
            rpt_sale_line tsl]]></Statement>
    </SQL>
    <SQL required="false">
      <Statement dtype="String"><![CDATA[INNER JOIN (SELECT org_value FROM dbo.fn_storesInHierarchy(?, ?, ?)) sih on CAST(tsl.rtl_loc_id AS NVARCHAR)=sih.org_value]]></Statement>
      <Parameter name="organizationId" />
      <Parameter name="orgCode" />
      <Parameter name="orgValue" />
    </SQL>
    <SQL>
      <Statement dtype="String"><![CDATA[
          LEFT OUTER JOIN
            itm_merch_hierarchy imh
          ON
            tsl.organization_id = imh.organization_id
            AND imh.organization_id = ?
            AND /*UPPER*/ tsl.merch_level_1 = imh.hierarchy_id
            AND /*UPPER*/ imh.level_code = ?

          INNER JOIN
            trl_commission_mod TCM
          ON
            tsl.organization_id = TCM.organization_id
            AND tsl.rtl_loc_id = TCM.rtl_loc_id
            AND tsl.wkstn_id = TCM.wkstn_id
            AND tsl.business_date = TCM.business_date
            AND tsl.rtrans_lineitm_seq = TCM.rtrans_lineitm_seq
            AND tsl.trans_seq = TCM.trans_seq

          INNER JOIN
            crm_party crm
          ON
            TCM.organization_id = crm.organization_id
            AND TCM.employee_party_id = crm.party_id

          WHERE
            tsl.QUANTITY <> 0
            AND /*UPPER*/ tsl.trans_statcode = 'COMPLETE'
            AND tsl.rtl_loc_id = ?
            AND 'YES' = ?

      ]]></Statement>
      <Parameter name="organizationId" />
      <Parameter name="merchLevel1Code" />
      <Parameter name="retailLocationId" />
      <Parameter name="byEmployee" />
      <Expression parameters="argBusinessDateStart, argBusinessDateEnd" trigger="argBusinessDateStart"><![CDATA[tsl.trans_date BETWEEN ? AND ?]]></Expression>
      <Expression trigger="employeeId"><![CDATA[COALESCE(/*UPPER*/ crm.employee_id,'') = ?]]></Expression>
    </SQL>
    <Suffix dtype="String"><![CDATA[GROUP BY crm.employee_id, crm.first_name, crm.last_name, tsl.merch_level_1, imh.description) dt ORDER BY employee_id, merch_level_1]]></Suffix>
  </Query>
  <Query name="SALE_BY_HOUR_ANALYSIS_REPORT" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.data2.access.DefaultQueryResult</ResultClass>
    <ResultField name="hour_period" type="Integer" />
    <ResultField name="trans_count" type="BigDecimal" />
    <ResultField name="net_amount" type="BigDecimal" />
    <ResultField name="dow1" type="BigDecimal" />
    <ResultField name="dow2" type="BigDecimal" />
    <ResultField name="dow3" type="BigDecimal" />
    <ResultField name="dow4" type="BigDecimal" />
    <ResultField name="dow5" type="BigDecimal" />
    <ResultField name="dow6" type="BigDecimal" />
    <ResultField name="dow7" type="BigDecimal" />
    <SQL>
      <Statement dtype="String"><![CDATA[
        SELECT 
        hour_period,
        SUM(trans_count) AS trans_count,
        SUM(net_amount) AS net_amount,
        SUM(COALESCE(dow1,0)) AS dow1,
        SUM(COALESCE(dow2,0)) AS dow2,
        SUM(COALESCE(dow3,0)) AS dow3,
        SUM(COALESCE(dow4,0)) AS dow4,
        SUM(COALESCE(dow5,0)) AS dow5,
        SUM(COALESCE(dow6,0)) AS dow6,
        SUM(COALESCE(dow7,0)) AS dow7

        FROM 
        ( SELECT 
            CONCAT('DOW',TO_CHAR(tsl.trans_date, 'D')) AS dow,
            FLOOR(tsl.begin_time_int /10000000)  AS hour_period,
            COUNT(DISTINCT tsl.trans_seq) AS trans_count,
            SUM(COALESCE(tsl.unit_price,0) * COALESCE(tsl.quantity,0)) AS net_amount,
            SUM(COALESCE(tsl.unit_price,0) * COALESCE(tsl.quantity,0)) AS amount
          FROM rpt_sale_line tsl
          JOIN trn_trans trans
          ON tsl.organization_id = trans.organization_id
          AND tsl.rtl_loc_id     = trans.rtl_loc_id
          AND tsl.wkstn_id       = trans.wkstn_id
          AND tsl.business_date  = trans.business_date
          AND tsl.trans_seq      = trans.trans_seq
          WHERE /*UPPER*/ tsl.trans_statcode = 'COMPLETE'
         ]]></Statement>
      <Expression trigger="employeeId"><![CDATA[
          tsl.trans_seq       IN
            ( SELECT DISTINCT trans_seq
              FROM trl_commission_mod tcm, crm_party crm
              WHERE tsl.organization_id  = tcm.organization_id
              AND tsl.rtl_loc_id         = tcm.rtl_loc_id
              AND tsl.wkstn_id           = tcm.wkstn_id
              AND tsl.business_date      = tcm.business_date
              AND tsl.trans_seq          = tcm.trans_seq
              AND tsl.rtrans_lineitm_seq = tcm.rtrans_lineitm_seq
              AND tcm.organization_id    = crm.organization_id
              AND tcm.employee_party_id  = crm.party_id    
              AND coalesce(/*UPPER*/ crm.employee_id,'') = ?)]]></Expression>
    </SQL>
    <SQL>
      <Statement dtype="String"><![CDATA[
            AND tsl.organization_id = ?
            AND tsl.rtl_loc_id = ?
            AND tsl.QUANTITY <> 0
      ]]></Statement>
      <Parameter name="organizationId" />
      <Parameter name="retailLocationId" />
      <Expression parameters="argBusinessDateStart, argBusinessDateEnd" trigger="argBusinessDateStart"><![CDATA[tsl.trans_date between ? AND ?]]></Expression>
      <Expression trigger="registerId"><![CDATA[tsl.wkstn_id = ?]]></Expression>
    </SQL>
    <Suffix dtype="String"><![CDATA[GROUP BY tsl.trans_date, FLOOR(tsl.begin_time_int /10000000)
        ) PIVOT (
          SUM(amount)
          FOR dow IN ('DOW1' AS DOW1,'DOW2' AS DOW2,'DOW3' AS DOW3,'DOW4' AS DOW4,'DOW5' AS DOW5,'DOW6' AS DOW6,'DOW7' AS DOW7))
          GROUP BY hour_period
          ORDER BY hour_period]]></Suffix>
  </Query>
  <Query name="SALE_BY_HOUR_BY_DAY_REPORT" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.data2.access.DefaultQueryResult</ResultClass>
    <ResultField name="business_date" type="Date" />
    <ResultField name="wkstn_id" type="String" />
    <ResultField name="hour_period" type="Integer" />
    <ResultField name="hour_start_key" type="String" />
    <ResultField name="hour_end_key" type="String" />
    <ResultField name="trans_count" type="BigDecimal" />
    <ResultField name="item_count" type="BigDecimal" />
    <ResultField name="amount" type="BigDecimal" />
    <ResultField name="avg" type="BigDecimal" />
    <SQL>
      <Statement dtype="String"><![CDATA[

          SELECT
            tt.trans_date,
            tt.wkstn_id,
            FLOOR(tsl.begin_time_int/10000000) AS hour_period,
            CONCAT('_rptHourStart', FLOOR(tsl.begin_time_int/10000000)) AS hour_period_key,
            CONCAT('_rptHourEnd', FLOOR(tsl.begin_time_int/10000000)) AS hour_period_key,
            COUNT(DISTINCT tt.trans_seq) AS trans_count,
            SUM(COALESCE(quantity * COALESCE(tcm.percentage_of_item,1) * (case when tsl.unit_price<0 then -1 else 1 end),0)) AS item_count,
            SUM((COALESCE(tsl.unit_price,0)*COALESCE(tsl.quantity,0)) * COALESCE(tcm.percentage_of_item,1)) AS amount,
            SUM((COALESCE(tsl.unit_price,0)*COALESCE(tsl.quantity,0)) * COALESCE(tcm.percentage_of_item,1))/COUNT(DISTINCT tt.trans_seq) AS avg

          FROM trn_trans tt

          INNER JOIN rpt_sale_line tsl ON
            tt.trans_seq = tsl.trans_seq
            AND tt.organization_id = tsl.organization_id
            AND tt.wkstn_id = tsl.wkstn_id
            AND tt.rtl_loc_id = tsl.rtl_loc_id
            AND tt.business_date = tsl.business_date
            AND tsl.QUANTITY <> 0

          LEFT OUTER JOIN trl_commission_mod tcm ON
            tsl.organization_id = tcm.organization_id
            AND tsl.rtl_loc_id = tcm.rtl_loc_id
            AND tsl.wkstn_id = tcm.wkstn_id
            AND tsl.business_date = tcm.business_date
            AND tsl.trans_seq = tcm.trans_seq
            AND tsl.rtrans_lineitm_seq = tcm.rtrans_lineitm_seq

          LEFT OUTER JOIN crm_party crm ON
            tcm.organization_id = crm.organization_id
            AND tcm.employee_party_id = crm.party_id

          WHERE
            tt.organization_id = ?
            AND /*UPPER*/ tt.trans_statcode = 'COMPLETE'
            AND tt.post_void_flag = '0'
            AND tt.rtl_loc_id = ?
      ]]></Statement>
      <Parameter name="organizationId" />
      <Parameter name="retailLocationId" />
      <Expression parameters="argBusinessDateStart, argBusinessDateEnd" trigger="argBusinessDateStart"><![CDATA[tsl.trans_date between ? AND ?]]></Expression>
      <Expression trigger="startReg"><![CDATA[tt.wkstn_id >= ?]]></Expression>
      <Expression trigger="endReg"><![CDATA[tt.wkstn_id <= ?]]></Expression>
      <Expression trigger="employeeId"><![CDATA[coalesce(/*UPPER*/ crm.employee_id,'') = ?]]></Expression>
    </SQL>
    <Suffix dtype="String"><![CDATA[GROUP BY tt.trans_date, tt.wkstn_id, floor(tsl.begin_time_int/10000000) ORDER BY tt.trans_date, tt.wkstn_id, hour_period ASC]]></Suffix>
  </Query>
  <Query name="SALES_BY_MERCHLVL1_REPORT" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.data2.access.DefaultQueryResult</ResultClass>
    <ResultField name="hierarchy_id" type="String" />
    <ResultField name="description" type="String" />
    <ResultField name="GrossCount" type="BigDecimal" />
    <ResultField name="GrossAmount" type="BigDecimal" />
    <ResultField name="ReturnCount" type="BigDecimal" />
    <ResultField name="ReturnAmount" type="BigDecimal" />
    <ResultField name="DiscountCount" type="BigDecimal" />
    <ResultField name="DiscountAmount" type="BigDecimal" />
    <ResultField name="NetCount" type="BigDecimal" />
    <ResultField name="NetAmount" type="BigDecimal" />
    <SQL>
      <Statement dtype="String"><![CDATA[
        SELECT 
          merch_level_1,
          description,
          GrossCount,
          GrossAmount,
          ReturnCount,
          ReturnAmount,
          DiscountCount,
          DiscountAmount,
          GrossCount - ReturnCount AS NetCount,
          NetAmount

        FROM
          (SELECT
            tsl.merch_level_1,
            imh.description,
            SUM(CASE WHEN tsl.return_flag = '0' THEN COALESCE(tsl.quantity,0) END) AS GrossCount,
            SUM(CASE WHEN tsl.return_flag = '0' THEN tsl.gross_amt END) AS GrossAmount,
            SUM(CASE WHEN tsl.return_flag = '1' THEN COALESCE(tsl.quantity,0) ELSE 0 END) AS ReturnCount,
            SUM(CASE WHEN tsl.return_flag = '1' THEN tsl.gross_amt ELSE 0 END) AS ReturnAmount,
            COALESCE(SUM(CASE WHEN COALESCE(tsl.discount_amt, 0) <> 0 THEN COALESCE( ( CASE WHEN 1 = tsl.return_flag THEN -tsl.quantity ELSE tsl.quantity END ) , 0) END), 0) AS DiscountCount,
            SUM(COALESCE(tsl.discount_amt,0)) AS DiscountAmount,
            SUM(COALESCE(tsl.net_amt,0)) AS NetAmount
          FROM
            rpt_sale_line tsl
            LEFT OUTER JOIN
            itm_merch_hierarchy imh
          ON
            tsl.organization_id = imh.organization_id
            AND /*UPPER*/ tsl.merch_level_1 = imh.hierarchy_id
            AND /*UPPER*/ imh.level_code = ?
            ]]></Statement>
     <Parameter name="merchLevel1Code" />
    </SQL>
    <SQL required="false">
      <Statement dtype="String"><![CDATA[INNER JOIN (SELECT org_value FROM dbo.fn_storesInHierarchy(?, ?, ?)) sih on CAST(tsl.rtl_loc_id AS NVARCHAR)=sih.org_value]]></Statement>
      <Parameter name="organizationId" />
      <Parameter name="orgCode" />
      <Parameter name="orgValue" />
    </SQL>
    <SQL required="false">
      <Statement dtype="String"><![CDATA[

          INNER JOIN
            trl_commission_mod TCM
          ON
            tsl.organization_id = TCM.organization_id
            AND tsl.rtl_loc_id = TCM.rtl_loc_id
            AND tsl.wkstn_id = TCM.wkstn_id
            AND tsl.business_date = TCM.business_date
            AND tsl.rtrans_lineitm_seq = TCM.rtrans_lineitm_seq
            AND tsl.trans_seq = TCM.trans_seq

          INNER JOIN
            crm_party crm
          ON
            TCM.organization_id = crm.organization_id
            AND TCM.employee_party_id = crm.party_id
            AND COALESCE(/*UPPER*/ crm.employee_id,'') = ?]]></Statement>
       <Parameter name="employeeId" />
       </SQL>
       <SQL>
       <Statement dtype="String"><![CDATA[

          WHERE
            tsl.organization_id = ?
            AND tsl.QUANTITY <> 0
            AND /*UPPER*/ tsl.trans_statcode = 'COMPLETE'
            AND tsl.rtl_loc_id = ?
      ]]></Statement>
      <Parameter name="organizationId" />
      <Parameter name="retailLocationId" />
      <Expression parameters="argBusinessDateStart, argBusinessDateEnd" trigger="argBusinessDateStart"><![CDATA[tsl.trans_date BETWEEN ? AND ?]]></Expression>
    </SQL>
    <Suffix dtype="String"><![CDATA[GROUP BY tsl.merch_level_1, imh.description) dt ORDER BY merch_level_1]]></Suffix>
  </Query>
  <Query name="SALES_GOALS_REPORT" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.data2.access.DefaultQueryResult</ResultClass>
    <ResultField name="description" type="String" />
    <ResultField name="effective_date" type="Date" />
    <ResultField name="end_date" type="Date" />
    <ResultField name="sales_goal_value" type="BigDecimal" />
    <ResultField name="to_date" type="BigDecimal" />
    <ResultField name="percent_to_goal" type="BigDecimal" />
    <ResultField name="status" type="String" />
    <SQL>
      <Statement dtype="String"><![CDATA[
          SELECT
            description,
            effective_date,
            end_date,
            sales_goal_value,
            to_date,
            percent_to_goal,
            status
          FROM (SELECT
                  description,
                  effective_date,
                  end_date,
                  sales_goal_value,
                  to_date,
                  (case when sales_goal_value > 0 then (to_date/sales_goal_value)*100 else -1 end) as percent_to_goal,
                  (case when ? < subssg.effective_date then 'future'
                        when ? >= subssg.effective_date and ? <= subssg.end_date then 'currently-active'
                        when (? > subssg.end_date and subssg.to_date < subssg.sales_goal_value) then 'completed-not-met'
                        when (? > subssg.end_date and subssg.to_date >= subssg.sales_goal_value) then 'completed-met' END) as status,
                  (case when ? < subssg.effective_date then 3
                        when ? >= subssg.effective_date and ? <= subssg.end_date then 2
                        when (? > subssg.end_date) then 1 END) as sortOrder
                FROM (SELECT description,
                             effective_date,
                             end_date,
                             sales_goal_value,
                             (SELECT COALESCE(SUM(tsl.net_amt),0)
                               FROM rpt_sale_line tsl
                               WHERE ssg.effective_date <= tsl.trans_timestamp
                                 AND ssg.end_date >= tsl.trans_timestamp
                                 AND /*UPPER*/ tsl.trans_statcode = 'COMPLETE'
                             ) as to_date
                        FROM sls_sales_goal ssg
                        WHERE ssg.organization_id = ?
                          AND ssg.effective_date >= ?
                          AND ssg.end_date <= ?
                        ) subssg
               ) sub2ssg
          WHERE /*UPPER*/ status LIKE ?
          AND sales_goal_value <> 0
          AND effective_date <> end_date
          ]]></Statement>
      <Parameter name="systemDate" />
      <Parameter name="systemDate" />
      <Parameter name="systemDate" />
      <Parameter name="systemDate" />
      <Parameter name="systemDate" />
      <Parameter name="systemDate" />
      <Parameter name="systemDate" />
      <Parameter name="systemDate" />
      <Parameter name="systemDate" />
      <Parameter name="organizationId" />
      <Parameter name="argBusinessDateStart" />
      <Parameter name="argBusinessDateEnd" />
      <Parameter name="argStatusFilter" />
    </SQL>
    <Suffix dtype="String"><![CDATA[ORDER BY sortOrder ASC, end_date ASC, effective_date ASC, description ASC]]></Suffix>
  </Query>
  <Query name="SCHEDULE_DETAIL_REPORT" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.data2.access.DefaultQueryResult</ResultClass>
    <ResultField name="employee_name" type="String" />
    <ResultField name="employee_id" type="String" />
    <ResultField name="start_time" type="Date" />
    <ResultField name="end_time" type="Date" />
    <ResultField name="work_desc" type="String" />
    <ResultField name="schedule_duration" type="BigDecimal" />
    <ResultField name="business_date" type="Date" />
    <SQL>
      <Statement dtype="String"><![CDATA[
          SELECT
            CONCAT(CONCAT(p.first_name, '::'),p.last_name) AS employee_name,
            hsc.employee_id,
            hsc.start_time,
            hsc.end_time,
            (SELECT description from hrs_work_codes codes 
                 WHERE hsc.organization_id = codes.organization_id
                   AND /*UPPER*/ hsc.work_code       = codes.work_code) 
             as work_desc,
            hsc.schedule_duration,
            hsc.business_date
          FROM
            sch_schedule hsc

          LEFT JOIN
            crm_party p
          ON
            /*UPPER*/ p.employee_id = hsc.employee_id
            AND p.organization_id = hsc.organization_id

          WHERE
            hsc.organization_id = ?
            AND (hsc.void_flag IS NULL OR hsc.void_flag <> '1')
      ]]></Statement>
      <Parameter name="organizationId" />
      <Expression parameters="argBusinessDateStart,argBusinessDateEnd" trigger="argBusinessDateStart"><![CDATA[hsc.business_date BETWEEN ? AND ?]]></Expression>
      <Expression trigger="startEmployee"><![CDATA[hsc.employee_id >= ?]]></Expression>
      <Expression trigger="endEmployee"><![CDATA[hsc.employee_id <= ?]]></Expression>
    </SQL>
    <Suffix dtype="String"><![CDATA[ORDER BY hsc.business_date, p.last_name]]></Suffix>
  </Query>
  <Query name="SHIPPING_MANIFEST_REPORT" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.data2.access.DefaultQueryResult</ResultClass>
    <ResultField name="invDocId" type="String" />
    <ResultField name="shipmentSeq" type="Integer" />
    <ResultField name="shipToName" type="String" />
    <ResultField name="shipToAddress1" type="String" />
    <ResultField name="shipToAddress2" type="String" />
    <ResultField name="shipToApartment" type="String" />
    <ResultField name="shipToCity" type="String" />
    <ResultField name="shipToState" type="String" />
    <ResultField name="shipToPostalCode" type="String" />
    <ResultField name="shipToCountry" type="String" />
    <ResultField name="shipToTelephone" type="String" />
    <ResultField name="itemId" type="String" />
    <ResultField name="itemDescription" type="String" />
    <ResultField name="itemQuantity" type="Integer" />
    <ResultField name="shippingCarrier" type="String" />
    <ResultField name="shippingMethod" type="String" />
    <ResultField name="trackingNumber" type="String" />
    <ResultField name="actualShipDate" type="Date" />
    <SQL>
      <Statement dtype="String"><![CDATA[
        SELECT
          inv_invctl_document.invctl_document_id,
          inv_shipment.shipment_seq,
          inv_shipment.destination_name,
          inv_shipment_address.address1,
          inv_shipment_address.address2,
          inv_shipment_address.apartment,
          inv_shipment_address.city,
          inv_shipment_address.state,
          inv_shipment_address.postal_code,
          inv_shipment_address.country,
          inv_shipment_address.telephone1,
          itm_item.item_id,
          itm_item.description,
          COALESCE(inv_shipment_lines.ship_qty, inv_invctl_document_lineitm.posted_count),
          inv_shipper.shipper_desc,
          inv_shipper_method.shipper_method_desc,
          inv_shipment.tracking_nbr,
          inv_shipment.actual_ship_date
        FROM inv_invctl_document
          INNER JOIN inv_invctl_document_lineitm
            ON inv_invctl_document.organization_id = inv_invctl_document_lineitm.organization_id
            AND inv_invctl_document.rtl_loc_id = inv_invctl_document_lineitm.rtl_loc_id
            AND inv_invctl_document.document_typcode = inv_invctl_document_lineitm.document_typcode
            AND inv_invctl_document.invctl_document_id = inv_invctl_document_lineitm.invctl_document_id
            AND /*UPPER*/ inv_invctl_document_lineitm.status_code <> 'VOID'
          INNER JOIN inv_shipment
            ON inv_invctl_document.organization_id = inv_shipment.organization_id
            AND inv_invctl_document.rtl_loc_id = inv_shipment.rtl_loc_id
            AND inv_invctl_document.document_typcode = inv_shipment.document_typcode
            AND inv_invctl_document.invctl_document_id = inv_shipment.invctl_document_id
          INNER JOIN inv_shipment_lines
            ON inv_shipment.organization_id = inv_shipment_lines.organization_id
            AND inv_shipment.rtl_loc_id = inv_shipment_lines.rtl_loc_id
            AND inv_shipment.document_typcode = inv_shipment_lines.document_typcode
            AND inv_shipment.invctl_document_id = inv_shipment_lines.invctl_document_id
            AND inv_shipment.shipment_seq = inv_shipment_lines.shipment_seq
            AND inv_invctl_document_lineitm.invctl_document_line_nbr = inv_shipment_lines.invctl_document_line_nbr
          INNER JOIN inv_shipment_address
            ON inv_shipment.organization_id = inv_shipment_address.organization_id
            AND inv_shipment.rtl_loc_id = inv_shipment_address.rtl_loc_id
            AND inv_shipment.document_typcode = inv_shipment_address.document_typcode
            AND inv_shipment.invctl_document_id = inv_shipment_address.invctl_document_id
            AND inv_shipment.shipment_seq = inv_shipment_address.shipment_seq
          LEFT OUTER JOIN itm_item
            ON inv_invctl_document_lineitm.organization_id = itm_item.organization_id
            AND /*UPPER*/ inv_invctl_document_lineitm.inventory_item_id = itm_item.item_id
          LEFT OUTER JOIN inv_shipper
            ON inv_shipment.organization_id = inv_shipper.organization_id
            AND /*UPPER*/ inv_shipment.shipping_carrier = inv_shipper.shipper_id
          LEFT OUTER JOIN inv_shipper_method
            ON inv_shipment.organization_id = inv_shipper_method.organization_id
            AND /*UPPER*/ inv_shipment.shipping_method = inv_shipper_method.shipper_method_id
        WHERE inv_invctl_document.organization_id = ?
        AND inv_invctl_document.document_typcode = 'SHIPPING'
        AND /*UPPER*/ inv_invctl_document.status_code = 'CLOSED'
        AND /*UPPER*/ inv_shipment.shipment_statcode = 'SHIPPED'
        AND COALESCE(inv_shipment_lines.ship_qty, inv_invctl_document_lineitm.posted_count) <> 0
      ]]></Statement>
      <Parameter name="organizationId" />
      <Expression parameters="argBusinessDateStart, argBusinessDateEnd" trigger="argBusinessDateStart"><![CDATA[inv_shipment.actual_ship_date BETWEEN ? AND ?]]></Expression>
    </SQL>
    <Suffix dtype="String"><![CDATA[ORDER BY inv_invctl_document.invctl_document_id ASC, inv_shipment.shipment_seq ASC, inv_invctl_document_lineitm.inventory_item_id ASC]]></Suffix>
  </Query>
  <Query name="SPECIAL_ORDERS_REPORT" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.data2.access.DefaultQueryResult</ResultClass>
    <ResultField name="extended_amt" type="BigDecimal" />
    <ResultField name="description" type="String" />
    <ResultField name="item_id" type="String" />
    <ResultField name="cust_acct_id" type="String" />
    <ResultField name="cust_acct_statcode" type="String" />
    <ResultField name="acct_setup_date" type="Date" />
    <ResultField name="cat_name" type="String" />
    <ResultField name="trans_seq" type="Integer" />
    <ResultField name="rtrans_lineitm_seq" type="Integer" />
    <SQL>
      <Statement dtype="String"><![CDATA[
          SELECT
            CCIAD.extended_amt,
            II.description,
            II.item_id,
            CCA.cust_acct_id,
            CCA.cust_acct_statcode,
            CCA.acct_setup_date,
            CASE WHEN COALESCE(/*UPPER*/ CP.first_name,' ') <> ' ' OR COALESCE(/*UPPER*/ CP.last_name,' ') <> ' ' 
            THEN CONCAT(CP.first_name, CONCAT('::', CP.last_name)) END AS cat_name,
            CCIAD.trans_seq,
            CCIAD.rtrans_lineitm_seq
          FROM
            cat_cust_acct CCA

          INNER JOIN
            cat_cust_item_acct_detail CCIAD
          ON
            CCA.organization_id = CCIAD.organization_id
            AND CCA.cust_acct_id = CCIAD.cust_acct_id
            AND CCA.cust_acct_code = CCIAD.cust_acct_code

          INNER JOIN
            crm_party CP
          ON
            CP.organization_id = CCA.organization_id
            AND CP.party_id = CCA.party_id

          INNER JOIN
            trl_sale_lineitm TSL
          ON
            TSL.organization_id = CCA.organization_id
            AND TSL.rtrans_lineitm_seq = CCIAD.rtrans_lineitm_seq
            AND TSL.rtl_loc_id = CCIAD.rtl_loc_id
            AND TSL.wkstn_id = CCIAD.wkstn_id
            AND TSL.trans_seq = CCIAD.trans_seq

          INNER JOIN
            itm_item II
          ON
            II.organization_id = CCA.organization_id
            AND II.item_id = /*UPPER*/ TSL.item_id

          WHERE
            CCA.organization_id = ?
            AND CCA.rtl_loc_id = ?
            AND CCA.cust_acct_code = 'SPECIAL_ORDER'
            AND /*UPPER*/ CCIAD.line_typcode = 'ITEM'
            AND /*UPPER*/ CCIAD.item_acct_lineitm_statcode <> 'VOID'
            AND CCA.acct_setup_date BETWEEN ? AND ?
            AND /*UPPER*/ CCA.cust_acct_statcode LIKE ?
      ]]></Statement>
      <Parameter name="organizationId" />
      <Parameter name="retailLocationId" />
      <Parameter name="argBusinessDateStart" />
      <Parameter name="argBusinessDateEnd" />
      <Parameter name="argStatusFilter" />
    </SQL>
    <Sort field="sortOrder" />
  </Query>
  <Query name="STORE_LOCATIONS_REPORT" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.data2.access.DefaultQueryResult</ResultClass>
    <ResultField name="store_nbr" type="String" />
    <ResultField name="store_name" type="String" />
    <ResultField name="address1" type="String" />
    <ResultField name="address2" type="String" />
    <ResultField name="city" type="String" />
    <ResultField name="state" type="String" />
    <ResultField name="postal_code" type="String" />
    <ResultField name="country" type="String" />
    <ResultField name="telephone1" type="String" />
    <ResultField name="description" type="String" />
    <ResultField name="totaltax" type="BigDecimal" />
    <ResultField name="rtl_loc_id" type="String" />
    <ResultField name="store_manager" type="String" />
    <SQL>
      <Statement dtype="String"><![CDATA[
          SELECT
            rloc.store_nbr,
            rloc.store_name,
            rloc.address1,
            rloc.address2,
            rloc.city,
            rloc.state,
            rloc.postal_code,
            rloc.country,
            rloc.telephone1,
            rloc.description,
            SUM(COALESCE(trr.percentage,0)) AS totaltax,
            rloc.rtl_loc_id,
            rloc.store_manager
          FROM
            loc_rtl_loc rloc

          LEFT OUTER JOIN
            tax_rtl_loc_tax_mapping tmap
          ON
            rloc.organization_id = tmap.organization_id
            AND rloc.rtl_loc_id = tmap.rtl_loc_id

          LEFT OUTER JOIN
            tax_tax_group_rule tgr
          ON
            tmap.organization_id = tgr.organization_id
            AND /*UPPER*/ tmap.tax_loc_id = tgr.tax_loc_id

          LEFT OUTER JOIN
            tax_tax_rate_rule trr
          ON
            tgr.organization_id = trr.organization_id
            AND tgr.tax_loc_id = trr.tax_loc_id
            AND tgr.tax_group_id = trr.tax_group_id
            AND tgr.tax_rule_seq_nbr = trr.tax_rule_seq_nbr

          WHERE
            rloc.organization_id = ?  and
            rloc.country = (select country from loc_rtl_loc where organization_id = ? and rtl_loc_id = ?)
      ]]></Statement>
      <Parameter name="organizationId" />
      <Parameter name="organizationId" />
      <Parameter name="storeNbr" />
      <Expression trigger="storeState"><![CDATA[/*UPPER*/ rloc.state = ?]]></Expression>
      <Expression parameters="storeCity%" trigger="storeCity"><![CDATA[/*UPPER*/ rloc.city LIKE ?]]></Expression>
    </SQL>
    <Suffix dtype="String"><![CDATA[GROUP BY
            rloc.organization_id, rloc.rtl_loc_id, rloc.store_nbr,
            rloc.store_name, rloc.address1, rloc.address2, rloc.city,
            rloc.state, rloc.postal_code, rloc.country, rloc.telephone1,
            rloc.description, rloc.store_manager
          ORDER BY
            rloc.rtl_loc_id]]></Suffix>
  </Query>
  <Query name="SUSPENDED_TRANSACTION_DETAIL_REPORT" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.data2.access.DefaultQueryResult</ResultClass>
    <ResultField name="transaction_number" type="String" />
    <ResultField name="sold_by" type="String" />
    <ResultField name="associate_no" type="String" />
    <ResultField name="register_no" type="String" />
    <ResultField name="transaction_time" type="Date" />
    <ResultField name="amount" type="BigDecimal" />
    <ResultField name="lineitemseq" type="String" />
    <ResultField name="itemid" type="String" />
    <ResultField name="itemdesc" type="String" />
    <ResultField name="quantity" type="String" />
    <ResultField name="unitprice" type="BigDecimal" />
    <ResultField name="netamount" type="BigDecimal" />
    <ResultField name="voidflag" type="String" />
    <ResultField name="total" type="BigDecimal" />
    <ResultField name="subtotal" type="BigDecimal" />
    <ResultField name="tax" type="BigDecimal" />
    <SQL>
      <Statement dtype="String"><![CDATA[
          SELECT
            trn_trans.trans_seq AS transaction_number,
            crm_party.employee_id AS sold_by,
            crm_party.employee_id AS associate_no,
            trn_trans.wkstn_id AS register_no,
            trn_trans.begin_datetime AS transaction_time,
            trn_trans.total AS amount,
            rpt_sale_line.rtrans_lineitm_seq AS lineitemseq,
            rpt_sale_line.item_id AS itemid,
            rpt_sale_line.item_desc AS itemdesc,
            trl_sale_lineitm.quantity AS quantity,
            rpt_sale_line.unit_price AS unitprice,
            COALESCE(trl_sale_lineitm.extended_amt, 0) AS netamount,
            trl_rtrans_lineitm.void_flag AS voidflag,
            trn_trans.total AS total,
            trn_trans.subtotal AS subtotal,
            trn_trans.taxtotal AS tax

          FROM
            trn_trans

          INNER JOIN
            rpt_sale_line
          ON
            rpt_sale_line.trans_seq = trn_trans.trans_seq
            AND rpt_sale_line.organization_id = trn_trans.organization_id
            AND rpt_sale_line.rtl_loc_id = trn_trans.rtl_loc_id
            AND rpt_sale_line.wkstn_id = trn_trans.wkstn_id
            AND rpt_sale_line.business_date = trn_trans.business_date

          INNER JOIN
            crm_party
          ON
            crm_party.organization_id = trn_trans.organization_id
            AND crm_party.party_id = trn_trans.operator_party_id

          INNER JOIN
            trl_rtrans_lineitm
          ON
            trl_rtrans_lineitm.organization_id = rpt_sale_line.organization_id
            AND trl_rtrans_lineitm.rtl_loc_id = rpt_sale_line.rtl_loc_id
            AND trl_rtrans_lineitm.trans_seq = rpt_sale_line.trans_seq
            AND trl_rtrans_lineitm.rtrans_lineitm_seq = rpt_sale_line.rtrans_lineitm_seq
            AND trl_rtrans_lineitm.wkstn_id = rpt_sale_line.wkstn_id
            AND trl_rtrans_lineitm.business_date = rpt_sale_line.business_date
            AND trl_rtrans_lineitm.void_flag = 0  
            
          INNER JOIN
            trl_sale_lineitm
          ON
            trl_sale_lineitm.organization_id = trl_rtrans_lineitm.organization_id
            AND trl_sale_lineitm.rtl_loc_id = trl_rtrans_lineitm.rtl_loc_id
            AND trl_sale_lineitm.trans_seq = trl_rtrans_lineitm.trans_seq
            AND trl_sale_lineitm.rtrans_lineitm_seq = trl_rtrans_lineitm.rtrans_lineitm_seq
            AND trl_sale_lineitm.wkstn_id = trl_rtrans_lineitm.wkstn_id
            AND trl_sale_lineitm.business_date = trl_rtrans_lineitm.business_date      
            
          WHERE
            trn_trans.organization_id = ?
            AND trn_trans.rtl_loc_id = ?
            AND /*UPPER*/ trn_trans.TRANS_statcode = 'SUSPEND'
            AND trn_trans.trans_date BETWEEN ? AND ?
            AND 'SUMMARY' <> ? 
      ]]></Statement>
      <Parameter name="organizationId" />
      <Parameter name="retailLocationId" />
      <Parameter name="argBusinessDateStart" />
      <Parameter name="argBusinessDateEnd" />
      <Parameter name="displayOption" />
    </SQL>
    <Suffix dtype="String"><![CDATA[ORDER BY trn_trans.trans_seq]]></Suffix>
  </Query>
  <Query name="SUSPENDED_TRANSACTION_SUMMARY_REPORT" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.data2.access.DefaultQueryResult</ResultClass>
    <ResultField name="transaction_number" type="String" />
    <ResultField name="sold_by" type="String" />
    <ResultField name="associate_no" type="String" />
    <ResultField name="register_no" type="String" />
    <ResultField name="transaction_time" type="Date" />
    <ResultField name="tax" type="BigDecimal" />
    <ResultField name="netamount" type="BigDecimal" />
    <ResultField name="total" type="BigDecimal" />
    <ResultField name="business_date" type="Date" />
    <SQL>
      <Statement dtype="String"><![CDATA[
          SELECT
            trn_trans.trans_seq AS transaction_number,
            crm_party.employee_id AS sold_by,
            crm_party.employee_id AS associate_no,
            trn_trans.wkstn_id AS register_no,
            trn_trans.begin_datetime AS transaction_time,
            trn_trans.taxtotal AS tax,
            trn_trans.subtotal AS netamount,
            trn_trans.total AS total,
            trn_trans.trans_date
          FROM
            trn_trans

          INNER JOIN
            crm_party
          ON
            crm_party.organization_id = trn_trans.organization_id
            AND crm_party.party_id = trn_trans.operator_party_id

          WHERE
            trn_trans.rtl_loc_id = ?
            AND trn_trans.organization_id = ?
            AND /*UPPER*/ trn_trans.trans_statcode = 'SUSPEND'
            AND trn_trans.trans_date BETWEEN ? AND ?
            AND 'DETAIL' <> ?
      ]]></Statement>
      <Parameter name="retailLocationId" />
      <Parameter name="organizationId" />
      <Parameter name="argBusinessDateStart" />
      <Parameter name="argBusinessDateEnd" />
      <Parameter name="displayOption" />
    </SQL>
    <Suffix dtype="String"><![CDATA[ORDER BY trn_trans.trans_seq]]></Suffix>
  </Query>
  <Query name="TAX_EXEMPTION_LINE_REPORT" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.pos.common.AddressQueryResult</ResultClass>
    <ResultField name="wkstn_id" type="String" />
    <ResultField name="trans_seq" type="String" />
    <ResultField name="business_date" type="Date" />
    <ResultField name="trans_date" type="Date" />
    <ResultField name="cert_nbr" type="String" />
    <ResultField name="expiration_date" type="Date" />
    <ResultField name="reason_desc" type="String" />
    <ResultField name="cert_holder_name" type="String" />
    <ResultField name="item_id" type="String" />
    <ResultField name="quantity" type="BigDecimal" />
    <ResultField name="tax_exempt_amt" type="BigDecimal" />
    <ResultField name="exempt_tax_amount" type="BigDecimal" />
    <SQL>
      <Statement dtype="String"><![CDATA[
        SELECT wkstn_id,
				  trans_seq,
				  business_date,
				  trans_date,
				  cert_nbr,
				  expiration_date,
				  reason_desc,
				  cert_holder_name,
				  item_id,
				  quantity,
				  tax_exempt_amt,
				  sum(exempt_tax_amount) as exempt_tax_amount
				  FROM (
          SELECT distinct
            TRL.wkstn_id,
            TRL.trans_seq,
            TRL.rtrans_lineitm_seq,
            TRL.business_date,
            trn.trans_date,
            TTE.cert_nbr,
            TTE.expiration_date,
            CRC.description as reason_desc,
            TTE.cert_holder_name,
            TSL.item_id,
            TSL.quantity,
            TRL.tax_exempt_amt,
            TRL.exempt_tax_amount
          FROM
            trl_sale_tax_lineitm TRL

          INNER JOIN
            tax_tax_exemption TTE
          ON
            TRL.organization_id = TTE.organization_id
            AND /*UPPER*/ TRL.tax_exemption_id = TTE.tax_exemption_id

          INNER JOIN
            com_reason_code CRC
          ON
            CRC.organization_id = TTE.organization_id
            AND CRC.reason_typcode = 'TAX_EXEMPT'
            AND CRC.reason_code = /*UPPER*/ TTE.reascode

          INNER JOIN 
            trl_rtrans_lineitm lineitm
          ON
            TRL.organization_id = lineitm.organization_id
            AND TRL.rtl_loc_id = lineitm.rtl_loc_id
            AND TRL.trans_seq = lineitm.trans_seq
            AND TRL.rtrans_lineitm_seq = lineitm.rtrans_lineitm_seq
            AND TRL.business_date = lineitm.business_date
            AND TRL.wkstn_id = lineitm.wkstn_id
            AND lineitm.void_flag = 0
            
          INNER JOIN
            trl_sale_lineitm TSL
          ON
            TRL.organization_id = TSL.organization_id
            AND TRL.rtl_loc_id = TSL.rtl_loc_id
            AND TRL.trans_seq = TSL.trans_seq
            AND TRL.rtrans_lineitm_seq = TSL.rtrans_lineitm_seq
            AND TRL.business_date = TSL.business_date
            AND TRL.wkstn_id = TSL.wkstn_id

          INNER JOIN trn_trans trn
            ON tsl.organization_id = trn.organization_id
            AND tsl.rtl_loc_id = trn.rtl_loc_id
            AND tsl.business_date = trn.business_date
            AND tsl.wkstn_id = trn.wkstn_id
            AND tsl.trans_seq = trn.trans_seq
            AND trn.post_void_flag = 0

          INNER JOIN
            trl_commission_mod TCM
          ON
            TSL.organization_id = TCM.organization_id
            AND TSL.rtl_loc_id = TCM.rtl_loc_id
            AND TSL.wkstn_id = TCM.wkstn_id
            AND TSL.business_date = TCM.business_date
            AND TSL.rtrans_lineitm_seq = TCM.rtrans_lineitm_seq
            AND TSL.trans_seq = TCM.trans_seq
            
         INNER JOIN 
           cat_cust_item_acct_detail ca_detail 
         ON
           ca_detail.organization_id = TCM.organization_id 
           AND ca_detail.rtl_loc_id = TCM.rtl_loc_id
           AND ca_detail.business_date = TCM.business_date
           AND ca_detail.wkstn_id = TCM.wkstn_id
           AND ca_detail.trans_seq = TCM.trans_seq
           AND ca_detail.rtrans_lineitm_seq = TCM.rtrans_lineitm_seq              

          WHERE
            TRL.organization_id = ?
            AND TRL.rtl_loc_id = ?
            AND TRL.tax_exempt_amt >= 0
            AND TRL.void_flag = '0'
            AND /*UPPER*/ TRN.trans_statcode <> 'CANCEL'
            AND /*UPPER*/ TRN.trans_statcode <> 'SUSPEND'
            AND (TCM.commission_mod_seq_nbr = 1 OR TCM.commission_mod_seq_nbr IS NULL)
            AND (/*UPPER*/ ca_detail.ITEM_ACCT_LINEITM_STATCODE = 'PICKUP' or /*UPPER*/ ca_detail.ITEM_ACCT_LINEITM_STATCODE = 'SHIP')
            AND (/*UPPER*/ ca_detail.LINE_TYPCODE = 'ITEM')
            AND trn.trans_date BETWEEN ? AND ?
          
      ]]></Statement>
      <Parameter name="organizationId" />
      <Parameter name="retailLocationId" />
      <Parameter name="argBusinessDateStart" />
      <Parameter name="argBusinessDateEnd" />
      <Expression trigger="startRegister"><![CDATA[TRL.wkstn_id >= ?]]></Expression>
      <Expression trigger="endRegister"><![CDATA[TRL.wkstn_id <= ?]]></Expression>
    </SQL>
    <SQL>
      <Statement dtype="String"><![CDATA[
          UNION
          SELECT distinct
            TRL.wkstn_id,
            TRL.trans_seq,
            TRL.rtrans_lineitm_seq,
            TRL.business_date,
            trn.trans_date,
            TTE.cert_nbr,
            TTE.expiration_date,
            CRC.description as reason_desc,
            TTE.cert_holder_name,
            TSL.item_id,
            TSL.quantity,
            TRL.tax_exempt_amt,
            TRL.exempt_tax_amount
          FROM
            trl_sale_tax_lineitm TRL

          INNER JOIN
            tax_tax_exemption TTE
          ON
            TRL.organization_id = TTE.organization_id
            AND /*UPPER*/ TRL.tax_exemption_id = TTE.tax_exemption_id

          INNER JOIN
            com_reason_code CRC
          ON
            CRC.organization_id = TTE.organization_id
            AND CRC.reason_typcode = 'TAX_EXEMPT'
            AND CRC.reason_code = /*UPPER*/ TTE.reascode

          INNER JOIN 
            trl_rtrans_lineitm lineitm
          ON
            TRL.organization_id = lineitm.organization_id
            AND TRL.rtl_loc_id = lineitm.rtl_loc_id
            AND TRL.trans_seq = lineitm.trans_seq
            AND TRL.rtrans_lineitm_seq = lineitm.rtrans_lineitm_seq
            AND TRL.business_date = lineitm.business_date
            AND TRL.wkstn_id = lineitm.wkstn_id
            AND lineitm.void_flag = 0
                      
          INNER JOIN
            trl_sale_lineitm TSL
          ON
            TRL.organization_id = TSL.organization_id
            AND TRL.rtl_loc_id = TSL.rtl_loc_id
            AND TRL.trans_seq = TSL.trans_seq
            AND TRL.rtrans_lineitm_seq = TSL.rtrans_lineitm_seq
            AND TRL.business_date = TSL.business_date
            AND TRL.wkstn_id = TSL.wkstn_id
            AND (/*UPPER*/ TSL.sale_lineitm_typcode in ('SALE', 'RETURN', 'WORK_ORDER'))
          
          INNER JOIN trn_trans trn
            ON tsl.organization_id = trn.organization_id
            AND tsl.rtl_loc_id = trn.rtl_loc_id
            AND tsl.business_date = trn.business_date
            AND tsl.wkstn_id = trn.wkstn_id
            AND tsl.trans_seq = trn.trans_seq
            AND trn.post_void_flag = 0

          INNER JOIN
            trl_commission_mod TCM
          ON
            TSL.organization_id = TCM.organization_id
            AND TSL.rtl_loc_id = TCM.rtl_loc_id
            AND TSL.wkstn_id = TCM.wkstn_id
            AND TSL.business_date = TCM.business_date
            AND TSL.rtrans_lineitm_seq = TCM.rtrans_lineitm_seq
            AND TSL.trans_seq = TCM.trans_seq
            
         LEFT OUTER JOIN 
           cat_cust_item_acct_detail ca_detail 
         ON
           ca_detail.organization_id = TCM.organization_id 
           AND ca_detail.rtl_loc_id = TCM.rtl_loc_id
           AND ca_detail.business_date = TCM.business_date
           AND ca_detail.wkstn_id = TCM.wkstn_id
           AND ca_detail.trans_seq = TCM.trans_seq            
           AND ca_detail.rtrans_lineitm_seq = TCM.rtrans_lineitm_seq
          WHERE
            TRL.organization_id = ?
            AND TRL.rtl_loc_id = ?
            AND TRL.tax_exempt_amt >= 0
            AND TRL.void_flag = '0'
            AND /*UPPER*/ TRN.trans_statcode <> 'CANCEL'
            AND /*UPPER*/ TRN.trans_statcode <> 'SUSPEND'
            AND ca_detail.organization_id IS NULL
            AND ca_detail.rtl_loc_id IS NULL
            AND ca_detail.business_date IS NULL
            AND ca_detail.wkstn_id IS NULL
            AND ca_detail.trans_seq IS NULL   
            AND (TCM.commission_mod_seq_nbr = 1 OR TCM.commission_mod_seq_nbr IS NULL)
            AND trn.trans_date BETWEEN ? AND ?
      ]]></Statement>
      <Parameter name="organizationId" />
      <Parameter name="retailLocationId" />
      <Parameter name="argBusinessDateStart" />
      <Parameter name="argBusinessDateEnd" />
      <Expression trigger="startRegister"><![CDATA[TRL.wkstn_id >= ?]]></Expression>
      <Expression trigger="endRegister"><![CDATA[TRL.wkstn_id <= ?]]></Expression>
    </SQL>
    <Suffix dtype="String"><![CDATA[ ) d
        GROUP BY
              wkstn_id,
						  trans_seq,
						  rtrans_lineitm_seq,
						  business_date,
						  trans_date,
						  cert_nbr,
						  expiration_date,
						  reason_desc,
						  cert_holder_name,
						  cert_nbr,
						  item_id,
						  quantity,
						  tax_exempt_amt
            ORDER BY trans_seq, cert_nbr
          ]]></Suffix>
  </Query>
  <Query name="TAX_EXEMPTION_TRN_REPORT" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.pos.common.AddressQueryResult</ResultClass>
    <ResultField name="wkstn_id" type="String" />
    <ResultField name="trans_seq" type="String" />
    <ResultField name="business_date" type="Date" />
    <ResultField name="trans_date" type="Date" />
    <ResultField name="cust_id" type="String" />
    <ResultField name="customer_name" type="String" />
    <ResultField name="organization_name" type="String" />
    <ResultField name="address1" type="String" />
    <ResultField name="address2" type="String" />
    <ResultField name="apartment" type="String" />
    <ResultField name="city" type="String" />
    <ResultField name="state" type="String" />
    <ResultField name="postalCode" type="String" />
    <ResultField name="country" type="String" />
    <ResultField name="telephone1" type="String" />
    <ResultField name="employee_id" type="String" />
    <SQL>
      <Statement dtype="String"><![CDATA[
          SELECT distinct
            TRL.wkstn_id,
            TRL.trans_seq,
            TRL.business_date,
            trn.trans_date,
            CRM.cust_id,
            CONCAT(CONCAT(CRM.first_name, '::'), CRM.last_name) AS customer_name,
            CRM.organization_name,
            CPL.address1,
            CPL.address2,
            CPL.apartment,
            CPL.city,
            CPL.state,
            CPL.postal_code,
            CPL.country,
            cpt.telephone_number as telephone1,
            CRM2.employee_id
          FROM
            trl_sale_tax_lineitm TRL

          INNER JOIN
            tax_tax_exemption TTE
          ON
            TRL.organization_id = TTE.organization_id
            AND /*UPPER*/ TRL.tax_exemption_id = TTE.tax_exemption_id

          INNER JOIN
            com_reason_code CRC
          ON
            CRC.organization_id = TTE.organization_id
            AND CRC.reason_typcode = 'TAX_EXEMPT'
            AND CRC.reason_code = /*UPPER*/ TTE.reascode

          INNER JOIN
            crm_party CRM
          ON
            TRL.organization_id = CRM.organization_id
            AND TTE.party_id = CRM.party_id

          LEFT OUTER JOIN
            crm_party_locale_information CPL
          ON
            CRM.organization_id = CPL.organization_id
            AND CRM.party_id = CPL.party_id
            AND CPL.primary_flag = 1
            
          INNER JOIN 
            trl_rtrans_lineitm lineitm
          ON
            TRL.organization_id = lineitm.organization_id
            AND TRL.rtl_loc_id = lineitm.rtl_loc_id
            AND TRL.trans_seq = lineitm.trans_seq
            AND TRL.rtrans_lineitm_seq = lineitm.rtrans_lineitm_seq
            AND TRL.business_date = lineitm.business_date
            AND TRL.wkstn_id = lineitm.wkstn_id
            AND lineitm.void_flag = 0            

          INNER JOIN
            trl_sale_lineitm TSL
          ON
            TRL.organization_id = TSL.organization_id
            AND TRL.rtl_loc_id = TSL.rtl_loc_id
            AND TRL.trans_seq = TSL.trans_seq
            AND TRL.rtrans_lineitm_seq = TSL.rtrans_lineitm_seq
            AND TRL.business_date = TSL.business_date
            AND TRL.wkstn_id = TSL.wkstn_id         

          INNER JOIN trn_trans trn
            ON tsl.organization_id = trn.organization_id
            AND tsl.rtl_loc_id = trn.rtl_loc_id
            AND tsl.business_date = trn.business_date
            AND tsl.wkstn_id = trn.wkstn_id
            AND tsl.trans_seq = trn.trans_seq
            AND trn.post_void_flag = 0

         INNER JOIN
            trl_commission_mod TCM
         ON
            TSL.organization_id = TCM.organization_id
            AND TSL.rtl_loc_id = TCM.rtl_loc_id
            AND TSL.wkstn_id = TCM.wkstn_id
            AND TSL.business_date = TCM.business_date
            AND TSL.rtrans_lineitm_seq = TCM.rtrans_lineitm_seq
            AND TSL.trans_seq = TCM.trans_seq

         LEFT OUTER JOIN
            crm_party CRM2
         ON
            TCM.organization_id = CRM2.organization_id
            AND TCM.employee_party_id = CRM2.party_id
            
         LEFT OUTER JOIN
           crm_party_telephone cpt 
         ON 
           CRM.party_id = cpt.party_id AND 
           CRM.organization_id = cpt.organization_id AND 
           cpt.telephone_type = /*UPPER*/ 'Home'   
           
         INNER JOIN 
           cat_cust_item_acct_detail ca_detail 
         ON
           ca_detail.organization_id = TSL.organization_id 
           AND ca_detail.rtl_loc_id = TSL.rtl_loc_id
           AND ca_detail.business_date = TSL.business_date
           AND ca_detail.wkstn_id = TSL.wkstn_id
           AND ca_detail.trans_seq = TSL.trans_seq
           AND ca_detail.rtrans_lineitm_seq = TSL.rtrans_lineitm_seq                     

          WHERE
            TRL.organization_id = ?
            AND TRL.rtl_loc_id = ?
            AND TRL.tax_exempt_amt >= 0
            AND TRL.void_flag = '0'
            AND /*UPPER*/ TRN.trans_statcode <> 'CANCEL'
            AND /*UPPER*/ TRN.trans_statcode <> 'SUSPEND'
            AND CRM2.employee_id IS NOT NULL
            AND (TCM.commission_mod_seq_nbr = 1 OR TCM.commission_mod_seq_nbr IS NULL)
            AND (/*UPPER*/ ca_detail.ITEM_ACCT_LINEITM_STATCODE = 'PICKUP' or /*UPPER*/ ca_detail.ITEM_ACCT_LINEITM_STATCODE = 'SHIP')
            AND (/*UPPER*/ ca_detail.LINE_TYPCODE = 'ITEM')
            AND trn.trans_date BETWEEN ? AND ?
      ]]></Statement>
      <Parameter name="organizationId" />
      <Parameter name="retailLocationId" />
      <Parameter name="argBusinessDateStart" />
      <Parameter name="argBusinessDateEnd" />
      <Expression trigger="startRegister"><![CDATA[TRL.wkstn_id >= ?]]></Expression>
      <Expression trigger="endRegister"><![CDATA[TRL.wkstn_id <= ?]]></Expression>
    </SQL>
    <SQL>
      <Statement dtype="String"><![CDATA[
          UNION
          SELECT distinct
            TRL.wkstn_id,
            TRL.trans_seq,
            TRL.business_date,
            trn.trans_date,
            CRM.cust_id,
            CONCAT(CONCAT(CRM.first_name, '::'), CRM.last_name) AS customer_name,
            CRM.organization_name,
            CPL.address1,
            CPL.address2,
            CPL.apartment,
            CPL.city,
            CPL.state,
            CPL.postal_code,
            CPL.country,
            cpt.telephone_number as telephone1,
            CRM2.employee_id
          FROM
            trl_sale_tax_lineitm TRL

          INNER JOIN
            tax_tax_exemption TTE
          ON
            TRL.organization_id = TTE.organization_id
            AND /*UPPER*/ TRL.tax_exemption_id = TTE.tax_exemption_id

          INNER JOIN
            com_reason_code CRC
          ON
            CRC.organization_id = TTE.organization_id
            AND CRC.reason_typcode = 'TAX_EXEMPT'
            AND CRC.reason_code = /*UPPER*/ TTE.reascode

          INNER JOIN
            crm_party CRM
          ON
            TRL.organization_id = CRM.organization_id
            AND TTE.party_id = CRM.party_id

          LEFT OUTER JOIN
            crm_party_locale_information CPL
          ON
            CRM.organization_id = CPL.organization_id
            AND CRM.party_id = CPL.party_id
            AND CPL.primary_flag = 1
            
          INNER JOIN 
            trl_rtrans_lineitm lineitm
          ON
            TRL.organization_id = lineitm.organization_id
            AND TRL.rtl_loc_id = lineitm.rtl_loc_id
            AND TRL.trans_seq = lineitm.trans_seq
            AND TRL.rtrans_lineitm_seq = lineitm.rtrans_lineitm_seq
            AND TRL.business_date = lineitm.business_date
            AND TRL.wkstn_id = lineitm.wkstn_id
            AND lineitm.void_flag = 0

          INNER JOIN
            trl_sale_lineitm TSL
          ON
            TRL.organization_id = TSL.organization_id
            AND TRL.rtl_loc_id = TSL.rtl_loc_id
            AND TRL.trans_seq = TSL.trans_seq
            AND TRL.rtrans_lineitm_seq = TSL.rtrans_lineitm_seq
            AND TRL.business_date = TSL.business_date
            AND TRL.wkstn_id = TSL.wkstn_id
            AND TRL.void_flag = 0
            AND (/*UPPER*/ TSL.sale_lineitm_typcode in ('SALE', 'RETURN', 'WORK_ORDER'))

          INNER JOIN trn_trans trn
            ON tsl.organization_id = trn.organization_id
            AND tsl.rtl_loc_id = trn.rtl_loc_id
            AND tsl.business_date = trn.business_date
            AND tsl.wkstn_id = trn.wkstn_id
            AND tsl.trans_seq = trn.trans_seq
            AND trn.post_void_flag = 0
            
         INNER JOIN
            trl_commission_mod TCM
         ON
            TSL.organization_id = TCM.organization_id
            AND TSL.rtl_loc_id = TCM.rtl_loc_id
            AND TSL.wkstn_id = TCM.wkstn_id
            AND TSL.business_date = TCM.business_date
            AND TSL.rtrans_lineitm_seq = TCM.rtrans_lineitm_seq
            AND TSL.trans_seq = TCM.trans_seq            

         LEFT OUTER JOIN
            crm_party CRM2
         ON
            TCM.organization_id = CRM2.organization_id
            AND TCM.employee_party_id = CRM2.party_id
            
         LEFT OUTER JOIN
           crm_party_telephone cpt 
         ON 
           CRM.party_id = cpt.party_id AND 
           CRM.organization_id = cpt.organization_id AND 
           cpt.telephone_type = /*UPPER*/ 'Home'   
           
         LEFT OUTER JOIN 
           cat_cust_item_acct_detail ca_detail 
         ON
           ca_detail.organization_id = TSL.organization_id 
           AND ca_detail.rtl_loc_id = TSL.rtl_loc_id
           AND ca_detail.business_date = TSL.business_date
           AND ca_detail.wkstn_id = TSL.wkstn_id
           AND ca_detail.trans_seq = TSL.trans_seq                   
           AND ca_detail.rtrans_lineitm_seq = TSL.rtrans_lineitm_seq 
          
          WHERE
            TRL.organization_id = ?
            AND TRL.rtl_loc_id = ?
            AND TRL.tax_exempt_amt >= 0
            AND TRL.void_flag = '0'
            AND /*UPPER*/ TRN.trans_statcode <> 'CANCEL'
            AND /*UPPER*/ TRN.trans_statcode <> 'SUSPEND'
            AND ca_detail.organization_id IS NULL
            AND ca_detail.rtl_loc_id IS NULL
            AND ca_detail.business_date IS NULL
            AND ca_detail.wkstn_id IS NULL
            AND ca_detail.trans_seq IS NULL
            AND (TCM.commission_mod_seq_nbr = 1 OR TCM.commission_mod_seq_nbr IS NULL)                 
            AND CRM2.employee_id IS NOT NULL
            AND trn.trans_date BETWEEN ? AND ?
      ]]></Statement>
      <Parameter name="organizationId" />
      <Parameter name="retailLocationId" />
      <Parameter name="argBusinessDateStart" />
      <Parameter name="argBusinessDateEnd" />
      <Expression trigger="startRegister"><![CDATA[TRL.wkstn_id >= ?]]></Expression>
      <Expression trigger="endRegister"><![CDATA[TRL.wkstn_id <= ?]]></Expression>
    </SQL>    
    <Suffix dtype="String"><![CDATA[GROUP BY
            TRL.wkstn_id, TRL.trans_seq, TRL.business_date, trn.trans_date,
            CRM.cust_id, CRM.first_name, CRM.last_name,
            CRM.organization_name, CPL.address1, CPL.address2, CPL.apartment,
            CPL.city, CPL.state, CPL.postal_code, CPL.country, cpt.telephone_number,
            CRM2.employee_id
          ORDER BY 
            trans_seq]]></Suffix>
  </Query>
  <Query name="TIMECARD_REPORT" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.data2.access.DefaultQueryResult</ResultClass>
    <ResultField name="employee_id" type="String" />
    <ResultField name="last_name" type="String" />
    <ResultField name="first_name" type="String" />
    <ResultField name="business_date" type="Date" />
    <ResultField name="description" type="String" />
    <ResultField name="duration" type="BigDecimal" />
    <ResultField name="clock_in" type="Timestamp" />
    <ResultField name="clock_out" type="Timestamp" />
    <SQL>
      <Statement dtype="String"><![CDATA[
         SELECT
            HRE.employee_id as employee_id,
            CRP.last_name as last_name,
            CRP.first_name as first_name,
            TTE.business_date as business_date,
            HWC.description as description,
            TTE.duration/3600000 AS duration,
            clock_in_timestamp as clock_in,
            clock_out_timestamp as clock_out

          FROM
            hrs_employee HRE

          INNER JOIN
            crm_party CRP
          ON
            HRE.organization_id = CRP.organization_id
            AND HRE.employee_id = /*UPPER*/ CRP.employee_id

          INNER JOIN
            thr_timecard_entry TTE
          ON
            CRP.organization_id = TTE.organization_id
            AND CRP.party_id = TTE.party_id

          INNER JOIN
            hrs_work_codes HWC
          ON
            TTE.organization_id = HWC.organization_id AND /*UPPER*/ TTE.work_code = HWC.work_code
          WHERE
            COALESCE(TTE.duration, 1)> 0
            AND /*UPPER*/ HRE.employee_statcode = 'A'
            AND TTE.delete_flag <> '1'
            AND HRE.organization_id = ?
            AND TTE.rtl_loc_id = ?
          ]]></Statement>
      <Parameter name="organizationId" />
      <Parameter name="retailLocationId" />
      <Expression parameters="argBusinessDateStart,argBusinessDateEnd" trigger="argBusinessDateStart"><![CDATA[business_date BETWEEN ? AND ?]]></Expression>
      <Expression trigger="employeeId"><![CDATA[HRE.employee_id = ?]]></Expression>
    </SQL>
    <Suffix dtype="String"><![CDATA[
            AND EXISTS (
              SELECT
                0
              FROM
                thr_payroll PY
              WHERE
                PY.organization_id = HRE.organization_id
                AND PY.rtl_loc_id = TTE.rtl_loc_id
                AND PY.business_date = TTE.business_date
                AND posted_date IS NOT NULL
                AND party_id = hre.party_id
            )
            ORDER BY HRE.employee_id, business_date, clock_in_timestamp
  ]]></Suffix>
  </Query>
  <Query name="TIME_OFF_REPORT" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.data2.access.DefaultQueryResult</ResultClass>
    <ResultField name="first_name" type="String" />
    <ResultField name="last_name" type="String" />
    <ResultField name="telephone1" type="String" />
    <ResultField name="employee_work_status" type="String" />
    <ResultField name="start_datetime" type="Date" />
    <ResultField name="end_datetime" type="Date" />
    <ResultField name="reason_code" type="String" />
    <ResultField name="time_off_typcode" type="String" />
    <ResultField name="employee_id" type="String" />
    <ResultField name="time_off_seq" type="String" />
    <ResultField name="reason_description" type="String" />
    <ResultField name="employee_name" type="String" />
    <SQL>
      <Statement dtype="String"><![CDATA[
          SELECT
            p.first_name,
            p.last_name,
            cpt.telephone_number,
            emp.employee_work_status,
            eto.start_datetime,
            eto.end_datetime,
            eto.reason_code,
            CASE
                  WHEN /*UPPER*/ eto.time_off_typcode = 'PART_DAY' THEN '_toPart'
                  WHEN /*UPPER*/ eto.time_off_typcode = 'HALF_DAY' THEN '_toHalf'
                  WHEN /*UPPER*/ eto.time_off_typcode = 'FULL_DAY' THEN '_toFull'
            END,           
            eto.employee_id,
            eto.time_off_seq,
            rsn.description AS reason_description,

            CASE WHEN COALESCE(/*UPPER*/ p.first_name,' ') <> ' ' OR COALESCE(/*UPPER*/ p.last_name,' ') <> ' '
                 THEN CONCAT(p.first_name, CONCAT('::', p.last_name)) END
                 AS employee_name
          FROM
            sch_emp_time_off eto
            LEFT OUTER JOIN crm_party p ON
              /*UPPER*/ p.employee_id = eto.employee_id AND
              p.organization_id = eto.organization_id
            LEFT OUTER JOIN hrs_employee emp ON
              emp.employee_id = eto.employee_id AND
              emp.organization_id = eto.organization_id
            LEFT OUTER JOIN crm_party_telephone cpt ON
              p.party_id = cpt.party_id AND
              p.organization_id = cpt.organization_id AND
              cpt.telephone_type = /*UPPER*/ 'Home'
            LEFT OUTER JOIN com_reason_code rsn ON
              rsn.organization_id = eto.organization_id AND
              rsn.reason_code = /*UPPER*/ eto.reason_code AND
              rsn.reason_typcode = 'TIME_OFF_REAS_CODE'
       		WHERE
          		eto.organization_id = ?
          		AND (eto.void_flag IS NULL OR eto.void_flag <> '1')
          		AND (eto.start_datetime BETWEEN ? AND ?
            		 OR eto.end_datetime BETWEEN ? AND ?)
      ]]></Statement>
      <Parameter name="organizationId" />
      <Parameter name="argBusinessDateStart" />
      <Parameter name="argBusinessDateEnd" />
      <Parameter name="argBusinessDateStart" />
      <Parameter name="argBusinessDateEnd" />
    </SQL>
    <Suffix dtype="String"><![CDATA[ORDER BY p.last_name]]></Suffix>
  </Query>
  <Query name="WAC_DETAIL_REPORT" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.data2.access.DefaultQueryResult</ResultClass>
    <ResultField name="styleId" type="String" />
    <ResultField name="styleDesc" type="String" />
    <ResultField name="itemId" type="String" />
    <ResultField name="itemDesc" type="String" />
    <ResultField name="rtlLocId" type="Integer" />
    <ResultField name="docInfo" type="String" />
    <ResultField name="createDate" type="Date" />
    <ResultField name="quantity" type="BigDecimal" />
    <ResultField name="unitCost" type="BigDecimal" />
    <ResultField name="valuationTotal" type="BigDecimal" />
    <ResultField name="infoType" type="String" />
    <SQL>
      <Statement dtype="String"><![CDATA[
      SELECT 
         style.item_id AS styleId, 
         style.description AS styleDesc,
         a.item_id AS itemId, 
         itm.description AS itemDesc,        
         a.rtl_loc_id, 
         CONCAT(a.inv_doc_id, CONCAT(' - ', a.inv_doc_id_lineNbr)) as docInfo,
         a.inv_create_date, 
         a.wac_qty_rcvd, 
         a.wac_value_rcvd, 
         COALESCE(a.wac_qty_rcvd, 0) * a.wac_value_rcvd as valuationTotal,
         a.infoType              
     FROM
        (SELECT organization_id, item_id, null as rtl_loc_id, null as inv_doc_id, null as inv_doc_id_lineNbr, null as inv_create_date,
                COALESCE(SUM(wac_qty_rcvd),0) as wac_qty_rcvd,
                SUM(COALESCE(wac_value_rcvd,0))/SUM(COALESCE(wac_qty_rcvd,0)) as wac_value_rcvd, 
                '_rptInitialValue' as infoType
         FROM inv_cst_item_yearend inv_yearend
       WHERE fiscal_year = (SELECT MAX(fiscal_year)
                     FROM inv_cst_item_yearend inv_yearend2
                         WHERE inv_yearend2.organization_id =  inv_yearend.organization_id AND
                             inv_yearend2.rtl_loc_id = inv_yearend.rtl_loc_id AND
                           inv_yearend2.item_id = inv_yearend.item_id AND
                                 fiscal_year <= cast(to_char(? -1, 'yyyy') as number(4,0))) AND
                 rtl_loc_id IN ? AND
                 organization_id = ?
       GROUP BY organization_id, item_id
       HAVING SUM(wac_qty_rcvd) <> 0

         UNION ALL

         SELECT inv_doc.organization_id, inv_indl.inventory_item_id, inv_doc.rtl_loc_id, inv_indl.invctl_document_id,
                inv_indl.invctl_document_line_nbr, inv_indl.create_date,
                COALESCE(inv_indl.unit_count,0), COALESCE(inv_indl.unit_cost,0), null as infoType
         FROM inv_invctl_document inv_doc
         INNER JOIN
                inv_invctl_document_lineitm inv_indl
         ON inv_doc.organization_id = inv_indl.organization_id AND
            inv_doc.rtl_loc_id = inv_indl.rtl_loc_id AND
            inv_doc.document_typcode = inv_indl.document_typcode AND
            inv_doc.invctl_document_id = inv_indl.invctl_document_id
         LEFT OUTER JOIN
          (SELECT organization_id, end_date + 1 as startDateDetail
          FROM inv_stock_fiscal_year inv_fiscal
          WHERE fiscal_year = (SELECT COALESCE(MAX(fiscal_year),0)
                               FROM inv_cst_item_yearend inv_yrend2
                               WHERE inv_yrend2.organization_id =  inv_fiscal.organization_id AND
                                     fiscal_year <= cast(to_char(? -1, 'yyyy') as number(4,0))) AND
                                     organization_id = ?) fy
          ON fy.organization_id = inv_doc.organization_id
            WHERE inv_indl.create_date BETWEEN startDateDetail AND ? AND
                  /*UPPER*/ inv_doc.document_subtypcode = 'ASN' AND
                  inv_doc.organization_id = ? AND
                  inv_indl.rtl_loc_id IN ? AND
                  /*UPPER*/ inv_doc.status_code IN ('CLOSED', 'OPEN', 'IN_PROCESS') AND
                  inv_indl.unit_count <> 0) a
     INNER JOIN itm_item itm
     ON a.item_id = itm.item_id
     AND a.organization_id = itm.organization_id
     LEFT OUTER JOIN itm_item style
     ON /*UPPER*/ itm.parent_item_id = style.item_id
     AND itm.organization_id = style.organization_id
     WHERE a.item_id is NOT NULL
      ]]></Statement>
      <Parameter name="argBusinessDateStart" />
      <Parameter name="@userRtlLocIdList" />
      <Parameter name="organizationId" />
      <Parameter name="argBusinessDateStart" />
      <Parameter name="organizationId" />
      <Parameter name="argBusinessDateStart" />
      <Parameter name="organizationId" />
      <Parameter name="@userRtlLocIdList" />
      <Expression trigger="merchLevel1"><![CDATA[COALESCE(/*UPPER*/ itm.merch_level_1, '') LIKE ?]]></Expression>
      <Expression trigger="merchLevel2"><![CDATA[COALESCE(/*UPPER*/ itm.merch_level_2, '') LIKE ?]]></Expression>
      <Expression trigger="merchLevel3"><![CDATA[COALESCE(/*UPPER*/ itm.merch_level_3, '') LIKE ?]]></Expression>
      <Expression trigger="merchLevel4"><![CDATA[COALESCE(/*UPPER*/ itm.merch_level_4, '') LIKE ?]]></Expression>
      <Expression trigger="itemId"><![CDATA[COALESCE(itm.item_id, '') LIKE ?]]></Expression>
      <Expression trigger="styleId"><![CDATA[COALESCE(/*UPPER*/ itm.parent_item_id, '') LIKE ?]]></Expression>
    </SQL>
    <Suffix dtype="String"><![CDATA[ORDER BY a.infoType, a.inv_create_date, style.item_id, a.item_id, a.rtl_loc_id, a.inv_doc_id, a.inv_doc_id_lineNbr ASC]]></Suffix>
  </Query>
  <Query name="WAC_DETAIL_UCOST_REPORT" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.data2.access.DefaultQueryResult</ResultClass>
    <ResultField name="itemId" type="String" />
    <ResultField name="quantity" type="BigDecimal" />
    <ResultField name="value" type="BigDecimal" />
    <ResultField name="ucost" type="BigDecimal" />
    <SQL>
      <Statement dtype="String"><![CDATA[
      SELECT 
         a.item_id AS itemId, 
         sum(a.wac_qty_rcvd) as quantity, 
         sum(COALESCE(a.wac_qty_rcvd, 0) * a.wac_value_rcvd) as value,
         sum(COALESCE(a.wac_qty_rcvd, 0) * a.wac_value_rcvd)/sum(a.wac_qty_rcvd) as ucost             
     FROM
        (SELECT organization_id, item_id, null as rtl_loc_id, null as inv_doc_id, null as inv_doc_id_lineNbr, null as inv_create_date,
                COALESCE(SUM(wac_qty_rcvd),0) as wac_qty_rcvd,
                SUM(COALESCE(wac_value_rcvd,0))/SUM(COALESCE(wac_qty_rcvd,0)) as wac_value_rcvd, 
                '_rptInitialValue' as infoType
         FROM inv_cst_item_yearend inv_yearend
       WHERE fiscal_year = (SELECT MAX(fiscal_year)
                     FROM inv_cst_item_yearend inv_yearend2
                         WHERE inv_yearend2.organization_id =  inv_yearend.organization_id AND
                             inv_yearend2.rtl_loc_id = inv_yearend.rtl_loc_id AND
                           inv_yearend2.item_id = inv_yearend.item_id AND
                                 fiscal_year <= cast(to_char(? -1, 'yyyy') as number(4,0))) AND
                 rtl_loc_id IN ? AND
                 organization_id = ?
       GROUP BY organization_id, item_id
       HAVING SUM(wac_qty_rcvd) <> 0

         UNION ALL

         SELECT inv_doc.organization_id, inv_indl.inventory_item_id, inv_doc.rtl_loc_id, inv_indl.invctl_document_id,
                inv_indl.invctl_document_line_nbr, inv_indl.create_date,
                COALESCE(inv_indl.unit_count,0), COALESCE(inv_indl.unit_cost,0), null as infoType
         FROM inv_invctl_document inv_doc
         INNER JOIN
                inv_invctl_document_lineitm inv_indl
         ON inv_doc.organization_id = inv_indl.organization_id AND
            inv_doc.rtl_loc_id = inv_indl.rtl_loc_id AND
            inv_doc.document_typcode = inv_indl.document_typcode AND
            inv_doc.invctl_document_id = inv_indl.invctl_document_id
         LEFT OUTER JOIN
          (SELECT organization_id, end_date + 1 as startDateDetail
          FROM inv_stock_fiscal_year inv_fiscal
          WHERE fiscal_year = (SELECT COALESCE(MAX(fiscal_year),0)
                               FROM inv_cst_item_yearend inv_yrend2
                               WHERE inv_yrend2.organization_id =  inv_fiscal.organization_id AND
                                     fiscal_year <= cast(to_char(? -1, 'yyyy') as number(4,0))) AND
                                     organization_id = ?) fy
          ON fy.organization_id = inv_doc.organization_id
            WHERE inv_indl.create_date BETWEEN startDateDetail AND ? AND
                  /*UPPER*/ inv_doc.document_subtypcode = 'ASN' AND
                  inv_doc.organization_id = ? AND
                  inv_indl.rtl_loc_id IN ? AND
                  /*UPPER*/ inv_doc.status_code IN ('CLOSED', 'OPEN', 'IN_PROCESS') AND
                  inv_indl.unit_count <> 0) a
     INNER JOIN itm_item itm
     ON a.item_id = itm.item_id
     AND a.organization_id = itm.organization_id
     LEFT OUTER JOIN itm_item style
     ON /*UPPER*/ itm.parent_item_id = style.item_id
     AND itm.organization_id = style.organization_id
     WHERE a.item_id is NOT NULL
      ]]></Statement>
      <Parameter name="argBusinessDateStart" />
      <Parameter name="@userRtlLocIdList" />
      <Parameter name="organizationId" />
      <Parameter name="argBusinessDateStart" />
      <Parameter name="organizationId" />
      <Parameter name="argBusinessDateStart" />
      <Parameter name="organizationId" />
      <Parameter name="@userRtlLocIdList" />
      <Expression trigger="merchLevel1"><![CDATA[COALESCE(/*UPPER*/ itm.merch_level_1, '') LIKE ?]]></Expression>
      <Expression trigger="merchLevel2"><![CDATA[COALESCE(/*UPPER*/ itm.merch_level_2, '') LIKE ?]]></Expression>
      <Expression trigger="merchLevel3"><![CDATA[COALESCE(/*UPPER*/ itm.merch_level_3, '') LIKE ?]]></Expression>
      <Expression trigger="merchLevel4"><![CDATA[COALESCE(/*UPPER*/ itm.merch_level_4, '') LIKE ?]]></Expression>
      <Expression trigger="itemId"><![CDATA[COALESCE(itm.item_id, '') LIKE ?]]></Expression>
      <Expression trigger="styleId"><![CDATA[COALESCE(/*UPPER*/ itm.parent_item_id, '') LIKE ?]]></Expression>
    </SQL>
    <Suffix dtype="String"><![CDATA[GROUP BY a.item_id ORDER BY a.item_id ASC]]></Suffix>
  </Query>
  <Query name="WAC_STOCK_VALUATION_REPORT" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.data2.access.DefaultQueryResult</ResultClass>
    <ResultField name="storeId" type="Integer" />
    <ResultField name="storeName" type="String" />
    <ResultField name="styleId" type="String" />
    <ResultField name="styleDesc" type="String" />
    <ResultField name="itemId" type="String" />
    <ResultField name="itemDesc" type="String" />
    <ResultField name="quantity" type="BigDecimal" />
    <ResultField name="ucost" type="BigDecimal" />
    <ResultField name="valuationTotal" type="BigDecimal" />
    <SQL>
      <Statement dtype="String"><![CDATA[
         SELECT t0.rtl_loc_id AS storeId,
                loc.store_name AS storeName, 
                style.item_id AS styleId, 
                style.description AS styleDesc,
                t0.item_id AS itemId, 
                itm.description AS itemDesc,
                COALESCE(unitcount,0) + COALESCE(ts.quantity, 0) AS quantity, 
                b.wac AS ucost, 
                (COALESCE(unitcount,0) + COALESCE(ts.quantity, 0)) * b.wac as valuationTotal
        FROM loc_rtl_loc loc, inv_stock_ledger_acct t0
        LEFT OUTER JOIN
          (SELECT itm_mov.organization_id, itm_mov.rtl_loc_id, itm_mov.item_id,
                SUM(COALESCE(quantity,0) * CASE WHEN adjustment_flag = 1 THEN 1 ELSE -1 END) AS quantity
           FROM rpt_trl_stock_movement_view itm_mov
           WHERE business_date > ?
           GROUP BY itm_mov.organization_id, itm_mov.rtl_loc_id, itm_mov.item_id) ts
        ON t0.organization_id = ts.organization_id
           AND t0.rtl_loc_id = ts.rtl_loc_id
             AND t0.item_id = ts.item_id

        INNER JOIN
           (SELECT a.organization_id, a.item_id, SUM(wac_value_rcvd)/SUM(wac_qty_rcvd) AS wac
            FROM
               (SELECT organization_id, item_id, SUM(COALESCE(wac_qty_rcvd,0)) AS wac_qty_rcvd,
                     SUM(COALESCE(wac_value_rcvd,0)) AS wac_value_rcvd
              FROM inv_cst_item_yearend inv_yearend
              WHERE fiscal_year = (SELECT MAX(fiscal_year)
                                 FROM inv_cst_item_yearend inv_yearend2
                                     WHERE inv_yearend2.organization_id =  inv_yearend.organization_id AND
                                     inv_yearend2.rtl_loc_id = inv_yearend.rtl_loc_id AND
                                   inv_yearend2.item_id = inv_yearend.item_id AND
                                         fiscal_year <= cast(to_char(? -1, 'yyyy') as number(4,0))) AND
                             rtl_loc_id IN ? AND
                               organization_id = ?
                GROUP BY organization_id, item_id
              HAVING SUM(wac_qty_rcvd) <> 0

                UNION ALL

              SELECT inv_doc.organization_id, inv_indl.inventory_item_id, inv_indl.unit_count, COALESCE(inv_indl.unit_count,0)*COALESCE(inv_indl.unit_cost,0)
                FROM inv_invctl_document inv_doc
                INNER JOIN
                inv_invctl_document_lineitm inv_indl
                ON inv_doc.organization_id = inv_indl.organization_id AND
                 inv_doc.rtl_loc_id = inv_indl.rtl_loc_id AND
               inv_doc.document_typcode = inv_indl.document_typcode AND
                 inv_doc.invctl_document_id = inv_indl.invctl_document_id

             LEFT OUTER JOIN
              (SELECT organization_id, end_date + 1 as startDateDetail
          FROM inv_stock_fiscal_year inv_fiscal
              WHERE fiscal_year = (SELECT COALESCE(MAX(fiscal_year),0)
                                   FROM inv_cst_item_yearend inv_yrend2
                                   WHERE inv_yrend2.organization_id =  inv_fiscal.organization_id AND
                                      fiscal_year <= cast(to_char(? -1, 'yyyy') as number(4,0))) AND
                                          organization_id = ?) fy
             ON fy.organization_id = inv_doc.organization_id

               WHERE inv_indl.create_date BETWEEN startDateDetail AND ? AND
                  /*UPPER*/ inv_doc.document_subtypcode = 'ASN' AND
                  inv_doc.organization_id = ? AND
                  inv_indl.rtl_loc_id IN ? AND
                  inv_indl.unit_count > 0 AND
                  /*UPPER*/ inv_doc.status_code IN ('CLOSED', 'OPEN', 'IN_PROCESS')) a

             GROUP BY a.organization_id, a.item_id
           HAVING SUM(wac_qty_rcvd) <> 0) b

         ON t0.item_id = b.item_id
          AND t0.organization_id = b.organization_id

       INNER JOIN itm_item itm
         ON t0.item_id = itm.item_id
            AND t0.organization_id = itm.organization_id

         LEFT OUTER JOIN itm_item style
         ON /*UPPER*/ itm.parent_item_id = style.item_id
          AND itm.organization_id = style.organization_id
         WHERE t0.rtl_loc_id = loc.rtl_loc_id
           AND t0.rtl_loc_id IN ?
           AND t0.bucket_id = 'ON_HAND'
           AND COALESCE(unitcount,0) + COALESCE(ts.quantity, 0) <> 0
      ]]></Statement>
      <Parameter name="argBusinessDateStart" />
      <Parameter name="argBusinessDateStart" />
      <Parameter name="@userRtlLocIdList" />
      <Parameter name="organizationId" />
      <Parameter name="argBusinessDateStart" />
      <Parameter name="organizationId" />
      <Parameter name="argBusinessDateStart" />
      <Parameter name="organizationId" />
      <Parameter name="@userRtlLocIdList" />
      <Parameter name="@retailLocationIdList" />
      <Expression trigger="merchLevel1"><![CDATA[COALESCE(/*UPPER*/ itm.merch_level_1, '') LIKE ?]]></Expression>
      <Expression trigger="merchLevel2"><![CDATA[COALESCE(/*UPPER*/ itm.merch_level_2, '') LIKE ?]]></Expression>
      <Expression trigger="merchLevel3"><![CDATA[COALESCE(/*UPPER*/ itm.merch_level_3, '') LIKE ?]]></Expression>
      <Expression trigger="merchLevel4"><![CDATA[COALESCE(/*UPPER*/ itm.merch_level_4, '') LIKE ?]]></Expression>
      <Expression trigger="itemId"><![CDATA[COALESCE(itm.item_id, '') LIKE ?]]></Expression>
      <Expression trigger="styleId"><![CDATA[COALESCE(/*UPPER*/ itm.parent_item_id, '') LIKE ?]]></Expression>
    </SQL>
    <Suffix dtype="String"><![CDATA[ORDER BY t0.rtl_loc_id, t0.item_id ASC]]></Suffix>
  </Query>
  <Query name="WAC_STOCK_VALUATION_UCOST_REPORT" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.data2.access.DefaultQueryResult</ResultClass>
    <ResultField name="storeId" type="Integer" />
    <ResultField name="quantity" type="BigDecimal" />
    <ResultField name="value" type="BigDecimal" />
    <ResultField name="ucost" type="BigDecimal" />
    <SQL>
      <Statement dtype="String"><![CDATA[
         SELECT t0.rtl_loc_id AS storeId,
                SUM(COALESCE(unitcount,0) + COALESCE(ts.quantity, 0)) AS quantity,
                SUM((COALESCE(unitcount,0) + COALESCE(ts.quantity, 0)) * b.wac) AS value,
                SUM((COALESCE(unitcount,0) + COALESCE(ts.quantity, 0)) * b.wac)/SUM(COALESCE(unitcount,0) + COALESCE(ts.quantity, 0)) as ucost
        FROM loc_rtl_loc loc, inv_stock_ledger_acct t0
        LEFT OUTER JOIN
          (SELECT itm_mov.organization_id, itm_mov.rtl_loc_id, itm_mov.item_id,
                SUM(COALESCE(quantity,0) * CASE WHEN adjustment_flag = 1 THEN 1 ELSE -1 END) AS quantity
           FROM rpt_trl_stock_movement_view itm_mov
           WHERE business_date > ?
           GROUP BY itm_mov.organization_id, itm_mov.rtl_loc_id, itm_mov.item_id) ts
        ON t0.organization_id = ts.organization_id
           AND t0.rtl_loc_id = ts.rtl_loc_id
             AND t0.item_id = ts.item_id

        INNER JOIN
           (SELECT a.organization_id, a.item_id, SUM(wac_value_rcvd)/SUM(wac_qty_rcvd) AS wac
            FROM
               (SELECT organization_id, item_id, SUM(COALESCE(wac_qty_rcvd,0)) AS wac_qty_rcvd,
                     SUM(COALESCE(wac_value_rcvd,0)) AS wac_value_rcvd
              FROM inv_cst_item_yearend inv_yearend
              WHERE fiscal_year = (SELECT MAX(fiscal_year)
                                 FROM inv_cst_item_yearend inv_yearend2
                                     WHERE inv_yearend2.organization_id =  inv_yearend.organization_id AND
                                     inv_yearend2.rtl_loc_id = inv_yearend.rtl_loc_id AND
                                   inv_yearend2.item_id = inv_yearend.item_id AND
                                         fiscal_year <= cast(to_char(? -1, 'yyyy') as number(4,0))) AND
                             rtl_loc_id IN ? AND
                               organization_id = ?
                GROUP BY organization_id, item_id
              HAVING SUM(wac_qty_rcvd) <> 0

                UNION ALL

              SELECT inv_doc.organization_id, inv_indl.inventory_item_id, inv_indl.unit_count, COALESCE(inv_indl.unit_count,0)*COALESCE(inv_indl.unit_cost,0)
                FROM inv_invctl_document inv_doc
                INNER JOIN
                inv_invctl_document_lineitm inv_indl
                ON inv_doc.organization_id = inv_indl.organization_id AND
                 inv_doc.rtl_loc_id = inv_indl.rtl_loc_id AND
               inv_doc.document_typcode = inv_indl.document_typcode AND
                 inv_doc.invctl_document_id = inv_indl.invctl_document_id

             LEFT OUTER JOIN
              (SELECT organization_id, end_date + 1 as startDateDetail
          FROM inv_stock_fiscal_year inv_fiscal
              WHERE fiscal_year = (SELECT COALESCE(MAX(fiscal_year),0)
                                   FROM inv_cst_item_yearend inv_yrend2
                                   WHERE inv_yrend2.organization_id =  inv_fiscal.organization_id AND
                                      fiscal_year <= cast(to_char(? -1, 'yyyy') as number(4,0))) AND
                                          organization_id = ?) fy
             ON fy.organization_id = inv_doc.organization_id

               WHERE inv_indl.create_date BETWEEN startDateDetail AND ? AND
                  /*UPPER*/ inv_doc.document_subtypcode = 'ASN' AND
                  inv_doc.organization_id = ? AND
                  inv_indl.rtl_loc_id IN ? AND
                  inv_indl.unit_count > 0 AND
                  /*UPPER*/ inv_doc.status_code IN ('CLOSED', 'OPEN', 'IN_PROCESS')) a

             GROUP BY a.organization_id, a.item_id
           HAVING SUM(wac_qty_rcvd) <> 0) b

         ON t0.item_id = b.item_id
          AND t0.organization_id = b.organization_id

       INNER JOIN itm_item itm
         ON t0.item_id = itm.item_id
            AND t0.organization_id = itm.organization_id

         LEFT OUTER JOIN itm_item style
         ON /*UPPER*/ itm.parent_item_id = style.item_id
          AND itm.organization_id = style.organization_id
         WHERE t0.rtl_loc_id = loc.rtl_loc_id
           AND t0.rtl_loc_id IN ?
           AND t0.bucket_id = 'ON_HAND'
           AND COALESCE(unitcount,0) + COALESCE(ts.quantity, 0) <> 0
      ]]></Statement>
      <Parameter name="argBusinessDateStart" />
      <Parameter name="argBusinessDateStart" />
      <Parameter name="@userRtlLocIdList" />
      <Parameter name="organizationId" />
      <Parameter name="argBusinessDateStart" />
      <Parameter name="organizationId" />
      <Parameter name="argBusinessDateStart" />
      <Parameter name="organizationId" />
      <Parameter name="@userRtlLocIdList" />
      <Parameter name="@retailLocationIdList" />
      <Expression trigger="merchLevel1"><![CDATA[COALESCE(/*UPPER*/ itm.merch_level_1, '') LIKE ?]]></Expression>
      <Expression trigger="merchLevel2"><![CDATA[COALESCE(/*UPPER*/ itm.merch_level_2, '') LIKE ?]]></Expression>
      <Expression trigger="merchLevel3"><![CDATA[COALESCE(/*UPPER*/ itm.merch_level_3, '') LIKE ?]]></Expression>
      <Expression trigger="merchLevel4"><![CDATA[COALESCE(/*UPPER*/ itm.merch_level_4, '') LIKE ?]]></Expression>
      <Expression trigger="itemId"><![CDATA[COALESCE(itm.item_id, '') LIKE ?]]></Expression>
      <Expression trigger="styleId"><![CDATA[COALESCE(/*UPPER*/ itm.parent_item_id, '') LIKE ?]]></Expression>
    </SQL>
    <Suffix dtype="String"><![CDATA[GROUP BY t0.rtl_loc_id ORDER BY t0.rtl_loc_id ASC]]></Suffix>
  </Query>
  <Query name="WAC_STOCK_VALUATION_UCOST_TOTAL_REPORT" pmType="REPORTS">
    <QueryHandler dtype="Class">dtv.data2.access.query.SqlQueryHandler</QueryHandler>
    <ResultClass dtype="String">dtv.data2.access.DefaultQueryResult</ResultClass>
    <ResultField name="quantity" type="BigDecimal" />
    <ResultField name="value" type="BigDecimal" />
    <ResultField name="ucost" type="BigDecimal" />
    <SQL>
      <Statement dtype="String"><![CDATA[
        SELECT
            SUM(COALESCE(unitcount,0) + COALESCE(ts.quantity, 0)) AS quantity,
            SUM((COALESCE(unitcount,0) + COALESCE(ts.quantity, 0)) * b.wac) AS value,
            SUM((COALESCE(unitcount,0) + COALESCE(ts.quantity, 0)) * b.wac)/SUM(COALESCE(unitcount,0) + COALESCE(ts.quantity, 0)) AS ucost
        FROM loc_rtl_loc loc, inv_stock_ledger_acct t0
        LEFT OUTER JOIN
          (SELECT itm_mov.organization_id, itm_mov.rtl_loc_id, itm_mov.item_id,
                SUM(COALESCE(quantity,0) * CASE WHEN adjustment_flag = 1 THEN 1 ELSE -1 END) AS quantity
           FROM rpt_trl_stock_movement_view itm_mov
           WHERE business_date > ?
           GROUP BY itm_mov.organization_id, itm_mov.rtl_loc_id, itm_mov.item_id) ts
        ON t0.organization_id = ts.organization_id
           AND t0.rtl_loc_id = ts.rtl_loc_id
             AND t0.item_id = ts.item_id

        INNER JOIN
           (SELECT a.organization_id, a.item_id, SUM(wac_value_rcvd)/SUM(wac_qty_rcvd) AS wac
            FROM
               (SELECT organization_id, item_id, SUM(COALESCE(wac_qty_rcvd,0)) AS wac_qty_rcvd,
                     SUM(COALESCE(wac_value_rcvd,0)) AS wac_value_rcvd
              FROM inv_cst_item_yearend inv_yearend
              WHERE fiscal_year = (SELECT MAX(fiscal_year)
                                 FROM inv_cst_item_yearend inv_yearend2
                                     WHERE inv_yearend2.organization_id =  inv_yearend.organization_id AND
                                     inv_yearend2.rtl_loc_id = inv_yearend.rtl_loc_id AND
                                   inv_yearend2.item_id = inv_yearend.item_id AND
                                         fiscal_year <= cast(to_char(? -1, 'yyyy') as number(4,0))) AND
                             rtl_loc_id IN ? AND
                               organization_id = ?
                GROUP BY organization_id, item_id
              HAVING SUM(wac_qty_rcvd) <> 0

                UNION ALL

              SELECT inv_doc.organization_id, inv_indl.inventory_item_id, inv_indl.unit_count, COALESCE(inv_indl.unit_count,0)*COALESCE(inv_indl.unit_cost,0)
                FROM inv_invctl_document inv_doc
                INNER JOIN
                inv_invctl_document_lineitm inv_indl
                ON inv_doc.organization_id = inv_indl.organization_id AND
                 inv_doc.rtl_loc_id = inv_indl.rtl_loc_id AND
               inv_doc.document_typcode = inv_indl.document_typcode AND
                 inv_doc.invctl_document_id = inv_indl.invctl_document_id

             LEFT OUTER JOIN
              (SELECT organization_id, end_date + 1 as startDateDetail
          FROM inv_stock_fiscal_year inv_fiscal
              WHERE fiscal_year = (SELECT COALESCE(MAX(fiscal_year),0)
                                   FROM inv_cst_item_yearend inv_yrend2
                                   WHERE inv_yrend2.organization_id =  inv_fiscal.organization_id AND
                                      fiscal_year <= cast(to_char(? -1, 'yyyy') as number(4,0))) AND
                                          organization_id = ?) fy
             ON fy.organization_id = inv_doc.organization_id

               WHERE inv_indl.create_date BETWEEN startDateDetail AND ? AND
                  /*UPPER*/ inv_doc.document_subtypcode = 'ASN' AND
                  inv_doc.organization_id = ? AND
                  inv_indl.rtl_loc_id IN ? AND
                  inv_indl.unit_count > 0 AND
                  /*UPPER*/ inv_doc.status_code IN ('CLOSED', 'OPEN', 'IN_PROCESS')) a

             GROUP BY a.organization_id, a.item_id
           HAVING SUM(wac_qty_rcvd) <> 0) b

         ON t0.item_id = b.item_id
          AND t0.organization_id = b.organization_id

       INNER JOIN itm_item itm
         ON t0.item_id = itm.item_id
            AND t0.organization_id = itm.organization_id

         LEFT OUTER JOIN itm_item style
         ON /*UPPER*/ itm.parent_item_id = style.item_id
          AND itm.organization_id = style.organization_id
         WHERE t0.rtl_loc_id = loc.rtl_loc_id
           AND t0.rtl_loc_id IN ?
           AND t0.bucket_id = 'ON_HAND'
           AND COALESCE(unitcount,0) + COALESCE(ts.quantity, 0) <> 0
      ]]></Statement>
      <Parameter name="argBusinessDateStart" />
      <Parameter name="argBusinessDateStart" />
      <Parameter name="@userRtlLocIdList" />
      <Parameter name="organizationId" />
      <Parameter name="argBusinessDateStart" />
      <Parameter name="organizationId" />
      <Parameter name="argBusinessDateStart" />
      <Parameter name="organizationId" />
      <Parameter name="@userRtlLocIdList" />
      <Parameter name="@retailLocationIdList" />
      <Expression trigger="merchLevel1"><![CDATA[COALESCE(/*UPPER*/ itm.merch_level_1, '') LIKE ?]]></Expression>
      <Expression trigger="merchLevel2"><![CDATA[COALESCE(/*UPPER*/ itm.merch_level_2, '') LIKE ?]]></Expression>
      <Expression trigger="merchLevel3"><![CDATA[COALESCE(/*UPPER*/ itm.merch_level_3, '') LIKE ?]]></Expression>
      <Expression trigger="merchLevel4"><![CDATA[COALESCE(/*UPPER*/ itm.merch_level_4, '') LIKE ?]]></Expression>
      <Expression trigger="itemId"><![CDATA[COALESCE(itm.item_id, '') LIKE ?]]></Expression>
      <Expression trigger="styleId"><![CDATA[COALESCE(/*UPPER*/ itm.parent_item_id, '') LIKE ?]]></Expression>
    </SQL>
    <Suffix dtype="String"><![CDATA[ORDER BY t0.rtl_loc_id ASC]]></Suffix>
  </Query>
</QuerySet>
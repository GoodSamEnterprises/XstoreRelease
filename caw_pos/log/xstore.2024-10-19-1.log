**LOG BEGUN     2024-10-19 00:00:04,015
loading C:WIP-Xstore_Delta-maincaw_poscust_configlog4j2.xml
 DEBUG [      ] 2024-10-19 00:00:03,996 execute [  2.801 ms StorePrimary] SELECT t.organization_id, t.business_date, t.rtl_loc_id, t.party_id, t.timecard_entry_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.clock_in_timestamp, t.clock_out_timestamp, t.entry_type_enum, t.delete_flag, t.open_record_flag, t.duration, t.payroll_update_required, t.work_code FROM thr_timecard_entry t  WHERE open_record_flag IS NOT NULL AND open_record_flag <> 'false' AND organization_id = 1000 AND clock_out_timestamp IS NULL AND (delete_flag = 'false' OR delete_flag IS NULL) AND rtl_loc_id = 110   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [scheduled-task-1]
 DEBUG [      ] 2024-10-19 00:00:20,634 execute [  1.135 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 00:02:20,644 execute [  0.395 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 00:04:20,653 execute [  0.911 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 00:06:09,789 execute [  0.629 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T00:06:09', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 00:06:20,661 execute [  0.315 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 00:08:20,672 execute [  0.424 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 00:10:20,681 execute [  0.380 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 00:11:09,556 execute [  0.769 ms StorePrimary] SELECT xom_order.organization_id, xom_order.order_id, cust.first_name, cust.last_name, xom_order.order_date, xom_order.status_code, xom_order.order_type, cust.telephone1, xom_order.order_loc_id, xom_order.under_review_flag, CASE WHEN ship_order.order_id is null THEN 'FALSE' ELSE 'TRUE' END as shipping_necessary_flag FROM xom_order LEFT JOIN xom_customer_mod cust ON xom_order.organization_id = cust.organization_id AND xom_order.order_id = cust.order_id LEFT JOIN (SELECT line.organization_id, line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.void_flag = 0 AND (ful.LOC_ID is null OR  UPPER(ful.LOC_ID) <>  UPPER(src.LOC_ID)) GROUP BY line.organization_id, line.order_id) ship_order ON xom_order.organization_id = ship_order.organization_id AND xom_order.order_id = ship_order.order_id WHERE xom_order.organization_id = 1000 AND  UPPER(xom_order.status_code) <> 'SUSPENDED'   AND  ( UPPER(xom_order.order_type) <> 'STANDARD_DELIVERY' ) AND ( EXISTS (SELECT line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.organization_id = xom_order.organization_id AND line.order_id = xom_order.order_id AND  UPPER(src.loc_id) = '110' AND line.void_flag = 0 AND ( UPPER(line.status_code) IN ('POLLED', 'ACCEPTED') OR (( UPPER(line.status_code) = 'RESERVED') AND (ful.loc_id IS NULL OR  UPPER(src.loc_id) <>  UPPER(ful.loc_id)))))  )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 00:11:26,814 execute [  0.478 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 00:11:26,817 execute [  0.434 ms StorePrimary] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 00:11:26,820 execute [  0.290 ms Local] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 00:11:26,825 execute [  0.732 ms StorePrimary] UPDATE ctl_device_registration SET update_date = to_date('2024-10-19T05:11:26', 'YYYY-MM-DD"T"HH24:MI:SS'), update_user_id = '100', ip_address = '10.10.28.83', date_timestamp = to_date('2024-10-19T00:11:26', 'YYYY-MM-DD"T"HH24:MI:SS'), business_date = to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS'), xstore_version = '16.0.5.0.38 - 7.0.36 - 1.54', env_version = null, active_flag = 'true', config_version = null, primary_register_flag = 'true' WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.UPDATE [Device-Registration-1]
 DEBUG [      ] 2024-10-19 00:11:26,828 execute [  0.422 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T00:11:26', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 00:11:26,829 execute [  0.218 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T00:11:26', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 00:11:26,831 execute [  0.167 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T00:11:26', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 00:11:26,832 execute [  0.310 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 ERROR [      ] 2024-10-19 00:11:51,067 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 00:11:51,068 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
 ERROR [      ] 2024-10-19 00:11:51,072 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017104711.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-2]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 00:11:51,336 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 00:11:51,336 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
 ERROR [      ] 2024-10-19 00:11:51,340 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017110705.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-2]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 00:11:51,588 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 00:11:51,589 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
 ERROR [      ] 2024-10-19 00:11:51,593 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017111605.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-2]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 DEBUG [      ] 2024-10-19 00:12:20,690 execute [  1.082 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 00:14:20,699 execute [  0.388 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 00:16:09,815 execute [  1.094 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T00:16:09', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 00:16:20,708 execute [  0.385 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 00:18:20,716 execute [  0.813 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 00:20:20,726 execute [  0.436 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 00:22:20,734 execute [  0.456 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 00:24:20,742 execute [  0.386 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 00:26:09,588 execute [  0.780 ms StorePrimary] SELECT xom_order.organization_id, xom_order.order_id, cust.first_name, cust.last_name, xom_order.order_date, xom_order.status_code, xom_order.order_type, cust.telephone1, xom_order.order_loc_id, xom_order.under_review_flag, CASE WHEN ship_order.order_id is null THEN 'FALSE' ELSE 'TRUE' END as shipping_necessary_flag FROM xom_order LEFT JOIN xom_customer_mod cust ON xom_order.organization_id = cust.organization_id AND xom_order.order_id = cust.order_id LEFT JOIN (SELECT line.organization_id, line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.void_flag = 0 AND (ful.LOC_ID is null OR  UPPER(ful.LOC_ID) <>  UPPER(src.LOC_ID)) GROUP BY line.organization_id, line.order_id) ship_order ON xom_order.organization_id = ship_order.organization_id AND xom_order.order_id = ship_order.order_id WHERE xom_order.organization_id = 1000 AND  UPPER(xom_order.status_code) <> 'SUSPENDED'   AND  ( UPPER(xom_order.order_type) <> 'STANDARD_DELIVERY' ) AND ( EXISTS (SELECT line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.organization_id = xom_order.organization_id AND line.order_id = xom_order.order_id AND  UPPER(src.loc_id) = '110' AND line.void_flag = 0 AND ( UPPER(line.status_code) IN ('POLLED', 'ACCEPTED') OR (( UPPER(line.status_code) = 'RESERVED') AND (ful.loc_id IS NULL OR  UPPER(src.loc_id) <>  UPPER(ful.loc_id)))))  )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 00:26:09,837 execute [  0.330 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T00:26:09', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 00:26:20,751 execute [  0.792 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 00:26:26,858 execute [  1.400 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 00:26:26,862 execute [  0.470 ms StorePrimary] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 00:26:26,864 execute [  0.753 ms Local] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 00:26:26,868 execute [  2.073 ms StorePrimary] UPDATE ctl_device_registration SET update_date = to_date('2024-10-19T05:26:26', 'YYYY-MM-DD"T"HH24:MI:SS'), update_user_id = '100', ip_address = '10.10.28.83', date_timestamp = to_date('2024-10-19T00:26:26', 'YYYY-MM-DD"T"HH24:MI:SS'), business_date = to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS'), xstore_version = '16.0.5.0.38 - 7.0.36 - 1.54', env_version = null, active_flag = 'true', config_version = null, primary_register_flag = 'true' WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.UPDATE [Device-Registration-1]
 DEBUG [      ] 2024-10-19 00:26:26,871 execute [  0.310 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T00:26:26', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 00:26:26,873 execute [  0.239 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T00:26:26', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 00:26:26,875 execute [  0.206 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T00:26:26', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 00:26:26,876 execute [  0.168 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 ERROR [      ] 2024-10-19 00:26:51,931 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 00:26:51,932 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
 ERROR [      ] 2024-10-19 00:26:51,935 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017104711.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-3]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 00:26:52,210 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 00:26:52,211 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
 ERROR [      ] 2024-10-19 00:26:52,215 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017110705.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-3]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 00:26:52,449 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 00:26:52,449 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
 ERROR [      ] 2024-10-19 00:26:52,452 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017111605.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-3]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 DEBUG [      ] 2024-10-19 00:28:20,759 execute [  0.738 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 00:30:20,767 execute [  0.360 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 00:32:20,778 execute [  1.136 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 00:34:20,785 execute [  0.886 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 00:36:09,860 execute [  0.539 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T00:36:09', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 00:36:20,792 execute [  0.335 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 00:38:20,800 execute [  0.383 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 00:40:20,808 execute [  0.432 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 00:41:09,615 execute [  0.916 ms StorePrimary] SELECT xom_order.organization_id, xom_order.order_id, cust.first_name, cust.last_name, xom_order.order_date, xom_order.status_code, xom_order.order_type, cust.telephone1, xom_order.order_loc_id, xom_order.under_review_flag, CASE WHEN ship_order.order_id is null THEN 'FALSE' ELSE 'TRUE' END as shipping_necessary_flag FROM xom_order LEFT JOIN xom_customer_mod cust ON xom_order.organization_id = cust.organization_id AND xom_order.order_id = cust.order_id LEFT JOIN (SELECT line.organization_id, line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.void_flag = 0 AND (ful.LOC_ID is null OR  UPPER(ful.LOC_ID) <>  UPPER(src.LOC_ID)) GROUP BY line.organization_id, line.order_id) ship_order ON xom_order.organization_id = ship_order.organization_id AND xom_order.order_id = ship_order.order_id WHERE xom_order.organization_id = 1000 AND  UPPER(xom_order.status_code) <> 'SUSPENDED'   AND  ( UPPER(xom_order.order_type) <> 'STANDARD_DELIVERY' ) AND ( EXISTS (SELECT line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.organization_id = xom_order.organization_id AND line.order_id = xom_order.order_id AND  UPPER(src.loc_id) = '110' AND line.void_flag = 0 AND ( UPPER(line.status_code) IN ('POLLED', 'ACCEPTED') OR (( UPPER(line.status_code) = 'RESERVED') AND (ful.loc_id IS NULL OR  UPPER(src.loc_id) <>  UPPER(ful.loc_id)))))  )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 00:41:26,896 execute [  0.563 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 00:41:26,900 execute [  0.490 ms StorePrimary] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 00:41:26,903 execute [  0.327 ms Local] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 00:41:26,905 execute [  0.531 ms StorePrimary] UPDATE ctl_device_registration SET update_date = to_date('2024-10-19T05:41:26', 'YYYY-MM-DD"T"HH24:MI:SS'), update_user_id = '100', ip_address = '10.10.28.83', date_timestamp = to_date('2024-10-19T00:41:26', 'YYYY-MM-DD"T"HH24:MI:SS'), business_date = to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS'), xstore_version = '16.0.5.0.38 - 7.0.36 - 1.54', env_version = null, active_flag = 'true', config_version = null, primary_register_flag = 'true' WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.UPDATE [Device-Registration-1]
 DEBUG [      ] 2024-10-19 00:41:26,911 execute [  1.344 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T00:41:26', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 00:41:26,958 execute [  0.517 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T00:41:26', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 00:41:26,960 execute [  0.307 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T00:41:26', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 00:41:26,962 execute [  0.363 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 ERROR [      ] 2024-10-19 00:41:52,709 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 00:41:52,710 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
 ERROR [      ] 2024-10-19 00:41:52,713 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017104711.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-4]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 00:41:52,967 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 00:41:52,968 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
 ERROR [      ] 2024-10-19 00:41:52,971 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017110705.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-4]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 00:41:53,224 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 00:41:53,225 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
 ERROR [      ] 2024-10-19 00:41:53,228 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017111605.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-4]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 DEBUG [      ] 2024-10-19 00:42:20,817 execute [  1.339 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 00:44:20,825 execute [  0.380 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 00:46:09,881 execute [  0.470 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T00:46:09', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 00:46:20,834 execute [  0.814 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 00:48:20,841 execute [  0.390 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 00:50:20,848 execute [  0.353 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 00:52:20,856 execute [  0.442 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 00:54:20,868 execute [  1.055 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 00:56:09,643 execute [  0.789 ms StorePrimary] SELECT xom_order.organization_id, xom_order.order_id, cust.first_name, cust.last_name, xom_order.order_date, xom_order.status_code, xom_order.order_type, cust.telephone1, xom_order.order_loc_id, xom_order.under_review_flag, CASE WHEN ship_order.order_id is null THEN 'FALSE' ELSE 'TRUE' END as shipping_necessary_flag FROM xom_order LEFT JOIN xom_customer_mod cust ON xom_order.organization_id = cust.organization_id AND xom_order.order_id = cust.order_id LEFT JOIN (SELECT line.organization_id, line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.void_flag = 0 AND (ful.LOC_ID is null OR  UPPER(ful.LOC_ID) <>  UPPER(src.LOC_ID)) GROUP BY line.organization_id, line.order_id) ship_order ON xom_order.organization_id = ship_order.organization_id AND xom_order.order_id = ship_order.order_id WHERE xom_order.organization_id = 1000 AND  UPPER(xom_order.status_code) <> 'SUSPENDED'   AND  ( UPPER(xom_order.order_type) <> 'STANDARD_DELIVERY' ) AND ( EXISTS (SELECT line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.organization_id = xom_order.organization_id AND line.order_id = xom_order.order_id AND  UPPER(src.loc_id) = '110' AND line.void_flag = 0 AND ( UPPER(line.status_code) IN ('POLLED', 'ACCEPTED') OR (( UPPER(line.status_code) = 'RESERVED') AND (ful.loc_id IS NULL OR  UPPER(src.loc_id) <>  UPPER(ful.loc_id)))))  )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 00:56:09,900 execute [  0.839 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T00:56:09', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 00:56:20,875 execute [  0.757 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 00:56:26,979 execute [  0.530 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 00:56:26,982 execute [  0.466 ms StorePrimary] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 00:56:26,984 execute [  0.291 ms Local] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 00:56:26,986 execute [  0.450 ms StorePrimary] UPDATE ctl_device_registration SET update_date = to_date('2024-10-19T05:56:26', 'YYYY-MM-DD"T"HH24:MI:SS'), update_user_id = '100', ip_address = '10.10.28.83', date_timestamp = to_date('2024-10-19T00:56:26', 'YYYY-MM-DD"T"HH24:MI:SS'), business_date = to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS'), xstore_version = '16.0.5.0.38 - 7.0.36 - 1.54', env_version = null, active_flag = 'true', config_version = null, primary_register_flag = 'true' WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.UPDATE [Device-Registration-1]
 DEBUG [      ] 2024-10-19 00:56:26,988 execute [  0.310 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T00:56:26', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 00:56:26,990 execute [  0.188 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T00:56:26', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 00:56:26,992 execute [  0.175 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T00:56:26', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 00:56:26,994 execute [  0.342 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 ERROR [      ] 2024-10-19 00:56:53,555 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 00:56:53,556 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
 ERROR [      ] 2024-10-19 00:56:53,560 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017104711.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-3]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 00:56:53,777 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 00:56:53,778 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
 ERROR [      ] 2024-10-19 00:56:53,781 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017110705.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-3]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 00:56:54,035 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 00:56:54,035 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
 ERROR [      ] 2024-10-19 00:56:54,038 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017111605.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-3]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 DEBUG [      ] 2024-10-19 00:58:20,883 execute [  0.794 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 01:00:20,913 execute [  1.072 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 01:02:20,970 execute [  0.491 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 01:04:21,025 execute [  0.385 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 01:06:10,073 execute [  0.558 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T01:06:10', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 01:06:21,073 execute [  0.432 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 01:08:21,120 execute [  0.408 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 01:10:21,166 execute [  0.419 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 01:11:09,919 execute [  0.816 ms StorePrimary] SELECT xom_order.organization_id, xom_order.order_id, cust.first_name, cust.last_name, xom_order.order_date, xom_order.status_code, xom_order.order_type, cust.telephone1, xom_order.order_loc_id, xom_order.under_review_flag, CASE WHEN ship_order.order_id is null THEN 'FALSE' ELSE 'TRUE' END as shipping_necessary_flag FROM xom_order LEFT JOIN xom_customer_mod cust ON xom_order.organization_id = cust.organization_id AND xom_order.order_id = cust.order_id LEFT JOIN (SELECT line.organization_id, line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.void_flag = 0 AND (ful.LOC_ID is null OR  UPPER(ful.LOC_ID) <>  UPPER(src.LOC_ID)) GROUP BY line.organization_id, line.order_id) ship_order ON xom_order.organization_id = ship_order.organization_id AND xom_order.order_id = ship_order.order_id WHERE xom_order.organization_id = 1000 AND  UPPER(xom_order.status_code) <> 'SUSPENDED'   AND  ( UPPER(xom_order.order_type) <> 'STANDARD_DELIVERY' ) AND ( EXISTS (SELECT line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.organization_id = xom_order.organization_id AND line.order_id = xom_order.order_id AND  UPPER(src.loc_id) = '110' AND line.void_flag = 0 AND ( UPPER(line.status_code) IN ('POLLED', 'ACCEPTED') OR (( UPPER(line.status_code) = 'RESERVED') AND (ful.loc_id IS NULL OR  UPPER(src.loc_id) <>  UPPER(ful.loc_id)))))  )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 01:11:27,268 execute [  0.499 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 01:11:27,273 execute [  0.508 ms StorePrimary] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 01:11:27,275 execute [  0.313 ms Local] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 01:11:27,277 execute [  0.515 ms StorePrimary] UPDATE ctl_device_registration SET update_date = to_date('2024-10-19T06:11:27', 'YYYY-MM-DD"T"HH24:MI:SS'), update_user_id = '100', ip_address = '10.10.28.83', date_timestamp = to_date('2024-10-19T01:11:27', 'YYYY-MM-DD"T"HH24:MI:SS'), business_date = to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS'), xstore_version = '16.0.5.0.38 - 7.0.36 - 1.54', env_version = null, active_flag = 'true', config_version = null, primary_register_flag = 'true' WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.UPDATE [Device-Registration-1]
 DEBUG [      ] 2024-10-19 01:11:27,279 execute [  0.226 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T01:11:27', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 01:11:27,281 execute [  0.200 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T01:11:27', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 01:11:27,282 execute [  0.189 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T01:11:27', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 01:11:27,284 execute [  0.223 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 ERROR [      ] 2024-10-19 01:11:54,613 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 01:11:54,614 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
 ERROR [      ] 2024-10-19 01:11:54,618 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017104711.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-1]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 01:11:54,874 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 01:11:54,875 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
 ERROR [      ] 2024-10-19 01:11:54,878 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017110705.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-1]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 01:11:55,124 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 01:11:55,124 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
 ERROR [      ] 2024-10-19 01:11:55,127 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017111605.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-1]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 DEBUG [      ] 2024-10-19 01:12:21,207 execute [  0.731 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 01:14:21,250 execute [  0.405 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 01:16:10,271 execute [  0.869 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T01:16:10', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 01:16:21,285 execute [  0.334 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 01:18:21,324 execute [  0.773 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 01:20:21,360 execute [  0.343 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 01:22:21,392 execute [  0.356 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 01:24:21,425 execute [  0.376 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 01:26:10,157 execute [  0.755 ms StorePrimary] SELECT xom_order.organization_id, xom_order.order_id, cust.first_name, cust.last_name, xom_order.order_date, xom_order.status_code, xom_order.order_type, cust.telephone1, xom_order.order_loc_id, xom_order.under_review_flag, CASE WHEN ship_order.order_id is null THEN 'FALSE' ELSE 'TRUE' END as shipping_necessary_flag FROM xom_order LEFT JOIN xom_customer_mod cust ON xom_order.organization_id = cust.organization_id AND xom_order.order_id = cust.order_id LEFT JOIN (SELECT line.organization_id, line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.void_flag = 0 AND (ful.LOC_ID is null OR  UPPER(ful.LOC_ID) <>  UPPER(src.LOC_ID)) GROUP BY line.organization_id, line.order_id) ship_order ON xom_order.organization_id = ship_order.organization_id AND xom_order.order_id = ship_order.order_id WHERE xom_order.organization_id = 1000 AND  UPPER(xom_order.status_code) <> 'SUSPENDED'   AND  ( UPPER(xom_order.order_type) <> 'STANDARD_DELIVERY' ) AND ( EXISTS (SELECT line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.organization_id = xom_order.organization_id AND line.order_id = xom_order.order_id AND  UPPER(src.loc_id) = '110' AND line.void_flag = 0 AND ( UPPER(line.status_code) IN ('POLLED', 'ACCEPTED') OR (( UPPER(line.status_code) = 'RESERVED') AND (ful.loc_id IS NULL OR  UPPER(src.loc_id) <>  UPPER(ful.loc_id)))))  )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 01:26:10,419 execute [  0.373 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T01:26:10', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 01:26:21,454 execute [  0.734 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 01:26:27,513 execute [  2.640 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 01:26:27,516 execute [  0.471 ms StorePrimary] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 01:26:27,518 execute [  0.270 ms Local] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 01:26:27,520 execute [  0.380 ms StorePrimary] UPDATE ctl_device_registration SET update_date = to_date('2024-10-19T06:26:27', 'YYYY-MM-DD"T"HH24:MI:SS'), update_user_id = '100', ip_address = '10.10.28.83', date_timestamp = to_date('2024-10-19T01:26:27', 'YYYY-MM-DD"T"HH24:MI:SS'), business_date = to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS'), xstore_version = '16.0.5.0.38 - 7.0.36 - 1.54', env_version = null, active_flag = 'true', config_version = null, primary_register_flag = 'true' WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.UPDATE [Device-Registration-1]
 DEBUG [      ] 2024-10-19 01:26:27,523 execute [  0.336 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T01:26:27', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 01:26:27,524 execute [  0.200 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T01:26:27', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 01:26:27,526 execute [  0.174 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T01:26:27', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 01:26:27,527 execute [  0.154 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 ERROR [      ] 2024-10-19 01:26:55,655 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 01:26:55,656 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
 ERROR [      ] 2024-10-19 01:26:55,659 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017104711.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-4]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 01:26:55,910 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 01:26:55,911 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
 ERROR [      ] 2024-10-19 01:26:55,914 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017110705.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-4]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 01:26:56,123 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 01:26:56,124 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
 ERROR [      ] 2024-10-19 01:26:56,127 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017111605.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-4]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 DEBUG [      ] 2024-10-19 01:28:21,484 execute [  0.736 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 01:30:21,511 execute [  0.384 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 01:32:21,538 execute [  0.997 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 01:34:21,563 execute [  0.348 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 01:36:10,534 execute [  0.923 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T01:36:10', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 01:36:21,586 execute [  0.669 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 01:38:21,610 execute [  0.368 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 01:40:21,632 execute [  0.398 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 01:41:10,313 execute [  0.746 ms StorePrimary] SELECT xom_order.organization_id, xom_order.order_id, cust.first_name, cust.last_name, xom_order.order_date, xom_order.status_code, xom_order.order_type, cust.telephone1, xom_order.order_loc_id, xom_order.under_review_flag, CASE WHEN ship_order.order_id is null THEN 'FALSE' ELSE 'TRUE' END as shipping_necessary_flag FROM xom_order LEFT JOIN xom_customer_mod cust ON xom_order.organization_id = cust.organization_id AND xom_order.order_id = cust.order_id LEFT JOIN (SELECT line.organization_id, line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.void_flag = 0 AND (ful.LOC_ID is null OR  UPPER(ful.LOC_ID) <>  UPPER(src.LOC_ID)) GROUP BY line.organization_id, line.order_id) ship_order ON xom_order.organization_id = ship_order.organization_id AND xom_order.order_id = ship_order.order_id WHERE xom_order.organization_id = 1000 AND  UPPER(xom_order.status_code) <> 'SUSPENDED'   AND  ( UPPER(xom_order.order_type) <> 'STANDARD_DELIVERY' ) AND ( EXISTS (SELECT line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.organization_id = xom_order.organization_id AND line.order_id = xom_order.order_id AND  UPPER(src.loc_id) = '110' AND line.void_flag = 0 AND ( UPPER(line.status_code) IN ('POLLED', 'ACCEPTED') OR (( UPPER(line.status_code) = 'RESERVED') AND (ful.loc_id IS NULL OR  UPPER(src.loc_id) <>  UPPER(ful.loc_id)))))  )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 01:41:27,674 execute [  0.551 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 01:41:27,677 execute [  0.420 ms StorePrimary] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 01:41:27,679 execute [  0.249 ms Local] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 01:41:27,681 execute [  0.410 ms StorePrimary] UPDATE ctl_device_registration SET update_date = to_date('2024-10-19T06:41:27', 'YYYY-MM-DD"T"HH24:MI:SS'), update_user_id = '100', ip_address = '10.10.28.83', date_timestamp = to_date('2024-10-19T01:41:27', 'YYYY-MM-DD"T"HH24:MI:SS'), business_date = to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS'), xstore_version = '16.0.5.0.38 - 7.0.36 - 1.54', env_version = null, active_flag = 'true', config_version = null, primary_register_flag = 'true' WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.UPDATE [Device-Registration-1]
 DEBUG [      ] 2024-10-19 01:41:27,685 execute [  1.062 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T01:41:27', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 01:41:27,687 execute [  0.243 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T01:41:27', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 01:41:27,689 execute [  0.229 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T01:41:27', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 01:41:27,690 execute [  0.300 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 ERROR [      ] 2024-10-19 01:41:56,536 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 01:41:56,537 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
 ERROR [      ] 2024-10-19 01:41:56,540 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017104711.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-1]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 01:41:56,753 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 01:41:56,787 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
 ERROR [      ] 2024-10-19 01:41:56,790 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017110705.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-1]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 01:41:57,009 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 01:41:57,010 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
 ERROR [      ] 2024-10-19 01:41:57,013 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017111605.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-1]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 DEBUG [      ] 2024-10-19 01:42:21,653 execute [  0.731 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 01:44:21,673 execute [  0.340 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 01:46:10,622 execute [  0.512 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T01:46:10', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 01:46:21,692 execute [  1.171 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 01:48:21,711 execute [  0.794 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 01:50:21,728 execute [  0.385 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 01:52:21,745 execute [  0.368 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 01:54:21,762 execute [  0.379 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 01:56:10,418 execute [  0.776 ms StorePrimary] SELECT xom_order.organization_id, xom_order.order_id, cust.first_name, cust.last_name, xom_order.order_date, xom_order.status_code, xom_order.order_type, cust.telephone1, xom_order.order_loc_id, xom_order.under_review_flag, CASE WHEN ship_order.order_id is null THEN 'FALSE' ELSE 'TRUE' END as shipping_necessary_flag FROM xom_order LEFT JOIN xom_customer_mod cust ON xom_order.organization_id = cust.organization_id AND xom_order.order_id = cust.order_id LEFT JOIN (SELECT line.organization_id, line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.void_flag = 0 AND (ful.LOC_ID is null OR  UPPER(ful.LOC_ID) <>  UPPER(src.LOC_ID)) GROUP BY line.organization_id, line.order_id) ship_order ON xom_order.organization_id = ship_order.organization_id AND xom_order.order_id = ship_order.order_id WHERE xom_order.organization_id = 1000 AND  UPPER(xom_order.status_code) <> 'SUSPENDED'   AND  ( UPPER(xom_order.order_type) <> 'STANDARD_DELIVERY' ) AND ( EXISTS (SELECT line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.organization_id = xom_order.organization_id AND line.order_id = xom_order.order_id AND  UPPER(src.loc_id) = '110' AND line.void_flag = 0 AND ( UPPER(line.status_code) IN ('POLLED', 'ACCEPTED') OR (( UPPER(line.status_code) = 'RESERVED') AND (ful.loc_id IS NULL OR  UPPER(src.loc_id) <>  UPPER(ful.loc_id)))))  )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 01:56:10,689 execute [  0.338 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T01:56:10', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 01:56:21,779 execute [  0.721 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 01:56:27,787 execute [  0.998 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 01:56:27,790 execute [  0.416 ms StorePrimary] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 01:56:27,792 execute [  0.301 ms Local] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 01:56:27,794 execute [  0.396 ms StorePrimary] UPDATE ctl_device_registration SET update_date = to_date('2024-10-19T06:56:27', 'YYYY-MM-DD"T"HH24:MI:SS'), update_user_id = '100', ip_address = '10.10.28.83', date_timestamp = to_date('2024-10-19T01:56:27', 'YYYY-MM-DD"T"HH24:MI:SS'), business_date = to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS'), xstore_version = '16.0.5.0.38 - 7.0.36 - 1.54', env_version = null, active_flag = 'true', config_version = null, primary_register_flag = 'true' WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.UPDATE [Device-Registration-1]
 DEBUG [      ] 2024-10-19 01:56:27,797 execute [  0.308 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T01:56:27', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 01:56:27,798 execute [  0.172 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T01:56:27', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 01:56:27,800 execute [  0.172 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T01:56:27', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 01:56:27,801 execute [  0.161 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 ERROR [      ] 2024-10-19 01:56:57,419 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 01:56:57,420 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
 ERROR [      ] 2024-10-19 01:56:57,423 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017104711.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-4]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 01:56:57,630 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 01:56:57,631 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
 ERROR [      ] 2024-10-19 01:56:57,634 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017110705.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-4]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 01:56:57,884 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 01:56:57,885 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
 ERROR [      ] 2024-10-19 01:56:57,888 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017111605.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-4]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 DEBUG [      ] 2024-10-19 01:58:21,795 execute [  0.728 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 02:00:21,809 execute [  0.343 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 02:02:21,827 execute [  1.047 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 02:04:21,841 execute [  0.372 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 02:06:10,746 execute [  0.854 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T02:06:10', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 02:06:21,854 execute [  0.345 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 02:08:21,868 execute [  0.342 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 02:10:21,880 execute [  0.796 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 02:11:10,493 execute [  0.745 ms StorePrimary] SELECT xom_order.organization_id, xom_order.order_id, cust.first_name, cust.last_name, xom_order.order_date, xom_order.status_code, xom_order.order_type, cust.telephone1, xom_order.order_loc_id, xom_order.under_review_flag, CASE WHEN ship_order.order_id is null THEN 'FALSE' ELSE 'TRUE' END as shipping_necessary_flag FROM xom_order LEFT JOIN xom_customer_mod cust ON xom_order.organization_id = cust.organization_id AND xom_order.order_id = cust.order_id LEFT JOIN (SELECT line.organization_id, line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.void_flag = 0 AND (ful.LOC_ID is null OR  UPPER(ful.LOC_ID) <>  UPPER(src.LOC_ID)) GROUP BY line.organization_id, line.order_id) ship_order ON xom_order.organization_id = ship_order.organization_id AND xom_order.order_id = ship_order.order_id WHERE xom_order.organization_id = 1000 AND  UPPER(xom_order.status_code) <> 'SUSPENDED'   AND  ( UPPER(xom_order.order_type) <> 'STANDARD_DELIVERY' ) AND ( EXISTS (SELECT line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.organization_id = xom_order.organization_id AND line.order_id = xom_order.order_id AND  UPPER(src.loc_id) = '110' AND line.void_flag = 0 AND ( UPPER(line.status_code) IN ('POLLED', 'ACCEPTED') OR (( UPPER(line.status_code) = 'RESERVED') AND (ful.loc_id IS NULL OR  UPPER(src.loc_id) <>  UPPER(ful.loc_id)))))  )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 02:11:27,869 execute [  0.486 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 02:11:27,872 execute [  0.446 ms StorePrimary] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 02:11:27,874 execute [  0.300 ms Local] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 02:11:27,876 execute [  0.486 ms StorePrimary] UPDATE ctl_device_registration SET update_date = to_date('2024-10-19T07:11:27', 'YYYY-MM-DD"T"HH24:MI:SS'), update_user_id = '100', ip_address = '10.10.28.83', date_timestamp = to_date('2024-10-19T02:11:27', 'YYYY-MM-DD"T"HH24:MI:SS'), business_date = to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS'), xstore_version = '16.0.5.0.38 - 7.0.36 - 1.54', env_version = null, active_flag = 'true', config_version = null, primary_register_flag = 'true' WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.UPDATE [Device-Registration-1]
 DEBUG [      ] 2024-10-19 02:11:27,881 execute [  1.206 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T02:11:27', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 02:11:27,883 execute [  0.307 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T02:11:27', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 02:11:27,885 execute [  0.236 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T02:11:27', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 02:11:27,886 execute [  0.309 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 ERROR [      ] 2024-10-19 02:11:58,302 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 02:11:58,302 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
 ERROR [      ] 2024-10-19 02:11:58,306 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017104711.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-2]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 02:11:58,568 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 02:11:58,569 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
 ERROR [      ] 2024-10-19 02:11:58,573 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017110705.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-2]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 02:11:58,836 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 02:11:58,837 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
 ERROR [      ] 2024-10-19 02:11:58,840 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017111605.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-2]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 DEBUG [      ] 2024-10-19 02:12:21,894 execute [  0.860 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 02:14:21,906 execute [  0.408 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 02:16:10,794 execute [  0.471 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T02:16:10', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 02:16:21,917 execute [  0.878 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 02:18:21,929 execute [  0.358 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 02:20:21,940 execute [  0.412 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 02:22:21,951 execute [  0.364 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 02:24:21,963 execute [  0.352 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 02:26:10,548 execute [  0.724 ms StorePrimary] SELECT xom_order.organization_id, xom_order.order_id, cust.first_name, cust.last_name, xom_order.order_date, xom_order.status_code, xom_order.order_type, cust.telephone1, xom_order.order_loc_id, xom_order.under_review_flag, CASE WHEN ship_order.order_id is null THEN 'FALSE' ELSE 'TRUE' END as shipping_necessary_flag FROM xom_order LEFT JOIN xom_customer_mod cust ON xom_order.organization_id = cust.organization_id AND xom_order.order_id = cust.order_id LEFT JOIN (SELECT line.organization_id, line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.void_flag = 0 AND (ful.LOC_ID is null OR  UPPER(ful.LOC_ID) <>  UPPER(src.LOC_ID)) GROUP BY line.organization_id, line.order_id) ship_order ON xom_order.organization_id = ship_order.organization_id AND xom_order.order_id = ship_order.order_id WHERE xom_order.organization_id = 1000 AND  UPPER(xom_order.status_code) <> 'SUSPENDED'   AND  ( UPPER(xom_order.order_type) <> 'STANDARD_DELIVERY' ) AND ( EXISTS (SELECT line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.organization_id = xom_order.organization_id AND line.order_id = xom_order.order_id AND  UPPER(src.loc_id) = '110' AND line.void_flag = 0 AND ( UPPER(line.status_code) IN ('POLLED', 'ACCEPTED') OR (( UPPER(line.status_code) = 'RESERVED') AND (ful.loc_id IS NULL OR  UPPER(src.loc_id) <>  UPPER(ful.loc_id)))))  )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 02:26:10,831 execute [  0.685 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T02:26:10', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 02:26:21,973 execute [  0.700 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 02:26:27,934 execute [  1.387 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 02:26:27,937 execute [  0.391 ms StorePrimary] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 02:26:27,939 execute [  0.260 ms Local] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 02:26:27,941 execute [  0.377 ms StorePrimary] UPDATE ctl_device_registration SET update_date = to_date('2024-10-19T07:26:27', 'YYYY-MM-DD"T"HH24:MI:SS'), update_user_id = '100', ip_address = '10.10.28.83', date_timestamp = to_date('2024-10-19T02:26:27', 'YYYY-MM-DD"T"HH24:MI:SS'), business_date = to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS'), xstore_version = '16.0.5.0.38 - 7.0.36 - 1.54', env_version = null, active_flag = 'true', config_version = null, primary_register_flag = 'true' WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.UPDATE [Device-Registration-1]
 DEBUG [      ] 2024-10-19 02:26:27,944 execute [  0.311 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T02:26:27', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 02:26:27,945 execute [  0.213 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T02:26:27', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 02:26:27,947 execute [  0.193 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T02:26:27', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 02:26:27,948 execute [  0.156 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 ERROR [      ] 2024-10-19 02:26:59,188 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 02:26:59,189 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
 ERROR [      ] 2024-10-19 02:26:59,193 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017104711.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-3]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 02:26:59,445 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 02:26:59,446 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
 ERROR [      ] 2024-10-19 02:26:59,448 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017110705.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-3]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 02:26:59,698 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 02:26:59,698 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
 ERROR [      ] 2024-10-19 02:26:59,701 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017111605.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-3]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 DEBUG [      ] 2024-10-19 02:28:21,985 execute [  0.926 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 02:30:21,996 execute [  0.357 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 02:32:22,008 execute [  1.006 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 02:34:22,018 execute [  0.871 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 02:36:10,864 execute [  0.508 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T02:36:10', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 02:36:22,027 execute [  0.332 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 02:38:22,036 execute [  0.344 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 02:40:22,046 execute [  0.349 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 02:41:10,592 execute [  0.704 ms StorePrimary] SELECT xom_order.organization_id, xom_order.order_id, cust.first_name, cust.last_name, xom_order.order_date, xom_order.status_code, xom_order.order_type, cust.telephone1, xom_order.order_loc_id, xom_order.under_review_flag, CASE WHEN ship_order.order_id is null THEN 'FALSE' ELSE 'TRUE' END as shipping_necessary_flag FROM xom_order LEFT JOIN xom_customer_mod cust ON xom_order.organization_id = cust.organization_id AND xom_order.order_id = cust.order_id LEFT JOIN (SELECT line.organization_id, line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.void_flag = 0 AND (ful.LOC_ID is null OR  UPPER(ful.LOC_ID) <>  UPPER(src.LOC_ID)) GROUP BY line.organization_id, line.order_id) ship_order ON xom_order.organization_id = ship_order.organization_id AND xom_order.order_id = ship_order.order_id WHERE xom_order.organization_id = 1000 AND  UPPER(xom_order.status_code) <> 'SUSPENDED'   AND  ( UPPER(xom_order.order_type) <> 'STANDARD_DELIVERY' ) AND ( EXISTS (SELECT line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.organization_id = xom_order.organization_id AND line.order_id = xom_order.order_id AND  UPPER(src.loc_id) = '110' AND line.void_flag = 0 AND ( UPPER(line.status_code) IN ('POLLED', 'ACCEPTED') OR (( UPPER(line.status_code) = 'RESERVED') AND (ful.loc_id IS NULL OR  UPPER(src.loc_id) <>  UPPER(ful.loc_id)))))  )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 02:41:27,982 execute [  0.557 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 02:41:27,985 execute [  0.449 ms StorePrimary] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 02:41:27,987 execute [  0.314 ms Local] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 02:41:27,990 execute [  0.471 ms StorePrimary] UPDATE ctl_device_registration SET update_date = to_date('2024-10-19T07:41:27', 'YYYY-MM-DD"T"HH24:MI:SS'), update_user_id = '100', ip_address = '10.10.28.83', date_timestamp = to_date('2024-10-19T02:41:27', 'YYYY-MM-DD"T"HH24:MI:SS'), business_date = to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS'), xstore_version = '16.0.5.0.38 - 7.0.36 - 1.54', env_version = null, active_flag = 'true', config_version = null, primary_register_flag = 'true' WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.UPDATE [Device-Registration-1]
 DEBUG [      ] 2024-10-19 02:41:27,995 execute [  0.727 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T02:41:27', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 02:41:27,997 execute [  0.232 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T02:41:27', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 02:41:27,998 execute [  0.249 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T02:41:27', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 02:41:28,000 execute [  0.317 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 ERROR [      ] 2024-10-19 02:42:00,002 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 02:42:00,003 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
 ERROR [      ] 2024-10-19 02:42:00,006 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017104711.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-4]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 02:42:00,272 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 02:42:00,272 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
 ERROR [      ] 2024-10-19 02:42:00,275 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017110705.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-4]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 02:42:00,548 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 02:42:00,549 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
 ERROR [      ] 2024-10-19 02:42:00,552 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017111605.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-4]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 DEBUG [      ] 2024-10-19 02:42:22,056 execute [  0.769 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 02:44:22,066 execute [  0.411 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 02:46:10,892 execute [  1.047 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T02:46:10', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 02:46:22,075 execute [  0.696 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 02:48:22,084 execute [  0.371 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 02:50:22,093 execute [  0.401 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 02:52:22,102 execute [  0.372 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 02:54:22,110 execute [  0.457 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 02:56:10,628 execute [  0.741 ms StorePrimary] SELECT xom_order.organization_id, xom_order.order_id, cust.first_name, cust.last_name, xom_order.order_date, xom_order.status_code, xom_order.order_type, cust.telephone1, xom_order.order_loc_id, xom_order.under_review_flag, CASE WHEN ship_order.order_id is null THEN 'FALSE' ELSE 'TRUE' END as shipping_necessary_flag FROM xom_order LEFT JOIN xom_customer_mod cust ON xom_order.organization_id = cust.organization_id AND xom_order.order_id = cust.order_id LEFT JOIN (SELECT line.organization_id, line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.void_flag = 0 AND (ful.LOC_ID is null OR  UPPER(ful.LOC_ID) <>  UPPER(src.LOC_ID)) GROUP BY line.organization_id, line.order_id) ship_order ON xom_order.organization_id = ship_order.organization_id AND xom_order.order_id = ship_order.order_id WHERE xom_order.organization_id = 1000 AND  UPPER(xom_order.status_code) <> 'SUSPENDED'   AND  ( UPPER(xom_order.order_type) <> 'STANDARD_DELIVERY' ) AND ( EXISTS (SELECT line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.organization_id = xom_order.organization_id AND line.order_id = xom_order.order_id AND  UPPER(src.loc_id) = '110' AND line.void_flag = 0 AND ( UPPER(line.status_code) IN ('POLLED', 'ACCEPTED') OR (( UPPER(line.status_code) = 'RESERVED') AND (ful.loc_id IS NULL OR  UPPER(src.loc_id) <>  UPPER(ful.loc_id)))))  )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 02:56:10,917 execute [  0.715 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T02:56:10', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 02:56:22,119 execute [  0.832 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 02:56:28,028 execute [  1.141 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 02:56:28,031 execute [  0.374 ms StorePrimary] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 02:56:28,034 execute [  0.875 ms Local] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 02:56:28,036 execute [  0.380 ms StorePrimary] UPDATE ctl_device_registration SET update_date = to_date('2024-10-19T07:56:28', 'YYYY-MM-DD"T"HH24:MI:SS'), update_user_id = '100', ip_address = '10.10.28.83', date_timestamp = to_date('2024-10-19T02:56:28', 'YYYY-MM-DD"T"HH24:MI:SS'), business_date = to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS'), xstore_version = '16.0.5.0.38 - 7.0.36 - 1.54', env_version = null, active_flag = 'true', config_version = null, primary_register_flag = 'true' WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.UPDATE [Device-Registration-1]
 DEBUG [      ] 2024-10-19 02:56:28,038 execute [  0.309 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T02:56:28', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 02:56:28,040 execute [  0.234 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T02:56:28', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 02:56:28,042 execute [  0.191 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T02:56:28', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 02:56:28,043 execute [  0.154 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 ERROR [      ] 2024-10-19 02:57:00,851 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 02:57:00,852 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
 ERROR [      ] 2024-10-19 02:57:00,856 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017104711.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-2]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 02:57:01,107 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 02:57:01,107 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
 ERROR [      ] 2024-10-19 02:57:01,110 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017110705.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-2]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 02:57:01,321 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 02:57:01,322 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
 ERROR [      ] 2024-10-19 02:57:01,325 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017111605.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-2]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 DEBUG [      ] 2024-10-19 02:58:22,128 execute [  0.786 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 03:00:22,135 execute [  0.406 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 03:02:22,145 execute [  1.038 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 03:04:22,155 execute [  0.929 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 03:06:10,940 execute [  0.454 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T03:06:10', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 03:06:22,163 execute [  0.340 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 03:08:22,170 execute [  0.388 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 03:10:22,180 execute [  0.385 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 03:11:10,658 execute [  0.745 ms StorePrimary] SELECT xom_order.organization_id, xom_order.order_id, cust.first_name, cust.last_name, xom_order.order_date, xom_order.status_code, xom_order.order_type, cust.telephone1, xom_order.order_loc_id, xom_order.under_review_flag, CASE WHEN ship_order.order_id is null THEN 'FALSE' ELSE 'TRUE' END as shipping_necessary_flag FROM xom_order LEFT JOIN xom_customer_mod cust ON xom_order.organization_id = cust.organization_id AND xom_order.order_id = cust.order_id LEFT JOIN (SELECT line.organization_id, line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.void_flag = 0 AND (ful.LOC_ID is null OR  UPPER(ful.LOC_ID) <>  UPPER(src.LOC_ID)) GROUP BY line.organization_id, line.order_id) ship_order ON xom_order.organization_id = ship_order.organization_id AND xom_order.order_id = ship_order.order_id WHERE xom_order.organization_id = 1000 AND  UPPER(xom_order.status_code) <> 'SUSPENDED'   AND  ( UPPER(xom_order.order_type) <> 'STANDARD_DELIVERY' ) AND ( EXISTS (SELECT line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.organization_id = xom_order.organization_id AND line.order_id = xom_order.order_id AND  UPPER(src.loc_id) = '110' AND line.void_flag = 0 AND ( UPPER(line.status_code) IN ('POLLED', 'ACCEPTED') OR (( UPPER(line.status_code) = 'RESERVED') AND (ful.loc_id IS NULL OR  UPPER(src.loc_id) <>  UPPER(ful.loc_id)))))  )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 03:11:28,066 execute [  0.490 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 03:11:28,069 execute [  0.446 ms StorePrimary] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 03:11:28,072 execute [  0.285 ms Local] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 03:11:28,073 execute [  0.441 ms StorePrimary] UPDATE ctl_device_registration SET update_date = to_date('2024-10-19T08:11:28', 'YYYY-MM-DD"T"HH24:MI:SS'), update_user_id = '100', ip_address = '10.10.28.83', date_timestamp = to_date('2024-10-19T03:11:28', 'YYYY-MM-DD"T"HH24:MI:SS'), business_date = to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS'), xstore_version = '16.0.5.0.38 - 7.0.36 - 1.54', env_version = null, active_flag = 'true', config_version = null, primary_register_flag = 'true' WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.UPDATE [Device-Registration-1]
 DEBUG [      ] 2024-10-19 03:11:28,080 execute [  2.862 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T03:11:28', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 03:11:28,082 execute [  0.233 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T03:11:28', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 03:11:28,083 execute [  0.183 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T03:11:28', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 03:11:28,085 execute [  0.269 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 ERROR [      ] 2024-10-19 03:12:01,581 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 03:12:01,582 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
 ERROR [      ] 2024-10-19 03:12:01,586 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017104711.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-4]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 03:12:01,840 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 03:12:01,840 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
 ERROR [      ] 2024-10-19 03:12:01,843 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017110705.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-4]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 03:12:02,064 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 03:12:02,064 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
 ERROR [      ] 2024-10-19 03:12:02,068 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017111605.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-4]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 DEBUG [      ] 2024-10-19 03:12:22,211 execute [  0.695 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 03:14:22,218 execute [  0.395 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 03:16:10,962 execute [  0.459 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T03:16:10', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 03:16:22,229 execute [  0.897 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 03:18:22,285 execute [  0.380 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 03:20:22,339 execute [  0.364 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 03:22:22,389 execute [  0.352 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 03:24:22,437 execute [  0.381 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 03:26:10,903 execute [  0.789 ms StorePrimary] SELECT xom_order.organization_id, xom_order.order_id, cust.first_name, cust.last_name, xom_order.order_date, xom_order.status_code, xom_order.order_type, cust.telephone1, xom_order.order_loc_id, xom_order.under_review_flag, CASE WHEN ship_order.order_id is null THEN 'FALSE' ELSE 'TRUE' END as shipping_necessary_flag FROM xom_order LEFT JOIN xom_customer_mod cust ON xom_order.organization_id = cust.organization_id AND xom_order.order_id = cust.order_id LEFT JOIN (SELECT line.organization_id, line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.void_flag = 0 AND (ful.LOC_ID is null OR  UPPER(ful.LOC_ID) <>  UPPER(src.LOC_ID)) GROUP BY line.organization_id, line.order_id) ship_order ON xom_order.organization_id = ship_order.organization_id AND xom_order.order_id = ship_order.order_id WHERE xom_order.organization_id = 1000 AND  UPPER(xom_order.status_code) <> 'SUSPENDED'   AND  ( UPPER(xom_order.order_type) <> 'STANDARD_DELIVERY' ) AND ( EXISTS (SELECT line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.organization_id = xom_order.organization_id AND line.order_id = xom_order.order_id AND  UPPER(src.loc_id) = '110' AND line.void_flag = 0 AND ( UPPER(line.status_code) IN ('POLLED', 'ACCEPTED') OR (( UPPER(line.status_code) = 'RESERVED') AND (ful.loc_id IS NULL OR  UPPER(src.loc_id) <>  UPPER(ful.loc_id)))))  )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 03:26:11,197 execute [  0.319 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T03:26:11', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 03:26:22,485 execute [  0.906 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 03:26:28,325 execute [  1.102 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 03:26:28,328 execute [  0.430 ms StorePrimary] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 03:26:28,330 execute [  0.259 ms Local] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 03:26:28,332 execute [  0.404 ms StorePrimary] UPDATE ctl_device_registration SET update_date = to_date('2024-10-19T08:26:28', 'YYYY-MM-DD"T"HH24:MI:SS'), update_user_id = '100', ip_address = '10.10.28.83', date_timestamp = to_date('2024-10-19T03:26:28', 'YYYY-MM-DD"T"HH24:MI:SS'), business_date = to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS'), xstore_version = '16.0.5.0.38 - 7.0.36 - 1.54', env_version = null, active_flag = 'true', config_version = null, primary_register_flag = 'true' WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.UPDATE [Device-Registration-1]
 DEBUG [      ] 2024-10-19 03:26:28,335 execute [  0.329 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T03:26:28', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 03:26:28,337 execute [  0.167 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T03:26:28', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 03:26:28,338 execute [  0.176 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T03:26:28', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 03:26:28,339 execute [  0.178 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 ERROR [      ] 2024-10-19 03:27:02,594 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 03:27:02,595 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
 ERROR [      ] 2024-10-19 03:27:02,599 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017104711.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-4]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 03:27:02,814 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 03:27:02,815 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
 ERROR [      ] 2024-10-19 03:27:02,819 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017110705.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-4]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 03:27:03,072 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 03:27:03,073 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
 ERROR [      ] 2024-10-19 03:27:03,076 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017111605.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-4]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 DEBUG [      ] 2024-10-19 03:28:22,527 execute [  0.754 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 03:30:22,567 execute [  0.364 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 03:32:22,611 execute [  1.095 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 03:34:22,648 execute [  1.211 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 03:36:11,376 execute [  0.499 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T03:36:11', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 03:36:22,685 execute [  0.378 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 03:38:22,718 execute [  0.343 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 03:40:22,750 execute [  0.359 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 03:41:11,149 execute [  0.694 ms StorePrimary] SELECT xom_order.organization_id, xom_order.order_id, cust.first_name, cust.last_name, xom_order.order_date, xom_order.status_code, xom_order.order_type, cust.telephone1, xom_order.order_loc_id, xom_order.under_review_flag, CASE WHEN ship_order.order_id is null THEN 'FALSE' ELSE 'TRUE' END as shipping_necessary_flag FROM xom_order LEFT JOIN xom_customer_mod cust ON xom_order.organization_id = cust.organization_id AND xom_order.order_id = cust.order_id LEFT JOIN (SELECT line.organization_id, line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.void_flag = 0 AND (ful.LOC_ID is null OR  UPPER(ful.LOC_ID) <>  UPPER(src.LOC_ID)) GROUP BY line.organization_id, line.order_id) ship_order ON xom_order.organization_id = ship_order.organization_id AND xom_order.order_id = ship_order.order_id WHERE xom_order.organization_id = 1000 AND  UPPER(xom_order.status_code) <> 'SUSPENDED'   AND  ( UPPER(xom_order.order_type) <> 'STANDARD_DELIVERY' ) AND ( EXISTS (SELECT line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.organization_id = xom_order.organization_id AND line.order_id = xom_order.order_id AND  UPPER(src.loc_id) = '110' AND line.void_flag = 0 AND ( UPPER(line.status_code) IN ('POLLED', 'ACCEPTED') OR (( UPPER(line.status_code) = 'RESERVED') AND (ful.loc_id IS NULL OR  UPPER(src.loc_id) <>  UPPER(ful.loc_id)))))  )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 03:41:28,578 execute [  0.466 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 03:41:28,581 execute [  0.376 ms StorePrimary] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 03:41:28,583 execute [  0.279 ms Local] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 03:41:28,585 execute [  0.449 ms StorePrimary] UPDATE ctl_device_registration SET update_date = to_date('2024-10-19T08:41:28', 'YYYY-MM-DD"T"HH24:MI:SS'), update_user_id = '100', ip_address = '10.10.28.83', date_timestamp = to_date('2024-10-19T03:41:28', 'YYYY-MM-DD"T"HH24:MI:SS'), business_date = to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS'), xstore_version = '16.0.5.0.38 - 7.0.36 - 1.54', env_version = null, active_flag = 'true', config_version = null, primary_register_flag = 'true' WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.UPDATE [Device-Registration-1]
 DEBUG [      ] 2024-10-19 03:41:28,589 execute [  1.133 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T03:41:28', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 03:41:28,591 execute [  0.248 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T03:41:28', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 03:41:28,593 execute [  0.214 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T03:41:28', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 03:41:28,594 execute [  0.284 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 ERROR [      ] 2024-10-19 03:42:03,582 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 03:42:03,583 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
 ERROR [      ] 2024-10-19 03:42:03,586 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017104711.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-2]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 03:42:03,837 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 03:42:03,838 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
 ERROR [      ] 2024-10-19 03:42:03,841 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017110705.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-2]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 03:42:04,090 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 03:42:04,090 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
 ERROR [      ] 2024-10-19 03:42:04,093 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017111605.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-2]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 DEBUG [      ] 2024-10-19 03:42:22,780 execute [  0.729 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 03:44:22,808 execute [  0.433 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 03:46:11,511 execute [  0.898 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T03:46:11', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 03:46:22,838 execute [  0.808 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 03:48:22,862 execute [  0.386 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 03:50:22,888 execute [  0.386 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 03:52:22,912 execute [  0.385 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 03:54:22,935 execute [  0.355 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 03:56:11,312 execute [  0.851 ms StorePrimary] SELECT xom_order.organization_id, xom_order.order_id, cust.first_name, cust.last_name, xom_order.order_date, xom_order.status_code, xom_order.order_type, cust.telephone1, xom_order.order_loc_id, xom_order.under_review_flag, CASE WHEN ship_order.order_id is null THEN 'FALSE' ELSE 'TRUE' END as shipping_necessary_flag FROM xom_order LEFT JOIN xom_customer_mod cust ON xom_order.organization_id = cust.organization_id AND xom_order.order_id = cust.order_id LEFT JOIN (SELECT line.organization_id, line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.void_flag = 0 AND (ful.LOC_ID is null OR  UPPER(ful.LOC_ID) <>  UPPER(src.LOC_ID)) GROUP BY line.organization_id, line.order_id) ship_order ON xom_order.organization_id = ship_order.organization_id AND xom_order.order_id = ship_order.order_id WHERE xom_order.organization_id = 1000 AND  UPPER(xom_order.status_code) <> 'SUSPENDED'   AND  ( UPPER(xom_order.order_type) <> 'STANDARD_DELIVERY' ) AND ( EXISTS (SELECT line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.organization_id = xom_order.organization_id AND line.order_id = xom_order.order_id AND  UPPER(src.loc_id) = '110' AND line.void_flag = 0 AND ( UPPER(line.status_code) IN ('POLLED', 'ACCEPTED') OR (( UPPER(line.status_code) = 'RESERVED') AND (ful.loc_id IS NULL OR  UPPER(src.loc_id) <>  UPPER(ful.loc_id)))))  )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 03:56:11,613 execute [  0.664 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T03:56:11', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 03:56:22,959 execute [  0.732 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 03:56:28,748 execute [  1.064 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 03:56:28,751 execute [  0.405 ms StorePrimary] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 03:56:28,752 execute [  0.294 ms Local] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 03:56:28,754 execute [  0.394 ms StorePrimary] UPDATE ctl_device_registration SET update_date = to_date('2024-10-19T08:56:28', 'YYYY-MM-DD"T"HH24:MI:SS'), update_user_id = '100', ip_address = '10.10.28.83', date_timestamp = to_date('2024-10-19T03:56:28', 'YYYY-MM-DD"T"HH24:MI:SS'), business_date = to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS'), xstore_version = '16.0.5.0.38 - 7.0.36 - 1.54', env_version = null, active_flag = 'true', config_version = null, primary_register_flag = 'true' WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.UPDATE [Device-Registration-1]
 DEBUG [      ] 2024-10-19 03:56:28,757 execute [  0.383 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T03:56:28', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 03:56:28,759 execute [  0.217 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T03:56:28', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 03:56:28,760 execute [  0.188 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T03:56:28', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 03:56:28,761 execute [  0.150 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 ERROR [      ] 2024-10-19 03:57:04,537 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 03:57:04,538 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
 ERROR [      ] 2024-10-19 03:57:04,541 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017104711.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-2]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 03:57:04,751 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 03:57:04,752 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
 ERROR [      ] 2024-10-19 03:57:04,755 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017110705.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-2]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 03:57:05,004 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 03:57:05,005 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
 ERROR [      ] 2024-10-19 03:57:05,008 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017111605.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-2]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 DEBUG [      ] 2024-10-19 03:58:22,980 execute [  0.763 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 04:00:23,002 execute [  0.379 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 04:02:23,023 execute [  1.070 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 04:04:23,043 execute [  1.119 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 04:06:11,697 execute [  0.501 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T04:06:11', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 04:06:23,061 execute [  0.339 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 04:08:23,078 execute [  0.422 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 04:10:23,096 execute [  0.348 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 04:11:11,422 execute [  0.738 ms StorePrimary] SELECT xom_order.organization_id, xom_order.order_id, cust.first_name, cust.last_name, xom_order.order_date, xom_order.status_code, xom_order.order_type, cust.telephone1, xom_order.order_loc_id, xom_order.under_review_flag, CASE WHEN ship_order.order_id is null THEN 'FALSE' ELSE 'TRUE' END as shipping_necessary_flag FROM xom_order LEFT JOIN xom_customer_mod cust ON xom_order.organization_id = cust.organization_id AND xom_order.order_id = cust.order_id LEFT JOIN (SELECT line.organization_id, line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.void_flag = 0 AND (ful.LOC_ID is null OR  UPPER(ful.LOC_ID) <>  UPPER(src.LOC_ID)) GROUP BY line.organization_id, line.order_id) ship_order ON xom_order.organization_id = ship_order.organization_id AND xom_order.order_id = ship_order.order_id WHERE xom_order.organization_id = 1000 AND  UPPER(xom_order.status_code) <> 'SUSPENDED'   AND  ( UPPER(xom_order.order_type) <> 'STANDARD_DELIVERY' ) AND ( EXISTS (SELECT line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.organization_id = xom_order.organization_id AND line.order_id = xom_order.order_id AND  UPPER(src.loc_id) = '110' AND line.void_flag = 0 AND ( UPPER(line.status_code) IN ('POLLED', 'ACCEPTED') OR (( UPPER(line.status_code) = 'RESERVED') AND (ful.loc_id IS NULL OR  UPPER(src.loc_id) <>  UPPER(ful.loc_id)))))  )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 04:11:28,864 execute [  0.518 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 04:11:28,867 execute [  0.392 ms StorePrimary] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 04:11:28,869 execute [  0.262 ms Local] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 04:11:28,871 execute [  0.479 ms StorePrimary] UPDATE ctl_device_registration SET update_date = to_date('2024-10-19T09:11:28', 'YYYY-MM-DD"T"HH24:MI:SS'), update_user_id = '100', ip_address = '10.10.28.83', date_timestamp = to_date('2024-10-19T04:11:28', 'YYYY-MM-DD"T"HH24:MI:SS'), business_date = to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS'), xstore_version = '16.0.5.0.38 - 7.0.36 - 1.54', env_version = null, active_flag = 'true', config_version = null, primary_register_flag = 'true' WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.UPDATE [Device-Registration-1]
 DEBUG [      ] 2024-10-19 04:11:28,878 execute [  1.824 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T04:11:28', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 04:11:28,880 execute [  0.206 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T04:11:28', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 04:11:28,882 execute [  0.303 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T04:11:28', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 04:11:28,884 execute [  0.307 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 ERROR [      ] 2024-10-19 04:12:05,380 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 04:12:05,381 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
 ERROR [      ] 2024-10-19 04:12:05,384 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017104711.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-3]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 04:12:05,635 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 04:12:05,635 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
 ERROR [      ] 2024-10-19 04:12:05,638 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017110705.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-3]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 04:12:05,844 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 04:12:05,844 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
 ERROR [      ] 2024-10-19 04:12:05,848 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017111605.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-3]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 DEBUG [      ] 2024-10-19 04:12:23,148 execute [  0.688 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 04:14:23,164 execute [  0.359 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 04:16:11,760 execute [  0.859 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T04:16:11', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 04:16:23,178 execute [  0.340 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 04:18:23,193 execute [  0.701 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 04:20:23,207 execute [  0.408 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 04:22:23,221 execute [  0.328 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 04:24:23,233 execute [  0.367 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 04:26:11,501 execute [  0.788 ms StorePrimary] SELECT xom_order.organization_id, xom_order.order_id, cust.first_name, cust.last_name, xom_order.order_date, xom_order.status_code, xom_order.order_type, cust.telephone1, xom_order.order_loc_id, xom_order.under_review_flag, CASE WHEN ship_order.order_id is null THEN 'FALSE' ELSE 'TRUE' END as shipping_necessary_flag FROM xom_order LEFT JOIN xom_customer_mod cust ON xom_order.organization_id = cust.organization_id AND xom_order.order_id = cust.order_id LEFT JOIN (SELECT line.organization_id, line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.void_flag = 0 AND (ful.LOC_ID is null OR  UPPER(ful.LOC_ID) <>  UPPER(src.LOC_ID)) GROUP BY line.organization_id, line.order_id) ship_order ON xom_order.organization_id = ship_order.organization_id AND xom_order.order_id = ship_order.order_id WHERE xom_order.organization_id = 1000 AND  UPPER(xom_order.status_code) <> 'SUSPENDED'   AND  ( UPPER(xom_order.order_type) <> 'STANDARD_DELIVERY' ) AND ( EXISTS (SELECT line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.organization_id = xom_order.organization_id AND line.order_id = xom_order.order_id AND  UPPER(src.loc_id) = '110' AND line.void_flag = 0 AND ( UPPER(line.status_code) IN ('POLLED', 'ACCEPTED') OR (( UPPER(line.status_code) = 'RESERVED') AND (ful.loc_id IS NULL OR  UPPER(src.loc_id) <>  UPPER(ful.loc_id)))))  )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 04:26:11,812 execute [  0.931 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T04:26:11', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 04:26:23,246 execute [  0.692 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 04:26:28,953 execute [  1.161 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 04:26:28,956 execute [  0.434 ms StorePrimary] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 04:26:28,959 execute [  0.292 ms Local] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 04:26:28,960 execute [  0.394 ms StorePrimary] UPDATE ctl_device_registration SET update_date = to_date('2024-10-19T09:26:28', 'YYYY-MM-DD"T"HH24:MI:SS'), update_user_id = '100', ip_address = '10.10.28.83', date_timestamp = to_date('2024-10-19T04:26:28', 'YYYY-MM-DD"T"HH24:MI:SS'), business_date = to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS'), xstore_version = '16.0.5.0.38 - 7.0.36 - 1.54', env_version = null, active_flag = 'true', config_version = null, primary_register_flag = 'true' WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.UPDATE [Device-Registration-1]
 DEBUG [      ] 2024-10-19 04:26:28,963 execute [  0.312 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T04:26:28', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 04:26:28,965 execute [  0.184 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T04:26:28', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 04:26:28,966 execute [  0.166 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T04:26:28', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 04:26:28,968 execute [  0.158 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 ERROR [      ] 2024-10-19 04:27:06,191 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 04:27:06,192 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
 ERROR [      ] 2024-10-19 04:27:06,195 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017104711.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-1]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 04:27:06,417 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 04:27:06,418 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
 ERROR [      ] 2024-10-19 04:27:06,421 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017110705.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-1]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 04:27:06,672 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 04:27:06,673 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
 ERROR [      ] 2024-10-19 04:27:06,676 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017111605.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-1]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 DEBUG [      ] 2024-10-19 04:28:23,260 execute [  0.778 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 04:30:23,272 execute [  0.338 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 04:32:23,286 execute [  1.002 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 04:34:23,298 execute [  0.903 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 04:36:11,854 execute [  0.530 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T04:36:11', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 04:36:23,309 execute [  0.330 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 04:38:23,320 execute [  0.326 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 04:40:23,331 execute [  0.342 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 04:41:11,560 execute [  0.738 ms StorePrimary] SELECT xom_order.organization_id, xom_order.order_id, cust.first_name, cust.last_name, xom_order.order_date, xom_order.status_code, xom_order.order_type, cust.telephone1, xom_order.order_loc_id, xom_order.under_review_flag, CASE WHEN ship_order.order_id is null THEN 'FALSE' ELSE 'TRUE' END as shipping_necessary_flag FROM xom_order LEFT JOIN xom_customer_mod cust ON xom_order.organization_id = cust.organization_id AND xom_order.order_id = cust.order_id LEFT JOIN (SELECT line.organization_id, line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.void_flag = 0 AND (ful.LOC_ID is null OR  UPPER(ful.LOC_ID) <>  UPPER(src.LOC_ID)) GROUP BY line.organization_id, line.order_id) ship_order ON xom_order.organization_id = ship_order.organization_id AND xom_order.order_id = ship_order.order_id WHERE xom_order.organization_id = 1000 AND  UPPER(xom_order.status_code) <> 'SUSPENDED'   AND  ( UPPER(xom_order.order_type) <> 'STANDARD_DELIVERY' ) AND ( EXISTS (SELECT line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.organization_id = xom_order.organization_id AND line.order_id = xom_order.order_id AND  UPPER(src.loc_id) = '110' AND line.void_flag = 0 AND ( UPPER(line.status_code) IN ('POLLED', 'ACCEPTED') OR (( UPPER(line.status_code) = 'RESERVED') AND (ful.loc_id IS NULL OR  UPPER(src.loc_id) <>  UPPER(ful.loc_id)))))  )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 04:41:29,019 execute [  0.669 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 04:41:29,022 execute [  0.538 ms StorePrimary] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 04:41:29,024 execute [  0.298 ms Local] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 04:41:29,027 execute [  0.445 ms StorePrimary] UPDATE ctl_device_registration SET update_date = to_date('2024-10-19T09:41:29', 'YYYY-MM-DD"T"HH24:MI:SS'), update_user_id = '100', ip_address = '10.10.28.83', date_timestamp = to_date('2024-10-19T04:41:29', 'YYYY-MM-DD"T"HH24:MI:SS'), business_date = to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS'), xstore_version = '16.0.5.0.38 - 7.0.36 - 1.54', env_version = null, active_flag = 'true', config_version = null, primary_register_flag = 'true' WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.UPDATE [Device-Registration-1]
 DEBUG [      ] 2024-10-19 04:41:29,032 execute [  1.214 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T04:41:29', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 04:41:29,033 execute [  0.249 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T04:41:29', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 04:41:29,035 execute [  0.233 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T04:41:29', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 04:41:29,037 execute [  0.297 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 ERROR [      ] 2024-10-19 04:42:07,031 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 04:42:07,032 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
 ERROR [      ] 2024-10-19 04:42:07,035 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017104711.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-2]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 04:42:07,289 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 04:42:07,290 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
 ERROR [      ] 2024-10-19 04:42:07,292 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017110705.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-2]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 04:42:07,539 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 04:42:07,540 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
 ERROR [      ] 2024-10-19 04:42:07,543 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017111605.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-2]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 DEBUG [      ] 2024-10-19 04:42:23,342 execute [  0.676 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 04:44:23,352 execute [  0.386 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 04:46:11,892 execute [  0.911 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T04:46:11', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 04:46:23,363 execute [  0.696 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 04:48:23,372 execute [  0.362 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 04:50:23,381 execute [  0.331 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 04:52:23,392 execute [  0.337 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 04:54:23,403 execute [  0.341 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 04:56:11,606 execute [  0.737 ms StorePrimary] SELECT xom_order.organization_id, xom_order.order_id, cust.first_name, cust.last_name, xom_order.order_date, xom_order.status_code, xom_order.order_type, cust.telephone1, xom_order.order_loc_id, xom_order.under_review_flag, CASE WHEN ship_order.order_id is null THEN 'FALSE' ELSE 'TRUE' END as shipping_necessary_flag FROM xom_order LEFT JOIN xom_customer_mod cust ON xom_order.organization_id = cust.organization_id AND xom_order.order_id = cust.order_id LEFT JOIN (SELECT line.organization_id, line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.void_flag = 0 AND (ful.LOC_ID is null OR  UPPER(ful.LOC_ID) <>  UPPER(src.LOC_ID)) GROUP BY line.organization_id, line.order_id) ship_order ON xom_order.organization_id = ship_order.organization_id AND xom_order.order_id = ship_order.order_id WHERE xom_order.organization_id = 1000 AND  UPPER(xom_order.status_code) <> 'SUSPENDED'   AND  ( UPPER(xom_order.order_type) <> 'STANDARD_DELIVERY' ) AND ( EXISTS (SELECT line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.organization_id = xom_order.organization_id AND line.order_id = xom_order.order_id AND  UPPER(src.loc_id) = '110' AND line.void_flag = 0 AND ( UPPER(line.status_code) IN ('POLLED', 'ACCEPTED') OR (( UPPER(line.status_code) = 'RESERVED') AND (ful.loc_id IS NULL OR  UPPER(src.loc_id) <>  UPPER(ful.loc_id)))))  )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 04:56:11,921 execute [  0.306 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T04:56:11', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 04:56:23,413 execute [  0.757 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 04:56:29,073 execute [  1.046 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 04:56:29,076 execute [  0.403 ms StorePrimary] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 04:56:29,078 execute [  0.248 ms Local] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 04:56:29,080 execute [  0.388 ms StorePrimary] UPDATE ctl_device_registration SET update_date = to_date('2024-10-19T09:56:29', 'YYYY-MM-DD"T"HH24:MI:SS'), update_user_id = '100', ip_address = '10.10.28.83', date_timestamp = to_date('2024-10-19T04:56:29', 'YYYY-MM-DD"T"HH24:MI:SS'), business_date = to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS'), xstore_version = '16.0.5.0.38 - 7.0.36 - 1.54', env_version = null, active_flag = 'true', config_version = null, primary_register_flag = 'true' WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.UPDATE [Device-Registration-1]
 DEBUG [      ] 2024-10-19 04:56:29,083 execute [  0.292 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T04:56:29', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 04:56:29,084 execute [  0.180 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T04:56:29', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 04:56:29,086 execute [  0.205 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T04:56:29', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 04:56:29,087 execute [  0.193 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 ERROR [      ] 2024-10-19 04:57:07,875 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 04:57:07,876 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
 ERROR [      ] 2024-10-19 04:57:07,880 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017104711.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-1]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 04:57:08,127 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 04:57:08,127 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
 ERROR [      ] 2024-10-19 04:57:08,130 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017110705.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-1]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 04:57:08,343 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 04:57:08,343 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
 ERROR [      ] 2024-10-19 04:57:08,346 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017111605.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-1]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 DEBUG [      ] 2024-10-19 04:58:23,422 execute [  0.680 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 05:00:23,432 execute [  0.360 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 05:02:23,444 execute [  1.292 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 05:04:23,453 execute [  0.911 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 05:06:11,951 execute [  0.550 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T05:06:11', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 05:06:23,461 execute [  0.293 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 05:08:23,471 execute [  0.362 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 05:10:23,480 execute [  0.372 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 05:11:11,643 execute [  0.805 ms StorePrimary] SELECT xom_order.organization_id, xom_order.order_id, cust.first_name, cust.last_name, xom_order.order_date, xom_order.status_code, xom_order.order_type, cust.telephone1, xom_order.order_loc_id, xom_order.under_review_flag, CASE WHEN ship_order.order_id is null THEN 'FALSE' ELSE 'TRUE' END as shipping_necessary_flag FROM xom_order LEFT JOIN xom_customer_mod cust ON xom_order.organization_id = cust.organization_id AND xom_order.order_id = cust.order_id LEFT JOIN (SELECT line.organization_id, line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.void_flag = 0 AND (ful.LOC_ID is null OR  UPPER(ful.LOC_ID) <>  UPPER(src.LOC_ID)) GROUP BY line.organization_id, line.order_id) ship_order ON xom_order.organization_id = ship_order.organization_id AND xom_order.order_id = ship_order.order_id WHERE xom_order.organization_id = 1000 AND  UPPER(xom_order.status_code) <> 'SUSPENDED'   AND  ( UPPER(xom_order.order_type) <> 'STANDARD_DELIVERY' ) AND ( EXISTS (SELECT line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.organization_id = xom_order.organization_id AND line.order_id = xom_order.order_id AND  UPPER(src.loc_id) = '110' AND line.void_flag = 0 AND ( UPPER(line.status_code) IN ('POLLED', 'ACCEPTED') OR (( UPPER(line.status_code) = 'RESERVED') AND (ful.loc_id IS NULL OR  UPPER(src.loc_id) <>  UPPER(ful.loc_id)))))  )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 05:11:29,117 execute [  0.485 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 05:11:29,120 execute [  0.428 ms StorePrimary] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 05:11:29,122 execute [  0.270 ms Local] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 05:11:29,126 execute [  0.483 ms StorePrimary] UPDATE ctl_device_registration SET update_date = to_date('2024-10-19T10:11:29', 'YYYY-MM-DD"T"HH24:MI:SS'), update_user_id = '100', ip_address = '10.10.28.83', date_timestamp = to_date('2024-10-19T05:11:29', 'YYYY-MM-DD"T"HH24:MI:SS'), business_date = to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS'), xstore_version = '16.0.5.0.38 - 7.0.36 - 1.54', env_version = null, active_flag = 'true', config_version = null, primary_register_flag = 'true' WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.UPDATE [Device-Registration-1]
 DEBUG [      ] 2024-10-19 05:11:29,131 execute [  1.297 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T05:11:29', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 05:11:29,132 execute [  0.268 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T05:11:29', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 05:11:29,134 execute [  0.210 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T05:11:29', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 05:11:29,136 execute [  0.299 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 ERROR [      ] 2024-10-19 05:12:08,604 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 05:12:08,605 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
 ERROR [      ] 2024-10-19 05:12:08,608 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017104711.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-2]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 05:12:08,863 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 05:12:08,864 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
 ERROR [      ] 2024-10-19 05:12:08,867 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017110705.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-2]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 05:12:09,113 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 05:12:09,114 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
 ERROR [      ] 2024-10-19 05:12:09,116 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017111605.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-2]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 DEBUG [      ] 2024-10-19 05:12:23,489 execute [  0.729 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 05:14:23,496 execute [  0.346 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 05:16:11,977 execute [  0.916 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T05:16:11', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 05:16:23,505 execute [  0.318 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 05:18:23,513 execute [  0.698 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 05:20:23,522 execute [  0.335 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 05:22:23,530 execute [  0.379 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 05:24:23,538 execute [  0.334 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 05:26:11,676 execute [  0.739 ms StorePrimary] SELECT xom_order.organization_id, xom_order.order_id, cust.first_name, cust.last_name, xom_order.order_date, xom_order.status_code, xom_order.order_type, cust.telephone1, xom_order.order_loc_id, xom_order.under_review_flag, CASE WHEN ship_order.order_id is null THEN 'FALSE' ELSE 'TRUE' END as shipping_necessary_flag FROM xom_order LEFT JOIN xom_customer_mod cust ON xom_order.organization_id = cust.organization_id AND xom_order.order_id = cust.order_id LEFT JOIN (SELECT line.organization_id, line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.void_flag = 0 AND (ful.LOC_ID is null OR  UPPER(ful.LOC_ID) <>  UPPER(src.LOC_ID)) GROUP BY line.organization_id, line.order_id) ship_order ON xom_order.organization_id = ship_order.organization_id AND xom_order.order_id = ship_order.order_id WHERE xom_order.organization_id = 1000 AND  UPPER(xom_order.status_code) <> 'SUSPENDED'   AND  ( UPPER(xom_order.order_type) <> 'STANDARD_DELIVERY' ) AND ( EXISTS (SELECT line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.organization_id = xom_order.organization_id AND line.order_id = xom_order.order_id AND  UPPER(src.loc_id) = '110' AND line.void_flag = 0 AND ( UPPER(line.status_code) IN ('POLLED', 'ACCEPTED') OR (( UPPER(line.status_code) = 'RESERVED') AND (ful.loc_id IS NULL OR  UPPER(src.loc_id) <>  UPPER(ful.loc_id)))))  )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 05:26:11,999 execute [  0.301 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T05:26:11', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 05:26:23,545 execute [  0.744 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 05:26:29,161 execute [  1.113 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 05:26:29,165 execute [  0.454 ms StorePrimary] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 05:26:29,168 execute [  0.917 ms Local] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 05:26:29,169 execute [  0.403 ms StorePrimary] UPDATE ctl_device_registration SET update_date = to_date('2024-10-19T10:26:29', 'YYYY-MM-DD"T"HH24:MI:SS'), update_user_id = '100', ip_address = '10.10.28.83', date_timestamp = to_date('2024-10-19T05:26:29', 'YYYY-MM-DD"T"HH24:MI:SS'), business_date = to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS'), xstore_version = '16.0.5.0.38 - 7.0.36 - 1.54', env_version = null, active_flag = 'true', config_version = null, primary_register_flag = 'true' WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.UPDATE [Device-Registration-1]
 DEBUG [      ] 2024-10-19 05:26:29,172 execute [  0.313 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T05:26:29', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 05:26:29,174 execute [  0.192 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T05:26:29', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 05:26:29,175 execute [  0.172 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T05:26:29', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 05:26:29,176 execute [  0.174 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 ERROR [      ] 2024-10-19 05:27:09,409 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 05:27:09,410 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
 ERROR [      ] 2024-10-19 05:27:09,413 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017104711.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-3]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 05:27:09,667 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 05:27:09,667 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
 ERROR [      ] 2024-10-19 05:27:09,671 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017110705.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-3]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 05:27:09,884 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 05:27:09,885 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
 ERROR [      ] 2024-10-19 05:27:09,888 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017111605.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-3]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 DEBUG [      ] 2024-10-19 05:28:23,554 execute [  0.709 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 05:30:23,561 execute [  0.326 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 05:32:23,571 execute [  1.103 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 05:34:23,618 execute [  1.208 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 05:36:12,103 execute [  0.930 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T05:36:12', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 05:36:23,671 execute [  0.332 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 05:38:23,717 execute [  0.342 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 05:40:23,744 execute [  0.350 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 05:41:11,854 execute [  0.745 ms StorePrimary] SELECT xom_order.organization_id, xom_order.order_id, cust.first_name, cust.last_name, xom_order.order_date, xom_order.status_code, xom_order.order_type, cust.telephone1, xom_order.order_loc_id, xom_order.under_review_flag, CASE WHEN ship_order.order_id is null THEN 'FALSE' ELSE 'TRUE' END as shipping_necessary_flag FROM xom_order LEFT JOIN xom_customer_mod cust ON xom_order.organization_id = cust.organization_id AND xom_order.order_id = cust.order_id LEFT JOIN (SELECT line.organization_id, line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.void_flag = 0 AND (ful.LOC_ID is null OR  UPPER(ful.LOC_ID) <>  UPPER(src.LOC_ID)) GROUP BY line.organization_id, line.order_id) ship_order ON xom_order.organization_id = ship_order.organization_id AND xom_order.order_id = ship_order.order_id WHERE xom_order.organization_id = 1000 AND  UPPER(xom_order.status_code) <> 'SUSPENDED'   AND  ( UPPER(xom_order.order_type) <> 'STANDARD_DELIVERY' ) AND ( EXISTS (SELECT line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.organization_id = xom_order.organization_id AND line.order_id = xom_order.order_id AND  UPPER(src.loc_id) = '110' AND line.void_flag = 0 AND ( UPPER(line.status_code) IN ('POLLED', 'ACCEPTED') OR (( UPPER(line.status_code) = 'RESERVED') AND (ful.loc_id IS NULL OR  UPPER(src.loc_id) <>  UPPER(ful.loc_id)))))  )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 05:41:29,350 execute [  0.492 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 05:41:29,352 execute [  0.380 ms StorePrimary] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 05:41:29,354 execute [  0.240 ms Local] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 05:41:29,356 execute [  0.392 ms StorePrimary] UPDATE ctl_device_registration SET update_date = to_date('2024-10-19T10:41:29', 'YYYY-MM-DD"T"HH24:MI:SS'), update_user_id = '100', ip_address = '10.10.28.83', date_timestamp = to_date('2024-10-19T05:41:29', 'YYYY-MM-DD"T"HH24:MI:SS'), business_date = to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS'), xstore_version = '16.0.5.0.38 - 7.0.36 - 1.54', env_version = null, active_flag = 'true', config_version = null, primary_register_flag = 'true' WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.UPDATE [Device-Registration-1]
 DEBUG [      ] 2024-10-19 05:41:29,360 execute [  1.129 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T05:41:29', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 05:41:29,362 execute [  0.227 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T05:41:29', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 05:41:29,364 execute [  0.210 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T05:41:29', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 05:41:29,365 execute [  0.265 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 ERROR [      ] 2024-10-19 05:42:10,329 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 05:42:10,330 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
 ERROR [      ] 2024-10-19 05:42:10,333 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017104711.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-3]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 05:42:10,546 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 05:42:10,547 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
 ERROR [      ] 2024-10-19 05:42:10,550 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017110705.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-3]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 05:42:10,803 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 05:42:10,804 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
 ERROR [      ] 2024-10-19 05:42:10,807 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017111605.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-3]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 DEBUG [      ] 2024-10-19 05:42:23,771 execute [  0.736 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 05:44:23,796 execute [  0.357 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 05:46:12,239 execute [  0.476 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T05:46:12', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 05:46:23,822 execute [  0.923 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 05:48:23,847 execute [  0.356 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 05:50:23,871 execute [  0.341 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 05:52:23,895 execute [  0.360 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 05:54:23,917 execute [  0.367 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 05:56:12,010 execute [  0.765 ms StorePrimary] SELECT xom_order.organization_id, xom_order.order_id, cust.first_name, cust.last_name, xom_order.order_date, xom_order.status_code, xom_order.order_type, cust.telephone1, xom_order.order_loc_id, xom_order.under_review_flag, CASE WHEN ship_order.order_id is null THEN 'FALSE' ELSE 'TRUE' END as shipping_necessary_flag FROM xom_order LEFT JOIN xom_customer_mod cust ON xom_order.organization_id = cust.organization_id AND xom_order.order_id = cust.order_id LEFT JOIN (SELECT line.organization_id, line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.void_flag = 0 AND (ful.LOC_ID is null OR  UPPER(ful.LOC_ID) <>  UPPER(src.LOC_ID)) GROUP BY line.organization_id, line.order_id) ship_order ON xom_order.organization_id = ship_order.organization_id AND xom_order.order_id = ship_order.order_id WHERE xom_order.organization_id = 1000 AND  UPPER(xom_order.status_code) <> 'SUSPENDED'   AND  ( UPPER(xom_order.order_type) <> 'STANDARD_DELIVERY' ) AND ( EXISTS (SELECT line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.organization_id = xom_order.organization_id AND line.order_id = xom_order.order_id AND  UPPER(src.loc_id) = '110' AND line.void_flag = 0 AND ( UPPER(line.status_code) IN ('POLLED', 'ACCEPTED') OR (( UPPER(line.status_code) = 'RESERVED') AND (ful.loc_id IS NULL OR  UPPER(src.loc_id) <>  UPPER(ful.loc_id)))))  )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 05:56:12,342 execute [  0.653 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T05:56:12', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 05:56:23,941 execute [  0.697 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 05:56:29,513 execute [  1.127 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 05:56:29,517 execute [  0.439 ms StorePrimary] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 05:56:29,519 execute [  0.280 ms Local] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 05:56:29,521 execute [  0.418 ms StorePrimary] UPDATE ctl_device_registration SET update_date = to_date('2024-10-19T10:56:29', 'YYYY-MM-DD"T"HH24:MI:SS'), update_user_id = '100', ip_address = '10.10.28.83', date_timestamp = to_date('2024-10-19T05:56:29', 'YYYY-MM-DD"T"HH24:MI:SS'), business_date = to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS'), xstore_version = '16.0.5.0.38 - 7.0.36 - 1.54', env_version = null, active_flag = 'true', config_version = null, primary_register_flag = 'true' WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.UPDATE [Device-Registration-1]
 DEBUG [      ] 2024-10-19 05:56:29,523 execute [  0.319 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T05:56:29', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 05:56:29,525 execute [  0.168 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T05:56:29', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 05:56:29,527 execute [  0.170 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T05:56:29', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 05:56:29,528 execute [  0.197 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 ERROR [      ] 2024-10-19 05:57:11,216 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 05:57:11,216 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
 ERROR [      ] 2024-10-19 05:57:11,219 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017104711.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-2]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 05:57:11,430 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 05:57:11,431 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
 ERROR [      ] 2024-10-19 05:57:11,434 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017110705.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-2]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 05:57:11,682 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 05:57:11,683 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
 ERROR [      ] 2024-10-19 05:57:11,685 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017111605.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-2]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 DEBUG [      ] 2024-10-19 05:58:23,963 execute [  0.694 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 06:00:23,986 execute [  0.314 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 06:02:24,010 execute [  1.174 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 06:04:24,031 execute [  0.376 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 06:06:12,435 execute [  0.918 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T06:06:12', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 06:06:24,052 execute [  0.707 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 06:08:24,072 execute [  0.387 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 06:10:24,092 execute [  0.385 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 06:11:12,139 execute [  0.743 ms StorePrimary] SELECT xom_order.organization_id, xom_order.order_id, cust.first_name, cust.last_name, xom_order.order_date, xom_order.status_code, xom_order.order_type, cust.telephone1, xom_order.order_loc_id, xom_order.under_review_flag, CASE WHEN ship_order.order_id is null THEN 'FALSE' ELSE 'TRUE' END as shipping_necessary_flag FROM xom_order LEFT JOIN xom_customer_mod cust ON xom_order.organization_id = cust.organization_id AND xom_order.order_id = cust.order_id LEFT JOIN (SELECT line.organization_id, line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.void_flag = 0 AND (ful.LOC_ID is null OR  UPPER(ful.LOC_ID) <>  UPPER(src.LOC_ID)) GROUP BY line.organization_id, line.order_id) ship_order ON xom_order.organization_id = ship_order.organization_id AND xom_order.order_id = ship_order.order_id WHERE xom_order.organization_id = 1000 AND  UPPER(xom_order.status_code) <> 'SUSPENDED'   AND  ( UPPER(xom_order.order_type) <> 'STANDARD_DELIVERY' ) AND ( EXISTS (SELECT line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.organization_id = xom_order.organization_id AND line.order_id = xom_order.order_id AND  UPPER(src.loc_id) = '110' AND line.void_flag = 0 AND ( UPPER(line.status_code) IN ('POLLED', 'ACCEPTED') OR (( UPPER(line.status_code) = 'RESERVED') AND (ful.loc_id IS NULL OR  UPPER(src.loc_id) <>  UPPER(ful.loc_id)))))  )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 06:11:29,649 execute [  0.494 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 06:11:29,652 execute [  0.417 ms StorePrimary] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 06:11:29,654 execute [  0.284 ms Local] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 06:11:29,655 execute [  0.415 ms StorePrimary] UPDATE ctl_device_registration SET update_date = to_date('2024-10-19T11:11:29', 'YYYY-MM-DD"T"HH24:MI:SS'), update_user_id = '100', ip_address = '10.10.28.83', date_timestamp = to_date('2024-10-19T06:11:29', 'YYYY-MM-DD"T"HH24:MI:SS'), business_date = to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS'), xstore_version = '16.0.5.0.38 - 7.0.36 - 1.54', env_version = null, active_flag = 'true', config_version = null, primary_register_flag = 'true' WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.UPDATE [Device-Registration-1]
 DEBUG [      ] 2024-10-19 06:11:29,662 execute [  1.070 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T06:11:29', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 06:11:29,664 execute [  0.240 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T06:11:29', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 06:11:29,665 execute [  0.194 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T06:11:29', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 06:11:29,667 execute [  0.316 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 ERROR [      ] 2024-10-19 06:12:12,087 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 06:12:12,088 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
 ERROR [      ] 2024-10-19 06:12:12,092 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017104711.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-2]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 06:12:12,346 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 06:12:12,346 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
 ERROR [      ] 2024-10-19 06:12:12,349 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017110705.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-2]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 06:12:12,597 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 06:12:12,598 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
 ERROR [      ] 2024-10-19 06:12:12,600 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017111605.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-2]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 DEBUG [      ] 2024-10-19 06:12:24,112 execute [  0.781 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 06:14:24,131 execute [  0.363 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 06:16:12,517 execute [  0.834 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T06:16:12', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 06:16:24,149 execute [  0.686 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 06:18:24,167 execute [  0.366 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 06:20:24,184 execute [  0.342 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 06:22:24,203 execute [  0.355 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 06:24:24,221 execute [  0.382 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 06:26:12,249 execute [  0.730 ms StorePrimary] SELECT xom_order.organization_id, xom_order.order_id, cust.first_name, cust.last_name, xom_order.order_date, xom_order.status_code, xom_order.order_type, cust.telephone1, xom_order.order_loc_id, xom_order.under_review_flag, CASE WHEN ship_order.order_id is null THEN 'FALSE' ELSE 'TRUE' END as shipping_necessary_flag FROM xom_order LEFT JOIN xom_customer_mod cust ON xom_order.organization_id = cust.organization_id AND xom_order.order_id = cust.order_id LEFT JOIN (SELECT line.organization_id, line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.void_flag = 0 AND (ful.LOC_ID is null OR  UPPER(ful.LOC_ID) <>  UPPER(src.LOC_ID)) GROUP BY line.organization_id, line.order_id) ship_order ON xom_order.organization_id = ship_order.organization_id AND xom_order.order_id = ship_order.order_id WHERE xom_order.organization_id = 1000 AND  UPPER(xom_order.status_code) <> 'SUSPENDED'   AND  ( UPPER(xom_order.order_type) <> 'STANDARD_DELIVERY' ) AND ( EXISTS (SELECT line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.organization_id = xom_order.organization_id AND line.order_id = xom_order.order_id AND  UPPER(src.loc_id) = '110' AND line.void_flag = 0 AND ( UPPER(line.status_code) IN ('POLLED', 'ACCEPTED') OR (( UPPER(line.status_code) = 'RESERVED') AND (ful.loc_id IS NULL OR  UPPER(src.loc_id) <>  UPPER(ful.loc_id)))))  )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 06:26:12,588 execute [  0.718 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T06:26:12', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 06:26:24,238 execute [  0.752 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 06:26:29,768 execute [  1.139 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 06:26:29,771 execute [  0.465 ms StorePrimary] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 06:26:29,773 execute [  0.265 ms Local] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 06:26:29,775 execute [  0.403 ms StorePrimary] UPDATE ctl_device_registration SET update_date = to_date('2024-10-19T11:26:29', 'YYYY-MM-DD"T"HH24:MI:SS'), update_user_id = '100', ip_address = '10.10.28.83', date_timestamp = to_date('2024-10-19T06:26:29', 'YYYY-MM-DD"T"HH24:MI:SS'), business_date = to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS'), xstore_version = '16.0.5.0.38 - 7.0.36 - 1.54', env_version = null, active_flag = 'true', config_version = null, primary_register_flag = 'true' WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.UPDATE [Device-Registration-1]
 DEBUG [      ] 2024-10-19 06:26:29,778 execute [  0.318 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T06:26:29', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 06:26:29,780 execute [  0.248 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T06:26:29', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 06:26:29,781 execute [  0.206 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T06:26:29', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 06:26:29,783 execute [  0.177 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 ERROR [      ] 2024-10-19 06:27:13,026 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 06:27:13,027 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
 ERROR [      ] 2024-10-19 06:27:13,030 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017104711.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-1]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 06:27:13,243 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 06:27:13,244 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
 ERROR [      ] 2024-10-19 06:27:13,247 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017110705.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-1]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 06:27:13,497 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 06:27:13,498 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
 ERROR [      ] 2024-10-19 06:27:13,501 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017111605.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-1]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 DEBUG [      ] 2024-10-19 06:28:24,256 execute [  0.720 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 06:30:24,272 execute [  0.384 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 06:32:24,291 execute [  0.944 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 06:34:24,307 execute [  0.938 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 06:36:12,656 execute [  0.509 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T06:36:12', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 06:36:24,322 execute [  0.349 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 06:38:24,340 execute [  0.347 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 06:40:24,353 execute [  0.332 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 06:41:12,340 execute [  0.779 ms StorePrimary] SELECT xom_order.organization_id, xom_order.order_id, cust.first_name, cust.last_name, xom_order.order_date, xom_order.status_code, xom_order.order_type, cust.telephone1, xom_order.order_loc_id, xom_order.under_review_flag, CASE WHEN ship_order.order_id is null THEN 'FALSE' ELSE 'TRUE' END as shipping_necessary_flag FROM xom_order LEFT JOIN xom_customer_mod cust ON xom_order.organization_id = cust.organization_id AND xom_order.order_id = cust.order_id LEFT JOIN (SELECT line.organization_id, line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.void_flag = 0 AND (ful.LOC_ID is null OR  UPPER(ful.LOC_ID) <>  UPPER(src.LOC_ID)) GROUP BY line.organization_id, line.order_id) ship_order ON xom_order.organization_id = ship_order.organization_id AND xom_order.order_id = ship_order.order_id WHERE xom_order.organization_id = 1000 AND  UPPER(xom_order.status_code) <> 'SUSPENDED'   AND  ( UPPER(xom_order.order_type) <> 'STANDARD_DELIVERY' ) AND ( EXISTS (SELECT line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.organization_id = xom_order.organization_id AND line.order_id = xom_order.order_id AND  UPPER(src.loc_id) = '110' AND line.void_flag = 0 AND ( UPPER(line.status_code) IN ('POLLED', 'ACCEPTED') OR (( UPPER(line.status_code) = 'RESERVED') AND (ful.loc_id IS NULL OR  UPPER(src.loc_id) <>  UPPER(ful.loc_id)))))  )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 06:41:29,867 execute [  0.491 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 06:41:29,870 execute [  0.394 ms StorePrimary] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 06:41:29,871 execute [  0.240 ms Local] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 06:41:29,873 execute [  0.417 ms StorePrimary] UPDATE ctl_device_registration SET update_date = to_date('2024-10-19T11:41:29', 'YYYY-MM-DD"T"HH24:MI:SS'), update_user_id = '100', ip_address = '10.10.28.83', date_timestamp = to_date('2024-10-19T06:41:29', 'YYYY-MM-DD"T"HH24:MI:SS'), business_date = to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS'), xstore_version = '16.0.5.0.38 - 7.0.36 - 1.54', env_version = null, active_flag = 'true', config_version = null, primary_register_flag = 'true' WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.UPDATE [Device-Registration-1]
 DEBUG [      ] 2024-10-19 06:41:29,877 execute [  1.314 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T06:41:29', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 06:41:29,879 execute [  0.246 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T06:41:29', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 06:41:29,881 execute [  0.228 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T06:41:29', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 06:41:29,882 execute [  0.288 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 ERROR [      ] 2024-10-19 06:42:13,872 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 06:42:13,872 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
 ERROR [      ] 2024-10-19 06:42:13,876 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017104711.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-2]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 06:42:14,126 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 06:42:14,127 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
 ERROR [      ] 2024-10-19 06:42:14,130 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017110705.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-2]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 06:42:14,376 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 06:42:14,377 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
 ERROR [      ] 2024-10-19 06:42:14,380 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017111605.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-2]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 DEBUG [      ] 2024-10-19 06:42:24,368 execute [  0.709 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 06:44:24,384 execute [  1.021 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 06:46:12,714 execute [  0.535 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T06:46:12', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 06:46:24,398 execute [  0.321 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 06:48:24,412 execute [  0.349 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 06:50:24,426 execute [  0.377 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 06:52:24,439 execute [  0.397 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 06:54:24,455 execute [  0.345 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 06:56:12,418 execute [  0.720 ms StorePrimary] SELECT xom_order.organization_id, xom_order.order_id, cust.first_name, cust.last_name, xom_order.order_date, xom_order.status_code, xom_order.order_type, cust.telephone1, xom_order.order_loc_id, xom_order.under_review_flag, CASE WHEN ship_order.order_id is null THEN 'FALSE' ELSE 'TRUE' END as shipping_necessary_flag FROM xom_order LEFT JOIN xom_customer_mod cust ON xom_order.organization_id = cust.organization_id AND xom_order.order_id = cust.order_id LEFT JOIN (SELECT line.organization_id, line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.void_flag = 0 AND (ful.LOC_ID is null OR  UPPER(ful.LOC_ID) <>  UPPER(src.LOC_ID)) GROUP BY line.organization_id, line.order_id) ship_order ON xom_order.organization_id = ship_order.organization_id AND xom_order.order_id = ship_order.order_id WHERE xom_order.organization_id = 1000 AND  UPPER(xom_order.status_code) <> 'SUSPENDED'   AND  ( UPPER(xom_order.order_type) <> 'STANDARD_DELIVERY' ) AND ( EXISTS (SELECT line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.organization_id = xom_order.organization_id AND line.order_id = xom_order.order_id AND  UPPER(src.loc_id) = '110' AND line.void_flag = 0 AND ( UPPER(line.status_code) IN ('POLLED', 'ACCEPTED') OR (( UPPER(line.status_code) = 'RESERVED') AND (ful.loc_id IS NULL OR  UPPER(src.loc_id) <>  UPPER(ful.loc_id)))))  )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 06:56:12,766 execute [  0.658 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T06:56:12', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 06:56:24,468 execute [  0.815 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 06:56:29,952 execute [  1.108 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 06:56:29,955 execute [  0.393 ms StorePrimary] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 06:56:29,957 execute [  0.251 ms Local] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 06:56:29,959 execute [  0.397 ms StorePrimary] UPDATE ctl_device_registration SET update_date = to_date('2024-10-19T11:56:29', 'YYYY-MM-DD"T"HH24:MI:SS'), update_user_id = '100', ip_address = '10.10.28.83', date_timestamp = to_date('2024-10-19T06:56:29', 'YYYY-MM-DD"T"HH24:MI:SS'), business_date = to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS'), xstore_version = '16.0.5.0.38 - 7.0.36 - 1.54', env_version = null, active_flag = 'true', config_version = null, primary_register_flag = 'true' WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.UPDATE [Device-Registration-1]
 DEBUG [      ] 2024-10-19 06:56:29,963 execute [  1.706 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T06:56:29', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 06:56:29,964 execute [  0.189 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T06:56:29', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 06:56:29,966 execute [  0.180 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T06:56:29', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 06:56:29,967 execute [  0.158 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 ERROR [      ] 2024-10-19 06:57:14,772 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 06:57:14,773 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
 ERROR [      ] 2024-10-19 06:57:14,776 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017104711.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-2]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 06:57:15,020 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 06:57:15,021 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
 ERROR [      ] 2024-10-19 06:57:15,023 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017110705.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-2]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 06:57:15,275 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 06:57:15,276 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
 ERROR [      ] 2024-10-19 06:57:15,279 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017111605.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-2]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 DEBUG [      ] 2024-10-19 06:58:24,480 execute [  0.346 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 07:00:24,494 execute [  0.762 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 07:02:24,509 execute [  1.001 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 07:04:24,523 execute [  1.311 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 07:06:12,816 execute [  0.548 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T07:06:12', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 07:06:24,536 execute [  0.729 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 07:08:24,550 execute [  0.341 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 07:10:24,562 execute [  0.407 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 07:11:12,485 execute [  0.729 ms StorePrimary] SELECT xom_order.organization_id, xom_order.order_id, cust.first_name, cust.last_name, xom_order.order_date, xom_order.status_code, xom_order.order_type, cust.telephone1, xom_order.order_loc_id, xom_order.under_review_flag, CASE WHEN ship_order.order_id is null THEN 'FALSE' ELSE 'TRUE' END as shipping_necessary_flag FROM xom_order LEFT JOIN xom_customer_mod cust ON xom_order.organization_id = cust.organization_id AND xom_order.order_id = cust.order_id LEFT JOIN (SELECT line.organization_id, line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.void_flag = 0 AND (ful.LOC_ID is null OR  UPPER(ful.LOC_ID) <>  UPPER(src.LOC_ID)) GROUP BY line.organization_id, line.order_id) ship_order ON xom_order.organization_id = ship_order.organization_id AND xom_order.order_id = ship_order.order_id WHERE xom_order.organization_id = 1000 AND  UPPER(xom_order.status_code) <> 'SUSPENDED'   AND  ( UPPER(xom_order.order_type) <> 'STANDARD_DELIVERY' ) AND ( EXISTS (SELECT line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.organization_id = xom_order.organization_id AND line.order_id = xom_order.order_id AND  UPPER(src.loc_id) = '110' AND line.void_flag = 0 AND ( UPPER(line.status_code) IN ('POLLED', 'ACCEPTED') OR (( UPPER(line.status_code) = 'RESERVED') AND (ful.loc_id IS NULL OR  UPPER(src.loc_id) <>  UPPER(ful.loc_id)))))  )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 07:11:30,027 execute [  0.504 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 07:11:30,030 execute [  0.455 ms StorePrimary] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 07:11:30,032 execute [  0.325 ms Local] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 07:11:30,034 execute [  0.465 ms StorePrimary] UPDATE ctl_device_registration SET update_date = to_date('2024-10-19T12:11:30', 'YYYY-MM-DD"T"HH24:MI:SS'), update_user_id = '100', ip_address = '10.10.28.83', date_timestamp = to_date('2024-10-19T07:11:30', 'YYYY-MM-DD"T"HH24:MI:SS'), business_date = to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS'), xstore_version = '16.0.5.0.38 - 7.0.36 - 1.54', env_version = null, active_flag = 'true', config_version = null, primary_register_flag = 'true' WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.UPDATE [Device-Registration-1]
 DEBUG [      ] 2024-10-19 07:11:30,038 execute [  1.052 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T07:11:30', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 07:11:30,040 execute [  0.236 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T07:11:30', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 07:11:30,042 execute [  0.244 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T07:11:30', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 07:11:30,043 execute [  0.311 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 ERROR [      ] 2024-10-19 07:12:15,655 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 07:12:15,656 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
 ERROR [      ] 2024-10-19 07:12:15,659 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017104711.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-1]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 07:12:15,922 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 07:12:15,923 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
 ERROR [      ] 2024-10-19 07:12:15,927 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017110705.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-1]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 07:12:16,180 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 07:12:16,181 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
 ERROR [      ] 2024-10-19 07:12:16,184 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017111605.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-1]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 DEBUG [      ] 2024-10-19 07:12:24,574 execute [  0.711 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 07:14:24,587 execute [  0.416 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 07:16:12,861 execute [  0.609 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T07:16:12', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 07:16:24,600 execute [  0.823 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 07:18:24,610 execute [  0.390 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 07:20:24,621 execute [  0.324 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 07:22:24,634 execute [  0.396 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 07:24:24,645 execute [  0.353 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 07:26:12,543 execute [  0.786 ms StorePrimary] SELECT xom_order.organization_id, xom_order.order_id, cust.first_name, cust.last_name, xom_order.order_date, xom_order.status_code, xom_order.order_type, cust.telephone1, xom_order.order_loc_id, xom_order.under_review_flag, CASE WHEN ship_order.order_id is null THEN 'FALSE' ELSE 'TRUE' END as shipping_necessary_flag FROM xom_order LEFT JOIN xom_customer_mod cust ON xom_order.organization_id = cust.organization_id AND xom_order.order_id = cust.order_id LEFT JOIN (SELECT line.organization_id, line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.void_flag = 0 AND (ful.LOC_ID is null OR  UPPER(ful.LOC_ID) <>  UPPER(src.LOC_ID)) GROUP BY line.organization_id, line.order_id) ship_order ON xom_order.organization_id = ship_order.organization_id AND xom_order.order_id = ship_order.order_id WHERE xom_order.organization_id = 1000 AND  UPPER(xom_order.status_code) <> 'SUSPENDED'   AND  ( UPPER(xom_order.order_type) <> 'STANDARD_DELIVERY' ) AND ( EXISTS (SELECT line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.organization_id = xom_order.organization_id AND line.order_id = xom_order.order_id AND  UPPER(src.loc_id) = '110' AND line.void_flag = 0 AND ( UPPER(line.status_code) IN ('POLLED', 'ACCEPTED') OR (( UPPER(line.status_code) = 'RESERVED') AND (ful.loc_id IS NULL OR  UPPER(src.loc_id) <>  UPPER(ful.loc_id)))))  )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 07:26:12,902 execute [  0.771 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T07:26:12', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 07:26:24,656 execute [  0.719 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 07:26:30,094 execute [  1.537 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 07:26:30,097 execute [  0.402 ms StorePrimary] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 07:26:30,099 execute [  0.245 ms Local] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 07:26:30,102 execute [  0.523 ms StorePrimary] UPDATE ctl_device_registration SET update_date = to_date('2024-10-19T12:26:30', 'YYYY-MM-DD"T"HH24:MI:SS'), update_user_id = '100', ip_address = '10.10.28.83', date_timestamp = to_date('2024-10-19T07:26:30', 'YYYY-MM-DD"T"HH24:MI:SS'), business_date = to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS'), xstore_version = '16.0.5.0.38 - 7.0.36 - 1.54', env_version = null, active_flag = 'true', config_version = null, primary_register_flag = 'true' WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.UPDATE [Device-Registration-1]
 DEBUG [      ] 2024-10-19 07:26:30,104 execute [  0.315 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T07:26:30', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 07:26:30,105 execute [  0.210 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T07:26:30', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 07:26:30,108 execute [  0.197 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T07:26:30', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 07:26:30,108 execute [  0.175 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 ERROR [      ] 2024-10-19 07:27:16,536 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 07:27:16,537 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
 ERROR [      ] 2024-10-19 07:27:16,541 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017104711.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-2]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 07:27:16,794 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 07:27:16,794 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
 ERROR [      ] 2024-10-19 07:27:16,797 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017110705.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-2]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 07:27:17,049 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 07:27:17,050 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
 ERROR [      ] 2024-10-19 07:27:17,053 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017111605.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-2]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 DEBUG [      ] 2024-10-19 07:28:24,668 execute [  0.728 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 07:30:24,679 execute [  0.711 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 07:32:24,692 execute [  1.077 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 07:34:24,702 execute [  0.910 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 07:36:12,941 execute [  0.585 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T07:36:12', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 07:36:24,713 execute [  0.376 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 07:38:24,724 execute [  0.408 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 07:40:24,735 execute [  0.347 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 07:41:12,596 execute [  0.766 ms StorePrimary] SELECT xom_order.organization_id, xom_order.order_id, cust.first_name, cust.last_name, xom_order.order_date, xom_order.status_code, xom_order.order_type, cust.telephone1, xom_order.order_loc_id, xom_order.under_review_flag, CASE WHEN ship_order.order_id is null THEN 'FALSE' ELSE 'TRUE' END as shipping_necessary_flag FROM xom_order LEFT JOIN xom_customer_mod cust ON xom_order.organization_id = cust.organization_id AND xom_order.order_id = cust.order_id LEFT JOIN (SELECT line.organization_id, line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.void_flag = 0 AND (ful.LOC_ID is null OR  UPPER(ful.LOC_ID) <>  UPPER(src.LOC_ID)) GROUP BY line.organization_id, line.order_id) ship_order ON xom_order.organization_id = ship_order.organization_id AND xom_order.order_id = ship_order.order_id WHERE xom_order.organization_id = 1000 AND  UPPER(xom_order.status_code) <> 'SUSPENDED'   AND  ( UPPER(xom_order.order_type) <> 'STANDARD_DELIVERY' ) AND ( EXISTS (SELECT line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.organization_id = xom_order.organization_id AND line.order_id = xom_order.order_id AND  UPPER(src.loc_id) = '110' AND line.void_flag = 0 AND ( UPPER(line.status_code) IN ('POLLED', 'ACCEPTED') OR (( UPPER(line.status_code) = 'RESERVED') AND (ful.loc_id IS NULL OR  UPPER(src.loc_id) <>  UPPER(ful.loc_id)))))  )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 07:41:30,152 execute [  0.539 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 07:41:30,155 execute [  0.463 ms StorePrimary] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 07:41:30,158 execute [  0.326 ms Local] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 07:41:30,161 execute [  0.505 ms StorePrimary] UPDATE ctl_device_registration SET update_date = to_date('2024-10-19T12:41:30', 'YYYY-MM-DD"T"HH24:MI:SS'), update_user_id = '100', ip_address = '10.10.28.83', date_timestamp = to_date('2024-10-19T07:41:30', 'YYYY-MM-DD"T"HH24:MI:SS'), business_date = to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS'), xstore_version = '16.0.5.0.38 - 7.0.36 - 1.54', env_version = null, active_flag = 'true', config_version = null, primary_register_flag = 'true' WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.UPDATE [Device-Registration-1]
 DEBUG [      ] 2024-10-19 07:41:30,166 execute [  1.185 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T07:41:30', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 07:41:30,168 execute [  0.290 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T07:41:30', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 07:41:30,170 execute [  0.297 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T07:41:30', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 07:41:30,172 execute [  0.363 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 ERROR [      ] 2024-10-19 07:42:17,394 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 07:42:17,395 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
 ERROR [      ] 2024-10-19 07:42:17,398 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017104711.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-3]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 07:42:17,668 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 07:42:17,669 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
 ERROR [      ] 2024-10-19 07:42:17,672 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017110705.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-3]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 07:42:17,891 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 07:42:17,892 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
 ERROR [      ] 2024-10-19 07:42:17,895 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017111605.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-3]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 DEBUG [      ] 2024-10-19 07:42:24,746 execute [  0.940 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 07:44:24,757 execute [  0.390 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 07:46:12,978 execute [  0.637 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T07:46:12', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 07:46:24,767 execute [  0.825 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 07:48:24,777 execute [  0.435 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 07:50:24,801 execute [  0.352 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 07:52:24,835 execute [  0.376 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 07:54:24,868 execute [  0.437 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 07:56:12,721 execute [  0.931 ms StorePrimary] SELECT xom_order.organization_id, xom_order.order_id, cust.first_name, cust.last_name, xom_order.order_date, xom_order.status_code, xom_order.order_type, cust.telephone1, xom_order.order_loc_id, xom_order.under_review_flag, CASE WHEN ship_order.order_id is null THEN 'FALSE' ELSE 'TRUE' END as shipping_necessary_flag FROM xom_order LEFT JOIN xom_customer_mod cust ON xom_order.organization_id = cust.organization_id AND xom_order.order_id = cust.order_id LEFT JOIN (SELECT line.organization_id, line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.void_flag = 0 AND (ful.LOC_ID is null OR  UPPER(ful.LOC_ID) <>  UPPER(src.LOC_ID)) GROUP BY line.organization_id, line.order_id) ship_order ON xom_order.organization_id = ship_order.organization_id AND xom_order.order_id = ship_order.order_id WHERE xom_order.organization_id = 1000 AND  UPPER(xom_order.status_code) <> 'SUSPENDED'   AND  ( UPPER(xom_order.order_type) <> 'STANDARD_DELIVERY' ) AND ( EXISTS (SELECT line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.organization_id = xom_order.organization_id AND line.order_id = xom_order.order_id AND  UPPER(src.loc_id) = '110' AND line.void_flag = 0 AND ( UPPER(line.status_code) IN ('POLLED', 'ACCEPTED') OR (( UPPER(line.status_code) = 'RESERVED') AND (ful.loc_id IS NULL OR  UPPER(src.loc_id) <>  UPPER(ful.loc_id)))))  )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 07:56:13,089 execute [  0.756 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T07:56:13', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 07:56:24,899 execute [  0.767 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 07:56:30,292 execute [  1.125 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 07:56:30,295 execute [  0.466 ms StorePrimary] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 07:56:30,299 execute [  0.981 ms Local] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 07:56:30,301 execute [  0.591 ms StorePrimary] UPDATE ctl_device_registration SET update_date = to_date('2024-10-19T12:56:30', 'YYYY-MM-DD"T"HH24:MI:SS'), update_user_id = '100', ip_address = '10.10.28.83', date_timestamp = to_date('2024-10-19T07:56:30', 'YYYY-MM-DD"T"HH24:MI:SS'), business_date = to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS'), xstore_version = '16.0.5.0.38 - 7.0.36 - 1.54', env_version = null, active_flag = 'true', config_version = null, primary_register_flag = 'true' WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.UPDATE [Device-Registration-1]
 DEBUG [      ] 2024-10-19 07:56:30,304 execute [  0.342 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T07:56:30', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 07:56:30,305 execute [  0.209 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T07:56:30', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 07:56:30,307 execute [  0.192 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T07:56:30', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 07:56:30,308 execute [  0.195 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 ERROR [      ] 2024-10-19 07:57:18,302 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 07:57:18,303 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
 ERROR [      ] 2024-10-19 07:57:18,306 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017104711.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-1]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 07:57:18,531 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 07:57:18,532 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
 ERROR [      ] 2024-10-19 07:57:18,535 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017110705.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-1]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 07:57:18,798 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 07:57:18,799 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
 ERROR [      ] 2024-10-19 07:57:18,802 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017111605.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-1]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 DEBUG [      ] 2024-10-19 07:58:24,931 execute [  0.352 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 08:00:24,961 execute [  0.870 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 08:02:24,992 execute [  0.997 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 08:04:25,022 execute [  0.927 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 08:06:13,219 execute [  0.526 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T08:06:13', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 08:06:25,050 execute [  0.366 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 08:08:25,077 execute [  0.418 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 08:10:25,107 execute [  0.385 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 08:11:12,906 execute [  0.830 ms StorePrimary] SELECT xom_order.organization_id, xom_order.order_id, cust.first_name, cust.last_name, xom_order.order_date, xom_order.status_code, xom_order.order_type, cust.telephone1, xom_order.order_loc_id, xom_order.under_review_flag, CASE WHEN ship_order.order_id is null THEN 'FALSE' ELSE 'TRUE' END as shipping_necessary_flag FROM xom_order LEFT JOIN xom_customer_mod cust ON xom_order.organization_id = cust.organization_id AND xom_order.order_id = cust.order_id LEFT JOIN (SELECT line.organization_id, line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.void_flag = 0 AND (ful.LOC_ID is null OR  UPPER(ful.LOC_ID) <>  UPPER(src.LOC_ID)) GROUP BY line.organization_id, line.order_id) ship_order ON xom_order.organization_id = ship_order.organization_id AND xom_order.order_id = ship_order.order_id WHERE xom_order.organization_id = 1000 AND  UPPER(xom_order.status_code) <> 'SUSPENDED'   AND  ( UPPER(xom_order.order_type) <> 'STANDARD_DELIVERY' ) AND ( EXISTS (SELECT line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.organization_id = xom_order.organization_id AND line.order_id = xom_order.order_id AND  UPPER(src.loc_id) = '110' AND line.void_flag = 0 AND ( UPPER(line.status_code) IN ('POLLED', 'ACCEPTED') OR (( UPPER(line.status_code) = 'RESERVED') AND (ful.loc_id IS NULL OR  UPPER(src.loc_id) <>  UPPER(ful.loc_id)))))  )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 08:11:30,485 execute [  0.523 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 08:11:30,488 execute [  0.481 ms StorePrimary] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 08:11:30,490 execute [  0.335 ms Local] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 08:11:30,494 execute [  2.281 ms StorePrimary] UPDATE ctl_device_registration SET update_date = to_date('2024-10-19T13:11:30', 'YYYY-MM-DD"T"HH24:MI:SS'), update_user_id = '100', ip_address = '10.10.28.83', date_timestamp = to_date('2024-10-19T08:11:30', 'YYYY-MM-DD"T"HH24:MI:SS'), business_date = to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS'), xstore_version = '16.0.5.0.38 - 7.0.36 - 1.54', env_version = null, active_flag = 'true', config_version = null, primary_register_flag = 'true' WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.UPDATE [Device-Registration-1]
 DEBUG [      ] 2024-10-19 08:11:30,499 execute [  0.787 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T08:11:30', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 08:11:30,501 execute [  0.253 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T08:11:30', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 08:11:30,503 execute [  0.231 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T08:11:30', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 08:11:30,504 execute [  0.282 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 ERROR [      ] 2024-10-19 08:12:19,300 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 08:12:19,301 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
 ERROR [      ] 2024-10-19 08:12:19,305 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017104711.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-4]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 08:12:19,570 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 08:12:19,571 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
 ERROR [      ] 2024-10-19 08:12:19,574 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017110705.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-4]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 08:12:19,788 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 08:12:19,788 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
 ERROR [      ] 2024-10-19 08:12:19,791 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017111605.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-4]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 DEBUG [      ] 2024-10-19 08:12:25,135 execute [  0.720 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 08:14:25,161 execute [  0.436 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 08:16:13,334 execute [  0.512 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T08:16:13', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 08:16:25,186 execute [  1.150 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 08:18:25,212 execute [  0.368 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 08:20:25,239 execute [  0.355 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 08:22:25,263 execute [  0.383 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 08:24:25,286 execute [  0.397 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 08:26:13,059 execute [  0.741 ms StorePrimary] SELECT xom_order.organization_id, xom_order.order_id, cust.first_name, cust.last_name, xom_order.order_date, xom_order.status_code, xom_order.order_type, cust.telephone1, xom_order.order_loc_id, xom_order.under_review_flag, CASE WHEN ship_order.order_id is null THEN 'FALSE' ELSE 'TRUE' END as shipping_necessary_flag FROM xom_order LEFT JOIN xom_customer_mod cust ON xom_order.organization_id = cust.organization_id AND xom_order.order_id = cust.order_id LEFT JOIN (SELECT line.organization_id, line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.void_flag = 0 AND (ful.LOC_ID is null OR  UPPER(ful.LOC_ID) <>  UPPER(src.LOC_ID)) GROUP BY line.organization_id, line.order_id) ship_order ON xom_order.organization_id = ship_order.organization_id AND xom_order.order_id = ship_order.order_id WHERE xom_order.organization_id = 1000 AND  UPPER(xom_order.status_code) <> 'SUSPENDED'   AND  ( UPPER(xom_order.order_type) <> 'STANDARD_DELIVERY' ) AND ( EXISTS (SELECT line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.organization_id = xom_order.organization_id AND line.order_id = xom_order.order_id AND  UPPER(src.loc_id) = '110' AND line.void_flag = 0 AND ( UPPER(line.status_code) IN ('POLLED', 'ACCEPTED') OR (( UPPER(line.status_code) = 'RESERVED') AND (ful.loc_id IS NULL OR  UPPER(src.loc_id) <>  UPPER(ful.loc_id)))))  )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 08:26:13,434 execute [  0.683 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T08:26:13', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 08:26:25,309 execute [  0.713 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 08:26:30,649 execute [  1.334 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 08:26:30,652 execute [  0.529 ms StorePrimary] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 08:26:30,654 execute [  0.327 ms Local] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 08:26:30,656 execute [  0.452 ms StorePrimary] UPDATE ctl_device_registration SET update_date = to_date('2024-10-19T13:26:30', 'YYYY-MM-DD"T"HH24:MI:SS'), update_user_id = '100', ip_address = '10.10.28.83', date_timestamp = to_date('2024-10-19T08:26:30', 'YYYY-MM-DD"T"HH24:MI:SS'), business_date = to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS'), xstore_version = '16.0.5.0.38 - 7.0.36 - 1.54', env_version = null, active_flag = 'true', config_version = null, primary_register_flag = 'true' WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.UPDATE [Device-Registration-1]
 DEBUG [      ] 2024-10-19 08:26:30,658 execute [  0.333 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T08:26:30', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 08:26:30,660 execute [  0.202 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T08:26:30', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 08:26:30,662 execute [  0.194 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T08:26:30', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 08:26:30,663 execute [  0.176 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 ERROR [      ] 2024-10-19 08:27:20,253 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 08:27:20,254 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
 ERROR [      ] 2024-10-19 08:27:20,258 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017104711.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-1]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 08:27:20,481 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 08:27:20,483 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
 ERROR [      ] 2024-10-19 08:27:20,486 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017110705.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-1]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 08:27:20,772 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 08:27:20,773 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
 ERROR [      ] 2024-10-19 08:27:20,776 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017111605.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-1]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 DEBUG [      ] 2024-10-19 08:28:25,331 execute [  0.377 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 08:30:25,354 execute [  0.771 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 08:32:25,377 execute [  1.130 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 08:34:25,399 execute [  0.493 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 08:36:13,524 execute [  0.889 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T08:36:13', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 08:36:25,421 execute [  0.783 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 08:38:25,441 execute [  0.386 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 08:40:25,461 execute [  0.400 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 08:41:13,186 execute [  0.799 ms StorePrimary] SELECT xom_order.organization_id, xom_order.order_id, cust.first_name, cust.last_name, xom_order.order_date, xom_order.status_code, xom_order.order_type, cust.telephone1, xom_order.order_loc_id, xom_order.under_review_flag, CASE WHEN ship_order.order_id is null THEN 'FALSE' ELSE 'TRUE' END as shipping_necessary_flag FROM xom_order LEFT JOIN xom_customer_mod cust ON xom_order.organization_id = cust.organization_id AND xom_order.order_id = cust.order_id LEFT JOIN (SELECT line.organization_id, line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.void_flag = 0 AND (ful.LOC_ID is null OR  UPPER(ful.LOC_ID) <>  UPPER(src.LOC_ID)) GROUP BY line.organization_id, line.order_id) ship_order ON xom_order.organization_id = ship_order.organization_id AND xom_order.order_id = ship_order.order_id WHERE xom_order.organization_id = 1000 AND  UPPER(xom_order.status_code) <> 'SUSPENDED'   AND  ( UPPER(xom_order.order_type) <> 'STANDARD_DELIVERY' ) AND ( EXISTS (SELECT line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.organization_id = xom_order.organization_id AND line.order_id = xom_order.order_id AND  UPPER(src.loc_id) = '110' AND line.void_flag = 0 AND ( UPPER(line.status_code) IN ('POLLED', 'ACCEPTED') OR (( UPPER(line.status_code) = 'RESERVED') AND (ful.loc_id IS NULL OR  UPPER(src.loc_id) <>  UPPER(ful.loc_id)))))  )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 08:41:30,782 execute [  0.604 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 08:41:30,786 execute [  0.481 ms StorePrimary] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 08:41:30,788 execute [  0.403 ms Local] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 08:41:30,790 execute [  0.557 ms StorePrimary] UPDATE ctl_device_registration SET update_date = to_date('2024-10-19T13:41:30', 'YYYY-MM-DD"T"HH24:MI:SS'), update_user_id = '100', ip_address = '10.10.28.83', date_timestamp = to_date('2024-10-19T08:41:30', 'YYYY-MM-DD"T"HH24:MI:SS'), business_date = to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS'), xstore_version = '16.0.5.0.38 - 7.0.36 - 1.54', env_version = null, active_flag = 'true', config_version = null, primary_register_flag = 'true' WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.UPDATE [Device-Registration-1]
 DEBUG [      ] 2024-10-19 08:41:30,796 execute [  1.817 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T08:41:30', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 08:41:30,799 execute [  0.340 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T08:41:30', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 08:41:30,801 execute [  0.262 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T08:41:30', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 08:41:30,803 execute [  0.336 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 ERROR [      ] 2024-10-19 08:42:21,206 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 08:42:21,207 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
 ERROR [      ] 2024-10-19 08:42:21,211 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017104711.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-2]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 08:42:21,482 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 08:42:21,482 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
 ERROR [      ] 2024-10-19 08:42:21,486 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017110705.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-2]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 08:42:21,743 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 08:42:21,744 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
 ERROR [      ] 2024-10-19 08:42:21,747 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017111605.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-2]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 DEBUG [      ] 2024-10-19 08:42:25,481 execute [  0.851 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 08:44:25,504 execute [  1.925 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 08:46:13,604 execute [  0.565 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T08:46:13', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 08:46:25,522 execute [  0.723 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 08:48:25,542 execute [  0.382 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 08:50:25,560 execute [  0.443 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 08:52:25,579 execute [  0.395 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 08:54:25,598 execute [  0.535 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 08:56:13,291 execute [  0.907 ms StorePrimary] SELECT xom_order.organization_id, xom_order.order_id, cust.first_name, cust.last_name, xom_order.order_date, xom_order.status_code, xom_order.order_type, cust.telephone1, xom_order.order_loc_id, xom_order.under_review_flag, CASE WHEN ship_order.order_id is null THEN 'FALSE' ELSE 'TRUE' END as shipping_necessary_flag FROM xom_order LEFT JOIN xom_customer_mod cust ON xom_order.organization_id = cust.organization_id AND xom_order.order_id = cust.order_id LEFT JOIN (SELECT line.organization_id, line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.void_flag = 0 AND (ful.LOC_ID is null OR  UPPER(ful.LOC_ID) <>  UPPER(src.LOC_ID)) GROUP BY line.organization_id, line.order_id) ship_order ON xom_order.organization_id = ship_order.organization_id AND xom_order.order_id = ship_order.order_id WHERE xom_order.organization_id = 1000 AND  UPPER(xom_order.status_code) <> 'SUSPENDED'   AND  ( UPPER(xom_order.order_type) <> 'STANDARD_DELIVERY' ) AND ( EXISTS (SELECT line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.organization_id = xom_order.organization_id AND line.order_id = xom_order.order_id AND  UPPER(src.loc_id) = '110' AND line.void_flag = 0 AND ( UPPER(line.status_code) IN ('POLLED', 'ACCEPTED') OR (( UPPER(line.status_code) = 'RESERVED') AND (ful.loc_id IS NULL OR  UPPER(src.loc_id) <>  UPPER(ful.loc_id)))))  )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 08:56:13,673 execute [  0.331 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T08:56:13', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 08:56:25,616 execute [  0.778 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 08:56:30,902 execute [  1.151 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 08:56:30,905 execute [  0.411 ms StorePrimary] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 08:56:30,907 execute [  0.316 ms Local] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 08:56:30,909 execute [  0.425 ms StorePrimary] UPDATE ctl_device_registration SET update_date = to_date('2024-10-19T13:56:30', 'YYYY-MM-DD"T"HH24:MI:SS'), update_user_id = '100', ip_address = '10.10.28.83', date_timestamp = to_date('2024-10-19T08:56:30', 'YYYY-MM-DD"T"HH24:MI:SS'), business_date = to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS'), xstore_version = '16.0.5.0.38 - 7.0.36 - 1.54', env_version = null, active_flag = 'true', config_version = null, primary_register_flag = 'true' WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.UPDATE [Device-Registration-1]
 DEBUG [      ] 2024-10-19 08:56:30,912 execute [  0.318 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T08:56:30', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 08:56:30,913 execute [  0.203 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T08:56:30', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 08:56:30,915 execute [  0.206 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T08:56:30', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 08:56:30,916 execute [  0.180 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 ERROR [      ] 2024-10-19 08:57:22,114 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 08:57:22,115 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
 ERROR [      ] 2024-10-19 08:57:22,118 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017104711.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-4]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 08:57:22,374 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 08:57:22,375 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
 ERROR [      ] 2024-10-19 08:57:22,378 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017110705.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-4]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 08:57:22,631 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 08:57:22,631 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
 ERROR [      ] 2024-10-19 08:57:22,636 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017111605.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-4]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 DEBUG [      ] 2024-10-19 08:58:25,633 execute [  0.740 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 09:00:25,651 execute [  0.383 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 09:02:25,669 execute [  1.128 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 09:04:25,686 execute [  1.295 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 09:06:13,738 execute [  0.545 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T09:06:13', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 09:06:25,701 execute [  0.392 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 09:08:25,719 execute [  0.389 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 09:10:25,737 execute [  0.437 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 09:11:13,382 execute [  0.751 ms StorePrimary] SELECT xom_order.organization_id, xom_order.order_id, cust.first_name, cust.last_name, xom_order.order_date, xom_order.status_code, xom_order.order_type, cust.telephone1, xom_order.order_loc_id, xom_order.under_review_flag, CASE WHEN ship_order.order_id is null THEN 'FALSE' ELSE 'TRUE' END as shipping_necessary_flag FROM xom_order LEFT JOIN xom_customer_mod cust ON xom_order.organization_id = cust.organization_id AND xom_order.order_id = cust.order_id LEFT JOIN (SELECT line.organization_id, line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.void_flag = 0 AND (ful.LOC_ID is null OR  UPPER(ful.LOC_ID) <>  UPPER(src.LOC_ID)) GROUP BY line.organization_id, line.order_id) ship_order ON xom_order.organization_id = ship_order.organization_id AND xom_order.order_id = ship_order.order_id WHERE xom_order.organization_id = 1000 AND  UPPER(xom_order.status_code) <> 'SUSPENDED'   AND  ( UPPER(xom_order.order_type) <> 'STANDARD_DELIVERY' ) AND ( EXISTS (SELECT line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.organization_id = xom_order.organization_id AND line.order_id = xom_order.order_id AND  UPPER(src.loc_id) = '110' AND line.void_flag = 0 AND ( UPPER(line.status_code) IN ('POLLED', 'ACCEPTED') OR (( UPPER(line.status_code) = 'RESERVED') AND (ful.loc_id IS NULL OR  UPPER(src.loc_id) <>  UPPER(ful.loc_id)))))  )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 09:11:30,997 execute [  0.549 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 09:11:31,000 execute [  0.480 ms StorePrimary] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 09:11:31,002 execute [  0.288 ms Local] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 09:11:31,004 execute [  0.502 ms StorePrimary] UPDATE ctl_device_registration SET update_date = to_date('2024-10-19T14:11:30', 'YYYY-MM-DD"T"HH24:MI:SS'), update_user_id = '100', ip_address = '10.10.28.83', date_timestamp = to_date('2024-10-19T09:11:30', 'YYYY-MM-DD"T"HH24:MI:SS'), business_date = to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS'), xstore_version = '16.0.5.0.38 - 7.0.36 - 1.54', env_version = null, active_flag = 'true', config_version = null, primary_register_flag = 'true' WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.UPDATE [Device-Registration-1]
 DEBUG [      ] 2024-10-19 09:11:31,011 execute [  1.342 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T09:11:31', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 09:11:31,014 execute [  0.330 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T09:11:31', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 09:11:31,016 execute [  0.301 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T09:11:31', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 09:11:31,017 execute [  0.381 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 ERROR [      ] 2024-10-19 09:12:23,003 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 09:12:23,004 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
 ERROR [      ] 2024-10-19 09:12:23,007 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017104711.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-3]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 09:12:23,225 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 09:12:23,226 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
 ERROR [      ] 2024-10-19 09:12:23,229 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017110705.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-3]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 09:12:23,468 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 09:12:23,469 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
 ERROR [      ] 2024-10-19 09:12:23,472 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017111605.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-3]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 DEBUG [      ] 2024-10-19 09:12:25,753 execute [  0.844 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 09:14:25,769 execute [  0.447 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 09:16:13,796 execute [  0.513 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T09:16:13', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 09:16:25,783 execute [  0.935 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 09:18:25,798 execute [  0.464 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 09:20:25,813 execute [  0.398 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 09:22:25,828 execute [  0.413 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 09:24:25,844 execute [  0.387 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 09:26:13,458 execute [  0.862 ms StorePrimary] SELECT xom_order.organization_id, xom_order.order_id, cust.first_name, cust.last_name, xom_order.order_date, xom_order.status_code, xom_order.order_type, cust.telephone1, xom_order.order_loc_id, xom_order.under_review_flag, CASE WHEN ship_order.order_id is null THEN 'FALSE' ELSE 'TRUE' END as shipping_necessary_flag FROM xom_order LEFT JOIN xom_customer_mod cust ON xom_order.organization_id = cust.organization_id AND xom_order.order_id = cust.order_id LEFT JOIN (SELECT line.organization_id, line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.void_flag = 0 AND (ful.LOC_ID is null OR  UPPER(ful.LOC_ID) <>  UPPER(src.LOC_ID)) GROUP BY line.organization_id, line.order_id) ship_order ON xom_order.organization_id = ship_order.organization_id AND xom_order.order_id = ship_order.order_id WHERE xom_order.organization_id = 1000 AND  UPPER(xom_order.status_code) <> 'SUSPENDED'   AND  ( UPPER(xom_order.order_type) <> 'STANDARD_DELIVERY' ) AND ( EXISTS (SELECT line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.organization_id = xom_order.organization_id AND line.order_id = xom_order.order_id AND  UPPER(src.loc_id) = '110' AND line.void_flag = 0 AND ( UPPER(line.status_code) IN ('POLLED', 'ACCEPTED') OR (( UPPER(line.status_code) = 'RESERVED') AND (ful.loc_id IS NULL OR  UPPER(src.loc_id) <>  UPPER(ful.loc_id)))))  )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 09:26:13,848 execute [  0.317 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T09:26:13', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 09:26:25,859 execute [  0.711 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 09:26:31,088 execute [  1.171 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 09:26:31,092 execute [  0.568 ms StorePrimary] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 09:26:31,095 execute [  0.326 ms Local] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 09:26:31,098 execute [  0.572 ms StorePrimary] UPDATE ctl_device_registration SET update_date = to_date('2024-10-19T14:26:31', 'YYYY-MM-DD"T"HH24:MI:SS'), update_user_id = '100', ip_address = '10.10.28.83', date_timestamp = to_date('2024-10-19T09:26:31', 'YYYY-MM-DD"T"HH24:MI:SS'), business_date = to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS'), xstore_version = '16.0.5.0.38 - 7.0.36 - 1.54', env_version = null, active_flag = 'true', config_version = null, primary_register_flag = 'true' WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.UPDATE [Device-Registration-1]
 DEBUG [      ] 2024-10-19 09:26:31,101 execute [  0.492 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T09:26:31', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 09:26:31,103 execute [  0.309 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T09:26:31', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 09:26:31,105 execute [  0.272 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T09:26:31', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 09:26:31,107 execute [  0.245 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 ERROR [      ] 2024-10-19 09:27:23,875 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 09:27:23,876 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
 ERROR [      ] 2024-10-19 09:27:23,880 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017104711.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-3]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 09:27:24,146 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 09:27:24,146 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
 ERROR [      ] 2024-10-19 09:27:24,150 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017110705.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-3]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 09:27:24,424 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 09:27:24,425 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
 ERROR [      ] 2024-10-19 09:27:24,428 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017111605.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-3]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 DEBUG [      ] 2024-10-19 09:28:25,873 execute [  0.375 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 09:30:25,887 execute [  0.801 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 09:32:25,904 execute [  1.312 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 09:34:25,955 execute [  1.074 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 09:36:13,899 execute [  0.495 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T09:36:13', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 09:36:25,968 execute [  0.391 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 09:38:25,982 execute [  0.419 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 09:40:25,995 execute [  0.438 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 09:41:13,525 execute [  0.767 ms StorePrimary] SELECT xom_order.organization_id, xom_order.order_id, cust.first_name, cust.last_name, xom_order.order_date, xom_order.status_code, xom_order.order_type, cust.telephone1, xom_order.order_loc_id, xom_order.under_review_flag, CASE WHEN ship_order.order_id is null THEN 'FALSE' ELSE 'TRUE' END as shipping_necessary_flag FROM xom_order LEFT JOIN xom_customer_mod cust ON xom_order.organization_id = cust.organization_id AND xom_order.order_id = cust.order_id LEFT JOIN (SELECT line.organization_id, line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.void_flag = 0 AND (ful.LOC_ID is null OR  UPPER(ful.LOC_ID) <>  UPPER(src.LOC_ID)) GROUP BY line.organization_id, line.order_id) ship_order ON xom_order.organization_id = ship_order.organization_id AND xom_order.order_id = ship_order.order_id WHERE xom_order.organization_id = 1000 AND  UPPER(xom_order.status_code) <> 'SUSPENDED'   AND  ( UPPER(xom_order.order_type) <> 'STANDARD_DELIVERY' ) AND ( EXISTS (SELECT line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.organization_id = xom_order.organization_id AND line.order_id = xom_order.order_id AND  UPPER(src.loc_id) = '110' AND line.void_flag = 0 AND ( UPPER(line.status_code) IN ('POLLED', 'ACCEPTED') OR (( UPPER(line.status_code) = 'RESERVED') AND (ful.loc_id IS NULL OR  UPPER(src.loc_id) <>  UPPER(ful.loc_id)))))  )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 09:41:31,165 execute [  0.526 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 09:41:31,168 execute [  0.482 ms StorePrimary] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 09:41:31,170 execute [  0.291 ms Local] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 09:41:31,172 execute [  0.478 ms StorePrimary] UPDATE ctl_device_registration SET update_date = to_date('2024-10-19T14:41:31', 'YYYY-MM-DD"T"HH24:MI:SS'), update_user_id = '100', ip_address = '10.10.28.83', date_timestamp = to_date('2024-10-19T09:41:31', 'YYYY-MM-DD"T"HH24:MI:SS'), business_date = to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS'), xstore_version = '16.0.5.0.38 - 7.0.36 - 1.54', env_version = null, active_flag = 'true', config_version = null, primary_register_flag = 'true' WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.UPDATE [Device-Registration-1]
 DEBUG [      ] 2024-10-19 09:41:31,178 execute [  1.638 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T09:41:31', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 09:41:31,180 execute [  0.271 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T09:41:31', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 09:41:31,182 execute [  0.279 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T09:41:31', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 09:41:31,183 execute [  0.358 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 ERROR [      ] 2024-10-19 09:42:24,807 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 09:42:24,808 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
 ERROR [      ] 2024-10-19 09:42:24,811 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017104711.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-3]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 09:42:25,093 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 09:42:25,093 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
 ERROR [      ] 2024-10-19 09:42:25,097 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017110705.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-3]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 09:42:25,365 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 09:42:25,366 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
 ERROR [      ] 2024-10-19 09:42:25,369 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017111605.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-3]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 DEBUG [      ] 2024-10-19 09:42:26,009 execute [  0.735 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 09:44:26,021 execute [  0.443 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 09:46:13,942 execute [  0.866 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T09:46:13', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 09:46:26,033 execute [  0.380 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 09:48:26,046 execute [  1.027 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 09:50:26,058 execute [  0.842 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 09:52:26,071 execute [  0.373 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 09:54:26,083 execute [  0.430 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 09:56:13,585 execute [  0.856 ms StorePrimary] SELECT xom_order.organization_id, xom_order.order_id, cust.first_name, cust.last_name, xom_order.order_date, xom_order.status_code, xom_order.order_type, cust.telephone1, xom_order.order_loc_id, xom_order.under_review_flag, CASE WHEN ship_order.order_id is null THEN 'FALSE' ELSE 'TRUE' END as shipping_necessary_flag FROM xom_order LEFT JOIN xom_customer_mod cust ON xom_order.organization_id = cust.organization_id AND xom_order.order_id = cust.order_id LEFT JOIN (SELECT line.organization_id, line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.void_flag = 0 AND (ful.LOC_ID is null OR  UPPER(ful.LOC_ID) <>  UPPER(src.LOC_ID)) GROUP BY line.organization_id, line.order_id) ship_order ON xom_order.organization_id = ship_order.organization_id AND xom_order.order_id = ship_order.order_id WHERE xom_order.organization_id = 1000 AND  UPPER(xom_order.status_code) <> 'SUSPENDED'   AND  ( UPPER(xom_order.order_type) <> 'STANDARD_DELIVERY' ) AND ( EXISTS (SELECT line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.organization_id = xom_order.organization_id AND line.order_id = xom_order.order_id AND  UPPER(src.loc_id) = '110' AND line.void_flag = 0 AND ( UPPER(line.status_code) IN ('POLLED', 'ACCEPTED') OR (( UPPER(line.status_code) = 'RESERVED') AND (ful.loc_id IS NULL OR  UPPER(src.loc_id) <>  UPPER(ful.loc_id)))))  )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 09:56:13,982 execute [  0.495 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T09:56:13', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 09:56:26,096 execute [  0.860 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 09:56:31,233 execute [  1.008 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 09:56:31,236 execute [  0.408 ms StorePrimary] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 09:56:31,238 execute [  0.235 ms Local] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 09:56:31,240 execute [  0.873 ms StorePrimary] UPDATE ctl_device_registration SET update_date = to_date('2024-10-19T14:56:31', 'YYYY-MM-DD"T"HH24:MI:SS'), update_user_id = '100', ip_address = '10.10.28.83', date_timestamp = to_date('2024-10-19T09:56:31', 'YYYY-MM-DD"T"HH24:MI:SS'), business_date = to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS'), xstore_version = '16.0.5.0.38 - 7.0.36 - 1.54', env_version = null, active_flag = 'true', config_version = null, primary_register_flag = 'true' WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.UPDATE [Device-Registration-1]
 DEBUG [      ] 2024-10-19 09:56:31,243 execute [  0.445 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T09:56:31', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 09:56:31,245 execute [  0.240 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T09:56:31', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 09:56:31,247 execute [  0.231 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T09:56:31', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 09:56:31,248 execute [  0.193 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 ERROR [      ] 2024-10-19 09:57:25,751 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 09:57:25,752 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
 ERROR [      ] 2024-10-19 09:57:25,756 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017104711.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-2]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 09:57:25,988 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 09:57:25,989 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
 ERROR [      ] 2024-10-19 09:57:25,993 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017110705.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-2]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 09:57:26,275 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 09:57:26,276 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
 ERROR [      ] 2024-10-19 09:57:26,279 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017111605.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-2]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 DEBUG [      ] 2024-10-19 09:58:26,108 execute [  0.397 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 10:00:26,120 execute [  0.772 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 10:02:26,134 execute [  1.111 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 10:04:26,147 execute [  1.051 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 10:06:14,026 execute [  0.462 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T10:06:14', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 10:06:26,165 execute [  0.357 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 10:08:26,199 execute [  0.353 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 10:10:26,233 execute [  0.386 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 10:11:13,698 execute [  0.789 ms StorePrimary] SELECT xom_order.organization_id, xom_order.order_id, cust.first_name, cust.last_name, xom_order.order_date, xom_order.status_code, xom_order.order_type, cust.telephone1, xom_order.order_loc_id, xom_order.under_review_flag, CASE WHEN ship_order.order_id is null THEN 'FALSE' ELSE 'TRUE' END as shipping_necessary_flag FROM xom_order LEFT JOIN xom_customer_mod cust ON xom_order.organization_id = cust.organization_id AND xom_order.order_id = cust.order_id LEFT JOIN (SELECT line.organization_id, line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.void_flag = 0 AND (ful.LOC_ID is null OR  UPPER(ful.LOC_ID) <>  UPPER(src.LOC_ID)) GROUP BY line.organization_id, line.order_id) ship_order ON xom_order.organization_id = ship_order.organization_id AND xom_order.order_id = ship_order.order_id WHERE xom_order.organization_id = 1000 AND  UPPER(xom_order.status_code) <> 'SUSPENDED'   AND  ( UPPER(xom_order.order_type) <> 'STANDARD_DELIVERY' ) AND ( EXISTS (SELECT line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.organization_id = xom_order.organization_id AND line.order_id = xom_order.order_id AND  UPPER(src.loc_id) = '110' AND line.void_flag = 0 AND ( UPPER(line.status_code) IN ('POLLED', 'ACCEPTED') OR (( UPPER(line.status_code) = 'RESERVED') AND (ful.loc_id IS NULL OR  UPPER(src.loc_id) <>  UPPER(ful.loc_id)))))  )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 10:11:31,357 execute [  0.525 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 10:11:31,360 execute [  0.547 ms StorePrimary] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 10:11:31,363 execute [  0.379 ms Local] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 10:11:31,367 execute [  0.714 ms StorePrimary] UPDATE ctl_device_registration SET update_date = to_date('2024-10-19T15:11:31', 'YYYY-MM-DD"T"HH24:MI:SS'), update_user_id = '100', ip_address = '10.10.28.83', date_timestamp = to_date('2024-10-19T10:11:31', 'YYYY-MM-DD"T"HH24:MI:SS'), business_date = to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS'), xstore_version = '16.0.5.0.38 - 7.0.36 - 1.54', env_version = null, active_flag = 'true', config_version = null, primary_register_flag = 'true' WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.UPDATE [Device-Registration-1]
 DEBUG [      ] 2024-10-19 10:11:31,374 execute [  1.051 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T10:11:31', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 10:11:31,376 execute [  0.397 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T10:11:31', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 10:11:31,379 execute [  0.274 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T10:11:31', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 10:11:31,380 execute [  0.374 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 10:12:26,267 execute [  0.740 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 ERROR [      ] 2024-10-19 10:12:26,742 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 10:12:26,743 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
 ERROR [      ] 2024-10-19 10:12:26,746 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017104711.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-3]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 10:12:27,015 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 10:12:27,016 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
 ERROR [      ] 2024-10-19 10:12:27,019 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017110705.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-3]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 10:12:27,247 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 10:12:27,247 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
 ERROR [      ] 2024-10-19 10:12:27,251 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017111605.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-3]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 DEBUG [      ] 2024-10-19 10:14:26,299 execute [  1.588 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 10:16:14,169 execute [  0.493 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T10:16:14', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 10:16:26,330 execute [  0.410 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 10:18:26,361 execute [  0.452 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 10:20:26,392 execute [  0.453 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 10:22:26,421 execute [  0.414 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 10:24:26,450 execute [  0.380 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 10:26:13,890 execute [  0.818 ms StorePrimary] SELECT xom_order.organization_id, xom_order.order_id, cust.first_name, cust.last_name, xom_order.order_date, xom_order.status_code, xom_order.order_type, cust.telephone1, xom_order.order_loc_id, xom_order.under_review_flag, CASE WHEN ship_order.order_id is null THEN 'FALSE' ELSE 'TRUE' END as shipping_necessary_flag FROM xom_order LEFT JOIN xom_customer_mod cust ON xom_order.organization_id = cust.organization_id AND xom_order.order_id = cust.order_id LEFT JOIN (SELECT line.organization_id, line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.void_flag = 0 AND (ful.LOC_ID is null OR  UPPER(ful.LOC_ID) <>  UPPER(src.LOC_ID)) GROUP BY line.organization_id, line.order_id) ship_order ON xom_order.organization_id = ship_order.organization_id AND xom_order.order_id = ship_order.order_id WHERE xom_order.organization_id = 1000 AND  UPPER(xom_order.status_code) <> 'SUSPENDED'   AND  ( UPPER(xom_order.order_type) <> 'STANDARD_DELIVERY' ) AND ( EXISTS (SELECT line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.organization_id = xom_order.organization_id AND line.order_id = xom_order.order_id AND  UPPER(src.loc_id) = '110' AND line.void_flag = 0 AND ( UPPER(line.status_code) IN ('POLLED', 'ACCEPTED') OR (( UPPER(line.status_code) = 'RESERVED') AND (ful.loc_id IS NULL OR  UPPER(src.loc_id) <>  UPPER(ful.loc_id)))))  )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 10:26:14,293 execute [  0.640 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T10:26:14', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 10:26:26,478 execute [  0.819 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 10:26:31,563 execute [  1.134 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 10:26:31,567 execute [  0.446 ms StorePrimary] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 10:26:31,570 execute [  0.901 ms Local] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 10:26:31,571 execute [  0.401 ms StorePrimary] UPDATE ctl_device_registration SET update_date = to_date('2024-10-19T15:26:31', 'YYYY-MM-DD"T"HH24:MI:SS'), update_user_id = '100', ip_address = '10.10.28.83', date_timestamp = to_date('2024-10-19T10:26:31', 'YYYY-MM-DD"T"HH24:MI:SS'), business_date = to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS'), xstore_version = '16.0.5.0.38 - 7.0.36 - 1.54', env_version = null, active_flag = 'true', config_version = null, primary_register_flag = 'true' WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.UPDATE [Device-Registration-1]
 DEBUG [      ] 2024-10-19 10:26:31,574 execute [  0.337 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T10:26:31', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 10:26:31,576 execute [  0.198 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T10:26:31', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 10:26:31,578 execute [  0.176 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T10:26:31', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 10:26:31,579 execute [  0.185 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 ERROR [      ] 2024-10-19 10:27:27,770 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 10:27:27,771 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
 ERROR [      ] 2024-10-19 10:27:27,775 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017104711.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-3]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 10:27:28,031 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 10:27:28,032 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
 ERROR [      ] 2024-10-19 10:27:28,036 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017110705.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-3]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 10:27:28,289 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 10:27:28,290 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
 ERROR [      ] 2024-10-19 10:27:28,293 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017111605.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-3]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 DEBUG [      ] 2024-10-19 10:28:26,506 execute [  0.818 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 10:30:26,532 execute [  0.389 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 10:32:26,562 execute [  1.500 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 10:34:26,590 execute [  1.094 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 10:36:14,405 execute [  0.535 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T10:36:14', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 10:36:26,615 execute [  0.443 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 10:38:26,640 execute [  0.440 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 10:40:26,664 execute [  0.360 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 10:41:14,050 execute [  0.749 ms StorePrimary] SELECT xom_order.organization_id, xom_order.order_id, cust.first_name, cust.last_name, xom_order.order_date, xom_order.status_code, xom_order.order_type, cust.telephone1, xom_order.order_loc_id, xom_order.under_review_flag, CASE WHEN ship_order.order_id is null THEN 'FALSE' ELSE 'TRUE' END as shipping_necessary_flag FROM xom_order LEFT JOIN xom_customer_mod cust ON xom_order.organization_id = cust.organization_id AND xom_order.order_id = cust.order_id LEFT JOIN (SELECT line.organization_id, line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.void_flag = 0 AND (ful.LOC_ID is null OR  UPPER(ful.LOC_ID) <>  UPPER(src.LOC_ID)) GROUP BY line.organization_id, line.order_id) ship_order ON xom_order.organization_id = ship_order.organization_id AND xom_order.order_id = ship_order.order_id WHERE xom_order.organization_id = 1000 AND  UPPER(xom_order.status_code) <> 'SUSPENDED'   AND  ( UPPER(xom_order.order_type) <> 'STANDARD_DELIVERY' ) AND ( EXISTS (SELECT line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.organization_id = xom_order.organization_id AND line.order_id = xom_order.order_id AND  UPPER(src.loc_id) = '110' AND line.void_flag = 0 AND ( UPPER(line.status_code) IN ('POLLED', 'ACCEPTED') OR (( UPPER(line.status_code) = 'RESERVED') AND (ful.loc_id IS NULL OR  UPPER(src.loc_id) <>  UPPER(ful.loc_id)))))  )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 10:41:31,732 execute [  2.396 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 10:41:31,736 execute [  0.623 ms StorePrimary] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 10:41:31,739 execute [  0.465 ms Local] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 10:41:31,741 execute [  0.508 ms StorePrimary] UPDATE ctl_device_registration SET update_date = to_date('2024-10-19T15:41:31', 'YYYY-MM-DD"T"HH24:MI:SS'), update_user_id = '100', ip_address = '10.10.28.83', date_timestamp = to_date('2024-10-19T10:41:31', 'YYYY-MM-DD"T"HH24:MI:SS'), business_date = to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS'), xstore_version = '16.0.5.0.38 - 7.0.36 - 1.54', env_version = null, active_flag = 'true', config_version = null, primary_register_flag = 'true' WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.UPDATE [Device-Registration-1]
 DEBUG [      ] 2024-10-19 10:41:31,746 execute [  1.331 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T10:41:31', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 10:41:31,748 execute [  0.355 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T10:41:31', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 10:41:31,750 execute [  0.309 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T10:41:31', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 10:41:31,752 execute [  0.394 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 10:42:26,688 execute [  0.833 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 ERROR [      ] 2024-10-19 10:42:28,785 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 10:42:28,786 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
 ERROR [      ] 2024-10-19 10:42:28,789 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017104711.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-3]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 10:42:29,046 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 10:42:29,047 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
 ERROR [      ] 2024-10-19 10:42:29,050 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017110705.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-3]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 10:42:29,315 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 10:42:29,316 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
 ERROR [      ] 2024-10-19 10:42:29,320 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017111605.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-3]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 DEBUG [      ] 2024-10-19 10:44:26,710 execute [  0.394 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 10:46:14,503 execute [  0.978 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T10:46:14', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 10:46:26,733 execute [  0.394 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 10:48:26,754 execute [  0.966 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 10:50:26,777 execute [  0.362 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 10:52:26,797 execute [  0.458 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 10:54:26,818 execute [  0.371 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 10:56:14,185 execute [  0.969 ms StorePrimary] SELECT xom_order.organization_id, xom_order.order_id, cust.first_name, cust.last_name, xom_order.order_date, xom_order.status_code, xom_order.order_type, cust.telephone1, xom_order.order_loc_id, xom_order.under_review_flag, CASE WHEN ship_order.order_id is null THEN 'FALSE' ELSE 'TRUE' END as shipping_necessary_flag FROM xom_order LEFT JOIN xom_customer_mod cust ON xom_order.organization_id = cust.organization_id AND xom_order.order_id = cust.order_id LEFT JOIN (SELECT line.organization_id, line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.void_flag = 0 AND (ful.LOC_ID is null OR  UPPER(ful.LOC_ID) <>  UPPER(src.LOC_ID)) GROUP BY line.organization_id, line.order_id) ship_order ON xom_order.organization_id = ship_order.organization_id AND xom_order.order_id = ship_order.order_id WHERE xom_order.organization_id = 1000 AND  UPPER(xom_order.status_code) <> 'SUSPENDED'   AND  ( UPPER(xom_order.order_type) <> 'STANDARD_DELIVERY' ) AND ( EXISTS (SELECT line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.organization_id = xom_order.organization_id AND line.order_id = xom_order.order_id AND  UPPER(src.loc_id) = '110' AND line.void_flag = 0 AND ( UPPER(line.status_code) IN ('POLLED', 'ACCEPTED') OR (( UPPER(line.status_code) = 'RESERVED') AND (ful.loc_id IS NULL OR  UPPER(src.loc_id) <>  UPPER(ful.loc_id)))))  )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 10:56:14,589 execute [  0.671 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T10:56:14', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 10:56:26,840 execute [  0.727 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 10:56:31,875 execute [  1.100 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 10:56:31,878 execute [  0.466 ms StorePrimary] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 10:56:31,880 execute [  0.294 ms Local] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 10:56:31,882 execute [  0.491 ms StorePrimary] UPDATE ctl_device_registration SET update_date = to_date('2024-10-19T15:56:31', 'YYYY-MM-DD"T"HH24:MI:SS'), update_user_id = '100', ip_address = '10.10.28.83', date_timestamp = to_date('2024-10-19T10:56:31', 'YYYY-MM-DD"T"HH24:MI:SS'), business_date = to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS'), xstore_version = '16.0.5.0.38 - 7.0.36 - 1.54', env_version = null, active_flag = 'true', config_version = null, primary_register_flag = 'true' WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.UPDATE [Device-Registration-1]
 DEBUG [      ] 2024-10-19 10:56:31,885 execute [  0.341 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T10:56:31', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 10:56:31,887 execute [  0.210 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T10:56:31', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 10:56:31,889 execute [  0.211 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T10:56:31', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 10:56:31,890 execute [  0.162 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 ERROR [      ] 2024-10-19 10:57:29,761 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 10:57:29,762 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
 ERROR [      ] 2024-10-19 10:57:29,767 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017104711.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-2]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 10:57:30,059 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 10:57:30,060 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
 ERROR [      ] 2024-10-19 10:57:30,064 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017110705.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-2]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 10:57:30,330 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 10:57:30,331 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
 ERROR [      ] 2024-10-19 10:57:30,335 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017111605.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-2]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 DEBUG [      ] 2024-10-19 10:58:26,861 execute [  0.447 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 11:00:26,881 execute [  0.758 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 11:02:26,903 execute [  1.057 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 11:04:26,923 execute [  0.377 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 11:06:14,669 execute [  0.915 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T11:06:14', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 11:06:26,942 execute [  0.759 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 11:08:26,960 execute [  0.508 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 11:10:26,979 execute [  0.529 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 11:11:14,297 execute [  0.791 ms StorePrimary] SELECT xom_order.organization_id, xom_order.order_id, cust.first_name, cust.last_name, xom_order.order_date, xom_order.status_code, xom_order.order_type, cust.telephone1, xom_order.order_loc_id, xom_order.under_review_flag, CASE WHEN ship_order.order_id is null THEN 'FALSE' ELSE 'TRUE' END as shipping_necessary_flag FROM xom_order LEFT JOIN xom_customer_mod cust ON xom_order.organization_id = cust.organization_id AND xom_order.order_id = cust.order_id LEFT JOIN (SELECT line.organization_id, line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.void_flag = 0 AND (ful.LOC_ID is null OR  UPPER(ful.LOC_ID) <>  UPPER(src.LOC_ID)) GROUP BY line.organization_id, line.order_id) ship_order ON xom_order.organization_id = ship_order.organization_id AND xom_order.order_id = ship_order.order_id WHERE xom_order.organization_id = 1000 AND  UPPER(xom_order.status_code) <> 'SUSPENDED'   AND  ( UPPER(xom_order.order_type) <> 'STANDARD_DELIVERY' ) AND ( EXISTS (SELECT line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.organization_id = xom_order.organization_id AND line.order_id = xom_order.order_id AND  UPPER(src.loc_id) = '110' AND line.void_flag = 0 AND ( UPPER(line.status_code) IN ('POLLED', 'ACCEPTED') OR (( UPPER(line.status_code) = 'RESERVED') AND (ful.loc_id IS NULL OR  UPPER(src.loc_id) <>  UPPER(ful.loc_id)))))  )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 11:11:31,992 execute [  0.530 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 11:11:31,995 execute [  0.485 ms StorePrimary] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 11:11:31,997 execute [  0.332 ms Local] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 11:11:31,999 execute [  0.494 ms StorePrimary] UPDATE ctl_device_registration SET update_date = to_date('2024-10-19T16:11:31', 'YYYY-MM-DD"T"HH24:MI:SS'), update_user_id = '100', ip_address = '10.10.28.83', date_timestamp = to_date('2024-10-19T11:11:31', 'YYYY-MM-DD"T"HH24:MI:SS'), business_date = to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS'), xstore_version = '16.0.5.0.38 - 7.0.36 - 1.54', env_version = null, active_flag = 'true', config_version = null, primary_register_flag = 'true' WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.UPDATE [Device-Registration-1]
 DEBUG [      ] 2024-10-19 11:11:32,004 execute [  1.094 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T11:11:32', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 11:11:32,006 execute [  0.289 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T11:11:32', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 11:11:32,008 execute [  0.249 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T11:11:32', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 11:11:32,010 execute [  0.359 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 11:12:26,996 execute [  0.886 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 ERROR [      ] 2024-10-19 11:12:30,733 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 11:12:30,734 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
 ERROR [      ] 2024-10-19 11:12:30,737 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017104711.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-3]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 11:12:31,073 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 11:12:31,074 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
 ERROR [      ] 2024-10-19 11:12:31,079 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017110705.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-3]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 11:12:31,341 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 11:12:31,342 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
 ERROR [      ] 2024-10-19 11:12:31,348 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017111605.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-3]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 DEBUG [      ] 2024-10-19 11:14:27,015 execute [  1.221 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 11:16:14,741 execute [  0.512 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T11:16:14', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 11:16:27,033 execute [  0.391 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 11:18:27,052 execute [  0.464 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 11:20:27,068 execute [  0.373 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 11:22:27,084 execute [  0.469 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 11:24:27,099 execute [  0.429 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 11:26:14,391 execute [  0.823 ms StorePrimary] SELECT xom_order.organization_id, xom_order.order_id, cust.first_name, cust.last_name, xom_order.order_date, xom_order.status_code, xom_order.order_type, cust.telephone1, xom_order.order_loc_id, xom_order.under_review_flag, CASE WHEN ship_order.order_id is null THEN 'FALSE' ELSE 'TRUE' END as shipping_necessary_flag FROM xom_order LEFT JOIN xom_customer_mod cust ON xom_order.organization_id = cust.organization_id AND xom_order.order_id = cust.order_id LEFT JOIN (SELECT line.organization_id, line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.void_flag = 0 AND (ful.LOC_ID is null OR  UPPER(ful.LOC_ID) <>  UPPER(src.LOC_ID)) GROUP BY line.organization_id, line.order_id) ship_order ON xom_order.organization_id = ship_order.organization_id AND xom_order.order_id = ship_order.order_id WHERE xom_order.organization_id = 1000 AND  UPPER(xom_order.status_code) <> 'SUSPENDED'   AND  ( UPPER(xom_order.order_type) <> 'STANDARD_DELIVERY' ) AND ( EXISTS (SELECT line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.organization_id = xom_order.organization_id AND line.order_id = xom_order.order_id AND  UPPER(src.loc_id) = '110' AND line.void_flag = 0 AND ( UPPER(line.status_code) IN ('POLLED', 'ACCEPTED') OR (( UPPER(line.status_code) = 'RESERVED') AND (ful.loc_id IS NULL OR  UPPER(src.loc_id) <>  UPPER(ful.loc_id)))))  )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 11:26:14,804 execute [  0.377 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T11:26:14', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 11:26:27,117 execute [  0.875 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 11:26:32,094 execute [  1.210 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 11:26:32,098 execute [  0.593 ms StorePrimary] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 11:26:32,100 execute [  0.390 ms Local] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 11:26:32,102 execute [  0.559 ms StorePrimary] UPDATE ctl_device_registration SET update_date = to_date('2024-10-19T16:26:32', 'YYYY-MM-DD"T"HH24:MI:SS'), update_user_id = '100', ip_address = '10.10.28.83', date_timestamp = to_date('2024-10-19T11:26:32', 'YYYY-MM-DD"T"HH24:MI:SS'), business_date = to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS'), xstore_version = '16.0.5.0.38 - 7.0.36 - 1.54', env_version = null, active_flag = 'true', config_version = null, primary_register_flag = 'true' WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.UPDATE [Device-Registration-1]
 DEBUG [      ] 2024-10-19 11:26:32,106 execute [  0.469 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T11:26:32', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 11:26:32,109 execute [  0.313 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T11:26:32', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 11:26:32,112 execute [  0.356 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T11:26:32', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 11:26:32,113 execute [  0.356 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 ERROR [      ] 2024-10-19 11:27:31,733 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 11:27:31,734 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
 ERROR [      ] 2024-10-19 11:27:31,739 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017104711.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-1]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 11:27:32,015 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 11:27:32,016 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
 ERROR [      ] 2024-10-19 11:27:32,019 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017110705.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-1]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 11:27:32,302 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 11:27:32,302 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
 ERROR [      ] 2024-10-19 11:27:32,306 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017111605.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-1]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 DEBUG [      ] 2024-10-19 11:28:27,133 execute [  0.762 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 11:30:27,150 execute [  0.392 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 11:32:27,167 execute [  1.189 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 11:34:27,182 execute [  0.426 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 11:36:14,862 execute [  1.012 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T11:36:14', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 11:36:27,200 execute [  1.009 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 11:38:27,214 execute [  0.344 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 11:40:27,230 execute [  0.380 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 11:41:14,471 execute [  0.823 ms StorePrimary] SELECT xom_order.organization_id, xom_order.order_id, cust.first_name, cust.last_name, xom_order.order_date, xom_order.status_code, xom_order.order_type, cust.telephone1, xom_order.order_loc_id, xom_order.under_review_flag, CASE WHEN ship_order.order_id is null THEN 'FALSE' ELSE 'TRUE' END as shipping_necessary_flag FROM xom_order LEFT JOIN xom_customer_mod cust ON xom_order.organization_id = cust.organization_id AND xom_order.order_id = cust.order_id LEFT JOIN (SELECT line.organization_id, line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.void_flag = 0 AND (ful.LOC_ID is null OR  UPPER(ful.LOC_ID) <>  UPPER(src.LOC_ID)) GROUP BY line.organization_id, line.order_id) ship_order ON xom_order.organization_id = ship_order.organization_id AND xom_order.order_id = ship_order.order_id WHERE xom_order.organization_id = 1000 AND  UPPER(xom_order.status_code) <> 'SUSPENDED'   AND  ( UPPER(xom_order.order_type) <> 'STANDARD_DELIVERY' ) AND ( EXISTS (SELECT line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.organization_id = xom_order.organization_id AND line.order_id = xom_order.order_id AND  UPPER(src.loc_id) = '110' AND line.void_flag = 0 AND ( UPPER(line.status_code) IN ('POLLED', 'ACCEPTED') OR (( UPPER(line.status_code) = 'RESERVED') AND (ful.loc_id IS NULL OR  UPPER(src.loc_id) <>  UPPER(ful.loc_id)))))  )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 11:41:32,185 execute [  0.602 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 11:41:32,189 execute [  0.607 ms StorePrimary] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 11:41:32,191 execute [  0.303 ms Local] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 11:41:32,193 execute [  0.518 ms StorePrimary] UPDATE ctl_device_registration SET update_date = to_date('2024-10-19T16:41:32', 'YYYY-MM-DD"T"HH24:MI:SS'), update_user_id = '100', ip_address = '10.10.28.83', date_timestamp = to_date('2024-10-19T11:41:32', 'YYYY-MM-DD"T"HH24:MI:SS'), business_date = to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS'), xstore_version = '16.0.5.0.38 - 7.0.36 - 1.54', env_version = null, active_flag = 'true', config_version = null, primary_register_flag = 'true' WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.UPDATE [Device-Registration-1]
 DEBUG [      ] 2024-10-19 11:41:32,198 execute [  0.856 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T11:41:32', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 11:41:32,200 execute [  0.306 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T11:41:32', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 11:41:32,202 execute [  0.237 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T11:41:32', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 11:41:32,204 execute [  0.417 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 11:42:27,245 execute [  0.826 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 ERROR [      ] 2024-10-19 11:42:32,714 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 11:42:32,715 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
 ERROR [      ] 2024-10-19 11:42:32,719 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017104711.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-2]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 11:42:33,007 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 11:42:33,008 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
 ERROR [      ] 2024-10-19 11:42:33,011 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017110705.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-2]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 11:42:33,238 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 11:42:33,239 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
 ERROR [      ] 2024-10-19 11:42:33,245 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017111605.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-2]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 DEBUG [      ] 2024-10-19 11:44:27,261 execute [  1.382 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 11:46:14,914 execute [  0.490 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T11:46:14', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 11:46:27,275 execute [  0.391 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 11:48:27,288 execute [  0.356 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 11:50:27,303 execute [  0.447 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 11:52:27,315 execute [  0.422 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 11:54:27,364 execute [  0.366 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 11:56:14,542 execute [  1.038 ms StorePrimary] SELECT xom_order.organization_id, xom_order.order_id, cust.first_name, cust.last_name, xom_order.order_date, xom_order.status_code, xom_order.order_type, cust.telephone1, xom_order.order_loc_id, xom_order.under_review_flag, CASE WHEN ship_order.order_id is null THEN 'FALSE' ELSE 'TRUE' END as shipping_necessary_flag FROM xom_order LEFT JOIN xom_customer_mod cust ON xom_order.organization_id = cust.organization_id AND xom_order.order_id = cust.order_id LEFT JOIN (SELECT line.organization_id, line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.void_flag = 0 AND (ful.LOC_ID is null OR  UPPER(ful.LOC_ID) <>  UPPER(src.LOC_ID)) GROUP BY line.organization_id, line.order_id) ship_order ON xom_order.organization_id = ship_order.organization_id AND xom_order.order_id = ship_order.order_id WHERE xom_order.organization_id = 1000 AND  UPPER(xom_order.status_code) <> 'SUSPENDED'   AND  ( UPPER(xom_order.order_type) <> 'STANDARD_DELIVERY' ) AND ( EXISTS (SELECT line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.organization_id = xom_order.organization_id AND line.order_id = xom_order.order_id AND  UPPER(src.loc_id) = '110' AND line.void_flag = 0 AND ( UPPER(line.status_code) IN ('POLLED', 'ACCEPTED') OR (( UPPER(line.status_code) = 'RESERVED') AND (ful.loc_id IS NULL OR  UPPER(src.loc_id) <>  UPPER(ful.loc_id)))))  )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 11:56:14,961 execute [  0.728 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T11:56:14', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 11:56:27,379 execute [  0.875 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 11:56:32,268 execute [  2.099 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 11:56:32,272 execute [  0.539 ms StorePrimary] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 11:56:32,274 execute [  0.307 ms Local] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 11:56:32,276 execute [  0.471 ms StorePrimary] UPDATE ctl_device_registration SET update_date = to_date('2024-10-19T16:56:32', 'YYYY-MM-DD"T"HH24:MI:SS'), update_user_id = '100', ip_address = '10.10.28.83', date_timestamp = to_date('2024-10-19T11:56:32', 'YYYY-MM-DD"T"HH24:MI:SS'), business_date = to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS'), xstore_version = '16.0.5.0.38 - 7.0.36 - 1.54', env_version = null, active_flag = 'true', config_version = null, primary_register_flag = 'true' WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.UPDATE [Device-Registration-1]
 DEBUG [      ] 2024-10-19 11:56:32,279 execute [  0.407 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T11:56:32', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 11:56:32,282 execute [  0.375 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T11:56:32', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 11:56:32,284 execute [  0.271 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T11:56:32', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 11:56:32,286 execute [  0.245 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 ERROR [      ] 2024-10-19 11:57:33,635 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 11:57:33,635 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
 ERROR [      ] 2024-10-19 11:57:33,641 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017104711.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-1]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 11:57:33,871 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 11:57:33,872 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
 ERROR [      ] 2024-10-19 11:57:33,875 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017110705.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-1]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 11:57:34,144 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 11:57:34,146 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
 ERROR [      ] 2024-10-19 11:57:34,150 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017111605.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-1]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 DEBUG [      ] 2024-10-19 11:58:27,393 execute [  1.233 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 12:00:27,406 execute [  0.768 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 12:02:27,421 execute [  1.314 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 12:04:27,433 execute [  0.532 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 12:06:15,007 execute [  0.996 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T12:06:15', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 12:06:27,446 execute [  0.919 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 12:08:27,459 execute [  0.415 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 12:10:27,471 execute [  0.402 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 12:11:14,603 execute [  0.932 ms StorePrimary] SELECT xom_order.organization_id, xom_order.order_id, cust.first_name, cust.last_name, xom_order.order_date, xom_order.status_code, xom_order.order_type, cust.telephone1, xom_order.order_loc_id, xom_order.under_review_flag, CASE WHEN ship_order.order_id is null THEN 'FALSE' ELSE 'TRUE' END as shipping_necessary_flag FROM xom_order LEFT JOIN xom_customer_mod cust ON xom_order.organization_id = cust.organization_id AND xom_order.order_id = cust.order_id LEFT JOIN (SELECT line.organization_id, line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.void_flag = 0 AND (ful.LOC_ID is null OR  UPPER(ful.LOC_ID) <>  UPPER(src.LOC_ID)) GROUP BY line.organization_id, line.order_id) ship_order ON xom_order.organization_id = ship_order.organization_id AND xom_order.order_id = ship_order.order_id WHERE xom_order.organization_id = 1000 AND  UPPER(xom_order.status_code) <> 'SUSPENDED'   AND  ( UPPER(xom_order.order_type) <> 'STANDARD_DELIVERY' ) AND ( EXISTS (SELECT line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.organization_id = xom_order.organization_id AND line.order_id = xom_order.order_id AND  UPPER(src.loc_id) = '110' AND line.void_flag = 0 AND ( UPPER(line.status_code) IN ('POLLED', 'ACCEPTED') OR (( UPPER(line.status_code) = 'RESERVED') AND (ful.loc_id IS NULL OR  UPPER(src.loc_id) <>  UPPER(ful.loc_id)))))  )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 12:11:32,338 execute [  0.534 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 12:11:32,341 execute [  0.507 ms StorePrimary] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 12:11:32,344 execute [  0.401 ms Local] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 12:11:32,346 execute [  0.520 ms StorePrimary] UPDATE ctl_device_registration SET update_date = to_date('2024-10-19T17:11:32', 'YYYY-MM-DD"T"HH24:MI:SS'), update_user_id = '100', ip_address = '10.10.28.83', date_timestamp = to_date('2024-10-19T12:11:32', 'YYYY-MM-DD"T"HH24:MI:SS'), business_date = to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS'), xstore_version = '16.0.5.0.38 - 7.0.36 - 1.54', env_version = null, active_flag = 'true', config_version = null, primary_register_flag = 'true' WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.UPDATE [Device-Registration-1]
 DEBUG [      ] 2024-10-19 12:11:32,351 execute [  1.423 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T12:11:32', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 12:11:32,354 execute [  0.384 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T12:11:32', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 12:11:32,356 execute [  0.376 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T12:11:32', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 12:11:32,358 execute [  0.481 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 12:12:27,484 execute [  0.809 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 ERROR [      ] 2024-10-19 12:12:34,530 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 12:12:34,531 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
 ERROR [      ] 2024-10-19 12:12:34,535 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017104711.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-2]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 12:12:34,812 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 12:12:34,813 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
 ERROR [      ] 2024-10-19 12:12:34,816 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017110705.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-2]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 12:12:35,094 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 12:12:35,094 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
 ERROR [      ] 2024-10-19 12:12:35,098 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017111605.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-2]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 DEBUG [      ] 2024-10-19 12:14:27,497 execute [  1.404 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 12:16:15,048 execute [  0.517 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T12:16:15', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 12:16:27,509 execute [  0.373 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 12:18:27,522 execute [  0.416 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 12:20:27,533 execute [  0.425 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 12:22:27,549 execute [  0.437 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 12:24:27,584 execute [  0.438 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 12:26:14,702 execute [  0.915 ms StorePrimary] SELECT xom_order.organization_id, xom_order.order_id, cust.first_name, cust.last_name, xom_order.order_date, xom_order.status_code, xom_order.order_type, cust.telephone1, xom_order.order_loc_id, xom_order.under_review_flag, CASE WHEN ship_order.order_id is null THEN 'FALSE' ELSE 'TRUE' END as shipping_necessary_flag FROM xom_order LEFT JOIN xom_customer_mod cust ON xom_order.organization_id = cust.organization_id AND xom_order.order_id = cust.order_id LEFT JOIN (SELECT line.organization_id, line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.void_flag = 0 AND (ful.LOC_ID is null OR  UPPER(ful.LOC_ID) <>  UPPER(src.LOC_ID)) GROUP BY line.organization_id, line.order_id) ship_order ON xom_order.organization_id = ship_order.organization_id AND xom_order.order_id = ship_order.order_id WHERE xom_order.organization_id = 1000 AND  UPPER(xom_order.status_code) <> 'SUSPENDED'   AND  ( UPPER(xom_order.order_type) <> 'STANDARD_DELIVERY' ) AND ( EXISTS (SELECT line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.organization_id = xom_order.organization_id AND line.order_id = xom_order.order_id AND  UPPER(src.loc_id) = '110' AND line.void_flag = 0 AND ( UPPER(line.status_code) IN ('POLLED', 'ACCEPTED') OR (( UPPER(line.status_code) = 'RESERVED') AND (ful.loc_id IS NULL OR  UPPER(src.loc_id) <>  UPPER(ful.loc_id)))))  )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 12:26:15,132 execute [  1.081 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T12:26:15', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 12:26:27,621 execute [  1.589 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 12:26:32,454 execute [  1.224 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 12:26:32,458 execute [  0.529 ms StorePrimary] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 12:26:32,460 execute [  0.394 ms Local] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 12:26:32,473 execute [  0.754 ms StorePrimary] UPDATE ctl_device_registration SET update_date = to_date('2024-10-19T17:26:32', 'YYYY-MM-DD"T"HH24:MI:SS'), update_user_id = '100', ip_address = '10.10.28.83', date_timestamp = to_date('2024-10-19T12:26:32', 'YYYY-MM-DD"T"HH24:MI:SS'), business_date = to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS'), xstore_version = '16.0.5.0.38 - 7.0.36 - 1.54', env_version = null, active_flag = 'true', config_version = null, primary_register_flag = 'true' WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.UPDATE [Device-Registration-1]
 DEBUG [      ] 2024-10-19 12:26:32,502 execute [  0.614 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T12:26:32', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 12:26:32,504 execute [  0.367 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T12:26:32', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 12:26:32,507 execute [  0.399 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T12:26:32', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 12:26:32,509 execute [  0.347 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 ERROR [      ] 2024-10-19 12:27:35,501 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 12:27:35,502 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
 ERROR [      ] 2024-10-19 12:27:35,506 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017104711.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-2]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 12:27:35,797 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 12:27:35,798 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
 ERROR [      ] 2024-10-19 12:27:35,802 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017110705.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-2]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 12:27:36,086 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 12:27:36,086 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
 ERROR [      ] 2024-10-19 12:27:36,090 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017111605.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-2]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 DEBUG [      ] 2024-10-19 12:28:27,654 execute [  0.378 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 12:30:27,687 execute [  0.803 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 12:32:27,720 execute [  1.102 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 12:34:27,751 execute [  1.274 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 12:36:15,271 execute [  0.579 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T12:36:15', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 12:36:27,783 execute [  0.375 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 12:38:27,811 execute [  0.376 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 12:40:27,840 execute [  0.386 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 12:41:14,901 execute [  0.785 ms StorePrimary] SELECT xom_order.organization_id, xom_order.order_id, cust.first_name, cust.last_name, xom_order.order_date, xom_order.status_code, xom_order.order_type, cust.telephone1, xom_order.order_loc_id, xom_order.under_review_flag, CASE WHEN ship_order.order_id is null THEN 'FALSE' ELSE 'TRUE' END as shipping_necessary_flag FROM xom_order LEFT JOIN xom_customer_mod cust ON xom_order.organization_id = cust.organization_id AND xom_order.order_id = cust.order_id LEFT JOIN (SELECT line.organization_id, line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.void_flag = 0 AND (ful.LOC_ID is null OR  UPPER(ful.LOC_ID) <>  UPPER(src.LOC_ID)) GROUP BY line.organization_id, line.order_id) ship_order ON xom_order.organization_id = ship_order.organization_id AND xom_order.order_id = ship_order.order_id WHERE xom_order.organization_id = 1000 AND  UPPER(xom_order.status_code) <> 'SUSPENDED'   AND  ( UPPER(xom_order.order_type) <> 'STANDARD_DELIVERY' ) AND ( EXISTS (SELECT line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.organization_id = xom_order.organization_id AND line.order_id = xom_order.order_id AND  UPPER(src.loc_id) = '110' AND line.void_flag = 0 AND ( UPPER(line.status_code) IN ('POLLED', 'ACCEPTED') OR (( UPPER(line.status_code) = 'RESERVED') AND (ful.loc_id IS NULL OR  UPPER(src.loc_id) <>  UPPER(ful.loc_id)))))  )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 12:41:32,695 execute [  0.528 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 12:41:32,698 execute [  0.525 ms StorePrimary] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 12:41:32,700 execute [  0.316 ms Local] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 12:41:32,703 execute [  0.512 ms StorePrimary] UPDATE ctl_device_registration SET update_date = to_date('2024-10-19T17:41:32', 'YYYY-MM-DD"T"HH24:MI:SS'), update_user_id = '100', ip_address = '10.10.28.83', date_timestamp = to_date('2024-10-19T12:41:32', 'YYYY-MM-DD"T"HH24:MI:SS'), business_date = to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS'), xstore_version = '16.0.5.0.38 - 7.0.36 - 1.54', env_version = null, active_flag = 'true', config_version = null, primary_register_flag = 'true' WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.UPDATE [Device-Registration-1]
 DEBUG [      ] 2024-10-19 12:41:32,711 execute [  0.885 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T12:41:32', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 12:41:32,713 execute [  0.326 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T12:41:32', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 12:41:32,715 execute [  0.294 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T12:41:32', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 12:41:32,717 execute [  0.364 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 12:42:27,869 execute [  0.767 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 ERROR [      ] 2024-10-19 12:42:36,597 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 12:42:36,598 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
 ERROR [      ] 2024-10-19 12:42:36,602 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017104711.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-4]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 12:42:36,843 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 12:42:36,844 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
 ERROR [      ] 2024-10-19 12:42:36,847 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017110705.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-4]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 12:42:37,115 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 12:42:37,116 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
 ERROR [      ] 2024-10-19 12:42:37,120 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017111605.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-4]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 DEBUG [      ] 2024-10-19 12:44:27,895 execute [  0.370 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 12:46:15,394 execute [  0.973 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T12:46:15', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 12:46:27,922 execute [  0.335 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 12:48:27,950 execute [  1.155 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 12:50:27,975 execute [  0.416 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 12:52:28,001 execute [  0.431 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 12:54:28,027 execute [  0.524 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 12:56:15,061 execute [  0.776 ms StorePrimary] SELECT xom_order.organization_id, xom_order.order_id, cust.first_name, cust.last_name, xom_order.order_date, xom_order.status_code, xom_order.order_type, cust.telephone1, xom_order.order_loc_id, xom_order.under_review_flag, CASE WHEN ship_order.order_id is null THEN 'FALSE' ELSE 'TRUE' END as shipping_necessary_flag FROM xom_order LEFT JOIN xom_customer_mod cust ON xom_order.organization_id = cust.organization_id AND xom_order.order_id = cust.order_id LEFT JOIN (SELECT line.organization_id, line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.void_flag = 0 AND (ful.LOC_ID is null OR  UPPER(ful.LOC_ID) <>  UPPER(src.LOC_ID)) GROUP BY line.organization_id, line.order_id) ship_order ON xom_order.organization_id = ship_order.organization_id AND xom_order.order_id = ship_order.order_id WHERE xom_order.organization_id = 1000 AND  UPPER(xom_order.status_code) <> 'SUSPENDED'   AND  ( UPPER(xom_order.order_type) <> 'STANDARD_DELIVERY' ) AND ( EXISTS (SELECT line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.organization_id = xom_order.organization_id AND line.order_id = xom_order.order_id AND  UPPER(src.loc_id) = '110' AND line.void_flag = 0 AND ( UPPER(line.status_code) IN ('POLLED', 'ACCEPTED') OR (( UPPER(line.status_code) = 'RESERVED') AND (ful.loc_id IS NULL OR  UPPER(src.loc_id) <>  UPPER(ful.loc_id)))))  )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 12:56:15,499 execute [  0.849 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T12:56:15', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 12:56:28,053 execute [  0.933 ms StorePrimary] SELECT t.organization_id, t.org_code, t.org_value, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.parent_code, t.parent_value, t.description, t.level_mgr, t.level_order, t.sort_order, t.inactive_flag FROM loc_org_hierarchy t WHERE organization_id = 1000  AND org_code = 'STORE'  AND org_value = '110'   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 12:56:28,056 execute [  0.554 ms StorePrimary] SELECT organization_id, org_code, org_value, create_date, create_user_id, update_date, update_user_id, parent_code, parent_value, description, level_mgr, level_order, sort_order, inactive_flag FROM loc_org_hierarchy WHERE organization_id = 1000 AND org_code = 'DISTRICT' AND org_value = '1' :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 12:56:28,057 execute [  0.205 ms StorePrimary] SELECT organization_id, org_code, org_value, create_date, create_user_id, update_date, update_user_id, parent_code, parent_value, description, level_mgr, level_order, sort_order, inactive_flag FROM loc_org_hierarchy WHERE organization_id = 1000 AND org_code = 'REGION' AND org_value = '1' :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 12:56:28,058 execute [  0.177 ms StorePrimary] SELECT organization_id, org_code, org_value, create_date, create_user_id, update_date, update_user_id, parent_code, parent_value, description, level_mgr, level_order, sort_order, inactive_flag FROM loc_org_hierarchy WHERE organization_id = 1000 AND org_code = 'CORP' AND org_value = '*' :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 12:56:28,059 execute [  0.180 ms StorePrimary] SELECT organization_id, org_code, org_value, create_date, create_user_id, update_date, update_user_id, parent_code, parent_value, description, level_mgr, level_order, sort_order, inactive_flag FROM loc_org_hierarchy WHERE organization_id = 1000 AND org_code = '*' AND org_value = '*' :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 12:56:28,060 execute [  0.445 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 12:56:32,869 execute [  1.037 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 12:56:32,872 execute [  0.396 ms StorePrimary] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 12:56:32,875 execute [  0.611 ms Local] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 12:56:32,876 execute [  0.430 ms StorePrimary] UPDATE ctl_device_registration SET update_date = to_date('2024-10-19T17:56:32', 'YYYY-MM-DD"T"HH24:MI:SS'), update_user_id = '100', ip_address = '10.10.28.83', date_timestamp = to_date('2024-10-19T12:56:32', 'YYYY-MM-DD"T"HH24:MI:SS'), business_date = to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS'), xstore_version = '16.0.5.0.38 - 7.0.36 - 1.54', env_version = null, active_flag = 'true', config_version = null, primary_register_flag = 'true' WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.UPDATE [Device-Registration-1]
 DEBUG [      ] 2024-10-19 12:56:32,879 execute [  0.323 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T12:56:32', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 12:56:32,881 execute [  0.179 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T12:56:32', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 12:56:32,883 execute [  0.186 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T12:56:32', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 12:56:32,884 execute [  0.234 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 ERROR [      ] 2024-10-19 12:57:37,647 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 12:57:37,649 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
 ERROR [      ] 2024-10-19 12:57:37,654 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017104711.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-2]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 12:57:37,943 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 12:57:37,945 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
 ERROR [      ] 2024-10-19 12:57:37,948 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017110705.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-2]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 12:57:38,258 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 12:57:38,259 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
 ERROR [      ] 2024-10-19 12:57:38,263 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017111605.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-2]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 DEBUG [      ] 2024-10-19 12:58:28,084 execute [  0.505 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 13:00:28,111 execute [  0.823 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 13:02:28,135 execute [  0.368 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 13:04:28,157 execute [  1.181 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 13:06:15,595 execute [  0.620 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T13:06:15', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 13:06:28,179 execute [  0.359 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 13:08:28,200 execute [  0.392 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 13:10:28,222 execute [  0.484 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 13:11:15,195 execute [  0.782 ms StorePrimary] SELECT xom_order.organization_id, xom_order.order_id, cust.first_name, cust.last_name, xom_order.order_date, xom_order.status_code, xom_order.order_type, cust.telephone1, xom_order.order_loc_id, xom_order.under_review_flag, CASE WHEN ship_order.order_id is null THEN 'FALSE' ELSE 'TRUE' END as shipping_necessary_flag FROM xom_order LEFT JOIN xom_customer_mod cust ON xom_order.organization_id = cust.organization_id AND xom_order.order_id = cust.order_id LEFT JOIN (SELECT line.organization_id, line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.void_flag = 0 AND (ful.LOC_ID is null OR  UPPER(ful.LOC_ID) <>  UPPER(src.LOC_ID)) GROUP BY line.organization_id, line.order_id) ship_order ON xom_order.organization_id = ship_order.organization_id AND xom_order.order_id = ship_order.order_id WHERE xom_order.organization_id = 1000 AND  UPPER(xom_order.status_code) <> 'SUSPENDED'   AND  ( UPPER(xom_order.order_type) <> 'STANDARD_DELIVERY' ) AND ( EXISTS (SELECT line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.organization_id = xom_order.organization_id AND line.order_id = xom_order.order_id AND  UPPER(src.loc_id) = '110' AND line.void_flag = 0 AND ( UPPER(line.status_code) IN ('POLLED', 'ACCEPTED') OR (( UPPER(line.status_code) = 'RESERVED') AND (ful.loc_id IS NULL OR  UPPER(src.loc_id) <>  UPPER(ful.loc_id)))))  )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 13:11:33,008 execute [  0.531 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 13:11:33,011 execute [  0.571 ms StorePrimary] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 13:11:33,015 execute [  0.393 ms Local] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 13:11:33,018 execute [  0.930 ms StorePrimary] UPDATE ctl_device_registration SET update_date = to_date('2024-10-19T18:11:33', 'YYYY-MM-DD"T"HH24:MI:SS'), update_user_id = '100', ip_address = '10.10.28.83', date_timestamp = to_date('2024-10-19T13:11:33', 'YYYY-MM-DD"T"HH24:MI:SS'), business_date = to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS'), xstore_version = '16.0.5.0.38 - 7.0.36 - 1.54', env_version = null, active_flag = 'true', config_version = null, primary_register_flag = 'true' WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.UPDATE [Device-Registration-1]
 DEBUG [      ] 2024-10-19 13:11:33,024 execute [  2.721 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T13:11:33', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 13:11:33,026 execute [  0.295 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T13:11:33', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 13:11:33,028 execute [  0.229 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T13:11:33', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 13:11:33,030 execute [  0.345 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 13:12:28,247 execute [  1.060 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 ERROR [      ] 2024-10-19 13:12:38,716 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 13:12:38,717 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
 ERROR [      ] 2024-10-19 13:12:38,722 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017104711.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-1]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 13:12:38,998 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 13:12:38,999 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
 ERROR [      ] 2024-10-19 13:12:39,002 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017110705.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-1]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 13:12:39,276 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 13:12:39,277 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
 ERROR [      ] 2024-10-19 13:12:39,280 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017111605.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-1]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 DEBUG [      ] 2024-10-19 13:14:28,267 execute [  1.498 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 13:16:15,680 execute [  0.605 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T13:16:15', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 13:16:28,287 execute [  0.370 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 13:18:28,308 execute [  0.433 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 13:20:28,328 execute [  0.427 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 13:22:28,347 execute [  0.389 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 13:24:28,366 execute [  0.415 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 13:26:15,307 execute [  0.759 ms StorePrimary] SELECT xom_order.organization_id, xom_order.order_id, cust.first_name, cust.last_name, xom_order.order_date, xom_order.status_code, xom_order.order_type, cust.telephone1, xom_order.order_loc_id, xom_order.under_review_flag, CASE WHEN ship_order.order_id is null THEN 'FALSE' ELSE 'TRUE' END as shipping_necessary_flag FROM xom_order LEFT JOIN xom_customer_mod cust ON xom_order.organization_id = cust.organization_id AND xom_order.order_id = cust.order_id LEFT JOIN (SELECT line.organization_id, line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.void_flag = 0 AND (ful.LOC_ID is null OR  UPPER(ful.LOC_ID) <>  UPPER(src.LOC_ID)) GROUP BY line.organization_id, line.order_id) ship_order ON xom_order.organization_id = ship_order.organization_id AND xom_order.order_id = ship_order.order_id WHERE xom_order.organization_id = 1000 AND  UPPER(xom_order.status_code) <> 'SUSPENDED'   AND  ( UPPER(xom_order.order_type) <> 'STANDARD_DELIVERY' ) AND ( EXISTS (SELECT line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.organization_id = xom_order.organization_id AND line.order_id = xom_order.order_id AND  UPPER(src.loc_id) = '110' AND line.void_flag = 0 AND ( UPPER(line.status_code) IN ('POLLED', 'ACCEPTED') OR (( UPPER(line.status_code) = 'RESERVED') AND (ful.loc_id IS NULL OR  UPPER(src.loc_id) <>  UPPER(ful.loc_id)))))  )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 13:26:15,754 execute [  0.388 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T13:26:15', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 13:26:28,385 execute [  0.881 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 13:26:33,133 execute [  1.335 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 13:26:33,137 execute [  0.526 ms StorePrimary] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 13:26:33,139 execute [  0.325 ms Local] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 13:26:33,141 execute [  0.502 ms StorePrimary] UPDATE ctl_device_registration SET update_date = to_date('2024-10-19T18:26:33', 'YYYY-MM-DD"T"HH24:MI:SS'), update_user_id = '100', ip_address = '10.10.28.83', date_timestamp = to_date('2024-10-19T13:26:33', 'YYYY-MM-DD"T"HH24:MI:SS'), business_date = to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS'), xstore_version = '16.0.5.0.38 - 7.0.36 - 1.54', env_version = null, active_flag = 'true', config_version = null, primary_register_flag = 'true' WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.UPDATE [Device-Registration-1]
 DEBUG [      ] 2024-10-19 13:26:33,144 execute [  0.479 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T13:26:33', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 13:26:33,147 execute [  0.337 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T13:26:33', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 13:26:33,149 execute [  0.270 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T13:26:33', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 13:26:33,150 execute [  0.189 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 ERROR [      ] 2024-10-19 13:27:39,680 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 13:27:39,682 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
 ERROR [      ] 2024-10-19 13:27:39,722 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017104711.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-1]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 13:27:39,968 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 13:27:39,969 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
 ERROR [      ] 2024-10-19 13:27:39,972 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017110705.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-1]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 13:27:40,265 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 13:27:40,266 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
 ERROR [      ] 2024-10-19 13:27:40,269 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017111605.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-1]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 DEBUG [      ] 2024-10-19 13:28:28,402 execute [  0.431 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 13:30:28,421 execute [  0.878 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 13:32:28,441 execute [  1.270 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 13:34:28,458 execute [  0.467 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 13:36:15,822 execute [  0.949 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T13:36:15', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 13:36:28,475 execute [  1.052 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 13:38:28,492 execute [  0.440 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 13:40:28,508 execute [  0.487 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 13:41:15,401 execute [  0.939 ms StorePrimary] SELECT xom_order.organization_id, xom_order.order_id, cust.first_name, cust.last_name, xom_order.order_date, xom_order.status_code, xom_order.order_type, cust.telephone1, xom_order.order_loc_id, xom_order.under_review_flag, CASE WHEN ship_order.order_id is null THEN 'FALSE' ELSE 'TRUE' END as shipping_necessary_flag FROM xom_order LEFT JOIN xom_customer_mod cust ON xom_order.organization_id = cust.organization_id AND xom_order.order_id = cust.order_id LEFT JOIN (SELECT line.organization_id, line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.void_flag = 0 AND (ful.LOC_ID is null OR  UPPER(ful.LOC_ID) <>  UPPER(src.LOC_ID)) GROUP BY line.organization_id, line.order_id) ship_order ON xom_order.organization_id = ship_order.organization_id AND xom_order.order_id = ship_order.order_id WHERE xom_order.organization_id = 1000 AND  UPPER(xom_order.status_code) <> 'SUSPENDED'   AND  ( UPPER(xom_order.order_type) <> 'STANDARD_DELIVERY' ) AND ( EXISTS (SELECT line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.organization_id = xom_order.organization_id AND line.order_id = xom_order.order_id AND  UPPER(src.loc_id) = '110' AND line.void_flag = 0 AND ( UPPER(line.status_code) IN ('POLLED', 'ACCEPTED') OR (( UPPER(line.status_code) = 'RESERVED') AND (ful.loc_id IS NULL OR  UPPER(src.loc_id) <>  UPPER(ful.loc_id)))))  )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 13:41:33,235 execute [  0.546 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 13:41:33,239 execute [  0.509 ms StorePrimary] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 13:41:33,241 execute [  0.312 ms Local] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 13:41:33,243 execute [  0.506 ms StorePrimary] UPDATE ctl_device_registration SET update_date = to_date('2024-10-19T18:41:33', 'YYYY-MM-DD"T"HH24:MI:SS'), update_user_id = '100', ip_address = '10.10.28.83', date_timestamp = to_date('2024-10-19T13:41:33', 'YYYY-MM-DD"T"HH24:MI:SS'), business_date = to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS'), xstore_version = '16.0.5.0.38 - 7.0.36 - 1.54', env_version = null, active_flag = 'true', config_version = null, primary_register_flag = 'true' WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.UPDATE [Device-Registration-1]
 DEBUG [      ] 2024-10-19 13:41:33,249 execute [  0.809 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T13:41:33', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 13:41:33,251 execute [  0.281 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T13:41:33', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 13:41:33,253 execute [  0.327 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T13:41:33', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 13:41:33,255 execute [  0.350 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 13:42:28,526 execute [  0.807 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 ERROR [      ] 2024-10-19 13:42:40,668 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 13:42:40,669 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
 ERROR [      ] 2024-10-19 13:42:40,673 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017104711.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-2]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 13:42:40,901 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 13:42:40,902 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
 ERROR [      ] 2024-10-19 13:42:40,905 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017110705.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-2]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 13:42:41,159 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 13:42:41,160 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
 ERROR [      ] 2024-10-19 13:42:41,163 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017111605.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-2]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 DEBUG [      ] 2024-10-19 13:44:28,542 execute [  0.383 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 13:46:15,882 execute [  0.546 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T13:46:15', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 13:46:28,558 execute [  1.047 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 13:48:28,575 execute [  0.406 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 13:50:28,590 execute [  0.348 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 13:52:28,604 execute [  0.367 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 13:54:28,620 execute [  0.384 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 13:56:15,482 execute [  0.824 ms StorePrimary] SELECT xom_order.organization_id, xom_order.order_id, cust.first_name, cust.last_name, xom_order.order_date, xom_order.status_code, xom_order.order_type, cust.telephone1, xom_order.order_loc_id, xom_order.under_review_flag, CASE WHEN ship_order.order_id is null THEN 'FALSE' ELSE 'TRUE' END as shipping_necessary_flag FROM xom_order LEFT JOIN xom_customer_mod cust ON xom_order.organization_id = cust.organization_id AND xom_order.order_id = cust.order_id LEFT JOIN (SELECT line.organization_id, line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.void_flag = 0 AND (ful.LOC_ID is null OR  UPPER(ful.LOC_ID) <>  UPPER(src.LOC_ID)) GROUP BY line.organization_id, line.order_id) ship_order ON xom_order.organization_id = ship_order.organization_id AND xom_order.order_id = ship_order.order_id WHERE xom_order.organization_id = 1000 AND  UPPER(xom_order.status_code) <> 'SUSPENDED'   AND  ( UPPER(xom_order.order_type) <> 'STANDARD_DELIVERY' ) AND ( EXISTS (SELECT line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.organization_id = xom_order.organization_id AND line.order_id = xom_order.order_id AND  UPPER(src.loc_id) = '110' AND line.void_flag = 0 AND ( UPPER(line.status_code) IN ('POLLED', 'ACCEPTED') OR (( UPPER(line.status_code) = 'RESERVED') AND (ful.loc_id IS NULL OR  UPPER(src.loc_id) <>  UPPER(ful.loc_id)))))  )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 13:56:15,937 execute [  0.734 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T13:56:15', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 13:56:28,635 execute [  0.844 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 13:56:33,328 execute [  1.194 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 13:56:33,332 execute [  0.531 ms StorePrimary] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 13:56:33,334 execute [  0.390 ms Local] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 13:56:33,336 execute [  0.568 ms StorePrimary] UPDATE ctl_device_registration SET update_date = to_date('2024-10-19T18:56:33', 'YYYY-MM-DD"T"HH24:MI:SS'), update_user_id = '100', ip_address = '10.10.28.83', date_timestamp = to_date('2024-10-19T13:56:33', 'YYYY-MM-DD"T"HH24:MI:SS'), business_date = to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS'), xstore_version = '16.0.5.0.38 - 7.0.36 - 1.54', env_version = null, active_flag = 'true', config_version = null, primary_register_flag = 'true' WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.UPDATE [Device-Registration-1]
 DEBUG [      ] 2024-10-19 13:56:33,339 execute [  0.378 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T13:56:33', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 13:56:33,341 execute [  0.188 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T13:56:33', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 13:56:33,342 execute [  0.199 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T13:56:33', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 13:56:33,344 execute [  0.234 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 ERROR [      ] 2024-10-19 13:57:41,515 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 13:57:41,516 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
 ERROR [      ] 2024-10-19 13:57:41,521 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017104711.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-1]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 13:57:41,804 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 13:57:41,805 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
 ERROR [      ] 2024-10-19 13:57:41,810 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017110705.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-1]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 13:57:42,039 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 13:57:42,040 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
 ERROR [      ] 2024-10-19 13:57:42,043 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017111605.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-1]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 DEBUG [      ] 2024-10-19 13:58:28,651 execute [  0.830 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 14:00:28,666 execute [  0.408 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 14:02:28,682 execute [  1.121 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 14:04:28,696 execute [  1.158 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 14:06:15,989 execute [  0.553 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T14:06:15', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 14:06:28,711 execute [  0.336 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 14:08:28,724 execute [  0.403 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 14:10:28,737 execute [  0.384 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 14:11:15,552 execute [  0.683 ms StorePrimary] SELECT xom_order.organization_id, xom_order.order_id, cust.first_name, cust.last_name, xom_order.order_date, xom_order.status_code, xom_order.order_type, cust.telephone1, xom_order.order_loc_id, xom_order.under_review_flag, CASE WHEN ship_order.order_id is null THEN 'FALSE' ELSE 'TRUE' END as shipping_necessary_flag FROM xom_order LEFT JOIN xom_customer_mod cust ON xom_order.organization_id = cust.organization_id AND xom_order.order_id = cust.order_id LEFT JOIN (SELECT line.organization_id, line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.void_flag = 0 AND (ful.LOC_ID is null OR  UPPER(ful.LOC_ID) <>  UPPER(src.LOC_ID)) GROUP BY line.organization_id, line.order_id) ship_order ON xom_order.organization_id = ship_order.organization_id AND xom_order.order_id = ship_order.order_id WHERE xom_order.organization_id = 1000 AND  UPPER(xom_order.status_code) <> 'SUSPENDED'   AND  ( UPPER(xom_order.order_type) <> 'STANDARD_DELIVERY' ) AND ( EXISTS (SELECT line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.organization_id = xom_order.organization_id AND line.order_id = xom_order.order_id AND  UPPER(src.loc_id) = '110' AND line.void_flag = 0 AND ( UPPER(line.status_code) IN ('POLLED', 'ACCEPTED') OR (( UPPER(line.status_code) = 'RESERVED') AND (ful.loc_id IS NULL OR  UPPER(src.loc_id) <>  UPPER(ful.loc_id)))))  )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 14:11:33,406 execute [  0.579 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 14:11:33,409 execute [  0.485 ms StorePrimary] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 14:11:33,411 execute [  0.336 ms Local] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 14:11:33,414 execute [  0.560 ms StorePrimary] UPDATE ctl_device_registration SET update_date = to_date('2024-10-19T19:11:33', 'YYYY-MM-DD"T"HH24:MI:SS'), update_user_id = '100', ip_address = '10.10.28.83', date_timestamp = to_date('2024-10-19T14:11:33', 'YYYY-MM-DD"T"HH24:MI:SS'), business_date = to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS'), xstore_version = '16.0.5.0.38 - 7.0.36 - 1.54', env_version = null, active_flag = 'true', config_version = null, primary_register_flag = 'true' WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.UPDATE [Device-Registration-1]
 DEBUG [      ] 2024-10-19 14:11:33,420 execute [  2.424 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T14:11:33', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 14:11:33,423 execute [  0.337 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T14:11:33', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 14:11:33,426 execute [  0.289 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T14:11:33', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 14:11:33,427 execute [  0.346 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 14:12:28,752 execute [  0.883 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 ERROR [      ] 2024-10-19 14:12:42,406 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 14:12:42,408 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
 ERROR [      ] 2024-10-19 14:12:42,412 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017104711.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-4]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 14:12:42,670 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 14:12:42,671 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
 ERROR [      ] 2024-10-19 14:12:42,675 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017110705.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-4]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 14:12:42,944 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 14:12:42,945 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
 ERROR [      ] 2024-10-19 14:12:42,948 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017111605.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-4]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 DEBUG [      ] 2024-10-19 14:14:28,765 execute [  0.371 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 14:16:16,036 execute [  0.556 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T14:16:16', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 14:16:28,779 execute [  1.145 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 14:18:28,791 execute [  0.396 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 14:20:28,803 execute [  0.362 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 14:22:28,816 execute [  0.426 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 14:24:28,828 execute [  0.443 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 14:26:15,612 execute [  0.789 ms StorePrimary] SELECT xom_order.organization_id, xom_order.order_id, cust.first_name, cust.last_name, xom_order.order_date, xom_order.status_code, xom_order.order_type, cust.telephone1, xom_order.order_loc_id, xom_order.under_review_flag, CASE WHEN ship_order.order_id is null THEN 'FALSE' ELSE 'TRUE' END as shipping_necessary_flag FROM xom_order LEFT JOIN xom_customer_mod cust ON xom_order.organization_id = cust.organization_id AND xom_order.order_id = cust.order_id LEFT JOIN (SELECT line.organization_id, line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.void_flag = 0 AND (ful.LOC_ID is null OR  UPPER(ful.LOC_ID) <>  UPPER(src.LOC_ID)) GROUP BY line.organization_id, line.order_id) ship_order ON xom_order.organization_id = ship_order.organization_id AND xom_order.order_id = ship_order.order_id WHERE xom_order.organization_id = 1000 AND  UPPER(xom_order.status_code) <> 'SUSPENDED'   AND  ( UPPER(xom_order.order_type) <> 'STANDARD_DELIVERY' ) AND ( EXISTS (SELECT line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.organization_id = xom_order.organization_id AND line.order_id = xom_order.order_id AND  UPPER(src.loc_id) = '110' AND line.void_flag = 0 AND ( UPPER(line.status_code) IN ('POLLED', 'ACCEPTED') OR (( UPPER(line.status_code) = 'RESERVED') AND (ful.loc_id IS NULL OR  UPPER(src.loc_id) <>  UPPER(ful.loc_id)))))  )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 14:26:16,077 execute [  0.348 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T14:26:16', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 14:26:28,843 execute [  0.855 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 14:26:33,479 execute [  1.190 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 14:26:33,483 execute [  0.476 ms StorePrimary] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 14:26:33,485 execute [  0.350 ms Local] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 14:26:33,487 execute [  0.455 ms StorePrimary] UPDATE ctl_device_registration SET update_date = to_date('2024-10-19T19:26:33', 'YYYY-MM-DD"T"HH24:MI:SS'), update_user_id = '100', ip_address = '10.10.28.83', date_timestamp = to_date('2024-10-19T14:26:33', 'YYYY-MM-DD"T"HH24:MI:SS'), business_date = to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS'), xstore_version = '16.0.5.0.38 - 7.0.36 - 1.54', env_version = null, active_flag = 'true', config_version = null, primary_register_flag = 'true' WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.UPDATE [Device-Registration-1]
 DEBUG [      ] 2024-10-19 14:26:33,489 execute [  0.368 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T14:26:33', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 14:26:33,492 execute [  0.254 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T14:26:33', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 14:26:33,493 execute [  0.222 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T14:26:33', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 14:26:33,495 execute [  0.173 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 ERROR [      ] 2024-10-19 14:27:43,339 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 14:27:43,340 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
 ERROR [      ] 2024-10-19 14:27:43,344 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017104711.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-4]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 14:27:43,622 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 14:27:43,623 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
 ERROR [      ] 2024-10-19 14:27:43,626 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017110705.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-4]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 14:27:43,891 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 14:27:43,891 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
 ERROR [      ] 2024-10-19 14:27:43,894 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017111605.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-4]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 DEBUG [      ] 2024-10-19 14:28:28,855 execute [  0.807 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 14:30:28,867 execute [  0.417 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 14:32:28,881 execute [  1.235 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 14:34:28,893 execute [  0.410 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 14:36:16,120 execute [  0.970 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T14:36:16', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 14:36:28,904 execute [  0.779 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 14:38:28,915 execute [  0.480 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 14:40:28,926 execute [  0.386 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 14:41:15,667 execute [  0.828 ms StorePrimary] SELECT xom_order.organization_id, xom_order.order_id, cust.first_name, cust.last_name, xom_order.order_date, xom_order.status_code, xom_order.order_type, cust.telephone1, xom_order.order_loc_id, xom_order.under_review_flag, CASE WHEN ship_order.order_id is null THEN 'FALSE' ELSE 'TRUE' END as shipping_necessary_flag FROM xom_order LEFT JOIN xom_customer_mod cust ON xom_order.organization_id = cust.organization_id AND xom_order.order_id = cust.order_id LEFT JOIN (SELECT line.organization_id, line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.void_flag = 0 AND (ful.LOC_ID is null OR  UPPER(ful.LOC_ID) <>  UPPER(src.LOC_ID)) GROUP BY line.organization_id, line.order_id) ship_order ON xom_order.organization_id = ship_order.organization_id AND xom_order.order_id = ship_order.order_id WHERE xom_order.organization_id = 1000 AND  UPPER(xom_order.status_code) <> 'SUSPENDED'   AND  ( UPPER(xom_order.order_type) <> 'STANDARD_DELIVERY' ) AND ( EXISTS (SELECT line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.organization_id = xom_order.organization_id AND line.order_id = xom_order.order_id AND  UPPER(src.loc_id) = '110' AND line.void_flag = 0 AND ( UPPER(line.status_code) IN ('POLLED', 'ACCEPTED') OR (( UPPER(line.status_code) = 'RESERVED') AND (ful.loc_id IS NULL OR  UPPER(src.loc_id) <>  UPPER(ful.loc_id)))))  )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 14:41:33,539 execute [  0.497 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 14:41:33,543 execute [  0.590 ms StorePrimary] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 14:41:33,545 execute [  0.352 ms Local] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 14:41:33,549 execute [  2.201 ms StorePrimary] UPDATE ctl_device_registration SET update_date = to_date('2024-10-19T19:41:33', 'YYYY-MM-DD"T"HH24:MI:SS'), update_user_id = '100', ip_address = '10.10.28.83', date_timestamp = to_date('2024-10-19T14:41:33', 'YYYY-MM-DD"T"HH24:MI:SS'), business_date = to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS'), xstore_version = '16.0.5.0.38 - 7.0.36 - 1.54', env_version = null, active_flag = 'true', config_version = null, primary_register_flag = 'true' WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.UPDATE [Device-Registration-1]
 DEBUG [      ] 2024-10-19 14:41:33,554 execute [  1.647 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T14:41:33', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 14:41:33,557 execute [  0.392 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T14:41:33', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 14:41:33,559 execute [  0.332 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T14:41:33', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 14:41:33,561 execute [  0.430 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 14:42:28,938 execute [  0.892 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 ERROR [      ] 2024-10-19 14:42:44,256 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 14:42:44,257 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
 ERROR [      ] 2024-10-19 14:42:44,261 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017104711.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-1]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 14:42:44,515 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 14:42:44,516 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
 ERROR [      ] 2024-10-19 14:42:44,519 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017110705.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-1]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 14:42:44,766 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 14:42:44,767 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
 ERROR [      ] 2024-10-19 14:42:44,770 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017111605.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-1]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 DEBUG [      ] 2024-10-19 14:44:28,949 execute [  1.323 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 14:46:16,157 execute [  0.546 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T14:46:16', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 14:46:28,960 execute [  0.416 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 14:48:28,970 execute [  0.451 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 14:50:28,980 execute [  0.420 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 14:52:28,991 execute [  0.427 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 14:54:29,001 execute [  0.360 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 14:56:15,717 execute [  0.809 ms StorePrimary] SELECT xom_order.organization_id, xom_order.order_id, cust.first_name, cust.last_name, xom_order.order_date, xom_order.status_code, xom_order.order_type, cust.telephone1, xom_order.order_loc_id, xom_order.under_review_flag, CASE WHEN ship_order.order_id is null THEN 'FALSE' ELSE 'TRUE' END as shipping_necessary_flag FROM xom_order LEFT JOIN xom_customer_mod cust ON xom_order.organization_id = cust.organization_id AND xom_order.order_id = cust.order_id LEFT JOIN (SELECT line.organization_id, line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.void_flag = 0 AND (ful.LOC_ID is null OR  UPPER(ful.LOC_ID) <>  UPPER(src.LOC_ID)) GROUP BY line.organization_id, line.order_id) ship_order ON xom_order.organization_id = ship_order.organization_id AND xom_order.order_id = ship_order.order_id WHERE xom_order.organization_id = 1000 AND  UPPER(xom_order.status_code) <> 'SUSPENDED'   AND  ( UPPER(xom_order.order_type) <> 'STANDARD_DELIVERY' ) AND ( EXISTS (SELECT line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.organization_id = xom_order.organization_id AND line.order_id = xom_order.order_id AND  UPPER(src.loc_id) = '110' AND line.void_flag = 0 AND ( UPPER(line.status_code) IN ('POLLED', 'ACCEPTED') OR (( UPPER(line.status_code) = 'RESERVED') AND (ful.loc_id IS NULL OR  UPPER(src.loc_id) <>  UPPER(ful.loc_id)))))  )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 14:56:16,192 execute [  0.390 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T14:56:16', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 14:56:29,013 execute [  0.831 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 14:56:33,602 execute [  1.194 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 14:56:33,605 execute [  0.448 ms StorePrimary] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 14:56:33,607 execute [  0.356 ms Local] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 14:56:33,609 execute [  0.480 ms StorePrimary] UPDATE ctl_device_registration SET update_date = to_date('2024-10-19T19:56:33', 'YYYY-MM-DD"T"HH24:MI:SS'), update_user_id = '100', ip_address = '10.10.28.83', date_timestamp = to_date('2024-10-19T14:56:33', 'YYYY-MM-DD"T"HH24:MI:SS'), business_date = to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS'), xstore_version = '16.0.5.0.38 - 7.0.36 - 1.54', env_version = null, active_flag = 'true', config_version = null, primary_register_flag = 'true' WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.UPDATE [Device-Registration-1]
 DEBUG [      ] 2024-10-19 14:56:33,612 execute [  0.363 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T14:56:33', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 14:56:33,613 execute [  0.212 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T14:56:33', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 14:56:33,615 execute [  0.231 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T14:56:33', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 14:56:33,617 execute [  0.203 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 ERROR [      ] 2024-10-19 14:57:45,133 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 14:57:45,133 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
 ERROR [      ] 2024-10-19 14:57:45,137 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017104711.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-4]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 14:57:45,405 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 14:57:45,406 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
 ERROR [      ] 2024-10-19 14:57:45,409 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017110705.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-4]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 14:57:45,667 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 14:57:45,667 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
 ERROR [      ] 2024-10-19 14:57:45,670 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017111605.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-4]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 DEBUG [      ] 2024-10-19 14:58:29,024 execute [  0.486 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 15:00:29,035 execute [  0.802 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 15:02:29,083 execute [  1.343 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 15:04:29,094 execute [  0.375 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 15:06:16,226 execute [  1.195 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T15:06:16', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 15:06:29,104 execute [  1.020 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 15:08:29,114 execute [  0.416 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 15:10:29,124 execute [  0.447 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 15:11:15,761 execute [  0.852 ms StorePrimary] SELECT xom_order.organization_id, xom_order.order_id, cust.first_name, cust.last_name, xom_order.order_date, xom_order.status_code, xom_order.order_type, cust.telephone1, xom_order.order_loc_id, xom_order.under_review_flag, CASE WHEN ship_order.order_id is null THEN 'FALSE' ELSE 'TRUE' END as shipping_necessary_flag FROM xom_order LEFT JOIN xom_customer_mod cust ON xom_order.organization_id = cust.organization_id AND xom_order.order_id = cust.order_id LEFT JOIN (SELECT line.organization_id, line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.void_flag = 0 AND (ful.LOC_ID is null OR  UPPER(ful.LOC_ID) <>  UPPER(src.LOC_ID)) GROUP BY line.organization_id, line.order_id) ship_order ON xom_order.organization_id = ship_order.organization_id AND xom_order.order_id = ship_order.order_id WHERE xom_order.organization_id = 1000 AND  UPPER(xom_order.status_code) <> 'SUSPENDED'   AND  ( UPPER(xom_order.order_type) <> 'STANDARD_DELIVERY' ) AND ( EXISTS (SELECT line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.organization_id = xom_order.organization_id AND line.order_id = xom_order.order_id AND  UPPER(src.loc_id) = '110' AND line.void_flag = 0 AND ( UPPER(line.status_code) IN ('POLLED', 'ACCEPTED') OR (( UPPER(line.status_code) = 'RESERVED') AND (ful.loc_id IS NULL OR  UPPER(src.loc_id) <>  UPPER(ful.loc_id)))))  )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 15:11:33,652 execute [  0.563 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 15:11:33,655 execute [  0.526 ms StorePrimary] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 15:11:33,657 execute [  0.293 ms Local] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 15:11:33,660 execute [  0.540 ms StorePrimary] UPDATE ctl_device_registration SET update_date = to_date('2024-10-19T20:11:33', 'YYYY-MM-DD"T"HH24:MI:SS'), update_user_id = '100', ip_address = '10.10.28.83', date_timestamp = to_date('2024-10-19T15:11:33', 'YYYY-MM-DD"T"HH24:MI:SS'), business_date = to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS'), xstore_version = '16.0.5.0.38 - 7.0.36 - 1.54', env_version = null, active_flag = 'true', config_version = null, primary_register_flag = 'true' WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.UPDATE [Device-Registration-1]
 DEBUG [      ] 2024-10-19 15:11:33,674 execute [  0.844 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T15:11:33', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 15:11:33,702 execute [  0.351 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T15:11:33', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 15:11:33,704 execute [  0.255 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T15:11:33', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 15:11:33,706 execute [  0.387 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 15:12:29,134 execute [  0.791 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 ERROR [      ] 2024-10-19 15:12:45,971 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 15:12:45,972 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
 ERROR [      ] 2024-10-19 15:12:45,976 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017104711.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-2]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 15:12:46,250 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 15:12:46,251 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
 ERROR [      ] 2024-10-19 15:12:46,254 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017110705.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-2]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 15:12:46,514 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 15:12:46,514 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
 ERROR [      ] 2024-10-19 15:12:46,518 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017111605.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-2]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 DEBUG [      ] 2024-10-19 15:14:29,144 execute [  0.473 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 15:16:16,257 execute [  0.509 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T15:16:16', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 15:16:29,155 execute [  1.030 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 15:18:29,164 execute [  0.526 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 15:20:29,173 execute [  0.400 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 15:22:29,182 execute [  0.350 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 15:24:29,193 execute [  0.399 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 15:26:15,802 execute [  0.745 ms StorePrimary] SELECT xom_order.organization_id, xom_order.order_id, cust.first_name, cust.last_name, xom_order.order_date, xom_order.status_code, xom_order.order_type, cust.telephone1, xom_order.order_loc_id, xom_order.under_review_flag, CASE WHEN ship_order.order_id is null THEN 'FALSE' ELSE 'TRUE' END as shipping_necessary_flag FROM xom_order LEFT JOIN xom_customer_mod cust ON xom_order.organization_id = cust.organization_id AND xom_order.order_id = cust.order_id LEFT JOIN (SELECT line.organization_id, line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.void_flag = 0 AND (ful.LOC_ID is null OR  UPPER(ful.LOC_ID) <>  UPPER(src.LOC_ID)) GROUP BY line.organization_id, line.order_id) ship_order ON xom_order.organization_id = ship_order.organization_id AND xom_order.order_id = ship_order.order_id WHERE xom_order.organization_id = 1000 AND  UPPER(xom_order.status_code) <> 'SUSPENDED'   AND  ( UPPER(xom_order.order_type) <> 'STANDARD_DELIVERY' ) AND ( EXISTS (SELECT line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.organization_id = xom_order.organization_id AND line.order_id = xom_order.order_id AND  UPPER(src.loc_id) = '110' AND line.void_flag = 0 AND ( UPPER(line.status_code) IN ('POLLED', 'ACCEPTED') OR (( UPPER(line.status_code) = 'RESERVED') AND (ful.loc_id IS NULL OR  UPPER(src.loc_id) <>  UPPER(ful.loc_id)))))  )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 15:26:16,285 execute [  1.107 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T15:26:16', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 15:26:29,204 execute [  0.780 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 15:26:33,740 execute [  2.720 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 15:26:33,743 execute [  0.442 ms StorePrimary] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 15:26:33,746 execute [  0.796 ms Local] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 15:26:33,749 execute [  0.510 ms StorePrimary] UPDATE ctl_device_registration SET update_date = to_date('2024-10-19T20:26:33', 'YYYY-MM-DD"T"HH24:MI:SS'), update_user_id = '100', ip_address = '10.10.28.83', date_timestamp = to_date('2024-10-19T15:26:33', 'YYYY-MM-DD"T"HH24:MI:SS'), business_date = to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS'), xstore_version = '16.0.5.0.38 - 7.0.36 - 1.54', env_version = null, active_flag = 'true', config_version = null, primary_register_flag = 'true' WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.UPDATE [Device-Registration-1]
 DEBUG [      ] 2024-10-19 15:26:33,751 execute [  0.366 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T15:26:33', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 15:26:33,753 execute [  0.226 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T15:26:33', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 15:26:33,755 execute [  0.226 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T15:26:33', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 15:26:33,756 execute [  0.191 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 ERROR [      ] 2024-10-19 15:27:46,784 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 15:27:46,785 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
 ERROR [      ] 2024-10-19 15:27:46,789 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017104711.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-2]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 15:27:47,047 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 15:27:47,048 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
 ERROR [      ] 2024-10-19 15:27:47,051 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017110705.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-2]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 15:27:47,308 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 15:27:47,309 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
 ERROR [      ] 2024-10-19 15:27:47,312 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017111605.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-2]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 DEBUG [      ] 2024-10-19 15:28:29,214 execute [  0.397 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 15:30:29,223 execute [  0.783 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 15:32:29,235 execute [  1.209 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 15:34:29,247 execute [  0.429 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 15:36:16,313 execute [  0.948 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T15:36:16', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 15:36:29,256 execute [  1.099 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 15:38:29,266 execute [  0.392 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 15:40:29,276 execute [  0.406 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 15:41:15,839 execute [  0.722 ms StorePrimary] SELECT xom_order.organization_id, xom_order.order_id, cust.first_name, cust.last_name, xom_order.order_date, xom_order.status_code, xom_order.order_type, cust.telephone1, xom_order.order_loc_id, xom_order.under_review_flag, CASE WHEN ship_order.order_id is null THEN 'FALSE' ELSE 'TRUE' END as shipping_necessary_flag FROM xom_order LEFT JOIN xom_customer_mod cust ON xom_order.organization_id = cust.organization_id AND xom_order.order_id = cust.order_id LEFT JOIN (SELECT line.organization_id, line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.void_flag = 0 AND (ful.LOC_ID is null OR  UPPER(ful.LOC_ID) <>  UPPER(src.LOC_ID)) GROUP BY line.organization_id, line.order_id) ship_order ON xom_order.organization_id = ship_order.organization_id AND xom_order.order_id = ship_order.order_id WHERE xom_order.organization_id = 1000 AND  UPPER(xom_order.status_code) <> 'SUSPENDED'   AND  ( UPPER(xom_order.order_type) <> 'STANDARD_DELIVERY' ) AND ( EXISTS (SELECT line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.organization_id = xom_order.organization_id AND line.order_id = xom_order.order_id AND  UPPER(src.loc_id) = '110' AND line.void_flag = 0 AND ( UPPER(line.status_code) IN ('POLLED', 'ACCEPTED') OR (( UPPER(line.status_code) = 'RESERVED') AND (ful.loc_id IS NULL OR  UPPER(src.loc_id) <>  UPPER(ful.loc_id)))))  )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 15:41:33,785 execute [  0.559 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 15:41:33,788 execute [  0.498 ms StorePrimary] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 15:41:33,790 execute [  0.357 ms Local] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 15:41:33,792 execute [  0.610 ms StorePrimary] UPDATE ctl_device_registration SET update_date = to_date('2024-10-19T20:41:33', 'YYYY-MM-DD"T"HH24:MI:SS'), update_user_id = '100', ip_address = '10.10.28.83', date_timestamp = to_date('2024-10-19T15:41:33', 'YYYY-MM-DD"T"HH24:MI:SS'), business_date = to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS'), xstore_version = '16.0.5.0.38 - 7.0.36 - 1.54', env_version = null, active_flag = 'true', config_version = null, primary_register_flag = 'true' WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.UPDATE [Device-Registration-1]
 DEBUG [      ] 2024-10-19 15:41:33,798 execute [  1.443 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T15:41:33', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 15:41:33,800 execute [  0.283 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T15:41:33', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 15:41:33,802 execute [  0.304 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T15:41:33', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 15:41:33,804 execute [  0.347 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 15:42:29,287 execute [  0.751 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 ERROR [      ] 2024-10-19 15:42:47,638 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 15:42:47,639 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
 ERROR [      ] 2024-10-19 15:42:47,643 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017104711.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-1]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 15:42:47,903 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 15:42:47,903 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
 ERROR [      ] 2024-10-19 15:42:47,907 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017110705.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-1]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 15:42:48,172 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 15:42:48,173 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
 ERROR [      ] 2024-10-19 15:42:48,176 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017111605.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-1]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 DEBUG [      ] 2024-10-19 15:44:29,296 execute [  0.384 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 15:46:16,376 execute [  0.590 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T15:46:16', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 15:46:29,307 execute [  1.356 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 15:48:29,318 execute [  0.393 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 15:50:29,327 execute [  0.375 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 15:52:29,336 execute [  0.384 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 15:54:29,344 execute [  0.372 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 15:56:15,873 execute [  0.827 ms StorePrimary] SELECT xom_order.organization_id, xom_order.order_id, cust.first_name, cust.last_name, xom_order.order_date, xom_order.status_code, xom_order.order_type, cust.telephone1, xom_order.order_loc_id, xom_order.under_review_flag, CASE WHEN ship_order.order_id is null THEN 'FALSE' ELSE 'TRUE' END as shipping_necessary_flag FROM xom_order LEFT JOIN xom_customer_mod cust ON xom_order.organization_id = cust.organization_id AND xom_order.order_id = cust.order_id LEFT JOIN (SELECT line.organization_id, line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.void_flag = 0 AND (ful.LOC_ID is null OR  UPPER(ful.LOC_ID) <>  UPPER(src.LOC_ID)) GROUP BY line.organization_id, line.order_id) ship_order ON xom_order.organization_id = ship_order.organization_id AND xom_order.order_id = ship_order.order_id WHERE xom_order.organization_id = 1000 AND  UPPER(xom_order.status_code) <> 'SUSPENDED'   AND  ( UPPER(xom_order.order_type) <> 'STANDARD_DELIVERY' ) AND ( EXISTS (SELECT line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.organization_id = xom_order.organization_id AND line.order_id = xom_order.order_id AND  UPPER(src.loc_id) = '110' AND line.void_flag = 0 AND ( UPPER(line.status_code) IN ('POLLED', 'ACCEPTED') OR (( UPPER(line.status_code) = 'RESERVED') AND (ful.loc_id IS NULL OR  UPPER(src.loc_id) <>  UPPER(ful.loc_id)))))  )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 15:56:16,402 execute [  0.782 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T15:56:16', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 15:56:29,354 execute [  0.718 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 15:56:33,832 execute [  1.176 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 15:56:33,835 execute [  0.492 ms StorePrimary] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 15:56:33,838 execute [  0.430 ms Local] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 15:56:33,840 execute [  0.544 ms StorePrimary] UPDATE ctl_device_registration SET update_date = to_date('2024-10-19T20:56:33', 'YYYY-MM-DD"T"HH24:MI:SS'), update_user_id = '100', ip_address = '10.10.28.83', date_timestamp = to_date('2024-10-19T15:56:33', 'YYYY-MM-DD"T"HH24:MI:SS'), business_date = to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS'), xstore_version = '16.0.5.0.38 - 7.0.36 - 1.54', env_version = null, active_flag = 'true', config_version = null, primary_register_flag = 'true' WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.UPDATE [Device-Registration-1]
 DEBUG [      ] 2024-10-19 15:56:33,844 execute [  0.428 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T15:56:33', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 15:56:33,845 execute [  0.226 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T15:56:33', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 15:56:33,847 execute [  0.191 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T15:56:33', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 15:56:33,848 execute [  0.158 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 ERROR [      ] 2024-10-19 15:57:48,547 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 15:57:48,548 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
 ERROR [      ] 2024-10-19 15:57:48,553 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017104711.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-4]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 15:57:48,818 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 15:57:48,819 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
 ERROR [      ] 2024-10-19 15:57:48,822 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017110705.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-4]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 15:57:49,040 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 15:57:49,041 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
 ERROR [      ] 2024-10-19 15:57:49,044 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017111605.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-4]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 DEBUG [      ] 2024-10-19 15:58:29,377 execute [  0.374 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 16:00:29,385 execute [  0.794 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 16:02:29,396 execute [  1.206 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 16:04:29,405 execute [  0.998 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 16:06:16,429 execute [  0.617 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T16:06:16', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 16:06:29,414 execute [  0.376 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 16:08:29,423 execute [  0.391 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 16:10:29,431 execute [  0.417 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 16:11:15,907 execute [  0.759 ms StorePrimary] SELECT xom_order.organization_id, xom_order.order_id, cust.first_name, cust.last_name, xom_order.order_date, xom_order.status_code, xom_order.order_type, cust.telephone1, xom_order.order_loc_id, xom_order.under_review_flag, CASE WHEN ship_order.order_id is null THEN 'FALSE' ELSE 'TRUE' END as shipping_necessary_flag FROM xom_order LEFT JOIN xom_customer_mod cust ON xom_order.organization_id = cust.organization_id AND xom_order.order_id = cust.order_id LEFT JOIN (SELECT line.organization_id, line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.void_flag = 0 AND (ful.LOC_ID is null OR  UPPER(ful.LOC_ID) <>  UPPER(src.LOC_ID)) GROUP BY line.organization_id, line.order_id) ship_order ON xom_order.organization_id = ship_order.organization_id AND xom_order.order_id = ship_order.order_id WHERE xom_order.organization_id = 1000 AND  UPPER(xom_order.status_code) <> 'SUSPENDED'   AND  ( UPPER(xom_order.order_type) <> 'STANDARD_DELIVERY' ) AND ( EXISTS (SELECT line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.organization_id = xom_order.organization_id AND line.order_id = xom_order.order_id AND  UPPER(src.loc_id) = '110' AND line.void_flag = 0 AND ( UPPER(line.status_code) IN ('POLLED', 'ACCEPTED') OR (( UPPER(line.status_code) = 'RESERVED') AND (ful.loc_id IS NULL OR  UPPER(src.loc_id) <>  UPPER(ful.loc_id)))))  )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 16:11:33,874 execute [  0.509 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 16:11:33,877 execute [  0.426 ms StorePrimary] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 16:11:33,879 execute [  0.300 ms Local] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 16:11:33,881 execute [  0.491 ms StorePrimary] UPDATE ctl_device_registration SET update_date = to_date('2024-10-19T21:11:33', 'YYYY-MM-DD"T"HH24:MI:SS'), update_user_id = '100', ip_address = '10.10.28.83', date_timestamp = to_date('2024-10-19T16:11:33', 'YYYY-MM-DD"T"HH24:MI:SS'), business_date = to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS'), xstore_version = '16.0.5.0.38 - 7.0.36 - 1.54', env_version = null, active_flag = 'true', config_version = null, primary_register_flag = 'true' WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.UPDATE [Device-Registration-1]
 DEBUG [      ] 2024-10-19 16:11:33,887 execute [  1.537 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T16:11:33', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 16:11:33,889 execute [  0.256 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T16:11:33', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 16:11:33,891 execute [  0.276 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T16:11:33', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 16:11:33,892 execute [  0.318 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 16:12:29,440 execute [  0.801 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 ERROR [      ] 2024-10-19 16:12:49,385 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 16:12:49,386 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
 ERROR [      ] 2024-10-19 16:12:49,390 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017104711.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-1]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 16:12:49,658 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 16:12:49,659 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
 ERROR [      ] 2024-10-19 16:12:49,662 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017110705.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-1]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 16:12:49,925 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 16:12:49,926 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
 ERROR [      ] 2024-10-19 16:12:49,929 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017111605.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-1]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 DEBUG [      ] 2024-10-19 16:14:29,450 execute [  1.321 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 16:16:16,453 execute [  0.576 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T16:16:16', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 16:16:29,459 execute [  0.403 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 16:18:29,467 execute [  0.455 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 16:20:29,476 execute [  0.384 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 16:22:29,486 execute [  0.365 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 16:24:29,494 execute [  0.383 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 16:26:15,938 execute [  0.772 ms StorePrimary] SELECT xom_order.organization_id, xom_order.order_id, cust.first_name, cust.last_name, xom_order.order_date, xom_order.status_code, xom_order.order_type, cust.telephone1, xom_order.order_loc_id, xom_order.under_review_flag, CASE WHEN ship_order.order_id is null THEN 'FALSE' ELSE 'TRUE' END as shipping_necessary_flag FROM xom_order LEFT JOIN xom_customer_mod cust ON xom_order.organization_id = cust.organization_id AND xom_order.order_id = cust.order_id LEFT JOIN (SELECT line.organization_id, line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.void_flag = 0 AND (ful.LOC_ID is null OR  UPPER(ful.LOC_ID) <>  UPPER(src.LOC_ID)) GROUP BY line.organization_id, line.order_id) ship_order ON xom_order.organization_id = ship_order.organization_id AND xom_order.order_id = ship_order.order_id WHERE xom_order.organization_id = 1000 AND  UPPER(xom_order.status_code) <> 'SUSPENDED'   AND  ( UPPER(xom_order.order_type) <> 'STANDARD_DELIVERY' ) AND ( EXISTS (SELECT line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.organization_id = xom_order.organization_id AND line.order_id = xom_order.order_id AND  UPPER(src.loc_id) = '110' AND line.void_flag = 0 AND ( UPPER(line.status_code) IN ('POLLED', 'ACCEPTED') OR (( UPPER(line.status_code) = 'RESERVED') AND (ful.loc_id IS NULL OR  UPPER(src.loc_id) <>  UPPER(ful.loc_id)))))  )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 16:26:16,478 execute [  0.795 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T16:26:16', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 16:26:29,504 execute [  0.773 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 16:26:33,917 execute [  1.503 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 16:26:33,920 execute [  0.440 ms StorePrimary] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 16:26:33,922 execute [  0.332 ms Local] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 16:26:33,924 execute [  0.500 ms StorePrimary] UPDATE ctl_device_registration SET update_date = to_date('2024-10-19T21:26:33', 'YYYY-MM-DD"T"HH24:MI:SS'), update_user_id = '100', ip_address = '10.10.28.83', date_timestamp = to_date('2024-10-19T16:26:33', 'YYYY-MM-DD"T"HH24:MI:SS'), business_date = to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS'), xstore_version = '16.0.5.0.38 - 7.0.36 - 1.54', env_version = null, active_flag = 'true', config_version = null, primary_register_flag = 'true' WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.UPDATE [Device-Registration-1]
 DEBUG [      ] 2024-10-19 16:26:33,927 execute [  0.345 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T16:26:33', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 16:26:33,929 execute [  0.205 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T16:26:33', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 16:26:33,930 execute [  0.186 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T16:26:33', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 16:26:33,932 execute [  0.187 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 ERROR [      ] 2024-10-19 16:27:50,293 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 16:27:50,294 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
 ERROR [      ] 2024-10-19 16:27:50,298 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017104711.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-2]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 16:27:50,548 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 16:27:50,549 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
 ERROR [      ] 2024-10-19 16:27:50,552 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017110705.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-2]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 16:27:50,770 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 16:27:50,771 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
 ERROR [      ] 2024-10-19 16:27:50,774 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017111605.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-2]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 DEBUG [      ] 2024-10-19 16:28:29,511 execute [  0.791 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 16:30:29,521 execute [  0.746 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 16:32:29,531 execute [  1.348 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 16:34:29,541 execute [  1.092 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 16:36:16,502 execute [  0.508 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T16:36:16', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 16:36:29,549 execute [  0.379 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 16:38:29,557 execute [  0.383 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 16:40:29,566 execute [  0.385 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 16:41:15,968 execute [  0.847 ms StorePrimary] SELECT xom_order.organization_id, xom_order.order_id, cust.first_name, cust.last_name, xom_order.order_date, xom_order.status_code, xom_order.order_type, cust.telephone1, xom_order.order_loc_id, xom_order.under_review_flag, CASE WHEN ship_order.order_id is null THEN 'FALSE' ELSE 'TRUE' END as shipping_necessary_flag FROM xom_order LEFT JOIN xom_customer_mod cust ON xom_order.organization_id = cust.organization_id AND xom_order.order_id = cust.order_id LEFT JOIN (SELECT line.organization_id, line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.void_flag = 0 AND (ful.LOC_ID is null OR  UPPER(ful.LOC_ID) <>  UPPER(src.LOC_ID)) GROUP BY line.organization_id, line.order_id) ship_order ON xom_order.organization_id = ship_order.organization_id AND xom_order.order_id = ship_order.order_id WHERE xom_order.organization_id = 1000 AND  UPPER(xom_order.status_code) <> 'SUSPENDED'   AND  ( UPPER(xom_order.order_type) <> 'STANDARD_DELIVERY' ) AND ( EXISTS (SELECT line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.organization_id = xom_order.organization_id AND line.order_id = xom_order.order_id AND  UPPER(src.loc_id) = '110' AND line.void_flag = 0 AND ( UPPER(line.status_code) IN ('POLLED', 'ACCEPTED') OR (( UPPER(line.status_code) = 'RESERVED') AND (ful.loc_id IS NULL OR  UPPER(src.loc_id) <>  UPPER(ful.loc_id)))))  )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 16:41:33,954 execute [  0.512 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 16:41:33,957 execute [  0.536 ms StorePrimary] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 16:41:33,960 execute [  0.283 ms Local] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 16:41:33,961 execute [  0.448 ms StorePrimary] UPDATE ctl_device_registration SET update_date = to_date('2024-10-19T21:41:33', 'YYYY-MM-DD"T"HH24:MI:SS'), update_user_id = '100', ip_address = '10.10.28.83', date_timestamp = to_date('2024-10-19T16:41:33', 'YYYY-MM-DD"T"HH24:MI:SS'), business_date = to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS'), xstore_version = '16.0.5.0.38 - 7.0.36 - 1.54', env_version = null, active_flag = 'true', config_version = null, primary_register_flag = 'true' WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.UPDATE [Device-Registration-1]
 DEBUG [      ] 2024-10-19 16:41:33,966 execute [  1.246 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T16:41:33', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 16:41:33,968 execute [  0.274 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T16:41:33', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 16:41:33,970 execute [  0.265 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T16:41:33', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 16:41:33,972 execute [  0.339 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 16:42:29,575 execute [  0.695 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 ERROR [      ] 2024-10-19 16:42:51,104 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 16:42:51,105 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
 ERROR [      ] 2024-10-19 16:42:51,110 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017104711.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-4]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 16:42:51,384 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 16:42:51,385 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
 ERROR [      ] 2024-10-19 16:42:51,388 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017110705.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-4]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 16:42:51,656 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 16:42:51,657 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
 ERROR [      ] 2024-10-19 16:42:51,660 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017111605.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-4]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 DEBUG [      ] 2024-10-19 16:44:29,584 execute [  1.278 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 16:46:16,525 execute [  0.556 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T16:46:16', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 16:46:29,592 execute [  0.353 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 16:48:29,600 execute [  0.353 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 16:50:29,608 execute [  0.390 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 16:52:29,616 execute [  0.542 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 16:54:29,624 execute [  0.436 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 16:56:16,021 execute [  0.753 ms StorePrimary] SELECT xom_order.organization_id, xom_order.order_id, cust.first_name, cust.last_name, xom_order.order_date, xom_order.status_code, xom_order.order_type, cust.telephone1, xom_order.order_loc_id, xom_order.under_review_flag, CASE WHEN ship_order.order_id is null THEN 'FALSE' ELSE 'TRUE' END as shipping_necessary_flag FROM xom_order LEFT JOIN xom_customer_mod cust ON xom_order.organization_id = cust.organization_id AND xom_order.order_id = cust.order_id LEFT JOIN (SELECT line.organization_id, line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.void_flag = 0 AND (ful.LOC_ID is null OR  UPPER(ful.LOC_ID) <>  UPPER(src.LOC_ID)) GROUP BY line.organization_id, line.order_id) ship_order ON xom_order.organization_id = ship_order.organization_id AND xom_order.order_id = ship_order.order_id WHERE xom_order.organization_id = 1000 AND  UPPER(xom_order.status_code) <> 'SUSPENDED'   AND  ( UPPER(xom_order.order_type) <> 'STANDARD_DELIVERY' ) AND ( EXISTS (SELECT line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.organization_id = xom_order.organization_id AND line.order_id = xom_order.order_id AND  UPPER(src.loc_id) = '110' AND line.void_flag = 0 AND ( UPPER(line.status_code) IN ('POLLED', 'ACCEPTED') OR (( UPPER(line.status_code) = 'RESERVED') AND (ful.loc_id IS NULL OR  UPPER(src.loc_id) <>  UPPER(ful.loc_id)))))  )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 16:56:16,569 execute [  0.707 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T16:56:16', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 16:56:29,660 execute [  0.776 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 16:56:34,024 execute [  1.023 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 16:56:34,027 execute [  0.460 ms StorePrimary] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 16:56:34,029 execute [  0.272 ms Local] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 16:56:34,031 execute [  0.437 ms StorePrimary] UPDATE ctl_device_registration SET update_date = to_date('2024-10-19T21:56:34', 'YYYY-MM-DD"T"HH24:MI:SS'), update_user_id = '100', ip_address = '10.10.28.83', date_timestamp = to_date('2024-10-19T16:56:34', 'YYYY-MM-DD"T"HH24:MI:SS'), business_date = to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS'), xstore_version = '16.0.5.0.38 - 7.0.36 - 1.54', env_version = null, active_flag = 'true', config_version = null, primary_register_flag = 'true' WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.UPDATE [Device-Registration-1]
 DEBUG [      ] 2024-10-19 16:56:34,035 execute [  1.836 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T16:56:34', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 16:56:34,037 execute [  0.242 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T16:56:34', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 16:56:34,039 execute [  0.197 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T16:56:34', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 16:56:34,040 execute [  0.193 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 ERROR [      ] 2024-10-19 16:57:52,054 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 16:57:52,055 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
 ERROR [      ] 2024-10-19 16:57:52,059 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017104711.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-2]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 16:57:52,325 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 16:57:52,326 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
 ERROR [      ] 2024-10-19 16:57:52,329 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017110705.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-2]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 16:57:52,553 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 16:57:52,553 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
 ERROR [      ] 2024-10-19 16:57:52,557 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017111605.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-2]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 DEBUG [      ] 2024-10-19 16:58:29,714 execute [  0.378 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 17:00:29,767 execute [  0.722 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 17:02:29,820 execute [  1.126 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 17:04:29,872 execute [  0.440 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 17:06:16,810 execute [  1.033 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T17:06:16', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 17:06:29,945 execute [  0.754 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 17:08:29,992 execute [  0.397 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 17:10:30,040 execute [  0.382 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 17:11:16,360 execute [  0.856 ms StorePrimary] SELECT xom_order.organization_id, xom_order.order_id, cust.first_name, cust.last_name, xom_order.order_date, xom_order.status_code, xom_order.order_type, cust.telephone1, xom_order.order_loc_id, xom_order.under_review_flag, CASE WHEN ship_order.order_id is null THEN 'FALSE' ELSE 'TRUE' END as shipping_necessary_flag FROM xom_order LEFT JOIN xom_customer_mod cust ON xom_order.organization_id = cust.organization_id AND xom_order.order_id = cust.order_id LEFT JOIN (SELECT line.organization_id, line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.void_flag = 0 AND (ful.LOC_ID is null OR  UPPER(ful.LOC_ID) <>  UPPER(src.LOC_ID)) GROUP BY line.organization_id, line.order_id) ship_order ON xom_order.organization_id = ship_order.organization_id AND xom_order.order_id = ship_order.order_id WHERE xom_order.organization_id = 1000 AND  UPPER(xom_order.status_code) <> 'SUSPENDED'   AND  ( UPPER(xom_order.order_type) <> 'STANDARD_DELIVERY' ) AND ( EXISTS (SELECT line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.organization_id = xom_order.organization_id AND line.order_id = xom_order.order_id AND  UPPER(src.loc_id) = '110' AND line.void_flag = 0 AND ( UPPER(line.status_code) IN ('POLLED', 'ACCEPTED') OR (( UPPER(line.status_code) = 'RESERVED') AND (ful.loc_id IS NULL OR  UPPER(src.loc_id) <>  UPPER(ful.loc_id)))))  )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 17:11:34,372 execute [  0.587 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 17:11:34,376 execute [  0.529 ms StorePrimary] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 17:11:34,378 execute [  0.324 ms Local] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 17:11:34,381 execute [  0.750 ms StorePrimary] UPDATE ctl_device_registration SET update_date = to_date('2024-10-19T22:11:34', 'YYYY-MM-DD"T"HH24:MI:SS'), update_user_id = '100', ip_address = '10.10.28.83', date_timestamp = to_date('2024-10-19T17:11:34', 'YYYY-MM-DD"T"HH24:MI:SS'), business_date = to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS'), xstore_version = '16.0.5.0.38 - 7.0.36 - 1.54', env_version = null, active_flag = 'true', config_version = null, primary_register_flag = 'true' WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.UPDATE [Device-Registration-1]
 DEBUG [      ] 2024-10-19 17:11:34,387 execute [  1.562 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T17:11:34', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 17:11:34,390 execute [  0.305 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T17:11:34', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 17:11:34,391 execute [  0.234 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T17:11:34', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 17:11:34,393 execute [  0.336 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 17:12:30,087 execute [  0.861 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 ERROR [      ] 2024-10-19 17:12:53,179 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 17:12:53,180 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
 ERROR [      ] 2024-10-19 17:12:53,183 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017104711.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-4]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 17:12:53,463 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 17:12:53,464 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
 ERROR [      ] 2024-10-19 17:12:53,468 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017110705.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-4]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 17:12:53,735 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 17:12:53,736 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
 ERROR [      ] 2024-10-19 17:12:53,739 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017111605.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-4]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 DEBUG [      ] 2024-10-19 17:14:30,132 execute [  1.374 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 17:16:17,016 execute [  0.644 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T17:16:17', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 17:16:30,175 execute [  0.369 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 17:18:30,217 execute [  0.398 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 17:20:30,258 execute [  0.399 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 17:22:30,298 execute [  0.472 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 17:24:30,338 execute [  0.377 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 17:26:16,637 execute [  0.764 ms StorePrimary] SELECT xom_order.organization_id, xom_order.order_id, cust.first_name, cust.last_name, xom_order.order_date, xom_order.status_code, xom_order.order_type, cust.telephone1, xom_order.order_loc_id, xom_order.under_review_flag, CASE WHEN ship_order.order_id is null THEN 'FALSE' ELSE 'TRUE' END as shipping_necessary_flag FROM xom_order LEFT JOIN xom_customer_mod cust ON xom_order.organization_id = cust.organization_id AND xom_order.order_id = cust.order_id LEFT JOIN (SELECT line.organization_id, line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.void_flag = 0 AND (ful.LOC_ID is null OR  UPPER(ful.LOC_ID) <>  UPPER(src.LOC_ID)) GROUP BY line.organization_id, line.order_id) ship_order ON xom_order.organization_id = ship_order.organization_id AND xom_order.order_id = ship_order.order_id WHERE xom_order.organization_id = 1000 AND  UPPER(xom_order.status_code) <> 'SUSPENDED'   AND  ( UPPER(xom_order.order_type) <> 'STANDARD_DELIVERY' ) AND ( EXISTS (SELECT line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.organization_id = xom_order.organization_id AND line.order_id = xom_order.order_id AND  UPPER(src.loc_id) = '110' AND line.void_flag = 0 AND ( UPPER(line.status_code) IN ('POLLED', 'ACCEPTED') OR (( UPPER(line.status_code) = 'RESERVED') AND (ful.loc_id IS NULL OR  UPPER(src.loc_id) <>  UPPER(ful.loc_id)))))  )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 17:26:17,197 execute [  0.702 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T17:26:17', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 17:26:30,378 execute [  0.741 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 17:26:34,660 execute [  1.064 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 17:26:34,663 execute [  0.409 ms StorePrimary] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 17:26:34,665 execute [  0.329 ms Local] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 17:26:34,667 execute [  0.440 ms StorePrimary] UPDATE ctl_device_registration SET update_date = to_date('2024-10-19T22:26:34', 'YYYY-MM-DD"T"HH24:MI:SS'), update_user_id = '100', ip_address = '10.10.28.83', date_timestamp = to_date('2024-10-19T17:26:34', 'YYYY-MM-DD"T"HH24:MI:SS'), business_date = to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS'), xstore_version = '16.0.5.0.38 - 7.0.36 - 1.54', env_version = null, active_flag = 'true', config_version = null, primary_register_flag = 'true' WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.UPDATE [Device-Registration-1]
 DEBUG [      ] 2024-10-19 17:26:34,670 execute [  0.342 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T17:26:34', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 17:26:34,671 execute [  0.194 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T17:26:34', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 17:26:34,673 execute [  0.230 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T17:26:34', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 17:26:34,674 execute [  0.181 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 ERROR [      ] 2024-10-19 17:27:54,329 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 17:27:54,330 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
 ERROR [      ] 2024-10-19 17:27:54,334 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017104711.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-1]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 17:27:54,587 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 17:27:54,588 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
 ERROR [      ] 2024-10-19 17:27:54,591 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017110705.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-1]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 17:27:54,815 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 17:27:54,816 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
 ERROR [      ] 2024-10-19 17:27:54,819 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017111605.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-1]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 DEBUG [      ] 2024-10-19 17:28:30,416 execute [  0.776 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 17:30:30,453 execute [  0.515 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 17:32:30,495 execute [  1.122 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 17:34:30,531 execute [  1.171 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 17:36:17,355 execute [  0.683 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T17:36:17', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 17:36:30,601 execute [  0.385 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 17:38:30,634 execute [  0.430 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 17:40:30,666 execute [  0.384 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 17:41:16,862 execute [  0.795 ms StorePrimary] SELECT xom_order.organization_id, xom_order.order_id, cust.first_name, cust.last_name, xom_order.order_date, xom_order.status_code, xom_order.order_type, cust.telephone1, xom_order.order_loc_id, xom_order.under_review_flag, CASE WHEN ship_order.order_id is null THEN 'FALSE' ELSE 'TRUE' END as shipping_necessary_flag FROM xom_order LEFT JOIN xom_customer_mod cust ON xom_order.organization_id = cust.organization_id AND xom_order.order_id = cust.order_id LEFT JOIN (SELECT line.organization_id, line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.void_flag = 0 AND (ful.LOC_ID is null OR  UPPER(ful.LOC_ID) <>  UPPER(src.LOC_ID)) GROUP BY line.organization_id, line.order_id) ship_order ON xom_order.organization_id = ship_order.organization_id AND xom_order.order_id = ship_order.order_id WHERE xom_order.organization_id = 1000 AND  UPPER(xom_order.status_code) <> 'SUSPENDED'   AND  ( UPPER(xom_order.order_type) <> 'STANDARD_DELIVERY' ) AND ( EXISTS (SELECT line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.organization_id = xom_order.organization_id AND line.order_id = xom_order.order_id AND  UPPER(src.loc_id) = '110' AND line.void_flag = 0 AND ( UPPER(line.status_code) IN ('POLLED', 'ACCEPTED') OR (( UPPER(line.status_code) = 'RESERVED') AND (ful.loc_id IS NULL OR  UPPER(src.loc_id) <>  UPPER(ful.loc_id)))))  )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 17:41:34,891 execute [  0.464 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 17:41:34,894 execute [  0.410 ms StorePrimary] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 17:41:34,896 execute [  0.245 ms Local] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 17:41:34,899 execute [  0.630 ms StorePrimary] UPDATE ctl_device_registration SET update_date = to_date('2024-10-19T22:41:34', 'YYYY-MM-DD"T"HH24:MI:SS'), update_user_id = '100', ip_address = '10.10.28.83', date_timestamp = to_date('2024-10-19T17:41:34', 'YYYY-MM-DD"T"HH24:MI:SS'), business_date = to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS'), xstore_version = '16.0.5.0.38 - 7.0.36 - 1.54', env_version = null, active_flag = 'true', config_version = null, primary_register_flag = 'true' WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.UPDATE [Device-Registration-1]
 DEBUG [      ] 2024-10-19 17:41:34,904 execute [  1.066 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T17:41:34', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 17:41:34,906 execute [  0.240 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T17:41:34', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 17:41:34,909 execute [  0.273 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T17:41:34', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 17:41:34,910 execute [  0.343 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 17:42:30,699 execute [  0.832 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 ERROR [      ] 2024-10-19 17:42:55,353 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 17:42:55,354 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
 ERROR [      ] 2024-10-19 17:42:55,358 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017104711.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-3]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 17:42:55,620 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 17:42:55,621 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
 ERROR [      ] 2024-10-19 17:42:55,624 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017110705.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-3]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 17:42:55,909 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 17:42:55,910 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
 ERROR [      ] 2024-10-19 17:42:55,914 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017111605.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-3]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 DEBUG [      ] 2024-10-19 17:44:30,730 execute [  0.386 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 17:46:17,494 execute [  0.827 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T17:46:17', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 17:46:30,760 execute [  0.411 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 17:48:30,788 execute [  0.812 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 17:50:30,817 execute [  0.370 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 17:52:30,844 execute [  0.335 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 17:54:30,872 execute [  0.390 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 17:56:17,048 execute [  0.711 ms StorePrimary] SELECT xom_order.organization_id, xom_order.order_id, cust.first_name, cust.last_name, xom_order.order_date, xom_order.status_code, xom_order.order_type, cust.telephone1, xom_order.order_loc_id, xom_order.under_review_flag, CASE WHEN ship_order.order_id is null THEN 'FALSE' ELSE 'TRUE' END as shipping_necessary_flag FROM xom_order LEFT JOIN xom_customer_mod cust ON xom_order.organization_id = cust.organization_id AND xom_order.order_id = cust.order_id LEFT JOIN (SELECT line.organization_id, line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.void_flag = 0 AND (ful.LOC_ID is null OR  UPPER(ful.LOC_ID) <>  UPPER(src.LOC_ID)) GROUP BY line.organization_id, line.order_id) ship_order ON xom_order.organization_id = ship_order.organization_id AND xom_order.order_id = ship_order.order_id WHERE xom_order.organization_id = 1000 AND  UPPER(xom_order.status_code) <> 'SUSPENDED'   AND  ( UPPER(xom_order.order_type) <> 'STANDARD_DELIVERY' ) AND ( EXISTS (SELECT line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.organization_id = xom_order.organization_id AND line.order_id = xom_order.order_id AND  UPPER(src.loc_id) = '110' AND line.void_flag = 0 AND ( UPPER(line.status_code) IN ('POLLED', 'ACCEPTED') OR (( UPPER(line.status_code) = 'RESERVED') AND (ful.loc_id IS NULL OR  UPPER(src.loc_id) <>  UPPER(ful.loc_id)))))  )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 17:56:17,615 execute [  0.344 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T17:56:17', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 17:56:30,900 execute [  0.807 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 17:56:35,088 execute [  1.333 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 17:56:35,092 execute [  0.513 ms StorePrimary] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 17:56:35,096 execute [  0.992 ms Local] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 17:56:35,098 execute [  0.428 ms StorePrimary] UPDATE ctl_device_registration SET update_date = to_date('2024-10-19T22:56:35', 'YYYY-MM-DD"T"HH24:MI:SS'), update_user_id = '100', ip_address = '10.10.28.83', date_timestamp = to_date('2024-10-19T17:56:35', 'YYYY-MM-DD"T"HH24:MI:SS'), business_date = to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS'), xstore_version = '16.0.5.0.38 - 7.0.36 - 1.54', env_version = null, active_flag = 'true', config_version = null, primary_register_flag = 'true' WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.UPDATE [Device-Registration-1]
 DEBUG [      ] 2024-10-19 17:56:35,101 execute [  0.356 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T17:56:35', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 17:56:35,102 execute [  0.216 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T17:56:35', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 17:56:35,104 execute [  0.210 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T17:56:35', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 17:56:35,105 execute [  0.159 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 ERROR [      ] 2024-10-19 17:57:56,403 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 17:57:56,404 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
 ERROR [      ] 2024-10-19 17:57:56,408 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017104711.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-3]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 17:57:56,663 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 17:57:56,664 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
 ERROR [      ] 2024-10-19 17:57:56,667 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017110705.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-3]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 17:57:56,887 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 17:57:56,888 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
 ERROR [      ] 2024-10-19 17:57:56,892 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017111605.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-3]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 DEBUG [      ] 2024-10-19 17:58:30,926 execute [  1.033 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 18:00:30,954 execute [  0.768 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 18:02:30,981 execute [  1.168 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 18:04:31,006 execute [  1.071 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 18:06:17,725 execute [  0.518 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T18:06:17', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 18:06:31,030 execute [  0.379 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 18:08:31,053 execute [  0.385 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 18:10:31,077 execute [  0.364 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 18:11:17,202 execute [  0.736 ms StorePrimary] SELECT xom_order.organization_id, xom_order.order_id, cust.first_name, cust.last_name, xom_order.order_date, xom_order.status_code, xom_order.order_type, cust.telephone1, xom_order.order_loc_id, xom_order.under_review_flag, CASE WHEN ship_order.order_id is null THEN 'FALSE' ELSE 'TRUE' END as shipping_necessary_flag FROM xom_order LEFT JOIN xom_customer_mod cust ON xom_order.organization_id = cust.organization_id AND xom_order.order_id = cust.order_id LEFT JOIN (SELECT line.organization_id, line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.void_flag = 0 AND (ful.LOC_ID is null OR  UPPER(ful.LOC_ID) <>  UPPER(src.LOC_ID)) GROUP BY line.organization_id, line.order_id) ship_order ON xom_order.organization_id = ship_order.organization_id AND xom_order.order_id = ship_order.order_id WHERE xom_order.organization_id = 1000 AND  UPPER(xom_order.status_code) <> 'SUSPENDED'   AND  ( UPPER(xom_order.order_type) <> 'STANDARD_DELIVERY' ) AND ( EXISTS (SELECT line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.organization_id = xom_order.organization_id AND line.order_id = xom_order.order_id AND  UPPER(src.loc_id) = '110' AND line.void_flag = 0 AND ( UPPER(line.status_code) IN ('POLLED', 'ACCEPTED') OR (( UPPER(line.status_code) = 'RESERVED') AND (ful.loc_id IS NULL OR  UPPER(src.loc_id) <>  UPPER(ful.loc_id)))))  )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 18:11:35,250 execute [  0.543 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 18:11:35,253 execute [  0.513 ms StorePrimary] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 18:11:35,255 execute [  0.288 ms Local] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 18:11:35,257 execute [  0.487 ms StorePrimary] UPDATE ctl_device_registration SET update_date = to_date('2024-10-19T23:11:35', 'YYYY-MM-DD"T"HH24:MI:SS'), update_user_id = '100', ip_address = '10.10.28.83', date_timestamp = to_date('2024-10-19T18:11:35', 'YYYY-MM-DD"T"HH24:MI:SS'), business_date = to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS'), xstore_version = '16.0.5.0.38 - 7.0.36 - 1.54', env_version = null, active_flag = 'true', config_version = null, primary_register_flag = 'true' WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.UPDATE [Device-Registration-1]
 DEBUG [      ] 2024-10-19 18:11:35,263 execute [  1.262 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T18:11:35', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 18:11:35,265 execute [  0.320 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T18:11:35', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 18:11:35,267 execute [  0.294 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T18:11:35', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 18:11:35,268 execute [  0.366 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 18:12:31,100 execute [  0.801 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 ERROR [      ] 2024-10-19 18:12:57,353 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 18:12:57,354 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
 ERROR [      ] 2024-10-19 18:12:57,358 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017104711.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-1]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 18:12:57,643 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 18:12:57,644 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
 ERROR [      ] 2024-10-19 18:12:57,647 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017110705.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-1]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 18:12:57,913 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 18:12:57,914 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
 ERROR [      ] 2024-10-19 18:12:57,917 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017111605.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-1]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 DEBUG [      ] 2024-10-19 18:14:31,123 execute [  1.373 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 18:16:17,820 execute [  0.541 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T18:16:17', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 18:16:31,145 execute [  0.359 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 18:18:31,166 execute [  0.409 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 18:20:31,188 execute [  0.363 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 18:22:31,209 execute [  0.345 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 18:24:31,230 execute [  0.397 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 18:26:17,329 execute [  0.782 ms StorePrimary] SELECT xom_order.organization_id, xom_order.order_id, cust.first_name, cust.last_name, xom_order.order_date, xom_order.status_code, xom_order.order_type, cust.telephone1, xom_order.order_loc_id, xom_order.under_review_flag, CASE WHEN ship_order.order_id is null THEN 'FALSE' ELSE 'TRUE' END as shipping_necessary_flag FROM xom_order LEFT JOIN xom_customer_mod cust ON xom_order.organization_id = cust.organization_id AND xom_order.order_id = cust.order_id LEFT JOIN (SELECT line.organization_id, line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.void_flag = 0 AND (ful.LOC_ID is null OR  UPPER(ful.LOC_ID) <>  UPPER(src.LOC_ID)) GROUP BY line.organization_id, line.order_id) ship_order ON xom_order.organization_id = ship_order.organization_id AND xom_order.order_id = ship_order.order_id WHERE xom_order.organization_id = 1000 AND  UPPER(xom_order.status_code) <> 'SUSPENDED'   AND  ( UPPER(xom_order.order_type) <> 'STANDARD_DELIVERY' ) AND ( EXISTS (SELECT line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.organization_id = xom_order.organization_id AND line.order_id = xom_order.order_id AND  UPPER(src.loc_id) = '110' AND line.void_flag = 0 AND ( UPPER(line.status_code) IN ('POLLED', 'ACCEPTED') OR (( UPPER(line.status_code) = 'RESERVED') AND (ful.loc_id IS NULL OR  UPPER(src.loc_id) <>  UPPER(ful.loc_id)))))  )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 18:26:17,905 execute [  0.412 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T18:26:17', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 18:26:31,250 execute [  0.744 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 18:26:35,388 execute [  1.427 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 18:26:35,391 execute [  0.475 ms StorePrimary] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 18:26:35,393 execute [  0.249 ms Local] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 18:26:35,395 execute [  0.433 ms StorePrimary] UPDATE ctl_device_registration SET update_date = to_date('2024-10-19T23:26:35', 'YYYY-MM-DD"T"HH24:MI:SS'), update_user_id = '100', ip_address = '10.10.28.83', date_timestamp = to_date('2024-10-19T18:26:35', 'YYYY-MM-DD"T"HH24:MI:SS'), business_date = to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS'), xstore_version = '16.0.5.0.38 - 7.0.36 - 1.54', env_version = null, active_flag = 'true', config_version = null, primary_register_flag = 'true' WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.UPDATE [Device-Registration-1]
 DEBUG [      ] 2024-10-19 18:26:35,398 execute [  0.339 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T18:26:35', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 18:26:35,399 execute [  0.175 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T18:26:35', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 18:26:35,401 execute [  0.156 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T18:26:35', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 18:26:35,402 execute [  0.163 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 ERROR [      ] 2024-10-19 18:27:58,362 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 18:27:58,363 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
 ERROR [      ] 2024-10-19 18:27:58,366 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017104711.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-3]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 18:27:58,628 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 18:27:58,629 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
 ERROR [      ] 2024-10-19 18:27:58,632 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017110705.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-3]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 18:27:58,857 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 18:27:58,858 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
 ERROR [      ] 2024-10-19 18:27:58,861 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017111605.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-3]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 DEBUG [      ] 2024-10-19 18:28:31,269 execute [  0.979 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 18:30:31,289 execute [  0.391 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 18:32:31,309 execute [  1.123 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 18:34:31,329 execute [  0.426 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 18:36:17,983 execute [  0.937 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T18:36:17', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 18:36:31,348 execute [  0.723 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 18:38:31,366 execute [  0.434 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 18:40:31,385 execute [  0.384 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 18:41:17,439 execute [  1.003 ms StorePrimary] SELECT xom_order.organization_id, xom_order.order_id, cust.first_name, cust.last_name, xom_order.order_date, xom_order.status_code, xom_order.order_type, cust.telephone1, xom_order.order_loc_id, xom_order.under_review_flag, CASE WHEN ship_order.order_id is null THEN 'FALSE' ELSE 'TRUE' END as shipping_necessary_flag FROM xom_order LEFT JOIN xom_customer_mod cust ON xom_order.organization_id = cust.organization_id AND xom_order.order_id = cust.order_id LEFT JOIN (SELECT line.organization_id, line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.void_flag = 0 AND (ful.LOC_ID is null OR  UPPER(ful.LOC_ID) <>  UPPER(src.LOC_ID)) GROUP BY line.organization_id, line.order_id) ship_order ON xom_order.organization_id = ship_order.organization_id AND xom_order.order_id = ship_order.order_id WHERE xom_order.organization_id = 1000 AND  UPPER(xom_order.status_code) <> 'SUSPENDED'   AND  ( UPPER(xom_order.order_type) <> 'STANDARD_DELIVERY' ) AND ( EXISTS (SELECT line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.organization_id = xom_order.organization_id AND line.order_id = xom_order.order_id AND  UPPER(src.loc_id) = '110' AND line.void_flag = 0 AND ( UPPER(line.status_code) IN ('POLLED', 'ACCEPTED') OR (( UPPER(line.status_code) = 'RESERVED') AND (ful.loc_id IS NULL OR  UPPER(src.loc_id) <>  UPPER(ful.loc_id)))))  )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 18:41:35,501 execute [  0.542 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 18:41:35,505 execute [  0.574 ms StorePrimary] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 18:41:35,507 execute [  0.421 ms Local] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 18:41:35,510 execute [  0.564 ms StorePrimary] UPDATE ctl_device_registration SET update_date = to_date('2024-10-19T23:41:35', 'YYYY-MM-DD"T"HH24:MI:SS'), update_user_id = '100', ip_address = '10.10.28.83', date_timestamp = to_date('2024-10-19T18:41:35', 'YYYY-MM-DD"T"HH24:MI:SS'), business_date = to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS'), xstore_version = '16.0.5.0.38 - 7.0.36 - 1.54', env_version = null, active_flag = 'true', config_version = null, primary_register_flag = 'true' WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.UPDATE [Device-Registration-1]
 DEBUG [      ] 2024-10-19 18:41:35,516 execute [  1.757 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T18:41:35', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 18:41:35,519 execute [  0.364 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T18:41:35', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 18:41:35,521 execute [  0.301 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T18:41:35', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 18:41:35,523 execute [  0.442 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 18:42:31,403 execute [  0.884 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 ERROR [      ] 2024-10-19 18:43:00,044 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 18:43:00,045 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
 ERROR [      ] 2024-10-19 18:43:00,049 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017104711.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-3]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 18:43:00,311 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 18:43:00,312 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
 ERROR [      ] 2024-10-19 18:43:00,315 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017110705.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-3]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 18:43:00,577 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 18:43:00,578 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
 ERROR [      ] 2024-10-19 18:43:00,581 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017111605.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-3]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 DEBUG [      ] 2024-10-19 18:44:31,422 execute [  1.468 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 18:46:18,051 execute [  0.533 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T18:46:18', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 18:46:31,440 execute [  0.335 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 18:48:31,456 execute [  0.389 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 18:50:31,474 execute [  0.357 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 18:52:31,490 execute [  0.345 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 18:54:31,505 execute [  0.392 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 18:56:17,530 execute [  0.743 ms StorePrimary] SELECT xom_order.organization_id, xom_order.order_id, cust.first_name, cust.last_name, xom_order.order_date, xom_order.status_code, xom_order.order_type, cust.telephone1, xom_order.order_loc_id, xom_order.under_review_flag, CASE WHEN ship_order.order_id is null THEN 'FALSE' ELSE 'TRUE' END as shipping_necessary_flag FROM xom_order LEFT JOIN xom_customer_mod cust ON xom_order.organization_id = cust.organization_id AND xom_order.order_id = cust.order_id LEFT JOIN (SELECT line.organization_id, line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.void_flag = 0 AND (ful.LOC_ID is null OR  UPPER(ful.LOC_ID) <>  UPPER(src.LOC_ID)) GROUP BY line.organization_id, line.order_id) ship_order ON xom_order.organization_id = ship_order.organization_id AND xom_order.order_id = ship_order.order_id WHERE xom_order.organization_id = 1000 AND  UPPER(xom_order.status_code) <> 'SUSPENDED'   AND  ( UPPER(xom_order.order_type) <> 'STANDARD_DELIVERY' ) AND ( EXISTS (SELECT line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.organization_id = xom_order.organization_id AND line.order_id = xom_order.order_id AND  UPPER(src.loc_id) = '110' AND line.void_flag = 0 AND ( UPPER(line.status_code) IN ('POLLED', 'ACCEPTED') OR (( UPPER(line.status_code) = 'RESERVED') AND (ful.loc_id IS NULL OR  UPPER(src.loc_id) <>  UPPER(ful.loc_id)))))  )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 18:56:18,111 execute [  0.702 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T18:56:18', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 18:56:31,522 execute [  0.741 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 18:56:35,607 execute [  1.068 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 18:56:35,610 execute [  0.418 ms StorePrimary] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 18:56:35,612 execute [  0.253 ms Local] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 18:56:35,613 execute [  0.416 ms StorePrimary] UPDATE ctl_device_registration SET update_date = to_date('2024-10-19T23:56:35', 'YYYY-MM-DD"T"HH24:MI:SS'), update_user_id = '100', ip_address = '10.10.28.83', date_timestamp = to_date('2024-10-19T18:56:35', 'YYYY-MM-DD"T"HH24:MI:SS'), business_date = to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS'), xstore_version = '16.0.5.0.38 - 7.0.36 - 1.54', env_version = null, active_flag = 'true', config_version = null, primary_register_flag = 'true' WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.UPDATE [Device-Registration-1]
 DEBUG [      ] 2024-10-19 18:56:35,616 execute [  0.283 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T18:56:35', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 18:56:35,618 execute [  0.247 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T18:56:35', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 18:56:35,620 execute [  0.227 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T18:56:35', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 18:56:35,621 execute [  0.171 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 ERROR [      ] 2024-10-19 18:58:00,991 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 18:58:00,992 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
 ERROR [      ] 2024-10-19 18:58:00,996 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017104711.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-3]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 18:58:01,258 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 18:58:01,258 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
 ERROR [      ] 2024-10-19 18:58:01,262 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017110705.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-3]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 18:58:01,522 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 18:58:01,523 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
 ERROR [      ] 2024-10-19 18:58:01,527 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017111605.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-3]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 DEBUG [      ] 2024-10-19 18:58:31,536 execute [  0.424 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 19:00:31,552 execute [  0.779 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 19:02:31,570 execute [  1.325 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 19:04:31,586 execute [  1.027 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 19:06:18,169 execute [  0.627 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T19:06:18', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 19:06:31,601 execute [  0.344 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 19:08:31,615 execute [  0.424 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 19:10:31,628 execute [  0.383 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 19:11:17,608 execute [  0.755 ms StorePrimary] SELECT xom_order.organization_id, xom_order.order_id, cust.first_name, cust.last_name, xom_order.order_date, xom_order.status_code, xom_order.order_type, cust.telephone1, xom_order.order_loc_id, xom_order.under_review_flag, CASE WHEN ship_order.order_id is null THEN 'FALSE' ELSE 'TRUE' END as shipping_necessary_flag FROM xom_order LEFT JOIN xom_customer_mod cust ON xom_order.organization_id = cust.organization_id AND xom_order.order_id = cust.order_id LEFT JOIN (SELECT line.organization_id, line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.void_flag = 0 AND (ful.LOC_ID is null OR  UPPER(ful.LOC_ID) <>  UPPER(src.LOC_ID)) GROUP BY line.organization_id, line.order_id) ship_order ON xom_order.organization_id = ship_order.organization_id AND xom_order.order_id = ship_order.order_id WHERE xom_order.organization_id = 1000 AND  UPPER(xom_order.status_code) <> 'SUSPENDED'   AND  ( UPPER(xom_order.order_type) <> 'STANDARD_DELIVERY' ) AND ( EXISTS (SELECT line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.organization_id = xom_order.organization_id AND line.order_id = xom_order.order_id AND  UPPER(src.loc_id) = '110' AND line.void_flag = 0 AND ( UPPER(line.status_code) IN ('POLLED', 'ACCEPTED') OR (( UPPER(line.status_code) = 'RESERVED') AND (ful.loc_id IS NULL OR  UPPER(src.loc_id) <>  UPPER(ful.loc_id)))))  )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 19:11:35,691 execute [  0.515 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 19:11:35,694 execute [  0.455 ms StorePrimary] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 19:11:35,696 execute [  0.264 ms Local] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 19:11:35,698 execute [  0.449 ms StorePrimary] UPDATE ctl_device_registration SET update_date = to_date('2024-10-20T00:11:35', 'YYYY-MM-DD"T"HH24:MI:SS'), update_user_id = '100', ip_address = '10.10.28.83', date_timestamp = to_date('2024-10-19T19:11:35', 'YYYY-MM-DD"T"HH24:MI:SS'), business_date = to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS'), xstore_version = '16.0.5.0.38 - 7.0.36 - 1.54', env_version = null, active_flag = 'true', config_version = null, primary_register_flag = 'true' WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.UPDATE [Device-Registration-1]
 DEBUG [      ] 2024-10-19 19:11:35,703 execute [  1.328 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T19:11:35', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 19:11:35,705 execute [  0.283 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T19:11:35', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 19:11:35,707 execute [  0.263 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T19:11:35', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 19:11:35,709 execute [  0.365 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 19:12:31,643 execute [  0.790 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 ERROR [      ] 2024-10-19 19:13:01,919 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 19:13:01,920 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
 ERROR [      ] 2024-10-19 19:13:01,924 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017104711.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-1]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 19:13:02,188 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 19:13:02,189 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
 ERROR [      ] 2024-10-19 19:13:02,192 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017110705.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-1]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 19:13:02,452 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 19:13:02,453 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
 ERROR [      ] 2024-10-19 19:13:02,457 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017111605.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-1]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 DEBUG [      ] 2024-10-19 19:14:31,660 execute [  3.303 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 19:16:18,221 execute [  0.523 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T19:16:18', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 19:16:31,675 execute [  0.350 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 19:18:31,691 execute [  0.350 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 19:20:31,705 execute [  0.372 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 19:22:31,719 execute [  0.352 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 19:24:31,732 execute [  0.425 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 19:26:17,678 execute [  0.691 ms StorePrimary] SELECT xom_order.organization_id, xom_order.order_id, cust.first_name, cust.last_name, xom_order.order_date, xom_order.status_code, xom_order.order_type, cust.telephone1, xom_order.order_loc_id, xom_order.under_review_flag, CASE WHEN ship_order.order_id is null THEN 'FALSE' ELSE 'TRUE' END as shipping_necessary_flag FROM xom_order LEFT JOIN xom_customer_mod cust ON xom_order.organization_id = cust.organization_id AND xom_order.order_id = cust.order_id LEFT JOIN (SELECT line.organization_id, line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.void_flag = 0 AND (ful.LOC_ID is null OR  UPPER(ful.LOC_ID) <>  UPPER(src.LOC_ID)) GROUP BY line.organization_id, line.order_id) ship_order ON xom_order.organization_id = ship_order.organization_id AND xom_order.order_id = ship_order.order_id WHERE xom_order.organization_id = 1000 AND  UPPER(xom_order.status_code) <> 'SUSPENDED'   AND  ( UPPER(xom_order.order_type) <> 'STANDARD_DELIVERY' ) AND ( EXISTS (SELECT line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.organization_id = xom_order.organization_id AND line.order_id = xom_order.order_id AND  UPPER(src.loc_id) = '110' AND line.void_flag = 0 AND ( UPPER(line.status_code) IN ('POLLED', 'ACCEPTED') OR (( UPPER(line.status_code) = 'RESERVED') AND (ful.loc_id IS NULL OR  UPPER(src.loc_id) <>  UPPER(ful.loc_id)))))  )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 19:26:18,266 execute [  0.698 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T19:26:18', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 19:26:31,746 execute [  0.743 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 19:26:35,771 execute [  2.870 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 19:26:35,775 execute [  0.425 ms StorePrimary] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 19:26:35,776 execute [  0.272 ms Local] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 19:26:35,778 execute [  0.417 ms StorePrimary] UPDATE ctl_device_registration SET update_date = to_date('2024-10-20T00:26:35', 'YYYY-MM-DD"T"HH24:MI:SS'), update_user_id = '100', ip_address = '10.10.28.83', date_timestamp = to_date('2024-10-19T19:26:35', 'YYYY-MM-DD"T"HH24:MI:SS'), business_date = to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS'), xstore_version = '16.0.5.0.38 - 7.0.36 - 1.54', env_version = null, active_flag = 'true', config_version = null, primary_register_flag = 'true' WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.UPDATE [Device-Registration-1]
 DEBUG [      ] 2024-10-19 19:26:35,782 execute [  0.366 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T19:26:35', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 19:26:35,784 execute [  0.218 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T19:26:35', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 19:26:35,785 execute [  0.209 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T19:26:35', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 19:26:35,786 execute [  0.162 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 ERROR [      ] 2024-10-19 19:28:02,852 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 19:28:02,853 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
 ERROR [      ] 2024-10-19 19:28:02,857 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017104711.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-2]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 19:28:03,111 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 19:28:03,111 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
 ERROR [      ] 2024-10-19 19:28:03,115 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017110705.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-2]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 19:28:03,368 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 19:28:03,368 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
 ERROR [      ] 2024-10-19 19:28:03,371 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017111605.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-2]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 DEBUG [      ] 2024-10-19 19:28:31,758 execute [  0.343 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 19:30:31,770 execute [  0.829 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 19:32:31,785 execute [  1.125 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 19:34:31,797 execute [  0.371 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 19:36:18,310 execute [  0.962 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T19:36:18', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 19:36:31,809 execute [  0.862 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 19:38:31,822 execute [  0.361 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 19:40:31,836 execute [  0.572 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 19:41:17,737 execute [  0.789 ms StorePrimary] SELECT xom_order.organization_id, xom_order.order_id, cust.first_name, cust.last_name, xom_order.order_date, xom_order.status_code, xom_order.order_type, cust.telephone1, xom_order.order_loc_id, xom_order.under_review_flag, CASE WHEN ship_order.order_id is null THEN 'FALSE' ELSE 'TRUE' END as shipping_necessary_flag FROM xom_order LEFT JOIN xom_customer_mod cust ON xom_order.organization_id = cust.organization_id AND xom_order.order_id = cust.order_id LEFT JOIN (SELECT line.organization_id, line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.void_flag = 0 AND (ful.LOC_ID is null OR  UPPER(ful.LOC_ID) <>  UPPER(src.LOC_ID)) GROUP BY line.organization_id, line.order_id) ship_order ON xom_order.organization_id = ship_order.organization_id AND xom_order.order_id = ship_order.order_id WHERE xom_order.organization_id = 1000 AND  UPPER(xom_order.status_code) <> 'SUSPENDED'   AND  ( UPPER(xom_order.order_type) <> 'STANDARD_DELIVERY' ) AND ( EXISTS (SELECT line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.organization_id = xom_order.organization_id AND line.order_id = xom_order.order_id AND  UPPER(src.loc_id) = '110' AND line.void_flag = 0 AND ( UPPER(line.status_code) IN ('POLLED', 'ACCEPTED') OR (( UPPER(line.status_code) = 'RESERVED') AND (ful.loc_id IS NULL OR  UPPER(src.loc_id) <>  UPPER(ful.loc_id)))))  )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 19:41:35,838 execute [  0.517 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 19:41:35,841 execute [  0.415 ms StorePrimary] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 19:41:35,843 execute [  0.270 ms Local] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 19:41:35,845 execute [  0.433 ms StorePrimary] UPDATE ctl_device_registration SET update_date = to_date('2024-10-20T00:41:35', 'YYYY-MM-DD"T"HH24:MI:SS'), update_user_id = '100', ip_address = '10.10.28.83', date_timestamp = to_date('2024-10-19T19:41:35', 'YYYY-MM-DD"T"HH24:MI:SS'), business_date = to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS'), xstore_version = '16.0.5.0.38 - 7.0.36 - 1.54', env_version = null, active_flag = 'true', config_version = null, primary_register_flag = 'true' WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.UPDATE [Device-Registration-1]
 DEBUG [      ] 2024-10-19 19:41:35,849 execute [  0.786 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T19:41:35', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 19:41:35,851 execute [  0.255 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T19:41:35', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 19:41:35,854 execute [  0.281 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T19:41:35', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 19:41:35,855 execute [  0.303 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 19:42:31,849 execute [  1.225 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 ERROR [      ] 2024-10-19 19:43:03,701 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 19:43:03,702 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
 ERROR [      ] 2024-10-19 19:43:03,705 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017104711.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-4]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 19:43:03,963 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 19:43:03,964 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
 ERROR [      ] 2024-10-19 19:43:03,967 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017110705.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-4]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 19:43:04,215 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 19:43:04,216 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
 ERROR [      ] 2024-10-19 19:43:04,220 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017111605.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-4]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 DEBUG [      ] 2024-10-19 19:44:31,861 execute [  1.202 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 19:46:18,350 execute [  0.522 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T19:46:18', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 19:46:31,872 execute [  0.391 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 19:48:31,884 execute [  0.389 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 19:50:31,896 execute [  0.392 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 19:52:31,907 execute [  0.410 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 19:54:31,918 execute [  0.455 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 19:56:17,790 execute [  0.721 ms StorePrimary] SELECT xom_order.organization_id, xom_order.order_id, cust.first_name, cust.last_name, xom_order.order_date, xom_order.status_code, xom_order.order_type, cust.telephone1, xom_order.order_loc_id, xom_order.under_review_flag, CASE WHEN ship_order.order_id is null THEN 'FALSE' ELSE 'TRUE' END as shipping_necessary_flag FROM xom_order LEFT JOIN xom_customer_mod cust ON xom_order.organization_id = cust.organization_id AND xom_order.order_id = cust.order_id LEFT JOIN (SELECT line.organization_id, line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.void_flag = 0 AND (ful.LOC_ID is null OR  UPPER(ful.LOC_ID) <>  UPPER(src.LOC_ID)) GROUP BY line.organization_id, line.order_id) ship_order ON xom_order.organization_id = ship_order.organization_id AND xom_order.order_id = ship_order.order_id WHERE xom_order.organization_id = 1000 AND  UPPER(xom_order.status_code) <> 'SUSPENDED'   AND  ( UPPER(xom_order.order_type) <> 'STANDARD_DELIVERY' ) AND ( EXISTS (SELECT line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.organization_id = xom_order.organization_id AND line.order_id = xom_order.order_id AND  UPPER(src.loc_id) = '110' AND line.void_flag = 0 AND ( UPPER(line.status_code) IN ('POLLED', 'ACCEPTED') OR (( UPPER(line.status_code) = 'RESERVED') AND (ful.loc_id IS NULL OR  UPPER(src.loc_id) <>  UPPER(ful.loc_id)))))  )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 19:56:18,386 execute [  0.732 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T19:56:18', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 19:56:31,929 execute [  0.712 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 19:56:35,900 execute [  1.126 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 19:56:35,903 execute [  0.425 ms StorePrimary] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 19:56:35,905 execute [  0.293 ms Local] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 19:56:35,907 execute [  0.480 ms StorePrimary] UPDATE ctl_device_registration SET update_date = to_date('2024-10-20T00:56:35', 'YYYY-MM-DD"T"HH24:MI:SS'), update_user_id = '100', ip_address = '10.10.28.83', date_timestamp = to_date('2024-10-19T19:56:35', 'YYYY-MM-DD"T"HH24:MI:SS'), business_date = to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS'), xstore_version = '16.0.5.0.38 - 7.0.36 - 1.54', env_version = null, active_flag = 'true', config_version = null, primary_register_flag = 'true' WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.UPDATE [Device-Registration-1]
 DEBUG [      ] 2024-10-19 19:56:35,910 execute [  0.357 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T19:56:35', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 19:56:35,911 execute [  0.226 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T19:56:35', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 19:56:35,913 execute [  0.223 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T19:56:35', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 19:56:35,915 execute [  0.187 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 ERROR [      ] 2024-10-19 19:58:04,544 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 19:58:04,544 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
 ERROR [      ] 2024-10-19 19:58:04,548 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017104711.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-2]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 19:58:04,805 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 19:58:04,806 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
 ERROR [      ] 2024-10-19 19:58:04,809 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017110705.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-2]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 19:58:05,069 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 19:58:05,070 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
 ERROR [      ] 2024-10-19 19:58:05,073 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017111605.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-2]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 DEBUG [      ] 2024-10-19 19:58:31,940 execute [  0.756 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 20:00:31,952 execute [  0.357 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 20:02:31,966 execute [  1.131 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 20:04:31,978 execute [  1.208 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 20:06:18,421 execute [  0.584 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T20:06:18', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 20:06:31,988 execute [  0.345 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 20:08:31,998 execute [  0.473 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 20:10:32,009 execute [  0.388 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 20:11:17,838 execute [  0.697 ms StorePrimary] SELECT xom_order.organization_id, xom_order.order_id, cust.first_name, cust.last_name, xom_order.order_date, xom_order.status_code, xom_order.order_type, cust.telephone1, xom_order.order_loc_id, xom_order.under_review_flag, CASE WHEN ship_order.order_id is null THEN 'FALSE' ELSE 'TRUE' END as shipping_necessary_flag FROM xom_order LEFT JOIN xom_customer_mod cust ON xom_order.organization_id = cust.organization_id AND xom_order.order_id = cust.order_id LEFT JOIN (SELECT line.organization_id, line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.void_flag = 0 AND (ful.LOC_ID is null OR  UPPER(ful.LOC_ID) <>  UPPER(src.LOC_ID)) GROUP BY line.organization_id, line.order_id) ship_order ON xom_order.organization_id = ship_order.organization_id AND xom_order.order_id = ship_order.order_id WHERE xom_order.organization_id = 1000 AND  UPPER(xom_order.status_code) <> 'SUSPENDED'   AND  ( UPPER(xom_order.order_type) <> 'STANDARD_DELIVERY' ) AND ( EXISTS (SELECT line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.organization_id = xom_order.organization_id AND line.order_id = xom_order.order_id AND  UPPER(src.loc_id) = '110' AND line.void_flag = 0 AND ( UPPER(line.status_code) IN ('POLLED', 'ACCEPTED') OR (( UPPER(line.status_code) = 'RESERVED') AND (ful.loc_id IS NULL OR  UPPER(src.loc_id) <>  UPPER(ful.loc_id)))))  )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 20:11:35,953 execute [  0.557 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 20:11:35,956 execute [  0.509 ms StorePrimary] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 20:11:35,958 execute [  0.326 ms Local] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 20:11:35,962 execute [  0.628 ms StorePrimary] UPDATE ctl_device_registration SET update_date = to_date('2024-10-20T01:11:35', 'YYYY-MM-DD"T"HH24:MI:SS'), update_user_id = '100', ip_address = '10.10.28.83', date_timestamp = to_date('2024-10-19T20:11:35', 'YYYY-MM-DD"T"HH24:MI:SS'), business_date = to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS'), xstore_version = '16.0.5.0.38 - 7.0.36 - 1.54', env_version = null, active_flag = 'true', config_version = null, primary_register_flag = 'true' WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.UPDATE [Device-Registration-1]
 DEBUG [      ] 2024-10-19 20:11:35,968 execute [  0.942 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T20:11:35', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 20:11:35,970 execute [  0.284 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T20:11:35', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 20:11:35,972 execute [  0.295 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T20:11:35', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 20:11:35,974 execute [  0.502 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 20:12:32,020 execute [  0.735 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 ERROR [      ] 2024-10-19 20:13:05,402 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 20:13:05,403 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
 ERROR [      ] 2024-10-19 20:13:05,407 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017104711.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-4]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 20:13:05,635 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 20:13:05,636 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
 ERROR [      ] 2024-10-19 20:13:05,640 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017110705.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-4]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 20:13:05,904 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 20:13:05,905 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
 ERROR [      ] 2024-10-19 20:13:05,908 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017111605.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-4]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 DEBUG [      ] 2024-10-19 20:14:32,032 execute [  1.414 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 20:16:18,456 execute [  0.541 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T20:16:18', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 20:16:32,043 execute [  0.334 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 20:18:32,053 execute [  0.390 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 20:20:32,065 execute [  0.390 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 20:22:32,075 execute [  0.390 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 20:24:32,089 execute [  0.521 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 20:26:17,880 execute [  0.832 ms StorePrimary] SELECT xom_order.organization_id, xom_order.order_id, cust.first_name, cust.last_name, xom_order.order_date, xom_order.status_code, xom_order.order_type, cust.telephone1, xom_order.order_loc_id, xom_order.under_review_flag, CASE WHEN ship_order.order_id is null THEN 'FALSE' ELSE 'TRUE' END as shipping_necessary_flag FROM xom_order LEFT JOIN xom_customer_mod cust ON xom_order.organization_id = cust.organization_id AND xom_order.order_id = cust.order_id LEFT JOIN (SELECT line.organization_id, line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.void_flag = 0 AND (ful.LOC_ID is null OR  UPPER(ful.LOC_ID) <>  UPPER(src.LOC_ID)) GROUP BY line.organization_id, line.order_id) ship_order ON xom_order.organization_id = ship_order.organization_id AND xom_order.order_id = ship_order.order_id WHERE xom_order.organization_id = 1000 AND  UPPER(xom_order.status_code) <> 'SUSPENDED'   AND  ( UPPER(xom_order.order_type) <> 'STANDARD_DELIVERY' ) AND ( EXISTS (SELECT line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.organization_id = xom_order.organization_id AND line.order_id = xom_order.order_id AND  UPPER(src.loc_id) = '110' AND line.void_flag = 0 AND ( UPPER(line.status_code) IN ('POLLED', 'ACCEPTED') OR (( UPPER(line.status_code) = 'RESERVED') AND (ful.loc_id IS NULL OR  UPPER(src.loc_id) <>  UPPER(ful.loc_id)))))  )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 20:26:18,487 execute [  0.710 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T20:26:18', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 20:26:32,099 execute [  0.835 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 20:26:36,011 execute [  1.321 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 20:26:36,014 execute [  0.465 ms StorePrimary] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 20:26:36,017 execute [  0.894 ms Local] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 20:26:36,019 execute [  0.434 ms StorePrimary] UPDATE ctl_device_registration SET update_date = to_date('2024-10-20T01:26:36', 'YYYY-MM-DD"T"HH24:MI:SS'), update_user_id = '100', ip_address = '10.10.28.83', date_timestamp = to_date('2024-10-19T20:26:36', 'YYYY-MM-DD"T"HH24:MI:SS'), business_date = to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS'), xstore_version = '16.0.5.0.38 - 7.0.36 - 1.54', env_version = null, active_flag = 'true', config_version = null, primary_register_flag = 'true' WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.UPDATE [Device-Registration-1]
 DEBUG [      ] 2024-10-19 20:26:36,022 execute [  0.373 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T20:26:36', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 20:26:36,023 execute [  0.222 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T20:26:36', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 20:26:36,025 execute [  0.200 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T20:26:36', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 20:26:36,026 execute [  0.172 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 ERROR [      ] 2024-10-19 20:28:06,288 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 20:28:06,289 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
 ERROR [      ] 2024-10-19 20:28:06,292 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017104711.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-2]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 20:28:06,515 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 20:28:06,516 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
 ERROR [      ] 2024-10-19 20:28:06,519 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017110705.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-2]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 20:28:06,790 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 20:28:06,791 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
 ERROR [      ] 2024-10-19 20:28:06,795 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017111605.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-2]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 DEBUG [      ] 2024-10-19 20:28:32,110 execute [  0.396 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 20:30:32,120 execute [  1.133 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 20:32:32,132 execute [  1.050 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 20:34:32,143 execute [  0.366 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 20:36:18,519 execute [  0.890 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T20:36:18', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 20:36:32,152 execute [  0.733 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 20:38:32,162 execute [  0.371 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 20:40:32,172 execute [  0.361 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 20:41:17,919 execute [  0.731 ms StorePrimary] SELECT xom_order.organization_id, xom_order.order_id, cust.first_name, cust.last_name, xom_order.order_date, xom_order.status_code, xom_order.order_type, cust.telephone1, xom_order.order_loc_id, xom_order.under_review_flag, CASE WHEN ship_order.order_id is null THEN 'FALSE' ELSE 'TRUE' END as shipping_necessary_flag FROM xom_order LEFT JOIN xom_customer_mod cust ON xom_order.organization_id = cust.organization_id AND xom_order.order_id = cust.order_id LEFT JOIN (SELECT line.organization_id, line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.void_flag = 0 AND (ful.LOC_ID is null OR  UPPER(ful.LOC_ID) <>  UPPER(src.LOC_ID)) GROUP BY line.organization_id, line.order_id) ship_order ON xom_order.organization_id = ship_order.organization_id AND xom_order.order_id = ship_order.order_id WHERE xom_order.organization_id = 1000 AND  UPPER(xom_order.status_code) <> 'SUSPENDED'   AND  ( UPPER(xom_order.order_type) <> 'STANDARD_DELIVERY' ) AND ( EXISTS (SELECT line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.organization_id = xom_order.organization_id AND line.order_id = xom_order.order_id AND  UPPER(src.loc_id) = '110' AND line.void_flag = 0 AND ( UPPER(line.status_code) IN ('POLLED', 'ACCEPTED') OR (( UPPER(line.status_code) = 'RESERVED') AND (ful.loc_id IS NULL OR  UPPER(src.loc_id) <>  UPPER(ful.loc_id)))))  )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 20:41:36,058 execute [  0.504 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 20:41:36,061 execute [  0.448 ms StorePrimary] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 20:41:36,063 execute [  0.247 ms Local] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 20:41:36,065 execute [  0.414 ms StorePrimary] UPDATE ctl_device_registration SET update_date = to_date('2024-10-20T01:41:36', 'YYYY-MM-DD"T"HH24:MI:SS'), update_user_id = '100', ip_address = '10.10.28.83', date_timestamp = to_date('2024-10-19T20:41:36', 'YYYY-MM-DD"T"HH24:MI:SS'), business_date = to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS'), xstore_version = '16.0.5.0.38 - 7.0.36 - 1.54', env_version = null, active_flag = 'true', config_version = null, primary_register_flag = 'true' WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.UPDATE [Device-Registration-1]
 DEBUG [      ] 2024-10-19 20:41:36,070 execute [  0.987 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T20:41:36', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 20:41:36,071 execute [  0.229 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T20:41:36', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 20:41:36,074 execute [  0.220 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T20:41:36', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 20:41:36,075 execute [  0.296 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 20:42:32,185 execute [  0.829 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 ERROR [      ] 2024-10-19 20:43:07,144 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 20:43:07,145 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
 ERROR [      ] 2024-10-19 20:43:07,149 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017104711.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-3]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 20:43:07,414 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 20:43:07,415 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
 ERROR [      ] 2024-10-19 20:43:07,418 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017110705.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-3]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 20:43:07,674 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 20:43:07,675 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
 ERROR [      ] 2024-10-19 20:43:07,678 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017111605.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-3]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 DEBUG [      ] 2024-10-19 20:44:32,195 execute [  1.521 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 20:46:18,547 execute [  0.505 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T20:46:18', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 20:46:32,203 execute [  0.394 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 20:48:32,212 execute [  0.373 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 20:50:32,223 execute [  0.343 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 20:52:32,232 execute [  0.400 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 20:54:32,242 execute [  0.423 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 20:56:17,956 execute [  0.829 ms StorePrimary] SELECT xom_order.organization_id, xom_order.order_id, cust.first_name, cust.last_name, xom_order.order_date, xom_order.status_code, xom_order.order_type, cust.telephone1, xom_order.order_loc_id, xom_order.under_review_flag, CASE WHEN ship_order.order_id is null THEN 'FALSE' ELSE 'TRUE' END as shipping_necessary_flag FROM xom_order LEFT JOIN xom_customer_mod cust ON xom_order.organization_id = cust.organization_id AND xom_order.order_id = cust.order_id LEFT JOIN (SELECT line.organization_id, line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.void_flag = 0 AND (ful.LOC_ID is null OR  UPPER(ful.LOC_ID) <>  UPPER(src.LOC_ID)) GROUP BY line.organization_id, line.order_id) ship_order ON xom_order.organization_id = ship_order.organization_id AND xom_order.order_id = ship_order.order_id WHERE xom_order.organization_id = 1000 AND  UPPER(xom_order.status_code) <> 'SUSPENDED'   AND  ( UPPER(xom_order.order_type) <> 'STANDARD_DELIVERY' ) AND ( EXISTS (SELECT line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.organization_id = xom_order.organization_id AND line.order_id = xom_order.order_id AND  UPPER(src.loc_id) = '110' AND line.void_flag = 0 AND ( UPPER(line.status_code) IN ('POLLED', 'ACCEPTED') OR (( UPPER(line.status_code) = 'RESERVED') AND (ful.loc_id IS NULL OR  UPPER(src.loc_id) <>  UPPER(ful.loc_id)))))  )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 20:56:18,574 execute [  0.325 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T20:56:18', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 20:56:32,253 execute [  0.957 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 20:56:36,105 execute [  1.611 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 20:56:36,109 execute [  0.479 ms StorePrimary] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 20:56:36,111 execute [  0.316 ms Local] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 20:56:36,114 execute [  0.465 ms StorePrimary] UPDATE ctl_device_registration SET update_date = to_date('2024-10-20T01:56:36', 'YYYY-MM-DD"T"HH24:MI:SS'), update_user_id = '100', ip_address = '10.10.28.83', date_timestamp = to_date('2024-10-19T20:56:36', 'YYYY-MM-DD"T"HH24:MI:SS'), business_date = to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS'), xstore_version = '16.0.5.0.38 - 7.0.36 - 1.54', env_version = null, active_flag = 'true', config_version = null, primary_register_flag = 'true' WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.UPDATE [Device-Registration-1]
 DEBUG [      ] 2024-10-19 20:56:36,117 execute [  0.353 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T20:56:36', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 20:56:36,119 execute [  0.299 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T20:56:36', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 20:56:36,121 execute [  0.280 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T20:56:36', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 20:56:36,122 execute [  0.186 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 ERROR [      ] 2024-10-19 20:58:08,020 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 20:58:08,021 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
 ERROR [      ] 2024-10-19 20:58:08,024 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017104711.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-4]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 20:58:08,279 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 20:58:08,280 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
 ERROR [      ] 2024-10-19 20:58:08,284 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017110705.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-4]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 20:58:08,546 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 20:58:08,548 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
 ERROR [      ] 2024-10-19 20:58:08,551 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017111605.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-4]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 DEBUG [      ] 2024-10-19 20:58:32,263 execute [  1.108 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 21:00:32,272 execute [  0.406 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 21:02:32,283 execute [  1.143 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 21:04:32,293 execute [  0.423 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 21:06:18,601 execute [  0.890 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T21:06:18', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 21:06:32,301 execute [  0.755 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 21:08:32,311 execute [  0.408 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 21:10:32,319 execute [  0.374 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 21:11:17,990 execute [  0.691 ms StorePrimary] SELECT xom_order.organization_id, xom_order.order_id, cust.first_name, cust.last_name, xom_order.order_date, xom_order.status_code, xom_order.order_type, cust.telephone1, xom_order.order_loc_id, xom_order.under_review_flag, CASE WHEN ship_order.order_id is null THEN 'FALSE' ELSE 'TRUE' END as shipping_necessary_flag FROM xom_order LEFT JOIN xom_customer_mod cust ON xom_order.organization_id = cust.organization_id AND xom_order.order_id = cust.order_id LEFT JOIN (SELECT line.organization_id, line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.void_flag = 0 AND (ful.LOC_ID is null OR  UPPER(ful.LOC_ID) <>  UPPER(src.LOC_ID)) GROUP BY line.organization_id, line.order_id) ship_order ON xom_order.organization_id = ship_order.organization_id AND xom_order.order_id = ship_order.order_id WHERE xom_order.organization_id = 1000 AND  UPPER(xom_order.status_code) <> 'SUSPENDED'   AND  ( UPPER(xom_order.order_type) <> 'STANDARD_DELIVERY' ) AND ( EXISTS (SELECT line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.organization_id = xom_order.organization_id AND line.order_id = xom_order.order_id AND  UPPER(src.loc_id) = '110' AND line.void_flag = 0 AND ( UPPER(line.status_code) IN ('POLLED', 'ACCEPTED') OR (( UPPER(line.status_code) = 'RESERVED') AND (ful.loc_id IS NULL OR  UPPER(src.loc_id) <>  UPPER(ful.loc_id)))))  )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 21:11:36,149 execute [  0.399 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 21:11:36,152 execute [  0.363 ms StorePrimary] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 21:11:36,155 execute [  0.424 ms Local] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 21:11:36,157 execute [  0.440 ms StorePrimary] UPDATE ctl_device_registration SET update_date = to_date('2024-10-20T02:11:36', 'YYYY-MM-DD"T"HH24:MI:SS'), update_user_id = '100', ip_address = '10.10.28.83', date_timestamp = to_date('2024-10-19T21:11:36', 'YYYY-MM-DD"T"HH24:MI:SS'), business_date = to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS'), xstore_version = '16.0.5.0.38 - 7.0.36 - 1.54', env_version = null, active_flag = 'true', config_version = null, primary_register_flag = 'true' WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.UPDATE [Device-Registration-1]
 DEBUG [      ] 2024-10-19 21:11:36,162 execute [  0.911 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T21:11:36', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 21:11:36,165 execute [  0.270 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T21:11:36', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 21:11:36,166 execute [  0.188 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T21:11:36', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 21:11:36,168 execute [  0.297 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 21:12:32,329 execute [  0.778 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 ERROR [      ] 2024-10-19 21:13:08,869 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 21:13:08,870 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
 ERROR [      ] 2024-10-19 21:13:08,874 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017104711.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-2]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 21:13:09,143 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 21:13:09,143 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
 ERROR [      ] 2024-10-19 21:13:09,147 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017110705.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-2]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 21:13:09,410 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 21:13:09,410 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
 ERROR [      ] 2024-10-19 21:13:09,414 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017111605.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-2]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 DEBUG [      ] 2024-10-19 21:14:32,337 execute [  0.389 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 21:16:18,626 execute [  0.983 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T21:16:18', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 21:16:32,346 execute [  0.791 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 21:18:32,355 execute [  0.413 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 21:20:32,364 execute [  0.393 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 21:22:32,373 execute [  0.361 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 21:24:32,383 execute [  0.394 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 21:26:18,024 execute [  0.821 ms StorePrimary] SELECT xom_order.organization_id, xom_order.order_id, cust.first_name, cust.last_name, xom_order.order_date, xom_order.status_code, xom_order.order_type, cust.telephone1, xom_order.order_loc_id, xom_order.under_review_flag, CASE WHEN ship_order.order_id is null THEN 'FALSE' ELSE 'TRUE' END as shipping_necessary_flag FROM xom_order LEFT JOIN xom_customer_mod cust ON xom_order.organization_id = cust.organization_id AND xom_order.order_id = cust.order_id LEFT JOIN (SELECT line.organization_id, line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.void_flag = 0 AND (ful.LOC_ID is null OR  UPPER(ful.LOC_ID) <>  UPPER(src.LOC_ID)) GROUP BY line.organization_id, line.order_id) ship_order ON xom_order.organization_id = ship_order.organization_id AND xom_order.order_id = ship_order.order_id WHERE xom_order.organization_id = 1000 AND  UPPER(xom_order.status_code) <> 'SUSPENDED'   AND  ( UPPER(xom_order.order_type) <> 'STANDARD_DELIVERY' ) AND ( EXISTS (SELECT line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.organization_id = xom_order.organization_id AND line.order_id = xom_order.order_id AND  UPPER(src.loc_id) = '110' AND line.void_flag = 0 AND ( UPPER(line.status_code) IN ('POLLED', 'ACCEPTED') OR (( UPPER(line.status_code) = 'RESERVED') AND (ful.loc_id IS NULL OR  UPPER(src.loc_id) <>  UPPER(ful.loc_id)))))  )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 21:26:18,649 execute [  0.719 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T21:26:18', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 21:26:32,392 execute [  0.773 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 21:26:36,193 execute [  1.055 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 21:26:36,196 execute [  0.442 ms StorePrimary] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 21:26:36,198 execute [  0.306 ms Local] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 21:26:36,200 execute [  0.387 ms StorePrimary] UPDATE ctl_device_registration SET update_date = to_date('2024-10-20T02:26:36', 'YYYY-MM-DD"T"HH24:MI:SS'), update_user_id = '100', ip_address = '10.10.28.83', date_timestamp = to_date('2024-10-19T21:26:36', 'YYYY-MM-DD"T"HH24:MI:SS'), business_date = to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS'), xstore_version = '16.0.5.0.38 - 7.0.36 - 1.54', env_version = null, active_flag = 'true', config_version = null, primary_register_flag = 'true' WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.UPDATE [Device-Registration-1]
 DEBUG [      ] 2024-10-19 21:26:36,203 execute [  0.323 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T21:26:36', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 21:26:36,204 execute [  0.188 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T21:26:36', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 21:26:36,206 execute [  0.172 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T21:26:36', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 21:26:36,207 execute [  0.157 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 ERROR [      ] 2024-10-19 21:28:09,728 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 21:28:09,729 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
 ERROR [      ] 2024-10-19 21:28:09,733 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017104711.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-4]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 21:28:09,996 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 21:28:09,997 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
 ERROR [      ] 2024-10-19 21:28:10,000 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017110705.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-4]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 21:28:10,257 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 21:28:10,257 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
 ERROR [      ] 2024-10-19 21:28:10,261 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017111605.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-4]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 DEBUG [      ] 2024-10-19 21:28:32,401 execute [  0.825 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 21:30:32,452 execute [  0.373 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 21:32:32,508 execute [  1.307 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 21:34:32,561 execute [  1.343 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 21:36:18,841 execute [  0.830 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T21:36:18', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 21:36:32,612 execute [  0.501 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 21:38:32,661 execute [  0.405 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 21:40:32,707 execute [  0.334 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 21:41:18,323 execute [  0.738 ms StorePrimary] SELECT xom_order.organization_id, xom_order.order_id, cust.first_name, cust.last_name, xom_order.order_date, xom_order.status_code, xom_order.order_type, cust.telephone1, xom_order.order_loc_id, xom_order.under_review_flag, CASE WHEN ship_order.order_id is null THEN 'FALSE' ELSE 'TRUE' END as shipping_necessary_flag FROM xom_order LEFT JOIN xom_customer_mod cust ON xom_order.organization_id = cust.organization_id AND xom_order.order_id = cust.order_id LEFT JOIN (SELECT line.organization_id, line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.void_flag = 0 AND (ful.LOC_ID is null OR  UPPER(ful.LOC_ID) <>  UPPER(src.LOC_ID)) GROUP BY line.organization_id, line.order_id) ship_order ON xom_order.organization_id = ship_order.organization_id AND xom_order.order_id = ship_order.order_id WHERE xom_order.organization_id = 1000 AND  UPPER(xom_order.status_code) <> 'SUSPENDED'   AND  ( UPPER(xom_order.order_type) <> 'STANDARD_DELIVERY' ) AND ( EXISTS (SELECT line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.organization_id = xom_order.organization_id AND line.order_id = xom_order.order_id AND  UPPER(src.loc_id) = '110' AND line.void_flag = 0 AND ( UPPER(line.status_code) IN ('POLLED', 'ACCEPTED') OR (( UPPER(line.status_code) = 'RESERVED') AND (ful.loc_id IS NULL OR  UPPER(src.loc_id) <>  UPPER(ful.loc_id)))))  )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 21:41:36,504 execute [  0.488 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 21:41:36,506 execute [  0.413 ms StorePrimary] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 21:41:36,508 execute [  0.230 ms Local] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 21:41:36,510 execute [  0.456 ms StorePrimary] UPDATE ctl_device_registration SET update_date = to_date('2024-10-20T02:41:36', 'YYYY-MM-DD"T"HH24:MI:SS'), update_user_id = '100', ip_address = '10.10.28.83', date_timestamp = to_date('2024-10-19T21:41:36', 'YYYY-MM-DD"T"HH24:MI:SS'), business_date = to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS'), xstore_version = '16.0.5.0.38 - 7.0.36 - 1.54', env_version = null, active_flag = 'true', config_version = null, primary_register_flag = 'true' WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.UPDATE [Device-Registration-1]
 DEBUG [      ] 2024-10-19 21:41:36,515 execute [  0.841 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T21:41:36', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 21:41:36,517 execute [  0.253 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T21:41:36', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 21:41:36,519 execute [  0.238 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T21:41:36', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 21:41:36,521 execute [  0.348 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 21:42:32,754 execute [  0.749 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 ERROR [      ] 2024-10-19 21:43:10,911 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 21:43:10,911 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
 ERROR [      ] 2024-10-19 21:43:10,915 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017104711.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-1]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 21:43:11,132 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 21:43:11,133 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
 ERROR [      ] 2024-10-19 21:43:11,136 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017110705.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-1]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 21:43:11,398 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 21:43:11,398 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
 ERROR [      ] 2024-10-19 21:43:11,401 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017111605.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-1]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 DEBUG [      ] 2024-10-19 21:44:32,799 execute [  0.377 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 21:46:19,056 execute [  0.552 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T21:46:19', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 21:46:32,842 execute [  1.004 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 21:48:32,887 execute [  0.385 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 21:50:32,928 execute [  0.387 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 21:52:32,969 execute [  0.406 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 21:54:33,010 execute [  0.373 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 21:56:18,609 execute [  0.773 ms StorePrimary] SELECT xom_order.organization_id, xom_order.order_id, cust.first_name, cust.last_name, xom_order.order_date, xom_order.status_code, xom_order.order_type, cust.telephone1, xom_order.order_loc_id, xom_order.under_review_flag, CASE WHEN ship_order.order_id is null THEN 'FALSE' ELSE 'TRUE' END as shipping_necessary_flag FROM xom_order LEFT JOIN xom_customer_mod cust ON xom_order.organization_id = cust.organization_id AND xom_order.order_id = cust.order_id LEFT JOIN (SELECT line.organization_id, line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.void_flag = 0 AND (ful.LOC_ID is null OR  UPPER(ful.LOC_ID) <>  UPPER(src.LOC_ID)) GROUP BY line.organization_id, line.order_id) ship_order ON xom_order.organization_id = ship_order.organization_id AND xom_order.order_id = ship_order.order_id WHERE xom_order.organization_id = 1000 AND  UPPER(xom_order.status_code) <> 'SUSPENDED'   AND  ( UPPER(xom_order.order_type) <> 'STANDARD_DELIVERY' ) AND ( EXISTS (SELECT line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.organization_id = xom_order.organization_id AND line.order_id = xom_order.order_id AND  UPPER(src.loc_id) = '110' AND line.void_flag = 0 AND ( UPPER(line.status_code) IN ('POLLED', 'ACCEPTED') OR (( UPPER(line.status_code) = 'RESERVED') AND (ful.loc_id IS NULL OR  UPPER(src.loc_id) <>  UPPER(ful.loc_id)))))  )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 21:56:19,242 execute [  0.323 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T21:56:19', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 21:56:33,049 execute [  0.733 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 21:56:36,799 execute [  1.169 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 21:56:36,802 execute [  0.459 ms StorePrimary] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 21:56:36,804 execute [  0.269 ms Local] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 21:56:36,808 execute [  2.177 ms StorePrimary] UPDATE ctl_device_registration SET update_date = to_date('2024-10-20T02:56:36', 'YYYY-MM-DD"T"HH24:MI:SS'), update_user_id = '100', ip_address = '10.10.28.83', date_timestamp = to_date('2024-10-19T21:56:36', 'YYYY-MM-DD"T"HH24:MI:SS'), business_date = to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS'), xstore_version = '16.0.5.0.38 - 7.0.36 - 1.54', env_version = null, active_flag = 'true', config_version = null, primary_register_flag = 'true' WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.UPDATE [Device-Registration-1]
 DEBUG [      ] 2024-10-19 21:56:36,811 execute [  0.326 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T21:56:36', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 21:56:36,812 execute [  0.204 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T21:56:36', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 21:56:36,814 execute [  0.173 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T21:56:36', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 21:56:36,815 execute [  0.154 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 ERROR [      ] 2024-10-19 21:58:11,949 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 21:58:11,950 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
 ERROR [      ] 2024-10-19 21:58:11,953 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017104711.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-3]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 21:58:12,225 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 21:58:12,226 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
 ERROR [      ] 2024-10-19 21:58:12,229 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017110705.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-3]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 21:58:12,451 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 21:58:12,452 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
 ERROR [      ] 2024-10-19 21:58:12,455 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017111605.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-3]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 DEBUG [      ] 2024-10-19 21:58:33,112 execute [  0.817 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 22:00:33,148 execute [  0.373 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 22:02:33,187 execute [  1.107 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 22:04:33,223 execute [  1.212 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 22:06:19,407 execute [  0.753 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T22:06:19', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 22:06:33,258 execute [  0.309 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 22:08:33,292 execute [  0.451 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 22:10:33,325 execute [  0.359 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 22:11:18,842 execute [  0.729 ms StorePrimary] SELECT xom_order.organization_id, xom_order.order_id, cust.first_name, cust.last_name, xom_order.order_date, xom_order.status_code, xom_order.order_type, cust.telephone1, xom_order.order_loc_id, xom_order.under_review_flag, CASE WHEN ship_order.order_id is null THEN 'FALSE' ELSE 'TRUE' END as shipping_necessary_flag FROM xom_order LEFT JOIN xom_customer_mod cust ON xom_order.organization_id = cust.organization_id AND xom_order.order_id = cust.order_id LEFT JOIN (SELECT line.organization_id, line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.void_flag = 0 AND (ful.LOC_ID is null OR  UPPER(ful.LOC_ID) <>  UPPER(src.LOC_ID)) GROUP BY line.organization_id, line.order_id) ship_order ON xom_order.organization_id = ship_order.organization_id AND xom_order.order_id = ship_order.order_id WHERE xom_order.organization_id = 1000 AND  UPPER(xom_order.status_code) <> 'SUSPENDED'   AND  ( UPPER(xom_order.order_type) <> 'STANDARD_DELIVERY' ) AND ( EXISTS (SELECT line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.organization_id = xom_order.organization_id AND line.order_id = xom_order.order_id AND  UPPER(src.loc_id) = '110' AND line.void_flag = 0 AND ( UPPER(line.status_code) IN ('POLLED', 'ACCEPTED') OR (( UPPER(line.status_code) = 'RESERVED') AND (ful.loc_id IS NULL OR  UPPER(src.loc_id) <>  UPPER(ful.loc_id)))))  )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 22:11:37,040 execute [  0.487 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 22:11:37,044 execute [  0.505 ms StorePrimary] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 22:11:37,046 execute [  0.298 ms Local] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 22:11:37,048 execute [  0.478 ms StorePrimary] UPDATE ctl_device_registration SET update_date = to_date('2024-10-20T03:11:37', 'YYYY-MM-DD"T"HH24:MI:SS'), update_user_id = '100', ip_address = '10.10.28.83', date_timestamp = to_date('2024-10-19T22:11:37', 'YYYY-MM-DD"T"HH24:MI:SS'), business_date = to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS'), xstore_version = '16.0.5.0.38 - 7.0.36 - 1.54', env_version = null, active_flag = 'true', config_version = null, primary_register_flag = 'true' WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.UPDATE [Device-Registration-1]
 DEBUG [      ] 2024-10-19 22:11:37,053 execute [  0.970 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T22:11:37', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 22:11:37,055 execute [  0.284 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T22:11:37', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 22:11:37,057 execute [  0.242 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T22:11:37', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 22:11:37,059 execute [  0.347 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 22:12:33,358 execute [  0.764 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 ERROR [      ] 2024-10-19 22:13:13,005 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 22:13:13,006 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
 ERROR [      ] 2024-10-19 22:13:13,009 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017104711.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-2]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 22:13:13,272 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 22:13:13,273 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
 ERROR [      ] 2024-10-19 22:13:13,276 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017110705.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-2]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 22:13:13,569 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 22:13:13,570 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
 ERROR [      ] 2024-10-19 22:13:13,573 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017111605.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-2]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 DEBUG [      ] 2024-10-19 22:14:33,390 execute [  1.485 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 22:16:19,553 execute [  0.542 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T22:16:19', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 22:16:33,421 execute [  0.377 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 22:18:33,451 execute [  0.387 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 22:20:33,481 execute [  0.382 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 22:22:33,511 execute [  0.378 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 22:24:33,539 execute [  0.391 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 22:26:19,034 execute [  0.748 ms StorePrimary] SELECT xom_order.organization_id, xom_order.order_id, cust.first_name, cust.last_name, xom_order.order_date, xom_order.status_code, xom_order.order_type, cust.telephone1, xom_order.order_loc_id, xom_order.under_review_flag, CASE WHEN ship_order.order_id is null THEN 'FALSE' ELSE 'TRUE' END as shipping_necessary_flag FROM xom_order LEFT JOIN xom_customer_mod cust ON xom_order.organization_id = cust.organization_id AND xom_order.order_id = cust.order_id LEFT JOIN (SELECT line.organization_id, line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.void_flag = 0 AND (ful.LOC_ID is null OR  UPPER(ful.LOC_ID) <>  UPPER(src.LOC_ID)) GROUP BY line.organization_id, line.order_id) ship_order ON xom_order.organization_id = ship_order.organization_id AND xom_order.order_id = ship_order.order_id WHERE xom_order.organization_id = 1000 AND  UPPER(xom_order.status_code) <> 'SUSPENDED'   AND  ( UPPER(xom_order.order_type) <> 'STANDARD_DELIVERY' ) AND ( EXISTS (SELECT line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.organization_id = xom_order.organization_id AND line.order_id = xom_order.order_id AND  UPPER(src.loc_id) = '110' AND line.void_flag = 0 AND ( UPPER(line.status_code) IN ('POLLED', 'ACCEPTED') OR (( UPPER(line.status_code) = 'RESERVED') AND (ful.loc_id IS NULL OR  UPPER(src.loc_id) <>  UPPER(ful.loc_id)))))  )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 22:26:19,678 execute [  0.785 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T22:26:19', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 22:26:33,568 execute [  0.710 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 22:26:37,243 execute [  1.267 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 22:26:37,246 execute [  0.491 ms StorePrimary] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 22:26:37,249 execute [  0.295 ms Local] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 22:26:37,250 execute [  0.426 ms StorePrimary] UPDATE ctl_device_registration SET update_date = to_date('2024-10-20T03:26:37', 'YYYY-MM-DD"T"HH24:MI:SS'), update_user_id = '100', ip_address = '10.10.28.83', date_timestamp = to_date('2024-10-19T22:26:37', 'YYYY-MM-DD"T"HH24:MI:SS'), business_date = to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS'), xstore_version = '16.0.5.0.38 - 7.0.36 - 1.54', env_version = null, active_flag = 'true', config_version = null, primary_register_flag = 'true' WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.UPDATE [Device-Registration-1]
 DEBUG [      ] 2024-10-19 22:26:37,253 execute [  0.380 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T22:26:37', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 22:26:37,255 execute [  0.241 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T22:26:37', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 22:26:37,257 execute [  0.233 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T22:26:37', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 22:26:37,259 execute [  0.242 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 ERROR [      ] 2024-10-19 22:28:14,076 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 22:28:14,077 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
 ERROR [      ] 2024-10-19 22:28:14,081 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017104711.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-4]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 22:28:14,339 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 22:28:14,339 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
 ERROR [      ] 2024-10-19 22:28:14,343 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017110705.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-4]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 22:28:14,599 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 22:28:14,600 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
 ERROR [      ] 2024-10-19 22:28:14,603 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017111605.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-4]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 DEBUG [      ] 2024-10-19 22:28:33,595 execute [  0.329 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 22:30:33,622 execute [  1.107 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 22:32:33,650 execute [  1.129 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 22:34:33,676 execute [  1.043 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 22:36:19,792 execute [  0.508 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T22:36:19', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 22:36:33,700 execute [  0.350 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 22:38:33,725 execute [  0.417 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 22:40:33,748 execute [  0.394 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 22:41:19,195 execute [  0.719 ms StorePrimary] SELECT xom_order.organization_id, xom_order.order_id, cust.first_name, cust.last_name, xom_order.order_date, xom_order.status_code, xom_order.order_type, cust.telephone1, xom_order.order_loc_id, xom_order.under_review_flag, CASE WHEN ship_order.order_id is null THEN 'FALSE' ELSE 'TRUE' END as shipping_necessary_flag FROM xom_order LEFT JOIN xom_customer_mod cust ON xom_order.organization_id = cust.organization_id AND xom_order.order_id = cust.order_id LEFT JOIN (SELECT line.organization_id, line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.void_flag = 0 AND (ful.LOC_ID is null OR  UPPER(ful.LOC_ID) <>  UPPER(src.LOC_ID)) GROUP BY line.organization_id, line.order_id) ship_order ON xom_order.organization_id = ship_order.organization_id AND xom_order.order_id = ship_order.order_id WHERE xom_order.organization_id = 1000 AND  UPPER(xom_order.status_code) <> 'SUSPENDED'   AND  ( UPPER(xom_order.order_type) <> 'STANDARD_DELIVERY' ) AND ( EXISTS (SELECT line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.organization_id = xom_order.organization_id AND line.order_id = xom_order.order_id AND  UPPER(src.loc_id) = '110' AND line.void_flag = 0 AND ( UPPER(line.status_code) IN ('POLLED', 'ACCEPTED') OR (( UPPER(line.status_code) = 'RESERVED') AND (ful.loc_id IS NULL OR  UPPER(src.loc_id) <>  UPPER(ful.loc_id)))))  )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 22:41:37,409 execute [  0.497 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 22:41:37,412 execute [  0.417 ms StorePrimary] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 22:41:37,414 execute [  0.298 ms Local] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 22:41:37,416 execute [  0.445 ms StorePrimary] UPDATE ctl_device_registration SET update_date = to_date('2024-10-20T03:41:37', 'YYYY-MM-DD"T"HH24:MI:SS'), update_user_id = '100', ip_address = '10.10.28.83', date_timestamp = to_date('2024-10-19T22:41:37', 'YYYY-MM-DD"T"HH24:MI:SS'), business_date = to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS'), xstore_version = '16.0.5.0.38 - 7.0.36 - 1.54', env_version = null, active_flag = 'true', config_version = null, primary_register_flag = 'true' WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.UPDATE [Device-Registration-1]
 DEBUG [      ] 2024-10-19 22:41:37,421 execute [  0.848 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T22:41:37', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 22:41:37,423 execute [  0.279 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T22:41:37', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 22:41:37,425 execute [  0.219 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T22:41:37', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 22:41:37,426 execute [  0.283 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 22:42:33,773 execute [  0.821 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 ERROR [      ] 2024-10-19 22:43:15,075 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 22:43:15,076 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
 ERROR [      ] 2024-10-19 22:43:15,081 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017104711.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-3]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 22:43:15,347 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 22:43:15,348 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
 ERROR [      ] 2024-10-19 22:43:15,351 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017110705.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-3]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 22:43:15,604 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 22:43:15,605 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-3]
 ERROR [      ] 2024-10-19 22:43:15,608 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017111605.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-3]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 DEBUG [      ] 2024-10-19 22:44:33,795 execute [  0.355 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 22:46:19,892 execute [  0.934 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T22:46:19', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 22:46:33,817 execute [  0.791 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 22:48:33,841 execute [  0.448 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 22:50:33,862 execute [  0.387 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 22:52:33,883 execute [  0.353 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 22:54:33,904 execute [  0.374 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 22:56:19,329 execute [  0.726 ms StorePrimary] SELECT xom_order.organization_id, xom_order.order_id, cust.first_name, cust.last_name, xom_order.order_date, xom_order.status_code, xom_order.order_type, cust.telephone1, xom_order.order_loc_id, xom_order.under_review_flag, CASE WHEN ship_order.order_id is null THEN 'FALSE' ELSE 'TRUE' END as shipping_necessary_flag FROM xom_order LEFT JOIN xom_customer_mod cust ON xom_order.organization_id = cust.organization_id AND xom_order.order_id = cust.order_id LEFT JOIN (SELECT line.organization_id, line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.void_flag = 0 AND (ful.LOC_ID is null OR  UPPER(ful.LOC_ID) <>  UPPER(src.LOC_ID)) GROUP BY line.organization_id, line.order_id) ship_order ON xom_order.organization_id = ship_order.organization_id AND xom_order.order_id = ship_order.order_id WHERE xom_order.organization_id = 1000 AND  UPPER(xom_order.status_code) <> 'SUSPENDED'   AND  ( UPPER(xom_order.order_type) <> 'STANDARD_DELIVERY' ) AND ( EXISTS (SELECT line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.organization_id = xom_order.organization_id AND line.order_id = xom_order.order_id AND  UPPER(src.loc_id) = '110' AND line.void_flag = 0 AND ( UPPER(line.status_code) IN ('POLLED', 'ACCEPTED') OR (( UPPER(line.status_code) = 'RESERVED') AND (ful.loc_id IS NULL OR  UPPER(src.loc_id) <>  UPPER(ful.loc_id)))))  )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 22:56:19,979 execute [  0.322 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T22:56:19', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 22:56:33,925 execute [  0.677 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 22:56:37,551 execute [  1.062 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 22:56:37,554 execute [  0.463 ms StorePrimary] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 22:56:37,556 execute [  0.237 ms Local] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 22:56:37,558 execute [  0.383 ms StorePrimary] UPDATE ctl_device_registration SET update_date = to_date('2024-10-20T03:56:37', 'YYYY-MM-DD"T"HH24:MI:SS'), update_user_id = '100', ip_address = '10.10.28.83', date_timestamp = to_date('2024-10-19T22:56:37', 'YYYY-MM-DD"T"HH24:MI:SS'), business_date = to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS'), xstore_version = '16.0.5.0.38 - 7.0.36 - 1.54', env_version = null, active_flag = 'true', config_version = null, primary_register_flag = 'true' WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.UPDATE [Device-Registration-1]
 DEBUG [      ] 2024-10-19 22:56:37,562 execute [  1.987 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T22:56:37', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 22:56:37,563 execute [  0.205 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T22:56:37', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 22:56:37,564 execute [  0.166 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T22:56:37', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 22:56:37,566 execute [  0.163 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 ERROR [      ] 2024-10-19 22:58:16,023 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 22:58:16,024 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
 ERROR [      ] 2024-10-19 22:58:16,028 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017104711.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-4]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 22:58:16,290 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 22:58:16,290 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
 ERROR [      ] 2024-10-19 22:58:16,294 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017110705.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-4]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 22:58:16,546 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 22:58:16,547 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
 ERROR [      ] 2024-10-19 22:58:16,550 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017111605.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-4]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 DEBUG [      ] 2024-10-19 22:58:33,944 execute [  0.794 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 23:00:09,023 execute [  0.664 ms StorePrimary] SELECT cca.organization_id, cca.cust_acct_id, cca.cust_acct_code, p.first_name, p.last_name, cca.acct_balance, ccia.active_acct_total, cca.acct_setup_date, cca.cust_acct_statcode, cps.begin_date, cps.interval_type_enum, cps.interval_count, cps.payment_count, (SELECT SUM(extended_amt) FROM cat_cust_item_acct_detail ccad WHERE cca.organization_id = ccad.organization_id AND cca.cust_acct_id = ccad.cust_acct_id AND cca.cust_acct_code = ccad.cust_acct_code AND  UPPER(ccad.line_typcode) = 'DEPOSIT') AS total_deposits FROM cat_cust_acct cca JOIN cat_cust_item_acct ccia ON cca.organization_id = ccia.organization_id AND cca.cust_acct_id = ccia.cust_acct_id AND cca.cust_acct_code = ccia.cust_acct_code JOIN cat_payment_schedule cps ON cca.organization_id = cps.organization_id AND cca.cust_acct_id = cps.cust_acct_id AND cca.cust_acct_code = cps.cust_acct_code JOIN crm_party p ON cca.party_id = p.party_id AND cca.organization_id = p.organization_id JOIN crm_party_locale_information pli ON p.party_id = pli.party_id AND p.organization_id = pli.organization_id WHERE cca.cust_acct_code='LAYAWAY' AND ( UPPER(cca.cust_acct_statcode) = 'OPEN' OR  UPPER(cca.cust_acct_statcode) = 'OVERDUE') AND cca.organization_id = 1000 AND cca.rtl_loc_id = 110   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [scheduled-task-1]
 DEBUG [      ] 2024-10-19 23:00:33,965 execute [  0.806 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 23:02:33,985 execute [  0.346 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 23:04:34,005 execute [  0.984 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 23:06:20,057 execute [  0.498 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T23:06:20', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 23:06:34,023 execute [  0.336 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 23:08:34,043 execute [  0.335 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 23:10:34,060 execute [  0.358 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 23:11:19,440 execute [  0.760 ms StorePrimary] SELECT xom_order.organization_id, xom_order.order_id, cust.first_name, cust.last_name, xom_order.order_date, xom_order.status_code, xom_order.order_type, cust.telephone1, xom_order.order_loc_id, xom_order.under_review_flag, CASE WHEN ship_order.order_id is null THEN 'FALSE' ELSE 'TRUE' END as shipping_necessary_flag FROM xom_order LEFT JOIN xom_customer_mod cust ON xom_order.organization_id = cust.organization_id AND xom_order.order_id = cust.order_id LEFT JOIN (SELECT line.organization_id, line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.void_flag = 0 AND (ful.LOC_ID is null OR  UPPER(ful.LOC_ID) <>  UPPER(src.LOC_ID)) GROUP BY line.organization_id, line.order_id) ship_order ON xom_order.organization_id = ship_order.organization_id AND xom_order.order_id = ship_order.order_id WHERE xom_order.organization_id = 1000 AND  UPPER(xom_order.status_code) <> 'SUSPENDED'   AND  ( UPPER(xom_order.order_type) <> 'STANDARD_DELIVERY' ) AND ( EXISTS (SELECT line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.organization_id = xom_order.organization_id AND line.order_id = xom_order.order_id AND  UPPER(src.loc_id) = '110' AND line.void_flag = 0 AND ( UPPER(line.status_code) IN ('POLLED', 'ACCEPTED') OR (( UPPER(line.status_code) = 'RESERVED') AND (ful.loc_id IS NULL OR  UPPER(src.loc_id) <>  UPPER(ful.loc_id)))))  )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 23:11:37,668 execute [  0.478 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 23:11:37,671 execute [  0.442 ms StorePrimary] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 23:11:37,676 execute [  0.376 ms Local] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 23:11:37,679 execute [  1.228 ms StorePrimary] UPDATE ctl_device_registration SET update_date = to_date('2024-10-20T04:11:37', 'YYYY-MM-DD"T"HH24:MI:SS'), update_user_id = '100', ip_address = '10.10.28.83', date_timestamp = to_date('2024-10-19T23:11:37', 'YYYY-MM-DD"T"HH24:MI:SS'), business_date = to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS'), xstore_version = '16.0.5.0.38 - 7.0.36 - 1.54', env_version = null, active_flag = 'true', config_version = null, primary_register_flag = 'true' WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.UPDATE [Device-Registration-1]
 DEBUG [      ] 2024-10-19 23:11:37,682 execute [  0.481 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T23:11:37', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 23:11:37,684 execute [  0.238 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T23:11:37', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 23:11:37,685 execute [  0.197 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T23:11:37', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 23:11:37,687 execute [  0.270 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 23:12:34,079 execute [  0.766 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 ERROR [      ] 2024-10-19 23:13:16,982 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 23:13:16,983 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
 ERROR [      ] 2024-10-19 23:13:16,987 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017104711.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-1]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 23:13:17,198 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 23:13:17,199 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
 ERROR [      ] 2024-10-19 23:13:17,203 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017110705.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-1]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 23:13:17,458 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 23:13:17,458 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-1]
 ERROR [      ] 2024-10-19 23:13:17,462 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017111605.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-1]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 DEBUG [      ] 2024-10-19 23:14:34,097 execute [  0.393 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 23:16:20,129 execute [  0.992 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T23:16:20', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 23:16:34,113 execute [  0.369 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 23:18:34,129 execute [  0.721 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 23:20:34,146 execute [  0.374 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 23:22:34,163 execute [  0.375 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 23:24:34,179 execute [  0.390 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 23:26:19,533 execute [  0.715 ms StorePrimary] SELECT xom_order.organization_id, xom_order.order_id, cust.first_name, cust.last_name, xom_order.order_date, xom_order.status_code, xom_order.order_type, cust.telephone1, xom_order.order_loc_id, xom_order.under_review_flag, CASE WHEN ship_order.order_id is null THEN 'FALSE' ELSE 'TRUE' END as shipping_necessary_flag FROM xom_order LEFT JOIN xom_customer_mod cust ON xom_order.organization_id = cust.organization_id AND xom_order.order_id = cust.order_id LEFT JOIN (SELECT line.organization_id, line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.void_flag = 0 AND (ful.LOC_ID is null OR  UPPER(ful.LOC_ID) <>  UPPER(src.LOC_ID)) GROUP BY line.organization_id, line.order_id) ship_order ON xom_order.organization_id = ship_order.organization_id AND xom_order.order_id = ship_order.order_id WHERE xom_order.organization_id = 1000 AND  UPPER(xom_order.status_code) <> 'SUSPENDED'   AND  ( UPPER(xom_order.order_type) <> 'STANDARD_DELIVERY' ) AND ( EXISTS (SELECT line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.organization_id = xom_order.organization_id AND line.order_id = xom_order.order_id AND  UPPER(src.loc_id) = '110' AND line.void_flag = 0 AND ( UPPER(line.status_code) IN ('POLLED', 'ACCEPTED') OR (( UPPER(line.status_code) = 'RESERVED') AND (ful.loc_id IS NULL OR  UPPER(src.loc_id) <>  UPPER(ful.loc_id)))))  )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 23:26:20,190 execute [  0.347 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T23:26:20', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 23:26:34,195 execute [  0.754 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 23:26:37,773 execute [  1.306 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 23:26:37,777 execute [  0.445 ms StorePrimary] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 23:26:37,779 execute [  0.361 ms Local] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 23:26:37,782 execute [  0.525 ms StorePrimary] UPDATE ctl_device_registration SET update_date = to_date('2024-10-20T04:26:37', 'YYYY-MM-DD"T"HH24:MI:SS'), update_user_id = '100', ip_address = '10.10.28.83', date_timestamp = to_date('2024-10-19T23:26:37', 'YYYY-MM-DD"T"HH24:MI:SS'), business_date = to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS'), xstore_version = '16.0.5.0.38 - 7.0.36 - 1.54', env_version = null, active_flag = 'true', config_version = null, primary_register_flag = 'true' WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.UPDATE [Device-Registration-1]
 DEBUG [      ] 2024-10-19 23:26:37,785 execute [  0.400 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T23:26:37', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 23:26:37,787 execute [  0.234 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T23:26:37', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 23:26:37,789 execute [  0.238 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T23:26:37', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 23:26:37,790 execute [  0.203 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 ERROR [      ] 2024-10-19 23:28:17,869 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 23:28:17,870 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
 ERROR [      ] 2024-10-19 23:28:17,874 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017104711.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-2]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 23:28:18,124 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 23:28:18,125 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
 ERROR [      ] 2024-10-19 23:28:18,128 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017110705.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-2]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 23:28:18,396 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 23:28:18,396 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
 ERROR [      ] 2024-10-19 23:28:18,400 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017111605.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-2]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 DEBUG [      ] 2024-10-19 23:28:34,212 execute [  1.064 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 23:30:34,228 execute [  0.705 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 23:32:34,245 execute [  1.392 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 23:34:34,260 execute [  0.492 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 23:36:20,250 execute [  0.932 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T23:36:20', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 23:36:34,275 execute [  0.765 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-2]
 DEBUG [      ] 2024-10-19 23:38:34,290 execute [  0.348 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 23:40:34,305 execute [  0.371 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 23:41:19,613 execute [  0.742 ms StorePrimary] SELECT xom_order.organization_id, xom_order.order_id, cust.first_name, cust.last_name, xom_order.order_date, xom_order.status_code, xom_order.order_type, cust.telephone1, xom_order.order_loc_id, xom_order.under_review_flag, CASE WHEN ship_order.order_id is null THEN 'FALSE' ELSE 'TRUE' END as shipping_necessary_flag FROM xom_order LEFT JOIN xom_customer_mod cust ON xom_order.organization_id = cust.organization_id AND xom_order.order_id = cust.order_id LEFT JOIN (SELECT line.organization_id, line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.void_flag = 0 AND (ful.LOC_ID is null OR  UPPER(ful.LOC_ID) <>  UPPER(src.LOC_ID)) GROUP BY line.organization_id, line.order_id) ship_order ON xom_order.organization_id = ship_order.organization_id AND xom_order.order_id = ship_order.order_id WHERE xom_order.organization_id = 1000 AND  UPPER(xom_order.status_code) <> 'SUSPENDED'   AND  ( UPPER(xom_order.order_type) <> 'STANDARD_DELIVERY' ) AND ( EXISTS (SELECT line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.organization_id = xom_order.organization_id AND line.order_id = xom_order.order_id AND  UPPER(src.loc_id) = '110' AND line.void_flag = 0 AND ( UPPER(line.status_code) IN ('POLLED', 'ACCEPTED') OR (( UPPER(line.status_code) = 'RESERVED') AND (ful.loc_id IS NULL OR  UPPER(src.loc_id) <>  UPPER(ful.loc_id)))))  )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 23:41:37,862 execute [  0.465 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 23:41:37,865 execute [  0.401 ms StorePrimary] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 23:41:37,868 execute [  0.749 ms Local] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 23:41:37,870 execute [  0.424 ms StorePrimary] UPDATE ctl_device_registration SET update_date = to_date('2024-10-20T04:41:37', 'YYYY-MM-DD"T"HH24:MI:SS'), update_user_id = '100', ip_address = '10.10.28.83', date_timestamp = to_date('2024-10-19T23:41:37', 'YYYY-MM-DD"T"HH24:MI:SS'), business_date = to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS'), xstore_version = '16.0.5.0.38 - 7.0.36 - 1.54', env_version = null, active_flag = 'true', config_version = null, primary_register_flag = 'true' WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.UPDATE [Device-Registration-1]
 DEBUG [      ] 2024-10-19 23:41:37,876 execute [  1.198 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T23:41:37', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 23:41:37,878 execute [  0.275 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T23:41:37', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 23:41:37,879 execute [  0.244 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T23:41:37', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 23:41:37,881 execute [  0.313 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 23:42:34,320 execute [  0.684 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 ERROR [      ] 2024-10-19 23:43:18,739 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 23:43:18,740 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
 ERROR [      ] 2024-10-19 23:43:18,743 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017104711.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-2]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 23:43:19,003 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 23:43:19,004 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
 ERROR [      ] 2024-10-19 23:43:19,007 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017110705.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-2]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 23:43:19,262 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 23:43:19,263 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-2]
 ERROR [      ] 2024-10-19 23:43:19,266 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017111605.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-2]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 DEBUG [      ] 2024-10-19 23:44:34,335 execute [  0.348 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 23:46:20,302 execute [  0.873 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T23:46:20', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 23:46:34,349 execute [  0.816 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 23:48:34,364 execute [  0.391 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 23:50:34,377 execute [  0.410 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 23:52:34,391 execute [  0.388 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 23:54:34,404 execute [  0.343 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 23:56:19,683 execute [  0.916 ms StorePrimary] SELECT xom_order.organization_id, xom_order.order_id, cust.first_name, cust.last_name, xom_order.order_date, xom_order.status_code, xom_order.order_type, cust.telephone1, xom_order.order_loc_id, xom_order.under_review_flag, CASE WHEN ship_order.order_id is null THEN 'FALSE' ELSE 'TRUE' END as shipping_necessary_flag FROM xom_order LEFT JOIN xom_customer_mod cust ON xom_order.organization_id = cust.organization_id AND xom_order.order_id = cust.order_id LEFT JOIN (SELECT line.organization_id, line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.void_flag = 0 AND (ful.LOC_ID is null OR  UPPER(ful.LOC_ID) <>  UPPER(src.LOC_ID)) GROUP BY line.organization_id, line.order_id) ship_order ON xom_order.organization_id = ship_order.organization_id AND xom_order.order_id = ship_order.order_id WHERE xom_order.organization_id = 1000 AND  UPPER(xom_order.status_code) <> 'SUSPENDED'   AND  ( UPPER(xom_order.order_type) <> 'STANDARD_DELIVERY' ) AND ( EXISTS (SELECT line.order_id FROM xom_order_line line LEFT JOIN xom_source_mod src ON src.order_id = line.order_id AND src.organization_id = line.organization_id AND src.detail_seq = line.detail_seq LEFT JOIN xom_fulfillment_mod ful ON ful.order_id = line.order_id AND ful.organization_id = line.organization_id AND ful.detail_seq = line.detail_seq WHERE line.organization_id = xom_order.organization_id AND line.order_id = xom_order.order_id AND  UPPER(src.loc_id) = '110' AND line.void_flag = 0 AND ( UPPER(line.status_code) IN ('POLLED', 'ACCEPTED') OR (( UPPER(line.status_code) = 'RESERVED') AND (ful.loc_id IS NULL OR  UPPER(src.loc_id) <>  UPPER(ful.loc_id)))))  )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-4]
 DEBUG [      ] 2024-10-19 23:56:20,350 execute [  0.911 ms StorePrimary] SELECT organization_id, task_id, title, rtl_loc_id, start_date, end_date, typcode, status_code, priority, visibility, assignment_id, party_id FROM hrs_employee_task WHERE organization_id = 1000 AND rtl_loc_id = 110 AND void_flag = 0   AND  (end_date >= to_date('2024-10-19T23:56:20', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (start_date <= to_date('2024-10-19T23:59:59', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-3]
 DEBUG [      ] 2024-10-19 23:56:34,417 execute [  0.768 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
 DEBUG [      ] 2024-10-19 23:56:37,944 execute [  1.076 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 23:56:37,947 execute [  0.422 ms StorePrimary] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 23:56:37,949 execute [  0.334 ms Local] SELECT organization_id, rtl_loc_id, wkstn_id, status_typcode, state_journal_id, time_stamp, date_value, string_value, decimal_value FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE' AND time_stamp in (SELECT max(time_stamp) FROM loc_state_journal WHERE organization_id = 1000 AND rtl_loc_id = 110 AND status_typcode = 'BUSINESS_DATE')   ORDER BY time_stamp desc :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 23:56:37,952 execute [  1.900 ms StorePrimary] UPDATE ctl_device_registration SET update_date = to_date('2024-10-20T04:56:37', 'YYYY-MM-DD"T"HH24:MI:SS'), update_user_id = '100', ip_address = '10.10.28.83', date_timestamp = to_date('2024-10-19T23:56:37', 'YYYY-MM-DD"T"HH24:MI:SS'), business_date = to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS'), xstore_version = '16.0.5.0.38 - 7.0.36 - 1.54', env_version = null, active_flag = 'true', config_version = null, primary_register_flag = 'true' WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.UPDATE [Device-Registration-1]
 DEBUG [      ] 2024-10-19 23:56:37,955 execute [  0.305 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T23:56:37', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 23:56:37,957 execute [  0.226 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T23:56:37', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 23:56:37,958 execute [  0.165 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t  WHERE t.organization_id = 1000 AND t.rtl_loc_id = 110   AND  (date_timestamp >= to_date('2024-10-16T23:56:37', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 DEBUG [      ] 2024-10-19 23:56:37,959 execute [  0.179 ms StorePrimary] SELECT t.organization_id, t.rtl_loc_id, t.wkstn_id, t.create_date, t.create_user_id, t.update_date, t.update_user_id, t.ip_address, t.date_timestamp, t.business_date, t.xstore_version, t.env_version, t.active_flag, t.config_version, t.primary_register_flag FROM ctl_device_registration t WHERE organization_id = 1000  AND rtl_loc_id = 110  AND wkstn_id = 1   :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [Device-Registration-1]
 ERROR [      ] 2024-10-19 23:58:19,659 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 23:58:19,660 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
 ERROR [      ] 2024-10-19 23:58:19,663 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017104711.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-4]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 23:58:19,913 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 23:58:19,914 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
 ERROR [      ] 2024-10-19 23:58:19,917 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017110705.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-4]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 23:58:20,173 Error retrieving the WSDL for the web service [LOCATE]. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
java.net.UnknownHostException: vncawoobr02.clienttest.btmgcs.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184) ~[?:1.8.0_202]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_202]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_202]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_202]
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666) ~[?:1.8.0_202]
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173) ~[?:1.8.0_202]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463) ~[?:1.8.0_202]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564) ~[?:1.8.0_202]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492) ~[?:1.8.0_202]
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:263) ~[?:1.8.0_202]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.retrieveWsdl(XstoreJaxWsPortFactoryBean.java:164) [dtv-service.jar:16.0.5.0.38]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:75) [dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) [spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) [?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 ERROR [      ] 2024-10-19 23:58:20,174 An error occurred preparing the service port for use. :: dtv.servicex.impl.XstoreJaxWsPortFactoryBean [ExecutorPool-4]
 ERROR [      ] 2024-10-19 23:58:20,177 An exception was caught trying to resend the status update logged in [C:\WIP-Xstore_Delta-main\caw_pos\log\locate\inventoryUpdate\locate.availability-update.20241017111605.xml]. :: dtv.xst.xom.locate.impl.AbstractLocateRetryHandler [ExecutorPool-4]
javax.xml.ws.WebServiceException: WSDL Metadata not available to create the proxy, either Service instance or ServiceEndpointInterface com.microsretail.locate.Locate should have WSDL information  
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:414) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at weblogic.wsee.jaxws.spi.WLSProvider$ServiceDelegateImpl.getPort(WLSProvider.java:1379) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at com.sun.xml.ws.client.WSServiceDelegate.getPort(WSServiceDelegate.java:401) ~[zzz.jaxb-core-12.1.3.jar:12.1.3.0.0]
	at javax.xml.ws.Service.getPort(Service.java:119) ~[?:1.8.0_202]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.getPortStub(JaxWsPortClientInterceptor.java:438) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.prepare(JaxWsPortClientInterceptor.java:360) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at dtv.servicex.impl.XstoreJaxWsPortFactoryBean.prepare(XstoreJaxWsPortFactoryBean.java:97) ~[dtv-service.jar:16.0.5.0.38]
	at org.springframework.remoting.jaxws.JaxWsPortClientInterceptor.invoke(JaxWsPortClientInterceptor.java:506) ~[spring-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.sun.proxy.$Proxy45.availabilityUpdate(Unknown Source) ~[?:?]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:24) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.order.update.UpdateAvailableInventoryRetryHandler.callService(UpdateAvailableInventoryRetryHandler.java:17) ~[dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.AbstractLocateRetryHandler.handleService(AbstractLocateRetryHandler.java:63) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService.resendFailedInventoryUpdates(OrderRequestRetryService.java:109) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at dtv.xst.xom.locate.impl.OrderRequestRetryService$ResendFailedInventoryUpdatesWorker.run(OrderRequestRetryService.java:166) [dtv-xst-xom-locate.jar:16.0.5.0.38]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_202]
	at dtv.pos.util.executor.LoggingScheduledThreadPoolExecutor$LoggingScheduledFuture.run(LoggingScheduledThreadPoolExecutor.java:181) [pos.jar:16.0.5.0.38]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
 DEBUG [      ] 2024-10-19 23:58:34,430 execute [  0.407 ms StorePrimary] SELECT t.organization_id, t.message_id, t.org_code, t.org_value, t.start_date, t.end_date, t.priority, t.store_created_flag, t.wkstn_specific_flag, t.wkstn_id, t.content, t.void_flag, t.message_url , t.create_date, t.create_user_id, t.update_date, t.update_user_id FROM (SELECT * FROM hrs_employee_message WHERE (org_code||'::'||org_value) IN ('STORE::110','DISTRICT::1','REGION::1','CORP::*','*::*')) t  WHERE t.organization_id = 1000 AND void_flag = 0   AND  ((wkstn_specific_flag = 0 OR (wkstn_specific_flag = 1 AND wkstn_id = 1)) ) AND (t.end_date >= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') ) AND (t.start_date <= to_date('2024-09-10T00:00:00', 'YYYY-MM-DD"T"HH24:MI:SS') )  :: dtv.data2.access.impl.jdbc.DtvPreparedStatement.SELECT [ExecutorPool-1]
**LOG STOPPED   2024-10-20 00:00:09,053

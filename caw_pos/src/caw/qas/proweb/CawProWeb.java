/**
 * CONFIDENTIAL AND PROPRIETARY SOURCE CODE. 
 * 
 * Use and distribution of this code is subject to applicable 
 * licenses and the permission of the code owner.  This notice 
 * does not indicate the actual or intended publication of 
 * this source code.
 * 
 * Portions developed for Camping World by BTM Global Consulting
 * LLC and are the property of Camping World.
 * 
 * ===== BTM Modification ===========================================
 * Req/Bug ID#      ddMMyy    Description
 * BZ23405          160118    [QAS] There are problem when integrate Xstore with QAS service of Camping World
 *===================================================================
 */

package caw.qas.proweb;

import java.net.MalformedURLException;
import java.net.URL;

import javax.xml.namespace.QName;
import javax.xml.ws.*;

/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "ProWeb", targetNamespace = "http://www.qas.com/web-2013-12", wsdlLocation = "http://10.29.3.237:2021/proweb.wsdl")
public class CawProWeb extends Service {

    private static final URL                 PROWEB_WSDL_LOCATION;

    private static final WebServiceException PROWEB_EXCEPTION;

    private static final QName               PROWEB_QNAME = new QName(
            "http://www.qas.com/web-2013-12", "ProWeb");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("http://10.29.3.237:2021/proweb.wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        PROWEB_WSDL_LOCATION = url;
        PROWEB_EXCEPTION = e;
    }

    public CawProWeb() {

        super(__getWsdlLocation(), PROWEB_QNAME);
    }

    public CawProWeb(WebServiceFeature... features) {

        super(__getWsdlLocation(), PROWEB_QNAME, features);
    }

    public CawProWeb(URL wsdlLocation) {

        super(wsdlLocation, PROWEB_QNAME);
    }

    public CawProWeb(URL wsdlLocation, WebServiceFeature... features) {

        super(wsdlLocation, PROWEB_QNAME, features);
    }

    public CawProWeb(URL wsdlLocation, QName serviceName) {

        super(wsdlLocation, serviceName);
    }

    public CawProWeb(URL wsdlLocation, QName serviceName,
            WebServiceFeature... features) {

        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns QAPortType
     */
    @WebEndpoint(name = "QAPortType")
    public CawQAPortType getQAPortType() {

        return super.getPort(new QName("http://www.qas.com/web-2013-12",
                "QAPortType"), CawQAPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns QAPortType
     */
    @WebEndpoint(name = "QAPortType")
    public CawQAPortType getQAPortType(WebServiceFeature... features) {

        return super.getPort(new QName("http://www.qas.com/web-2013-12",
                "QAPortType"), CawQAPortType.class, features);
    }

    private static URL __getWsdlLocation() {

        if (PROWEB_EXCEPTION != null) {
            throw PROWEB_EXCEPTION;
        }
        return PROWEB_WSDL_LOCATION;
    }

}
